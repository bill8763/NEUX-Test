{"version":3,"file":"allianzSND-dashboard.js.map","sources":["ng://@allianzSND/dashboard/lib/components/dashboard-list/dashboard-list.component.ts","ng://@allianzSND/dashboard/lib/service/model/DashboardMessage.ts","ng://@allianzSND/dashboard/lib/injectionToken/injection-token.ts","ng://@allianzSND/dashboard/lib/service/dashboard-service.service.ts","ng://@allianzSND/dashboard/lib/components/dashboard-detail/dashboard-detail.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-ui-card-msg/dashboard-ui-card-msg.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard/dashboard.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-performance/dashboard-performance.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-performance-team/dashboard-performance-team.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-performance-personal/dashboard-performance-personal.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-message/dashboard-message-type.ts","ng://@allianzSND/dashboard/lib/components/dashboard-message/dashboard-message.component.ts","ng://@allianzSND/dashboard/lib/dashboard.module.ts","ng://@allianzSND/dashboard/lib/service/model/DashboardShowLoginInfo.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, Inject, ChangeDetectorRef, ViewChildren, QueryList, AfterViewInit, Optional } from '@angular/core';\n\nimport { CalendarEventDetail, CustomerBirthday } from '@allianzSND/integration-calendar-customer';\nimport { TranslateService, Language, ConfigToken, showRuleToken, showRule, StringUtils } from '@allianzSND/core';\nimport { getYear, addDays, format } from 'date-fns';\n\n@Component({\n  selector: 'app-dashboard-list',\n  templateUrl: './dashboard-list.component.html',\n  styleUrls: ['./dashboard-list.component.scss']\n})\nexport class DashboardListComponent implements OnInit, AfterViewInit {\n\n\n  // birthdat tab tag .. if the birthday date is today, show tag \n  public isBirthdayToday = true;\n\n  // tab schedule and birthay has data or not\n  public isHasScheduleData = true;\n  public isHasBirthdayData = true;\n  // if current tab no data height need full\n  public isTabContentNoData: string;\n\n  public translateMap: Map<string, string> = new Map<string, string>();\n  public calendarEventDetail: CalendarEventDetail; //Detail\n  public _calendarEventList = [];\n  public isCalendarEventListBefore = [];\n  private _birthdayItemList: Array<CustomerBirthday> = [];\n\n  public searchBirthdayAddN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchBirthdayRange.addN;\n  public beforeTodayBirthdayItemList: Array<CustomerBirthday> = [];\n  public afterTodayBirthdayItemList: Array<CustomerBirthday> = [];\n\n  //private calendarUtils = new CalendarUtils();\n  public eventListBGColor = '#fff';\n  public showDate: string;\n  public language = new Language();\n\n  //calendar-ui config setting\n  public viewTypeIndex = 2; // 'month'\n  public tabIndex = 0;\n  private tabHeight = 0;\n  //public _viewDate = new Date(); //current date\n  private _viewDate: Date = new Date();\n  private _eventList;\n  public weekStartsOn = 1; // Monday\n  public startDate;\n  public endDate;\n  today = new Date();\n  yearVal = this.viewDate.getFullYear();\n  public todayDisplayStr: string;\n  public endDateDisplayStr: string;\n  public windowWidth;\n\n  @ViewChildren('calendarList') calendarListContents: QueryList<any>;\n\n  @Input()\n  get calendarEventList() {\n    return this._calendarEventList;\n  };\n  set calendarEventList(calendarEventList) {\n\n    this._calendarEventList = calendarEventList;\n    this.isHasScheduleData = this.judgeIsScheduleHasData();\n  }\n  @Input() public eventMonthList: Array<CalendarEventDetail>;\n\n\n  @Input()\n  get birthdayItemList() {\n    return this._birthdayItemList;\n  };\n  set birthdayItemList(birthdayItemList) {\n\n    if (birthdayItemList.length == 0) {\n      this.isHasBirthdayData = false;\n    }\n    else {\n      this.isHasBirthdayData = true;\n    }\n\n    this._birthdayItemList = birthdayItemList;\n    this.beforeTodayBirthdayItemList = [];\n    this.afterTodayBirthdayItemList = [];\n\n\n    //convert to before & after array\n    this.beforeTodayBirthdayItemList = this._sortBirthDayListByName(this._birthdayItemList.filter(x => this.itemBirthdayIsBeforeToday(x)));\n    this.afterTodayBirthdayItemList = this._sortBirthDayListByName(this._birthdayItemList.filter(x => !this.itemBirthdayIsBeforeToday(x)));\n   \n\n  }\n\n\n  @Input()\n  get viewDate() {\n    return this._viewDate;\n  }\n  set viewDate(val) {\n    if (this._viewDate.getTime() != val.getTime()) {\n      this.changeViewDate(new Date(val));\n      this.yearVal = this._viewDate.getFullYear();\n    }\n  } // end set viewDate\n\n\n  @Output() clickCalendarItem = new EventEmitter<any>();\n\n  // get tab content\n  @ViewChild('tabContent') tabContent: ElementRef;\n  changeViewDate: any;\n\n\n  constructor(\n    @Inject(ConfigToken) private APP_CONFIG: any,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n    private translateService: TranslateService,\n    private elementRef: ElementRef,\n  ) {}\n  tabChangeEvent(event) {\n\n    let _this = this;\n    let tabContentBlock = _this.elementRef.nativeElement.querySelector(\".layut-home-list-block .tab-content-block\");\n    tabContentBlock.style.opacity = 0;\n\n    this.tabHeight = this.tabContent.nativeElement.scrollHeight;\n    this.tabIndex = event;\n    this.todayDisplayStr = this.convertCalendarDateToShow(this.today);\n\n    let endDate = addDays(this.today, this.searchBirthdayAddN);\n    this.endDateDisplayStr = this.convertCalendarDateToShow(endDate);  \n    \n    console.log(\"this.tabIndex:\",this.tabIndex);\n    if(this.tabIndex===0){\n      setTimeout(()=>{\n        this.scrollToContent(0);\n        tabContentBlock.style.opacity = 1;\n      },100);\n\n    }else if(this.tabIndex===1){\n      setTimeout(()=>{\n        this.scrollToContent(1);\n        tabContentBlock.style.opacity = 1;\n      },100);\n    }\n\n\n  }\n  //tab content scroll to today top\n\n  scrollToContent(tabOpenIndex) {\n    //tab content scroll to spcifict position ( location on today top half )\n    let tabContentTarget = this.tabContent.nativeElement.querySelector('.tab-content_' + tabOpenIndex);\n    let scrollEle = tabContentTarget.querySelector('.ts-today');\n    let scrollContent = this.tabContent.nativeElement;\n    if (scrollEle !== null) {\n      // let move =  this.tabHeight + scrollEle.offsetTop - 50;\n      let move = scrollEle.offsetTop - 50;\n      console.log('this.tabHeigh',this.tabHeight);\n      console.log('scrollEle.offsetTop',scrollEle.offsetTop);\n      scrollContent.scrollTop = move;\n      //console.log('move',move);\n    }\n  }\n\n\n  @Output()\n  completeLoadEvent = new EventEmitter<boolean>();\n\n  @Output()\n  updateCalendarEventDetail = new EventEmitter<CalendarEventDetail>();\n\n  @Output()\n  clickDate = new EventEmitter<Date>();\n\n  onClickEventItem(showDate, calendarItem) {\n    this.clickCalendarItem.emit({ showDate: showDate, eventList: calendarItem });\n\n\n\n\n    //console.log(\"item: \", calendarItem);\n  }\n\n  // click month day\n  monthDayClicked(date) {\n    this.clickDate.emit(date);\n\n  }\n\n  switchMonthClicked(date) {\n    //console.log(\"in switch\");\n    this.clickDate.emit(date);\n  }\n\n\n\n  itemBirthdayIsToday(item: CustomerBirthday): boolean {\n\n    return (this.today.getMonth() + 1) == parseInt(item.birthdayMonth) && this.today.getDate() == parseInt(item.birthdayDate);\n  }\n\n\n\n  itemBirthdayIsBeforeToday(item: CustomerBirthday): boolean {\n\n    let todayDate = Date.UTC(2000, this.today.getMonth() + 1, this.today.getDate());\n    let itemDate = Date.UTC(2000, parseInt(item.birthdayMonth), parseInt(item.birthdayDate));\n\n    console.debug('compare birthday', todayDate, itemDate);\n\n    return todayDate > itemDate;\n  }\n\n\n\n\n\n  judgeIsScheduleHasData() {\n    return (this._calendarEventList.filter(x => x.eventList.length > 0).length) > 0;\n  }\n\n  ngOnInit() {\n    this.tabChangeEvent(0);\n    this.windowWidth = window.innerWidth;\n    console.log(\"this.windowWidth\",this.windowWidth);\n  }\n\n  ngAfterViewInit() {\n    this.calendarListContents.changes.subscribe(() => {\n        this.scrollToContent(0);\n    })\n  } \n\n  convertNameToShow(firstName: string, lastName: string): string {\n    if (this.showRule) {\n      return this.showRule.convertName(firstName, lastName);\n    }\n    else {\n      let firstNameStr: string = StringUtils.isNotEmpty(firstName) ? firstName : '';\n      let lastNameStr: string = StringUtils.isNotEmpty(lastName) ? (' ' + lastName) : '';\n      return firstNameStr + lastNameStr;\n    }\n  }\n\n  convertBirthdayToShow(month: string, date: string): string {\n    let combineDate = new Date(getYear(new Date()) + '/' + month + '/' + date);\n    return this._convertDateWithoutYear(combineDate);\n  }\n\n\n  convertCalendarDateToShow(date: Date): string { \n    return this._convertDateWithoutYear(date);\n  }\n\n  private _convertDateWithoutYear(date: Date) {\n    if(this.showRule) {\n      return this.showRule.convertDateWithoutYear(date);\n    }\n    else {\n      return format(date,'MM/dd');\n    }\n  }\n\n  private _sortBirthDayListByName(birthdayItemList: Array<CustomerBirthday>) {\n\n    let cloneList = birthdayItemList.map(x => x.clone());\n    cloneList.sort((item1, item2) => {\n\n      let comapareBirthdayMonth = this._comapare(item1.birthdayMonth, item2.birthdayMonth);\n      if(comapareBirthdayMonth !== 0) {\n        return comapareBirthdayMonth;\n      }\n\n      let comapareBirthdayDate = this._comapare(item1.birthdayDate, item2.birthdayDate);\n      if(comapareBirthdayDate !== 0) {\n        return comapareBirthdayDate;\n      }\n\n      let item1_name = StringUtils.isNotEmpty(item1.lastName) ? item1.lastName : '';\n      let item2_name = StringUtils.isNotEmpty(item2.lastName) ? item2.lastName : '';\n\n      if (!StringUtils.isHasChinese(item1_name) && StringUtils.isHasChinese(item2_name)) {\n        return -1;\n      }\n      else if (StringUtils.isHasChinese(item1_name) && !StringUtils.isHasChinese(item2_name)) {\n        return 1;\n      }\n      else {\n        return item1_name.localeCompare(item2_name, \"zh-Hant\");\n      }\n\n    });\n\n    return cloneList;\n  }\n\n  private _comapare(n1, n2) {\n    if(n1 < n2) {\n      return -1;\n    }\n    else if(n1 > n2) {\n      return 1;\n    }\n    else {\n      return 0;\n    }\n  }\n\n\n\n}\n","\nexport class DashboardMessage {\n\n    private _clientID: string;\n    private _messageID: number;\n    private _messageCategory: string;\n    private _messageType: string;\n    private _title: string;\n    private _description: string;\n    private _argument: string;\n    private _status: string;\n    private _messageDate: string;\n    private _messageTime: string;\n    private _isPopup: string;\n    private _linkStatus: string;\n    private _isClick: string;\n\n    constructor(clientID, messageID, messageCatogory, messageType, title, description, argument, status, messageDate, messageTime, isPopup , linkStatus , isClick) {\n        \n        this._clientID = clientID;\n        this._messageID = messageID;\n        this._messageCategory = messageCatogory;\n        this._messageType = messageType;\n        this._title = title;\n        this._description = description;\n        this._argument = argument;\n        this._status = status;\n        this._messageDate = messageDate;\n        this._messageTime = messageTime;\n        this._isPopup = isPopup;\n        this._linkStatus = linkStatus;\n        this._isClick = isClick;\n    }\n\n    get clientID() {\n        return this._clientID;\n    }\n    \n    get messageID() { \n        return this._messageID; \n    }\n\n    get messageCategory() {\n        return this._messageCategory;\n    }\n\n    get messageType() {\n        return this._messageType;\n    }\n\n    get title() {\n        return this._title;\n    }\n\n    get description() {\n        return this._description;\n    }\n\n    get argument() {\n        return this._argument;\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    get messageDate() {\n        return this._messageDate;\n    }\n\n    get messageTime() {\n        return this._messageTime;\n    }\n\n    get isPopup() {\n        return this._isPopup;\n    }\n\n    get linkStatus() {\n        return this._linkStatus;\n    }\n\n    get isClick() {\n        return this._isClick;\n    }\n\n    set messageID ( messageID ) { \n        this._messageID = messageID; \n    }\n\n    set messageCategory( messageCatogory ) {\n        this._messageCategory = messageCatogory;\n    }\n\n    set messageType( messageType ) {\n        this._messageType = messageType;\n    }\n\n    set title( title ) {\n        this._title = title;\n    }\n\n    set description( description ) {\n        this._description = description;\n    }\n\n    set argument( argument ) {\n        this._argument = argument;\n    }\n\n    set status( status ) {\n        this._status = status;\n    }\n\n    set messageDate( messageDate ) {\n        this._messageDate = messageDate;\n    }\n\n    set messageTime( messageTime ) {\n        this._messageTime = messageTime;\n    }\n\n    set isPopup( isPopup ) {\n        this._isPopup = isPopup;\n    }\n\n    set linkStatus( linkStatus ) {\n        this._linkStatus = linkStatus;\n    }\n\n    set isClick( isClick ) {\n        this._isClick = isClick;\n    }\n\n\n\n\n\n    \n\n}","import { InjectionToken } from \"@angular/core\";\nimport { showDashboardRule } from \"../interface/showDashboardRule.interface\";\n\nexport const showDashboardRuleToken = new InjectionToken<showDashboardRule>('showDashboardRule');\n","import { Injectable, Optional, Inject, ErrorHandler} from '@angular/core';\nimport { APIDispatch, APIFactory, PageInfo, DashboardUpdateMessageStatusAPI,DashboardGetMessageListAPI, DateUtils, showRuleToken, showRule, APPError} from '@allianzSND/core';\nimport { Observable, of ,from } from 'rxjs';\nimport { DashboardMessage } from './model/DashboardMessage';\nimport { NullTemplateVisitor } from '@angular/compiler';\nimport { formArrayNameProvider } from '@angular/forms/src/directives/reactive_directives/form_group_name';\nimport { showDashboardRule } from '../interface';\nimport { showDashboardRuleToken } from '../injectionToken/injection-token';\nimport { ProgressPersonalData } from '@allianzSND/progress';\nimport { ChangeMessageStatusAPI } from '@allianzSND/core/lib/api/register/changeMessageStatusAPI';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  private isFirstInDashboard: boolean = true;\n  constructor(\n    private dispatcher: APIDispatch,\n    private APIFactory: APIFactory,\n    private dateUtils: DateUtils,\n    private errorHandler: ErrorHandler,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n    @Optional() @Inject(showDashboardRuleToken) private showDashboardRule: showDashboardRule,\n  ) {\n    //register api\n  }\n\n  isFirstTime(): boolean {\n    let result: boolean;\n    if (this.isFirstInDashboard) {\n      result = true;\n      this.isFirstInDashboard = false;\n    }\n    else {\n      result = false;\n    }\n\n    return result;\n  }\n\n\n  updateMessageStatus(clientID: string, status: string): Observable<any> {\n    let dashboardUpdateMessageStatusAPI: DashboardUpdateMessageStatusAPI = <DashboardUpdateMessageStatusAPI>this.APIFactory.getAPI('updateDashboardMessageStatus');\n    dashboardUpdateMessageStatusAPI.setClientID(clientID);\n    dashboardUpdateMessageStatusAPI.setStatus(status);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(dashboardUpdateMessageStatusAPI).subscribe((data) => {\n\n        console.debug('dashboard-service-updateDashboardMessageStatus', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n\n  getMessageByKeyword(keyword: string, pageInfo: PageInfo): Observable<any> {\n    let dashboardGetMessageListAPI: DashboardGetMessageListAPI = <DashboardGetMessageListAPI>this.APIFactory.getAPI('getDashboardMessageList');\n    dashboardGetMessageListAPI.setKeyword(keyword);\n    dashboardGetMessageListAPI.setPageInfo(pageInfo);\n    dashboardGetMessageListAPI.isShow = true;\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(dashboardGetMessageListAPI).subscribe((data) => {\n        console.log(\"getMessageByKeyword data:\",data);\n        let messageList = data['Body'];\n\n        if (messageList) {\n\n          let DashboardMessageList: Array<DashboardMessage> = [];\n          messageList.forEach(item => {\n\n            let dashboardMessage: DashboardMessage = new DashboardMessage(item.ClientID, item.MessageID, item.MessageCategory, item.MessageType, item.Title, item.Description, item.Arguments, item.Status, this.convertDate(new Date(item.MessageTime)), this.convertTime(new Date(item.MessageTime)),item.IsPopup , item.LinkStatus, item.IsClick );\n            DashboardMessageList.push(dashboardMessage);\n            \n          });\n\n          observer.next(DashboardMessageList);\n          observer.complete();\n        }\n\n        else {\n          observer.next(false);\n          observer.complete();\n        }\n      })\n    });\n  }\n\n\n\n  public convertDate(date: Date) {\n\n    if (date) {\n      if (this.showRule) {\n        return this.showRule.convertDate(date);\n      }\n      else {\n        return this.dateUtils.toDateString(date, 'yyyy-MM-dd');\n      }\n    } else {\n      return '- -';\n    }\n\n  }\n\n  public convertTime(date: Date) {\n    if (date) {\n      return this.dateUtils.toDateString(date, 'shortTime');\n    }\n    else {\n      return '- -';\n    }\n  }\n\n  public getPerformanceData(performanceType:string, appUseMode:string=''): Observable<any>{\n\n    if (performanceType == 'T'){\n      return from(this._getPerformanceTeamData(appUseMode));\n    }else{\n      return from(this._getPerformancePersonalData());\n    }\n  }\n\n  private async _getPerformanceTeamData(appUseMode:string){ \n\n    console.log('into _getPerformanceTeamData');\n    let returnData = null;\n    let Datas = [];\n\n    try{\n      let teamProgressMainResp;\n      let yearConfigResp;\n  \n      let teamProgressMain = this.APIFactory.getAPI(\"getTeamProgressMain\");\n      let yearConfig = this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n  \n      [yearConfigResp, teamProgressMainResp] = await Promise.all([\n        this.dispatcher.dispatch(yearConfig).toPromise(),\n        this.dispatcher.dispatch(teamProgressMain).toPromise(),\n      ]);\n  \n      console.log(\"TeamProgressMainResp\", teamProgressMainResp);\n      console.log(\"yearConfigResp\", yearConfigResp);\n  \n      let DataYear; \n      if(yearConfigResp.Header[\"status\"]){\n        DataYear = yearConfigResp.Body.filter(x => x.IsCurrent == \"Y\")[0].DataYear;\n      }else{\n        throw \"get yearConfig fail. yearConfigResp:\"+yearConfigResp;\n      }\n\n      let timeBaseTitle = \"monthly\";\n      //timeBase title\n      if(this.showDashboardRule){\n        timeBaseTitle = this.showDashboardRule.showTimeBaseTitle(appUseMode);\n      }\n\n      if(teamProgressMainResp.Header[\"status\"]){\n        let timeBase = \"Month\";\n        if(appUseMode == \"Manager\" || appUseMode == \"Supervisor\"){\n          timeBase = \"Year\";\n        }\n        let dataType = [\"FYFC\",\"ANP\"];\n        dataType.forEach(x => {\n          let dataobj = teamProgressMainResp.Body.filter(xx => xx.DataYear == DataYear && xx.TimeBase == timeBase && xx.DataType == x)[0];\n          console.log('dataobj:',dataobj);\n          Datas.push({\n            title: `Home_${x}`,\n            MonthlyProgressTotal: dataobj.Forecast == -1 ? dataobj.Goal : dataobj.Forecast,\n            MonthlyProgressCurrent: dataobj.Actual\n          });\n        });\n      }else{\n        throw \"get teamProgressMain fail. teamProgressMainResp:\"+teamProgressMainResp;\n      }\n\n      returnData = {\n        timeBaseTitle : timeBaseTitle,\n        datas : Datas\n      }\n\n    }catch (error) {\n      this.errorHandler.handleError(new APPError('F00130','_getPerformanceTeamData fail!' + error.message));\n    }\n        //TODO ZH&CAO éinterface\\\n    console.log(\"_getPerformanceTeamData returnData:\",returnData);\n    return returnData;\n\n  }\n\n  private async _getPerformancePersonalData(){\n\n    let yearConfigResp;\n    let personalProgressResp;\n\n    let DataYear; \n    let ActivitiesPoints;\n    let ActivitiesPointsTotal;\n    let MonthlyProgressTotal;\n    let MonthlyProgressCurrent;\n\n    let InforceConvertPointBase;\n    let FindConvertPointBase;\n    let ScheduleConvertPointBase;\n    let MeetConvertPointBase;\n    let SubmitConvertPointBase;\n\n    let returnData = {};\n\n    try{\n\n    let yearConfig = this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n    let getPersonalProgress = this.APIFactory.getAPI(\"getPersonalProgress\");\n\n    [yearConfigResp, personalProgressResp] = await Promise.all([\n      this.dispatcher.dispatch(yearConfig).toPromise(),\n      this.dispatcher.dispatch(getPersonalProgress).toPromise(),\n    ]);\n    console.log(\"yearConfigResp\",yearConfigResp);\n    console.log(\"personalProgressResp\",personalProgressResp);\n\n    if(yearConfigResp.Header[\"status\"]){\n      let currentObj = yearConfigResp.Body.filter(x => x.IsCurrent == \"Y\")[0];\n      DataYear = currentObj.DataYear;\n      ActivitiesPointsTotal = currentObj.ProgressDayPointsLimit;\n      InforceConvertPointBase = currentObj.InforceConvertPointBase;\n      FindConvertPointBase = currentObj.FindConvertPointBase;\n      ScheduleConvertPointBase = currentObj.ScheduleConvertPointBase;\n      MeetConvertPointBase = currentObj.MeetConvertPointBase;\n      SubmitConvertPointBase = currentObj.SubmitConvertPointBase;\n    }else{\n      throw \"get yearConfig fail. yearConfigResp:\"+yearConfigResp;\n    }\n\n    if(personalProgressResp.Header[\"status\"]){\n      //todo need to figure out ActivitiesPoints cant add -1 to sum   \n      let personalProgressObj = personalProgressResp.Body.filter(x => x.DataYear == DataYear && x.TimeBase == \"Day\" && x.DataType == \"Actual\")[0];\n\n      //dirty way\n      personalProgressObj.Find = (personalProgressObj.Find <= -1) ? 0 : personalProgressObj.Find;\n      personalProgressObj.Schedule = (personalProgressObj.Schedule <= -1) ? 0 : personalProgressObj.Schedule;\n      personalProgressObj.Meet = (personalProgressObj.Meet <= -1) ? 0 : personalProgressObj.Meet;\n      personalProgressObj.Submit = (personalProgressObj.Submit <= -1) ? 0 : personalProgressObj.Submit;\n      personalProgressObj.Inforce = (personalProgressObj.Inforce <= -1) ? 0 : personalProgressObj.Inforce;\n\n      ActivitiesPoints = personalProgressObj.Find * FindConvertPointBase \n                            + personalProgressObj.Schedule * ScheduleConvertPointBase \n                            + personalProgressObj.Meet * MeetConvertPointBase\n                            + personalProgressObj.Submit * SubmitConvertPointBase\n                            + personalProgressObj.Inforce * InforceConvertPointBase;\n      //ActivitiesPoints = (ActivitiesPoints>=ActivitiesPointsTotal)?ActivitiesPointsTotal:ActivitiesPoints;\n      \n      MonthlyProgressCurrent = personalProgressResp.Body.filter(x => x.DataYear == DataYear && x.TimeBase == \"Month\" && x.DataType == \"Actual\")[0].FYFC;\n      MonthlyProgressTotal = personalProgressResp.Body.filter(x => x.DataYear == DataYear && x.TimeBase == \"Month\" && x.DataType == \"Goal\")[0].FYFC;\n    }else{\n      throw \"get personalProgressResp fail. personalProgressResp:\"+personalProgressResp;\n    }\n    returnData = {\n      ActivitiesPoints: ActivitiesPoints,\n      ActivitiesPointsTotal: ActivitiesPointsTotal,\n      MonthlyProgressTotal: MonthlyProgressTotal,\n      MonthlyProgressCurrent: MonthlyProgressCurrent\n    }\n  }catch (error) {\n    this.errorHandler.handleError(new APPError('F00131','_getPerformancePersonalData fail!' + error.message));\n  }\n    console.log(\"_getPerformancePersonalData returnData:\",returnData,JSON.stringify(returnData));\n    return returnData;\n  }\n  public getUserLevel(): string {\n\n    return 'diamond';\n  }\n\n  public changeMessageStatus(messageID:number, col:string, val:string){\n    return Observable.create((observer) => {\n      console.log(\"into changeMessageStatus :\",messageID,col,val);\n      let changeStatusObj = <ChangeMessageStatusAPI>this.APIFactory.getAPI(\"ChangeMessageStatus\");\n      changeStatusObj.messageID = messageID;\n      changeStatusObj.col = col;\n      changeStatusObj.val = val;\n      this.dispatcher.dispatch(changeStatusObj).toPromise().then(resp =>{\n        console.log(\"changeMessageStatus resp\",resp);\n        observer.next(resp['Header']);\n        observer.complete();\n      });\n    } );\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef, Input, Output, EventEmitter, Optional, Inject } from '@angular/core';\nimport { DashboardService } from '../../service/dashboard-service.service';\nimport { DashboardMessage } from '../../service/model/DashboardMessage';\nimport { LoginInfo, Language } from '@allianzSND/core';\nimport { showDashboardRuleToken } from '../../injectionToken/injection-token';\nimport { showDashboardRule } from '../../interface/showDashboardRule.interface';\n\n\n\n@Component({\n  selector: 'app-dashboard-detail',\n  templateUrl: './dashboard-detail.component.html',\n  styleUrls: ['./dashboard-detail.component.scss']\n})\nexport class DashboardDetailComponent implements OnInit {\n  public _messageList : Array<DashboardMessage> = [];\n  public windowWidth;\n  public _loginInfo: LoginInfo;\n  public language = new Language();\n  public userImgUrl: string = '';\n  public userAgentName: string = '';\n  public tabIndex = 0;\n  public userLevel: any = null;\n\n  @Input()\n  set messageList(messageList) {\n    \n    this._messageList = messageList;\n\n    console.log(\"detail message: \", this._messageList);\n  }\n  get messageList() {\n    return this._messageList;\n  }\n\n  @Input()\n  get loginInfo() {\n    return this._loginInfo;\n  }\n  set loginInfo(loginInfo) {\n    this._loginInfo = loginInfo;\n\n    if(this.showDashboardRule) {\n      this.showDashboardRule.dashboardShowLoginInfo(loginInfo).subscribe(data => {\n        this.userImgUrl = data.imgUrl;\n        this.userAgentName = data.showName;\n      });\n     }\n\n  }\n\n  @Output() onClickLink = new EventEmitter();\n  @Output() filterByKeyword = new EventEmitter();\n  @Output() clickMessage = new EventEmitter();\n  @Output() changeCommitmentStatus = new EventEmitter();\n  \n  \n  tabChangeEvent(event) {\n    this.tabIndex = event;\n  }\n\n  constructor(\n    @Optional() @Inject(showDashboardRuleToken) private showDashboardRule: showDashboardRule,\n    private dashboardService: DashboardService,\n    \n    ) { \n      this.init();\n    }\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n  }\n\n  \n  private init() {\n    this.userLevel = this.dashboardService.getUserLevel();\n  }\n\n  ClickListShow(){\n    this.onClickLink.emit();\n  }\n  doFilterByKeyword(keyword){\n    this.filterByKeyword.emit(keyword);\n  }\n  \n  onChangeCommitmentStatus(event){\n    this.changeCommitmentStatus.emit(event);\n  }\n\n\n  doMessageClick(message:DashboardMessage){\n    this.clickMessage.emit(message);\n  }\n    \n  \n\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-ui-card-msg',\n  templateUrl: './dashboard-ui-card-msg.component.html',\n  styleUrls: ['./dashboard-ui-card-msg.component.scss']\n})\nexport class DashboardUiCardMsgComponent implements OnInit {\n  @Input() isRead = true;\n  @Input() isHasBtn = false;  // has approve or cancel button\n  @Input() isHasApproved = false;  // false: show approve; true show cancel\n  @Input() cardType = 'goal'; // 0 goal 1 cust 2 progress\n  @Input() linkStatus ; \n\n  imgType = 'img-male'  // 0 img-goal 1 img-cust 2 img-progress\n\n  constructor() { }\n\n\n  ngOnInit() {\n    this.imgType = 'img-'+this.cardType;\n    this.linkBtnStatus();\n  }\n\n  private linkBtnStatus(){\n    if(this.linkStatus=='Done'){\n      this.isHasBtn = true;\n      //this.isHasApproved = true;\n    }else if(this.linkStatus=='Approve'){\n      this.isHasBtn = true;\n    }else if(this.linkStatus=='null'){\n    }\n  }\n  approve(event){\n    \n  }\n      \n\n\n}\n","import { Component, OnInit, Inject, HostListener, ChangeDetectionStrategy, Optional, ChangeDetectorRef } from '@angular/core';\nimport { DashboardService } from '../../service/dashboard-service.service';\n\nimport { addDays, subDays, startOfDay, endOfDay, format } from 'date-fns';\nimport { LoginMgrToken, ConfigToken, ILoginMgr, LoginInfo, DeviceService, ProfileCode, TranslateService, ProfileCodeService, Language, PageInfo, SelectOption, DefaultLoginMgr, APIFactory, APIDispatch, DataSyncService, NotificationMgr } from '@allianzSND/core';\nimport { DashboardMessage } from '../../service/model/DashboardMessage';\nimport { CustomerService, CustomerBirthday, CustomerAlertItem, CalendarService, CalendarEventDetail, CustomerFilterCriteria, CustomerUtils } from '@allianzSND/integration-calendar-customer';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent implements OnInit {\n  public hello_str = '';\n  public isLoadingFinish = true;\n  public isRefreshFinish = true;\n  public isLazyLoading = true;\n  public isMobilePopupOpen = false;\n\n  public dashboardMessageList: Array<DashboardMessage> = [];\n  public calendarEventList: Array<CalendarEventDetail> = [];\n  public calendarEventMonthList: Array<CalendarEventDetail> = [];\n  public birthdayList: Array<CustomerBirthday> = [];\n  public searchRangeDate;\n  public windowWidth;\n  public language: Language = new Language();\n  public todate: Date = new Date();\n  public dashboardLoginInfo: LoginInfo;\n  public alertAutoDeleteCustomer: Array<CustomerAlertItem> = [];\n  public alertOverTimeList: Array<CustomerAlertItem> = [];\n  public isDisplayDeleteRemind: boolean = false;\n  public isDisplayUpdateRemind: boolean = false;\n  public searchBirthdaySubN: number;\n  public searchBirthdayAddN: number;\n  public searchCalendarSubN: number;\n  public searchCalendarAddN: number;\n  public showCalendarList = [];\n  public currentMessageKeyword: string;\n  public messagePageInfo = new PageInfo();\n\n  // calendar\n  public isExpandDetail = false;\n  public isCalendarDelete = false;\n  public calendarEventDetail: CalendarEventDetail;\n  public calendarItemClientID: string;\n  public isPopupDeleteSuccess: boolean = false;\n  public isExpandEdit: boolean = false;\n  public isDisplaySavePopup: boolean = false;\n  public translateMap: Map<string, string> = new Map<string, string>();\n  public optionMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public viewDate: Date;\n  public isSaveClick: boolean = false;\n  // translate\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public alertTypeList: Array<ProfileCode> = [];\n  private dayTypesList: Array<string> = ['Cross_Day', 'All_Day'];\n  private weekdaysList: Array<string> = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  private monthsList: Array<string> = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  private noSchedule: string = 'No_Schedule';\n  //calendar end\n\n  public customerClientMap: Map<string, string> = new Map<string, string>();\n  public customerItemList: Array<SelectOption> = [];\n  public customerClientName: string = '';\n\n  constructor(\n    private customerUtils: CustomerUtils,\n    private dashboardService: DashboardService,\n    private calendarService: CalendarService,\n    private customerService: CustomerService,\n    private changeDetector: ChangeDetectorRef,\n    private translateService: TranslateService,\n    private profileCodeService: ProfileCodeService,\n    private loginMgr: DefaultLoginMgr,\n    private dataSyncService: DataSyncService,\n    private notificationMgr: NotificationMgr,\n    @Inject(ConfigToken) private APP_CONFIG: any,\n  ) {\n\n\n    this.searchBirthdaySubN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchBirthdayRange.subN;\n    this.searchBirthdayAddN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchBirthdayRange.addN;\n    this.searchCalendarSubN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchCalendarRange.subN;\n    this.searchCalendarAddN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchCalendarRange.addN;\n  }\n\n  ngOnInit() {\n    //init calendar type\n\n    this.messagePageInfo.pageSize = 5;\n    this.activityTypeList = this.profileCodeService.getCodeArray('Calendar_Type');\n    this.alertTypeList = this.profileCodeService.getCodeArray('Calendar_RemindTime');\n    this.optionMap.set('Calendar_Type', this.activityTypeList);\n    this.optionMap.set('Calendar_RemindTime', this.alertTypeList);\n    this.dayTypesList.forEach((dayType) => {\n      this.translateMap.set(dayType, this.translateService.translate(dayType))\n    });\n    this.weekdaysList.forEach((weekday) => {\n      this.translateMap.set(weekday, this.translateService.translate(weekday))\n    });\n    this.monthsList.forEach((month) => {\n      this.translateMap.set(month, this.translateService.translate(month))\n    });\n    this.translateMap.set(this.noSchedule, this.translateService.translate(this.noSchedule));\n\n\n    this.windowWidth = window.innerWidth;\n    this.isMobilePopupOpen = (this.windowWidth < 1024 ? true : false) && (this.dashboardService.isFirstTime());\n\n\n    this.viewDate = this.todate;\n\n    this.getLoginInfo();\n\n    this.getCalendarList();\n\n    this.getCustomerBirthdayList(this.todate, this.searchBirthdaySubN, this.searchBirthdayAddN);\n\n    //get UnRead message\n    this.doFilterByKeyword(\"UnRead\", false);\n\n    //5/24\n    //this.changeDetector.detectChanges();\n\n    this.createCustomerList();\n\n  }\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n\n    this.windowWidth = event.target.innerWidth;\n    this.changeDetector.markForCheck();\n    if (this.windowWidth < 1024) {\n      this.isMobilePopupOpen = true;\n    }\n    // console.warn('Width: ', this.windowWidth);\n  }\n\n\n  private async getCalendarList() {\n\n    let searchCalendarStart = subDays(this.todate, this.searchCalendarSubN);\n\n    let calendarList = [];\n\n    let PromiseList: Array<Promise<any>> = [];\n\n    for (var i = 0; i < this.searchCalendarSubN + this.searchCalendarAddN + 1; i++) {\n      let targetDate = addDays(searchCalendarStart, i);\n\n      PromiseList.push(new Promise((res, rej) => {\n        this.getCalendarBetweenDate(startOfDay(targetDate), endOfDay(targetDate)).then((data) => {\n          let item = {\n            showDate: targetDate,\n            eventList: data,\n            isBeforeToday: startOfDay(this.todate).getTime() > startOfDay(targetDate).getTime(),\n            isToday: startOfDay(this.todate).getTime() == startOfDay(targetDate).getTime()\n          }\n\n          res(item);\n        });\n      }));\n    }\n\n    Promise.all(PromiseList).then((list) => {\n      this.showCalendarList = list;\n      console.log(\"this.showCalendarList: \", this.showCalendarList);\n      //5/24\n      //this.changeDetector.detectChanges();\n    });\n\n\n\n\n\n\n  }\n\n  // scroll load content\n  public async loadContent(event) {\n\n    this.messagePageInfo.nextPage();\n    await this.doFilterByKeyword(this.currentMessageKeyword, true);\n    setTimeout(() => {\n      this.isLoadingFinish = true;\n      this.changeDetector.detectChanges();\n    });\n  }\n  //refreshContent\n  public async refreshContent(event) {\n\n    this.messagePageInfo.resetPage();\n    // this.getCalendarList();\n\n    // this.getCustomerBirthdayList(this.viewDate, this.searchBirthdaySubN, this.searchBirthdayAddN);\n\n    // await this.dataSyncService.syncFunc([\"DASHBOARD\"], true);\n    await this.notificationMgr.fetchMessageData();\n\n    //get message\n    // await this.getDashboardMessageList();\n    await Promise.all([this.doFilterByKeyword(this.currentMessageKeyword, false), this.getCalendarList(), this.getCustomerBirthdayList(this.viewDate, this.searchBirthdaySubN, this.searchBirthdayAddN)]);\n    console.log(\"PromiseAll finish\");\n    setTimeout(() => {\n      this.isRefreshFinish = true;\n      //5/24\n      //this.changeDetector.detectChanges();\n    }, 500);\n\n\n\n  }\n\n  private async getLoginInfo() {\n    return new Promise((res, rej) => {\n      this.loginMgr.getLoginInfo().subscribe((info) => {\n        this.dashboardLoginInfo = info;\n        console.warn('this.dashboardLoginInfo: ', this.dashboardLoginInfo);\n        res();\n      })\n    });\n  }\n\n\n  public doFilterByKeyword(keyword, isAppend): Promise<any> {\n    // console.log(\"keyword: \" ,keyword);\n\n    if (!isAppend) {\n      this.messagePageInfo.resetPage();\n    }\n\n    this.currentMessageKeyword = keyword;\n\n    return this.dashboardService.getMessageByKeyword(keyword, this.messagePageInfo).toPromise().then((data) => {\n      if (isAppend) {\n\n        if (data.length > 0) {\n          this.dashboardMessageList = [...this.dashboardMessageList, ...data];\n        }\n      }\n      else {\n        this.dashboardMessageList = [...data];\n      }\n    });\n  }\n\n  public onChangeCommitmentStatus(event) {\n    console.log(\"into onChangeCommitmentStatus event:\", event, \"messageId:\", event.messageId, \"keyword:\", event.keyword);\n    this.dashboardService.changeMessageStatus(event.messageId, \"LinkStatus\", \"Done\").toPromise().then(resp => {\n      console.log(\"onChangeCommitmentStatus resp\", resp);\n      this.doFilterByKeyword(event.keyword, false);\n    });\n  }\n\n  public async afterDisplayDeleteRemind() {\n\n    await this.doFilterByKeyword(this.currentMessageKeyword, false);\n    this.isDisplayDeleteRemind = false;\n  }\n\n  public async afterDisplayUpdateRemind() {\n\n    await this.doFilterByKeyword(this.currentMessageKeyword, false);\n    this.isDisplayUpdateRemind = false;\n  }\n\n\n  private getCustomerAutoDelete(cliendID): Observable<any> {\n\n    return this.customerService.getAutoDeleteCustomerList(cliendID);\n  }\n\n  private getCustomerOverTime(cliendID): Observable<any> {\n    return this.customerService.getOverTimeCustomerList(cliendID);\n  }\n\n  private async getCustomerBirthdayList(targetDate, subN, addN) {\n\n    return this.customerService.getCustomerBirthdayList(targetDate, subN, addN).toPromise().then((data) => {\n      this.birthdayList = data;\n    })\n  }\n\n  private async getCalendarBetweenDate(startDate, endDate) {\n    return this.calendarService.getCalendarEventList(startDate, endDate, '').toPromise();\n  }\n\n\n  public clickListShow() {\n    this.isMobilePopupOpen = true;\n  }\n\n  public onClickMessage(message: DashboardMessage) {\n\n\n    console.log(\"click message: \", message);\n    let cliendID = message.clientID;\n    if (message.status == 'UnRead') {\n      this.dashboardService.updateMessageStatus(message.clientID, 'Reading').subscribe(data => {\n      });\n    }\n\n    if (message.messageType == \"AutoDelete\") {\n      this.getCustomerAutoDelete(cliendID).subscribe((data) => {\n        this.alertAutoDeleteCustomer = data;\n        this.isDisplayDeleteRemind = data.length > 0 ? true : false;\n      });\n    }\n\n    else if (message.messageType == \"Overtime\") {\n      this.getCustomerOverTime(cliendID).subscribe((data) => {\n        this.alertOverTimeList = data;\n        this.isDisplayUpdateRemind = data.length > 0 ? true : false;\n      });\n    }\n\n    this.changeDetector.detectChanges();\n\n  }\n\n  public onClickCalendarItem(event) {\n    //event = {showDate: \"04/24\", eventList: CalendarEventDetail}\n    console.log(\"click event: \", event);\n    this.calendarItemClientID = event.eventList.clientID;\n    this.viewDate = new Date(event.showDate);\n    this.calendarEventList = this.showCalendarList.filter(x => x.showDate == event.showDate)[0].eventList;\n    //console.log(\"calendarEventList: \", this.calendarEventList);\n    console.log(\"viewDate: \", this.viewDate);\n    this.loadCalendarEventDetail(this.calendarItemClientID);\n  }\n\n\n  private loadCalendarEventDetail(clientID: string) {\n    this.calendarService.getCalendarEventDetail(clientID).subscribe(data => {\n\n      console.log('getCalendarEventDetail', data);\n      this.calendarEventDetail = data;\n      this.customerClientName = this.customerClientMap.get(this.calendarEventDetail.customerClientID);\n      this.calendarEventDetail.displayActivity = this.profileCodeService.convertCode2Text('Calendar_Type', this.calendarEventDetail.activity);\n      this.calendarEventDetail.displayAlert1 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert1);\n      this.calendarEventDetail.displayAlert2 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert2);\n      this.isExpandDetail = true;\n      this.changeDetector.detectChanges();\n    });\n  }\n\n\n  public editEvent() {\n    this.isExpandEdit = true;\n  }\n\n  public delete() {\n    this.isCalendarDelete = true;\n  }\n\n  public onClickDeleteConfirm() {\n\n    this.calendarService.deleteCalendarEvent(this.calendarItemClientID).subscribe(data => {\n      if (data.status) {\n        this.isExpandDetail = false;\n        this.isPopupDeleteSuccess = true;\n\n        this.showCalendarList.forEach(item => {\n          item.eventList = item.eventList.filter(x => x.clientID != this.calendarItemClientID);\n        });\n\n        this.showCalendarList = [...this.showCalendarList];\n      }\n    });\n\n  }\n\n  public onSaveCalendarEvent(resp) {\n\n    let type = resp.type;\n    let data = resp.data;\n    if (type !== 'fail') {\n      this.loadCalendarEventDetail(data.ClientID);\n      this.getCalendarList();\n      this.isDisplaySavePopup = true;\n      this.isExpandEdit = false;\n    }\n    this.isSaveClick = false;\n  }\n\n  public onClickAppointmentSave() {\n    this.isSaveClick = true;\n  }\n\n  private createCustomerList() {\n    let pageInfo = new PageInfo();\n    pageInfo.pageSize = -1;\n    let filterCriteria = new CustomerFilterCriteria();\n    this.customerService.getCustomerList(filterCriteria, pageInfo).subscribe((data) => {\n      console.log('data', data);\n      let temp_array = [];\n      for (let custItem of data) {\n        this.customerClientMap.set(custItem.clientID, this.customerUtils.convertNameToShow(custItem.firstName, custItem.lastName));\n        temp_array.push(new SelectOption(custItem.clientID, this.customerUtils.convertNameToShow(custItem.firstName, custItem.lastName)));\n      }\n      this.customerItemList = temp_array;\n    });\n  }\n\n}\n","import { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { LoginMgrToken, ILoginMgr, Language, DefaultLoginMgr } from '@allianzSND/core';\nimport { take } from 'rxjs/operators';\nimport { CONTENTGAP } from '@allianzSND/ui';\nimport { ROLE } from '@allianzSND/goal';\n// import { CONTENTGAP } from 'projects/ui/src/lib/components/ui-content-b-gap/ui-content-b-gap-enum';\n// import { CONTENTGAP } from 'projects/ui/src/public_api';\n\n@Component({\n  selector: 'snd-dashboard-performance',\n  templateUrl: './dashboard-performance.component.html',\n  styleUrls: ['./dashboard-performance.component.scss']\n})\nexport class DashboardPerformanceComponent implements OnInit {\n\n  public GAP_SIZE_20 = CONTENTGAP.GAP20;\n\n  public role: string = null;\n  public language = new Language();\n  public tabIndex: number = 0;\n\n\n  constructor(\n    private loginMgr: DefaultLoginMgr,\n  ) {\n    this.init();\n    console.debug(\"check start ......\");\n  }\n\n  ngOnInit() {}\n\n  //LEADER  //AG   <--- page\n  private async init() {\n    let loginInfo = await this.loginMgr.getLoginInfo().pipe(take(1)).toPromise();\n\n    console.debug(\"dashboard login info: \", loginInfo);\n\n    let identity = loginInfo.AppUseMode[loginInfo.AppUseMode.length - 1];\n\n    console.debug(\"dashboard identity: \", identity);\n\n    let agentRole = this._ConvertIdentityToRolesType(identity);//AG\n\n    console.debug(\"dashboard agent rolepage: \", agentRole);\n\n    this._ShowRolePage(agentRole);\n  }\n\n  tabChangeEvent(index) {\n    this.tabIndex = index;\n  }\n\n  private _ShowRolePage(role: ROLE){\n    switch(role) {\n      case ROLE.AGENT:\n        this.role = \"AG\";\n        break;\n      case ROLE.AGENTLEADER:\n        this.role = \"LEADER\";\n        break;\n      case ROLE.ZONEHEAD:\n      case ROLE.CAO:\n        this.role = \"CAO\";\n        break;\n    }\n    //this.role = (role == ROLE.AGENT) ? \"AG\": \"LEADER\";\n  }\n\n  private _ConvertIdentityToRolesType(identity: string): ROLE {\n    //AG AL Manager Supervisor\n    switch (identity) {\n      case \"AG\":\n        return ROLE.AGENT;\n      case \"AL\":\n        return ROLE.AGENTLEADER;\n      case \"Manager\":\n        return ROLE.ZONEHEAD;\n      case \"Supervisor\":\n        return ROLE.CAO;\n    }\n  }\n\n  \n\n}\n","import { Component, OnInit, ErrorHandler } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { Language, DefaultLoginMgr, LoginInfo, APPError, NumberUtils, AppRouter } from '@allianzSND/core';\nimport { DashboardService } from '../../service/dashboard-service.service';\nimport { ProgressService, Tag } from '@allianzSND/progress';\n\n@Component({\n  selector: 'snd-dashboard-performance-team',\n  templateUrl: './dashboard-performance-team.component.html',\n  styleUrls: ['./dashboard-performance-team.component.scss']\n})\nexport class DashboardPerformanceTeamComponent implements OnInit {\n\n  public dashboardPerformanceTeam: Array<Object> = [];\n  public data: any = null;\n  public isLoadDataFinish: boolean = false;\n\n  public language = new Language();\n  public windowWidth: number = null;\n  private _monthlyProgressRate;\n  public timeBaseTitle: string;\n  public userRole: string;\n\n  public ShowMonthlyProgressRateArr: Array<string>;\n  public ShowMonthlyProgressRateBarArr: Array<string>;\n\n  constructor(\n    private dashboardService: DashboardService,\n    private loginMgr: DefaultLoginMgr,\n    private errorHandler: ErrorHandler,\n    private router: AppRouter,\n    private progressService: ProgressService,\n  ) {\n    this.init();\n  }\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n  }\n  private async init() {\n    try {\n      let loginInfo = await this.loginMgr.getLoginInfo().pipe(take(1)).toPromise();\n\n      this.loginMgr.getLoginInfo().subscribe((info: LoginInfo) => {\n        console.log('check permission subscribe:', info);\n        if (info)\n          this.userRole = info.AppUseMode[0];\n        console.log(\"get AppUseModeï¼\", this.userRole);\n      });\n      this.data = await this.dashboardService.getPerformanceData(\"T\", this.userRole).toPromise();\n      if (this.data != null) {\n        // this.isLoadDataFinish = true;\n        // this.timeBaseTitle = this.data.timeBaseTitle;\n\n        // console.log(\" this.timeBaseTitle\", this.timeBaseTitle);\n        // this.data.datas.forEach((val,key) => {\n        //   let MonthlyProgressRate = val[\"MonthlyProgressCurrent\"] / val[\"MonthlyProgressTotal\"];\n        //   val[\"MonthlyProgressRate\"] = this.convertNumberDigital(MonthlyProgressRate, 2);\n        // });\n\n        this.isLoadDataFinish = true;\n        this.timeBaseTitle = this.data.timeBaseTitle;\n\n        this.ShowMonthlyProgressRateArr = new Array<string>();\n        this.ShowMonthlyProgressRateBarArr = new Array<string>();\n\n        console.log(\" this.timeBaseTitle\", this.timeBaseTitle);\n        this.data.datas.forEach((val, key) => {\n\n          let MonthlyProgressRate = this.getRate(val[\"MonthlyProgressCurrent\"], val[\"MonthlyProgressTotal\"]);\n          val[\"MonthlyProgressRate\"] = this.convertNumberDigital(MonthlyProgressRate, 2);\n          let pc = this.getPercentage(val[\"MonthlyProgressRate\"]);\n\n          let monthlyNumerator = this.convertToNumber(val[\"MonthlyProgressCurrent\"]);\n          let monthlyDenominator = this.convertToNumber(val[\"MonthlyProgressTotal\"]);\n\n          //let pcb = this.getPercentageBar(MonthlyProgressRate);\n\n          let pcb = this.getMonthlyBarLength(monthlyNumerator, monthlyDenominator, 1.5, 150);\n          this.ShowMonthlyProgressRateArr.push(pc);\n          this.ShowMonthlyProgressRateBarArr.push(pcb);\n        });\n\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00600', 'DashboardPerformanceTeam init fail!' + error.message));\n    }\n  }\n\n  private getRate(a: any, b: any): number {\n    if (a == -1 || !NumberUtils.isNumber(a)) return -1;\n    if (b == -1 || !NumberUtils.isNumber(b)) return -1;\n    return a / b;\n  }\n\n  private getPercentage(a: any): string {\n    if (a == -1 || !NumberUtils.isNumber(a)) return \"--\";\n    return (a * 100).toString();\n  }\n\n  private getPercentageBar(a: any): string {\n    if (a == -1 || !NumberUtils.isNumber(a)) return \"0\";\n    return (a).toString();\n  }\n\n  private convertToNumber(str:string):number {\n    let convert = Number(str);\n\n    if(convert == NaN) {\n      return 0;\n    } \n    else if(convert <= -1) {\n      return 0;\n    }\n    else if(convert == 0) {\n      return 0;\n    }\n    else {\n      return convert;\n    }\n  }\n\n  private getMonthlyBarLength(monthlyNumerator:number, monthlyDenominator:number, maxLength:number, maxBase: number):string {\n\n    if(monthlyNumerator == 0 || monthlyDenominator == 0) {\n      return \"0\";\n    }\n\n    let ans = Math.round((monthlyNumerator / monthlyDenominator) * 100) / maxBase;\n    return (ans >= maxLength) ? maxLength.toString() : ans.toString();\n  }\n\n  //åæ¨äºå¥\n  private convertNumberDigital(num: number, digit: number): number {\n    if (digit === 0)\n      return Math.round(num);\n    else if (digit > 0) {\n      return Math.round(num * Math.pow(10, digit)) / (Math.pow(10, digit));\n    }\n    else {\n      return num;\n    }\n  }\n\n  //è½æåä½æ¸è¡¨ç¤ºæ³ï¼000,000,000ï¼\n  public convertNumberThousand(num: number): string {\n\n    if (num <= -1 || !NumberUtils.isNumber(num)) return \"--\";\n\n    var numString = num.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n\n    while (pattern.test(numString)) {\n      numString = numString.replace(pattern, \"$1,$2\");\n    }\n    return numString;\n  }\n\n  public goToProgress() {\n    let tag = Tag.TeamTag;\n    this.progressService.SetCurrentNavigationTag(tag);\n    this.router.navigate(\"Progress\");\n  }\n\n}\n","import { Component, OnInit, HostListener, ErrorHandler } from '@angular/core';\nimport { DashboardService } from '../../service/dashboard-service.service';\nimport { Language, APPError, NumberUtils, AppRouter } from '@allianzSND/core';\nimport { Router } from '@angular/router';\nimport { ProgressService, Tag } from '@allianzSND/progress';\n\n@Component({\n  selector: 'snd-dashboard-performance-personal',\n  templateUrl: './dashboard-performance-personal.component.html',\n  styleUrls: ['./dashboard-performance-personal.component.scss']\n})\n\nexport class DashboardPerformancePersonalComponent implements OnInit {\n\n  public data: any = null;\n  public language = new Language();\n  public windowWidth: number = null;\n  //public ShowMonthlyProgressRate: string = \"--\";\n // public ShowMonthlyProgressRateBar: string = \"0\";\n  //public ShowActivitiesPoints: string = \"--\";\n\n\n  //activity \n  public ShowCurrentActivityPoints: string = \"--\";\n  public ShowCurrentActivityPointsBar: string = \"0\";\n\n  public ShowCurrentMonthlyProgressRate: string = \"--\";\n  public ShowCurrentMonthlyProgressBar: string = \"0\";\n  public ShowCurrentMonthlyProgress: string = \"--\";\n  public ShowCurrentMonthlyTotal: string = \"--\";\n\n  constructor(\n    private dashboardService: DashboardService,\n    private errorHandler: ErrorHandler,\n    // private router: Router,\n    private router: AppRouter,\n    private progressService: ProgressService,\n  ) {\n    this.init();\n  }\n\n  windowSize() {\n    let width = window.innerWidth;\n    return (width > 1023) ? true : false;\n  }\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n    this.windowSize();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowSize();\n  }\n\n  private async init() {\n    try {\n      this.data = await this.dashboardService.getPerformanceData(\"P\").toPromise();\n\n      console.debug(\"test i got this shit: \", this.data);\n\n      let totalPoints = this.convertToNumber(this.data[\"ActivitiesPoints\"]);\n      let limitPoints = this.convertToNumber(this.data[\"ActivitiesPointsTotal\"]);\n\n      let monthlyNumerator = this.convertToNumber(this.data[\"MonthlyProgressCurrent\"]);\n      let monthlyDenominator = this.convertToNumber(this.data[\"MonthlyProgressTotal\"]);\n\n      //get activity points\n      this.ShowCurrentActivityPoints = (this.data[\"ActivitiesPoints\"] <= -1) ? \"--\" : this.data[\"ActivitiesPoints\"];\n      this.ShowCurrentActivityPointsBar = this.getActivityCircleBar(totalPoints, limitPoints, 1);\n\n      console.debug(\"ans111: \", this.ShowCurrentActivityPointsBar);\n\n      //get monthly points\n      this.ShowCurrentMonthlyProgress = (this.data[\"MonthlyProgressCurrent\"] <= -1) ? \"--\" : this.data[\"MonthlyProgressCurrent\"];\n      this.ShowCurrentMonthlyTotal = (this.data[\"MonthlyProgressTotal\"] <= -1) ? \"--\" : this.data[\"MonthlyProgressTotal\"];\n\n      //monthly percentage x%\n      this.ShowCurrentMonthlyProgressRate = this.getMonthlyPercentage(monthlyNumerator, monthlyDenominator);\n      console.debug(\"ans222: \", this.ShowCurrentMonthlyProgressRate);\n      \n      //month bar length\n      this.ShowCurrentMonthlyProgressBar = this.getMonthlyBarLength(monthlyNumerator, monthlyDenominator, 1.5, 150);\n      console.debug(\"ans333: \", this.ShowCurrentMonthlyProgressBar);\n\n      // //activity points and circle bar \n      // this.ShowCurrentActivityPoints = (this.data[\"ActivitiesPoints\"] <= -1) ? \"--\" : this.data[\"ActivitiesPoints\"];\n      // this.ShowCurrentActivityPointsBar = this.getRate(this.data[\"ActivitiesPoints\"], this.data[\"ActivitiesPointsTotal\"]).toString();\n\n      // let bar = this.getRate(this.data[\"ActivitiesPoints\"], this.data[\"ActivitiesPointsTotal\"]);\n      // this.ShowCurrentActivityPointsBar = (bar >= 1) ? \"1\" : bar.toFixed(2);\n\n      // let rate = this.getRate(this.data[\"MonthlyProgressCurrent\"], this.data[\"MonthlyProgressTotal\"]);\n      // let percentage = (rate * 100);\n      // let monthlyRate = this.convertNumberDigital(percentage, 2);\n\n      // this.ShowCurrentMonthlyProgressRate = monthlyRate.toString();\n      // this.ShowCurrentMonthlyProgressBar = (monthlyRate >= 1) ? \"1\" : monthlyRate.toString();\n\n      // let mp: number = this.data[\"MonthlyProgressCurrent\"];\n      // let mt: number = this.data[\"MonthlyProgressTotal\"];\n      // this.ShowCurrentMonthlyProgress = this.convertNumberThousand(mp);\n      // this.ShowCurrentMonthlyTotal = this.convertNumberThousand(mt);\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00601', 'DashboardPerformancePersonal init fail!' + error.message));\n    }\n  }\n\n\n  private convertToNumber(str:string):number {\n    let convert = Number(str);\n\n    if(convert == NaN) {\n      return 0;\n    } \n    else if(convert <= -1) {\n      return 0;\n    }\n    else if(convert == 0) {\n      return 0;\n    }\n    else {\n      return convert;\n    }\n  }\n\n  private getActivityCircleBar(totalPoints:number, limitPoints:number, maxLength:number):string {\n    \n    if(totalPoints == 0 || limitPoints == 0) {\n      return \"0\";\n    }\n\n    let ans = (totalPoints / limitPoints);\n    if(ans >= maxLength) {\n      return maxLength.toString();\n    }\n    else {\n      return ans.toString();\n    }\n  }\n\n  private getMonthlyPercentage(monthlyNumerator:number, monthlyDenominator:number):string {\n    if(monthlyNumerator == 0 || monthlyDenominator == 0) {\n      return \"0\";\n    }\n\n    let ans = (monthlyNumerator / monthlyDenominator) * 100;\n    let percentage = Math.round(ans);\n    return percentage.toString();\n  }\n\n  private getMonthlyBarLength(monthlyNumerator:number, monthlyDenominator:number, maxLength:number, maxBase: number):string {\n\n    if(monthlyNumerator == 0 || monthlyDenominator == 0) {\n      return \"0\";\n    }\n\n    let ans = Math.round((monthlyNumerator / monthlyDenominator) * 100) / maxBase;\n    return (ans >= maxLength) ? maxLength.toString() : ans.toString();\n  }\n\n\n\n  private getRate(sum: any, max: any): number {\n    if (sum <= 0 || !NumberUtils.isNumber(sum)) return 0;\n    if (max <= 0 || !NumberUtils.isNumber(max)) return 0;\n\n    return (sum / max);\n  }\n\n  //åæ¨äºå¥  \n  private convertNumberDigital(num: number, digit: number): number {\n\n    if (digit === 0)\n      return Math.round(num);\n    else if (digit > 0) {\n      return Math.round(num * Math.pow(10, digit)) / (Math.pow(10, digit));\n    }\n    else {\n      return num;\n    }\n  }\n\n\n  //è½æåä½æ¸è¡¨ç¤ºæ³ï¼000,000,000ï¼\n  public convertNumberThousand(num: number): string {\n\n    if (num <= -1 || !NumberUtils.isNumber(num)) return \"--\";\n\n    var numString = num.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n\n    while (pattern.test(numString)) {\n      numString = numString.replace(pattern, \"$1,$2\");\n    }\n    return numString;\n  }\n\n  public goToProgress() {\n    let tag = Tag.PersonalTag;\n    this.progressService.SetCurrentNavigationTag(tag);\n    this.router.navigate(\"Progress\");\n  }\n\n}\n","export enum DashboardMessageType {\n    Unread = 'UnRead',\n    All = 'All',\n    GoalSetting = 'GoalSetting',\n    Progress = 'Progress',\n    Customer = 'Customer',\n    PendingApproval = 'PendingApproval'\n}","import { Component, OnInit, Input, Output, EventEmitter, ErrorHandler, Optional, Inject } from '@angular/core';\nimport { Language, TranslateService, DefaultLoginMgr, LoginInfo, APPError, NotificationMgr, DataSyncService, NotificationType, AppRouter, showRuleToken, showRule } from '@allianzSND/core';\nimport { DashboardMessage } from '../../service/model/DashboardMessage';\nimport { getYear, getMonth, getDate, format } from 'date-fns';\nimport { ROLE, AgencyPlanStoreService, AGENCY_STATE, AgencyPlanAgentInfo, AgencyPlanStatus } from '@allianzSND/goal';\nimport { showDashboardRuleToken } from '../../injectionToken/injection-token';\nimport { showDashboardRule } from '../../interface/showDashboardRule.interface';\nimport { DashboardMessageType } from './dashboard-message-type';\nimport { take, takeUntil, first } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'snd-dashboard-message',\n  templateUrl: './dashboard-message.component.html',\n  styleUrls: ['./dashboard-message.component.scss']\n})\nexport class DashboardMessageComponent implements OnInit {\n\n  public MsgType = 'UnRead';\n  public Language = new Language();\n  public IsHasMsg = false;\n  public IsCAO = false;\n  private _messageList: Array<DashboardMessage> = [];\n  private keyword: string = 'UnRead';\n  public msgType: Array<{ value: DashboardMessageType, displayName: string }> = [];\n  private defaultMsgType: Array<{ value: DashboardMessageType, displayName: string }>\n    = [{\n      value: DashboardMessageType.Unread,\n      displayName: this.Language.unread\n    }, {\n      value: DashboardMessageType.All,\n      displayName: this.Language.all\n    }, {\n      value: DashboardMessageType.GoalSetting,\n      displayName: this.Language.goalSettingMsgType\n    }, \n    // {\n    //   value: DashboardMessageType.Progress,\n    //   displayName: this.Language.progress\n    // }, \n    {\n      value: DashboardMessageType.Customer,\n      displayName: this.Language.customer\n    }, {\n      value: DashboardMessageType.PendingApproval,\n      displayName: this.Language.pendingApproval\n    }]\n\n  public ConvertToImgUrl = {\n    \"GoalSetting\": 'goal',\n    \"Customer\": 'cust',\n    // \"Progress\": 'progress'\n  }\n\n  public ConvertCategoryToLanguage = {\n    \"GoalSetting\": 'goalSetting',\n    \"Customer\": 'customer',\n    // \"Progress\": 'progress'\n  }\n\n  public ConvertStatus = {\n    \"Reading\": true,\n    \"UnRead\": false\n  }\n\n  constructor(\n    private translateService: TranslateService,\n    private loginMgr: DefaultLoginMgr,\n    private errorHandler: ErrorHandler,\n    private agencyPlanStoreService: AgencyPlanStoreService,\n    private router: AppRouter,\n    private notificationMgr: NotificationMgr,\n    private syncService: DataSyncService,\n    @Optional() @Inject(showDashboardRuleToken) private showDashboardRule: showDashboardRule,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n  ) {\n    this.init();\n  }\n\n  ngOnInit() { }\n\n  //#region  getter setter (input output)\n\n  @Output()\n  public filterByKeyword: EventEmitter<string> = new EventEmitter();\n  @Output()\n  public clickMessage: EventEmitter<DashboardMessage> = new EventEmitter();\n  @Output()\n  public changeCommitmentStatus: EventEmitter<any> = new EventEmitter();\n\n  @Input()\n  set messageList(messageList) {\n    if (messageList.length > 0) {\n      this.IsHasMsg = true;\n      console.log('isHasMsg is true');\n    }\n    else {\n      this.IsHasMsg = false;\n    }\n\n\n    // if(this.showRule) {\n    //   messageList.forEach(x => {\n    //     x.messageDate = this.showRule.convertDate(new Date(x.messageDate));\n    //   });\n    // }\n\n    // else {\n    //   messageList.forEach(x => {\n    //     x.messageDate = format(new Date(x.messageDate),'MM/dd/yyyy');\n    //   });\n    // }\n\n    this._messageList = messageList;\n\n    console.log(\"detail message: \", this._messageList);\n  }\n  get messageList() {\n    return this._messageList;\n  }\n\n  //#endregion\n\n  //#region function\n\n  private async init() {\n    console.log(\"Dashboard init\");\n    let loginInfo: LoginInfo = await this.loginMgr.getLoginInfo().pipe(take(1)).toPromise();\n    console.log(\"Dashboard init loginInfo:\", loginInfo);\n    if (this.showDashboardRule) {\n      let filtered = this.showDashboardRule.showMessageType(loginInfo);\n      this.msgType = this.defaultMsgType.filter(x => filtered.indexOf(x.value) > -1);\n    }\n    else\n      this.msgType = this.defaultMsgType;\n    console.log(\"Dashboard init end:\", this.msgType);\n  }\n\n  public Filter(keyword) {\n    this.keyword = keyword;\n    this.filterByKeyword.emit(keyword);\n  }\n\n  public OnClickMessage(message: DashboardMessage) {\n    if (message.isClick === 'Y') {\n      console.log(\"message\", message)\n      let argument = JSON.parse(message.argument);\n      console.log(\"argument\", argument, \"typeof argument\", typeof argument);\n      if (message.isPopup === 'Y') {\n        this.clickMessage.emit(message);\n        this.filterByKeyword.emit(this.keyword);\n        console.log('éè¦run push()');\n        this.notificationMgr.pushNotification(NotificationType[message.messageType], argument);\n      } else if (message.isPopup === 'N') {\n        console.log(\"è·³è½å°\" + argument.agentID + \"çcommitment\");\n        this.clickMessage.emit(message);\n        this.filterByKeyword.emit(this.keyword);\n        // get\n        let agencyDetail: AgencyPlanAgentInfo = new AgencyPlanAgentInfo(argument['agentID'], argument['agentName'], argument['DataYear'], argument['AppUseMode']);\n        // agencyDetail['agentID'] = argument['agentID'];\n        // agencyDetail['agentName'] = argument['agentName'];\n        // agencyDetail['dataYear'] = argument['DataYear'];\n        // agencyDetail['appUseMode'] = argument['AppUseMode'];\n        console.log(\"agencyDetail\", agencyDetail);\n        this.agencyPlanStoreService.setCurrentAgencyDetail(agencyDetail);\n        this.router.navigate(\"commitment\");\n\n        // this._location.go('')  //å»commitment\n      }\n    } else if (message.isClick === 'N') {\n      console.log('this is no action for click');\n    }\n  }\n\n  //#endregion\n\n}\n","import { NgModule } from '@angular/core';\nimport { UIModule } from '@allianzSND/ui';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@allianzSND/core';\nimport { IntegrationCalendarCustomerModule } from '@allianzSND/integration-calendar-customer';\n\nimport { DashboardListComponent } from './components/dashboard-list/dashboard-list.component';\nimport { DashboardDetailComponent } from './components/dashboard-detail/dashboard-detail.component';\nimport { DashboardUiCardMsgComponent } from './components/dashboard-ui-card-msg/dashboard-ui-card-msg.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { DashboardPerformanceComponent } from './components/dashboard-performance/dashboard-performance.component';\nimport { DashboardPerformanceTeamComponent } from './components/dashboard-performance-team/dashboard-performance-team.component';\nimport { DashboardPerformancePersonalComponent } from './components/dashboard-performance-personal/dashboard-performance-personal.component';\nimport { DashboardMessageComponent } from './components/dashboard-message/dashboard-message.component';\n\n@NgModule({\n  imports: [\n    UIModule,\n    CoreModule,\n    CommonModule,\n    IntegrationCalendarCustomerModule\n  ],\n  declarations: [DashboardComponent, DashboardListComponent, DashboardDetailComponent, DashboardUiCardMsgComponent, DashboardPerformanceComponent, DashboardPerformanceTeamComponent, DashboardPerformancePersonalComponent, DashboardMessageComponent],\n  exports: [DashboardComponent, DashboardListComponent, DashboardDetailComponent, DashboardUiCardMsgComponent]\n})\nexport class DashboardModule { }\n","export class DashboardShowLoginInfo {\n    \n    private _showName: string;\n    private _imgUrl: string;\n\n    constructor(showName, imgUrl) {\n        this._showName = showName;\n        this._imgUrl = imgUrl;\n    }\n\n    get showName(): string {\n        return this._showName;\n    }\n\n    get imgUrl(): string {\n        return this._imgUrl;\n    }\n}"],"names":["APIFactory","tslib_1.__values"],"mappings":"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"}
