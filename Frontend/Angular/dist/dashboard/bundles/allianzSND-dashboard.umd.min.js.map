{"version":3,"sources":["ng://@allianzSND/dashboard/lib/components/dashboard-list/dashboard-list.component.ts","node_modules/tslib/tslib.es6.js","ng://@allianzSND/dashboard/lib/service/model/DashboardMessage.ts","ng://@allianzSND/dashboard/lib/injectionToken/injection-token.ts","ng://@allianzSND/dashboard/lib/service/dashboard-service.service.ts","ng://@allianzSND/dashboard/lib/components/dashboard-detail/dashboard-detail.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-ui-card-msg/dashboard-ui-card-msg.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard/dashboard.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-performance/dashboard-performance.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-performance-team/dashboard-performance-team.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-performance-personal/dashboard-performance-personal.component.ts","ng://@allianzSND/dashboard/lib/components/dashboard-message/dashboard-message-type.ts","ng://@allianzSND/dashboard/lib/components/dashboard-message/dashboard-message.component.ts","ng://@allianzSND/dashboard/lib/dashboard.module.ts","ng://@allianzSND/dashboard/lib/service/model/DashboardShowLoginInfo.ts"],"names":["DashboardListComponent","APP_CONFIG","showRule","translateService","elementRef","this","isBirthdayToday","isHasScheduleData","isHasBirthdayData","translateMap","Map","_calendarEventList","isCalendarEventListBefore","_birthdayItemList","searchBirthdayAddN","ENV","DASHBOARD","SearchBirthdayRange","addN","beforeTodayBirthdayItemList","afterTodayBirthdayItemList","eventListBGColor","language","Language","viewTypeIndex","tabIndex","tabHeight","_viewDate","Date","weekStartsOn","today","yearVal","viewDate","getFullYear","clickCalendarItem","EventEmitter","completeLoadEvent","updateCalendarEventDetail","clickDate","Object","defineProperty","prototype","calendarEventList","judgeIsScheduleHasData","birthdayItemList","_this_1","length","_sortBirthDayListByName","filter","x","itemBirthdayIsBeforeToday","val","getTime","changeViewDate","tabChangeEvent","event","tabContentBlock","nativeElement","querySelector","style","opacity","tabContent","scrollHeight","todayDisplayStr","convertCalendarDateToShow","endDate","addDays","endDateDisplayStr","console","log","setTimeout","scrollToContent","tabOpenIndex","scrollEle","scrollContent","move","offsetTop","scrollTop","onClickEventItem","showDate","calendarItem","emit","eventList","monthDayClicked","date","switchMonthClicked","itemBirthdayIsToday","item","getMonth","parseInt","birthdayMonth","getDate","birthdayDate","todayDate","UTC","itemDate","debug","ngOnInit","windowWidth","window","innerWidth","ngAfterViewInit","calendarListContents","changes","subscribe","convertNameToShow","firstName","lastName","convertName","StringUtils","isNotEmpty","convertBirthdayToShow","month","combineDate","getYear","_convertDateWithoutYear","convertDateWithoutYear","format","cloneList","map","clone","sort","item1","item2","comapareBirthdayMonth","_comapare","comapareBirthdayDate","item1_name","item2_name","isHasChinese","localeCompare","n1","n2","Component","args","selector","template","Inject","ConfigToken","Optional","type","showRuleToken","TranslateService","ElementRef","ViewChildren","Input","Output","ViewChild","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","DashboardMessage","clientID","messageID","messageCatogory","messageType","title","description","argument","status","messageDate","messageTime","isPopup","linkStatus","isClick","_clientID","_messageID","_messageCategory","_messageType","_title","_description","_argument","_status","_messageDate","_messageTime","_isPopup","_linkStatus","_isClick","showDashboardRuleToken","InjectionToken","DashboardService","dispatcher","APIFactory","dateUtils","errorHandler","showDashboardRule","isFirstInDashboard","isFirstTime","updateMessageStatus","_this","dashboardUpdateMessageStatusAPI","getAPI","setClientID","setStatus","Observable","create","observer","dispatch","data","complete","getMessageByKeyword","keyword","pageInfo","dashboardGetMessageListAPI","setKeyword","setPageInfo","isShow","messageList","DashboardMessageList_1","forEach","dashboardMessage","ClientID","MessageID","MessageCategory","MessageType","Title","Description","Arguments","Status","convertDate","MessageTime","convertTime","IsPopup","LinkStatus","IsClick","toDateString","getPerformanceData","performanceType","appUseMode","from","_getPerformanceTeamData","_getPerformancePersonalData","returnData","Datas","yearConfigResp","teamProgressMain","yearConfig","all","toPromise","_a","_b","teamProgressMainResp_1","Header","DataYear_1","Body","IsCurrent","DataYear","timeBaseTitle","showTimeBaseTitle","timeBase_1","dataobj","xx","TimeBase","DataType","MonthlyProgressTotal","Forecast","Goal","MonthlyProgressCurrent","Actual","datas","handleError","APPError","error_1","message","getPersonalProgress","personalProgressResp","currentObj","ActivitiesPointsTotal","ProgressDayPointsLimit","InforceConvertPointBase","FindConvertPointBase","ScheduleConvertPointBase","MeetConvertPointBase","SubmitConvertPointBase","personalProgressObj","Find","Schedule","Meet","Submit","Inforce","ActivitiesPoints","FYFC","error_2","JSON","stringify","getUserLevel","changeMessageStatus","col","changeStatusObj","resp","Injectable","providedIn","APIDispatch","DateUtils","ErrorHandler","DashboardDetailComponent","dashboardService","_messageList","userImgUrl","userAgentName","userLevel","onClickLink","filterByKeyword","clickMessage","changeCommitmentStatus","init","_loginInfo","loginInfo","dashboardShowLoginInfo","imgUrl","showName","ClickListShow","doFilterByKeyword","onChangeCommitmentStatus","doMessageClick","DashboardUiCardMsgComponent","isRead","isHasBtn","isHasApproved","cardType","imgType","linkBtnStatus","approve","DashboardComponent","customerUtils","calendarService","customerService","changeDetector","profileCodeService","loginMgr","dataSyncService","notificationMgr","hello_str","isLoadingFinish","isRefreshFinish","isLazyLoading","isMobilePopupOpen","dashboardMessageList","calendarEventMonthList","birthdayList","todate","alertAutoDeleteCustomer","alertOverTimeList","isDisplayDeleteRemind","isDisplayUpdateRemind","showCalendarList","messagePageInfo","PageInfo","isExpandDetail","isCalendarDelete","isPopupDeleteSuccess","isExpandEdit","isDisplaySavePopup","optionMap","isSaveClick","activityTypeList","alertTypeList","dayTypesList","weekdaysList","monthsList","noSchedule","customerClientMap","customerItemList","customerClientName","searchBirthdaySubN","subN","searchCalendarSubN","SearchCalendarRange","searchCalendarAddN","pageSize","getCodeArray","set","dayType","translate","weekday","getLoginInfo","getCalendarList","getCustomerBirthdayList","createCustomerList","onResize","target","markForCheck","searchCalendarStart","subDays","PromiseList","targetDate","res","rej","getCalendarBetweenDate","startOfDay","endOfDay","isBeforeToday","isToday","list","loadContent","nextPage","currentMessageKeyword","detectChanges","refreshContent","resetPage","fetchMessageData","info","dashboardLoginInfo","warn","isAppend","messageId","afterDisplayDeleteRemind","afterDisplayUpdateRemind","getCustomerAutoDelete","cliendID","getAutoDeleteCustomerList","getCustomerOverTime","getOverTimeCustomerList","startDate","getCalendarEventList","clickListShow","onClickMessage","onClickCalendarItem","calendarItemClientID","loadCalendarEventDetail","getCalendarEventDetail","calendarEventDetail","get","customerClientID","displayActivity","convertCode2Text","activity","displayAlert1","alert1","displayAlert2","alert2","editEvent","delete","onClickDeleteConfirm","deleteCalendarEvent","onSaveCalendarEvent","onClickAppointmentSave","filterCriteria","CustomerFilterCriteria","getCustomerList","temp_array","data_1","__values","tslib_1.__values","data_1_1","custItem","SelectOption","changeDetection","ChangeDetectionStrategy","OnPush","CustomerUtils","CalendarService","CustomerService","ChangeDetectorRef","ProfileCodeService","DefaultLoginMgr","DataSyncService","NotificationMgr","HostListener","DashboardPerformanceComponent","GAP_SIZE_20","CONTENTGAP","GAP20","role","pipe","take","identity","AppUseMode","agentRole","_ConvertIdentityToRolesType","_ShowRolePage","index","ROLE","AGENT","AGENTLEADER","ZONEHEAD","CAO","DashboardPerformanceTeamComponent","router","progressService","dashboardPerformanceTeam","isLoadDataFinish","userRole","ShowMonthlyProgressRateArr","Array","ShowMonthlyProgressRateBarArr","key","MonthlyProgressRate","getRate","convertNumberDigital","pc","getPercentage","monthlyNumerator","convertToNumber","monthlyDenominator","pcb","getMonthlyBarLength","a","b","NumberUtils","isNumber","toString","getPercentageBar","str","convert","Number","NaN","maxLength","maxBase","ans","Math","round","num","digit","pow","convertNumberThousand","numString","pattern","test","replace","goToProgress","tag","Tag","TeamTag","SetCurrentNavigationTag","navigate","AppRouter","ProgressService","DashboardPerformancePersonalComponent","ShowCurrentActivityPoints","ShowCurrentActivityPointsBar","ShowCurrentMonthlyProgressRate","ShowCurrentMonthlyProgressBar","ShowCurrentMonthlyProgress","ShowCurrentMonthlyTotal","windowSize","totalPoints","limitPoints","getActivityCircleBar","getMonthlyPercentage","sum","max","PersonalTag","Unread","All","GoalSetting","Progress","Customer","PendingApproval","DashboardMessageComponent","agencyPlanStoreService","syncService","MsgType","IsHasMsg","IsCAO","msgType","defaultMsgType","DashboardMessageType","displayName","unread","goalSettingMsgType","customer","pendingApproval","ConvertToImgUrl","ConvertCategoryToLanguage","ConvertStatus","Reading","UnRead","filtered_1","showMessageType","indexOf","Filter","OnClickMessage","parse","pushNotification","NotificationType","agentID","agencyDetail","AgencyPlanAgentInfo","setCurrentAgencyDetail","AgencyPlanStoreService","DashboardModule","NgModule","imports","UIModule","CoreModule","CommonModule","IntegrationCalendarCustomerModule","declarations","exports","DashboardShowLoginInfo","_showName","_imgUrl"],"mappings":"61BAAA,IAAAA,EAAA,WAiHE,SAAAA,EAC+BC,EACcC,EACnCC,EACAC,GAHqBC,KAAAJ,WAAAA,EACcI,KAAAH,SAAAA,EACnCG,KAAAF,iBAAAA,EACAE,KAAAD,WAAAA,EAtGHC,KAAAC,iBAAkB,EAGlBD,KAAAE,mBAAoB,EACpBF,KAAAG,mBAAoB,EAIpBH,KAAAI,aAAoC,IAAIC,IAExCL,KAAAM,mBAAqB,GACrBN,KAAAO,0BAA4B,GAC3BP,KAAAQ,kBAA6C,GAE9CR,KAAAS,mBAAqBT,KAAKJ,WAAWI,KAAKJ,WAAWc,KAAKC,UAAUC,oBAAoBC,KACxFb,KAAAc,4BAAuD,GACvDd,KAAAe,2BAAsD,GAGtDf,KAAAgB,iBAAmB,OAEnBhB,KAAAiB,SAAW,IAAIC,EAAAA,SAGflB,KAAAmB,cAAgB,EAChBnB,KAAAoB,SAAW,EACVpB,KAAAqB,UAAY,EAEZrB,KAAAsB,UAAkB,IAAIC,KAEvBvB,KAAAwB,aAAe,EAGtBxB,KAAAyB,MAAQ,IAAIF,KACZvB,KAAA0B,QAAU1B,KAAK2B,SAASC,cAyDd5B,KAAA6B,kBAAoB,IAAIC,EAAAA,aA6DlC9B,KAAA+B,kBAAoB,IAAID,EAAAA,aAGxB9B,KAAAgC,0BAA4B,IAAIF,EAAAA,aAGhC9B,KAAAiC,UAAY,IAAIH,EAAAA,aA0IlB,OA/PEI,OAAAC,eACIxC,EAAAyC,UAAA,oBAAiB,KADrB,WAEE,OAAOpC,KAAKM,wBAEd,SAAsB+B,GAEpBrC,KAAKM,mBAAqB+B,EAC1BrC,KAAKE,kBAAoBF,KAAKsC,0DAKhCJ,OAAAC,eACIxC,EAAAyC,UAAA,mBAAgB,KADpB,WAEE,OAAOpC,KAAKQ,uBAEd,SAAqB+B,GAArB,IAAAC,EAAAxC,KAEiC,GAA3BuC,EAAiBE,OACnBzC,KAAKG,mBAAoB,EAGzBH,KAAKG,mBAAoB,EAG3BH,KAAKQ,kBAAoB+B,EACzBvC,KAAKc,4BAA8B,GACnCd,KAAKe,2BAA6B,GAIlCf,KAAKc,4BAA8Bd,KAAK0C,wBAAwB1C,KAAKQ,kBAAkBmC,OAAM,SAACC,GAAK,OAAAJ,EAAKK,0BAA0BD,MAClI5C,KAAKe,2BAA6Bf,KAAK0C,wBAAwB1C,KAAKQ,kBAAkBmC,OAAM,SAACC,GAAK,OAACJ,EAAKK,0BAA0BD,uCAMpIV,OAAAC,eACIxC,EAAAyC,UAAA,WAAQ,KADZ,WAEE,OAAOpC,KAAKsB,eAEd,SAAawB,GACP9C,KAAKsB,UAAUyB,WAAaD,EAAIC,YAClC/C,KAAKgD,eAAe,IAAIzB,KAAKuB,IAC7B9C,KAAK0B,QAAU1B,KAAKsB,UAAUM,gDAkBlCjC,EAAAyC,UAAAa,eAAA,SAAeC,GAAf,IAAAV,EAAAxC,KAGMmD,EADQnD,KACgBD,WAAWqD,cAAcC,cAAc,6CACnEF,EAAgBG,MAAMC,QAAU,EAEhCvD,KAAKqB,UAAYrB,KAAKwD,WAAWJ,cAAcK,aAC/CzD,KAAKoB,SAAW8B,EAChBlD,KAAK0D,gBAAkB1D,KAAK2D,0BAA0B3D,KAAKyB,WAEvDmC,EAAUC,EAAAA,QAAQ7D,KAAKyB,MAAOzB,KAAKS,oBACvCT,KAAK8D,kBAAoB9D,KAAK2D,0BAA0BC,GAExDG,QAAQC,IAAI,iBAAiBhE,KAAKoB,UACf,IAAhBpB,KAAKoB,SACN6C,WAAU,WACRzB,EAAK0B,gBAAgB,GACrBf,EAAgBG,MAAMC,QAAU,GAChC,KAEqB,IAAhBvD,KAAKoB,UACZ6C,WAAU,WACRzB,EAAK0B,gBAAgB,GACrBf,EAAgBG,MAAMC,QAAU,GAChC,MAON5D,EAAAyC,UAAA8B,gBAAA,SAAgBC,OAGVC,EADmBpE,KAAKwD,WAAWJ,cAAcC,cAAc,gBAAkBc,GACpDd,cAAc,aAC3CgB,EAAgBrE,KAAKwD,WAAWJ,cACpC,GAAkB,OAAdgB,EAAoB,KAElBE,EAAOF,EAAUG,UAAY,GACjCR,QAAQC,IAAI,gBAAgBhE,KAAKqB,WACjC0C,QAAQC,IAAI,sBAAsBI,EAAUG,WAC5CF,EAAcG,UAAYF,IAe9B3E,EAAAyC,UAAAqC,iBAAA,SAAiBC,EAAUC,GACzB3E,KAAK6B,kBAAkB+C,KAAK,CAAEF,SAAUA,EAAUG,UAAWF,KAS/DhF,EAAAyC,UAAA0C,gBAAA,SAAgBC,GACd/E,KAAKiC,UAAU2C,KAAKG,IAItBpF,EAAAyC,UAAA4C,mBAAA,SAAmBD,GAEjB/E,KAAKiC,UAAU2C,KAAKG,IAKtBpF,EAAAyC,UAAA6C,oBAAA,SAAoBC,GAElB,OAAQlF,KAAKyB,MAAM0D,WAAa,GAAMC,SAASF,EAAKG,gBAAkBrF,KAAKyB,MAAM6D,WAAaF,SAASF,EAAKK,eAK9G5F,EAAAyC,UAAAS,0BAAA,SAA0BqC,OAEpBM,EAAYjE,KAAKkE,IAAI,IAAMzF,KAAKyB,MAAM0D,WAAa,EAAGnF,KAAKyB,MAAM6D,WACjEI,EAAWnE,KAAKkE,IAAI,IAAML,SAASF,EAAKG,eAAgBD,SAASF,EAAKK,eAI1E,OAFAxB,QAAQ4B,MAAM,mBAAoBH,EAAWE,GAE1BA,EAAZF,GAOT7F,EAAAyC,UAAAE,uBAAA,WACE,OAA8E,EAAtEtC,KAAKM,mBAAmBqC,OAAM,SAACC,GAAK,OAAqB,EAArBA,EAAEiC,UAAUpC,SAAkB,QAG5E9C,EAAAyC,UAAAwD,SAAA,WACE5F,KAAKiD,eAAe,GACpBjD,KAAK6F,YAAcC,OAAOC,WAC1BhC,QAAQC,IAAI,mBAAmBhE,KAAK6F,cAGtClG,EAAAyC,UAAA4D,gBAAA,WAAA,IAAAxD,EAAAxC,KACEA,KAAKiG,qBAAqBC,QAAQC,UAAS,WACvC3D,EAAK0B,gBAAgB,MAI3BvE,EAAAyC,UAAAgE,kBAAA,SAAkBC,EAAmBC,GACnC,OAAItG,KAAKH,SACAG,KAAKH,SAAS0G,YAAYF,EAAWC,IAGjBE,EAAAA,YAAYC,WAAWJ,GAAaA,EAAY,KACjDG,EAAAA,YAAYC,WAAWH,GAAa,IAAMA,EAAY,KAKpF3G,EAAAyC,UAAAsE,sBAAA,SAAsBC,EAAe5B,OAC/B6B,EAAc,IAAIrF,KAAKsF,EAAAA,QAAQ,IAAItF,MAAU,IAAMoF,EAAQ,IAAM5B,GACrE,OAAO/E,KAAK8G,wBAAwBF,IAItCjH,EAAAyC,UAAAuB,0BAAA,SAA0BoB,GACxB,OAAO/E,KAAK8G,wBAAwB/B,IAG9BpF,EAAAyC,UAAA0E,wBAAR,SAAgC/B,GAC9B,OAAG/E,KAAKH,SACCG,KAAKH,SAASkH,uBAAuBhC,GAGrCiC,EAAAA,OAAOjC,EAAK,UAIfpF,EAAAyC,UAAAM,wBAAR,SAAgCH,GAAhC,IAAAC,EAAAxC,KAEMiH,EAAY1E,EAAiB2E,IAAG,SAACtE,GAAK,OAAAA,EAAEuE,UA4B5C,OA3BAF,EAAUG,KAAI,SAAEC,EAAOC,OAEjBC,EAAwB/E,EAAKgF,UAAUH,EAAMhC,cAAeiC,EAAMjC,eACtE,GAA6B,IAA1BkC,EACD,OAAOA,MAGLE,EAAuBjF,EAAKgF,UAAUH,EAAM9B,aAAc+B,EAAM/B,cACpE,GAA4B,IAAzBkC,EACD,OAAOA,MAGLC,EAAalB,EAAAA,YAAYC,WAAWY,EAAMf,UAAYe,EAAMf,SAAW,GACvEqB,EAAanB,EAAAA,YAAYC,WAAWa,EAAMhB,UAAYgB,EAAMhB,SAAW,GAE3E,OAAKE,EAAAA,YAAYoB,aAAaF,IAAelB,EAAAA,YAAYoB,aAAaD,IAC5D,EAEDnB,EAAAA,YAAYoB,aAAaF,KAAgBlB,EAAAA,YAAYoB,aAAaD,GAClE,EAGAD,EAAWG,cAAcF,EAAY,aAKzCV,GAGDtH,EAAAyC,UAAAoF,UAAR,SAAkBM,EAAIC,GACpB,OAAGD,EAAKC,GACE,EAEGA,EAALD,EACC,EAGA,uBA3SZE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qBACVC,SAAA,s8NA0GGC,EAAAA,OAAMH,KAAA,CAACI,EAAAA,kDACPC,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMH,KAAA,CAACO,EAAAA,wBAhHfC,EAAAA,wBAH2DC,EAAAA,4DAsDjEC,EAAAA,aAAYV,KAAA,CAAC,2CAEbW,EAAAA,8BASAA,EAAAA,gCAGAA,EAAAA,wBA0BAA,EAAAA,iCAYAC,EAAAA,2BAGAC,EAAAA,UAASb,KAAA,CAAC,yCAyDVY,EAAAA,0CAGAA,EAAAA,0BAGAA,EAAAA,UA2IHlJ,EAvTA,GCcA,SAAAoJ,EAqD0BC,EAASC,EAAYC,EAAGC,GAC9C,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,SAAAC,EAAmBC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAAAC,EAAkBJ,GAAS,IAAMC,EAAKN,EAAiB,SAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAAAF,EAAcI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,IAAIN,EAAE,SAAUG,GAAWA,EAAQQ,EAAOL,SAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,UAItE,SAAAO,EAA4BjB,EAASkB,GACjC,IAAsGC,EAAGC,EAAGC,EAAGC,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPJ,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOK,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEZ,KAAMkB,EAAK,GAAIC,QAASD,EAAK,GAAIE,SAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOhL,OAAUsK,EACvJ,SAAAM,EAAcK,GAAK,OAAO,SAAUC,GAAK,OACzC,SAAAzB,EAAc0B,GACV,GAAIhB,EAAG,MAAM,IAAIiB,UAAU,mCAC3B,KAAOb,GAAG,IACN,GAAIJ,EAAI,EAAGC,IAAMC,EAAY,EAARc,EAAG,GAASf,EAAU,UAAIe,EAAG,GAAKf,EAAS,YAAOC,EAAID,EAAU,YAAMC,EAAEgB,KAAKjB,GAAI,GAAKA,EAAEV,SAAWW,EAAIA,EAAEgB,KAAKjB,EAAGe,EAAG,KAAKrB,KAAM,OAAOO,EAE3J,OADID,EAAI,EAAGC,IAAGc,EAAK,CAAS,EAARA,EAAG,GAAQd,EAAEb,QACzB2B,EAAG,IACP,KAAK,EAAG,KAAK,EAAGd,EAAIc,EAAI,MACxB,KAAK,EAAc,OAAXZ,EAAEC,QAAgB,CAAEhB,MAAO2B,EAAG,GAAIrB,MAAM,GAChD,KAAK,EAAGS,EAAEC,QAASJ,EAAIe,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKZ,EAAEI,IAAIW,MAAOf,EAAEG,KAAKY,MAAO,SACxC,QACI,KAAkBjB,EAAe,GAA3BA,EAAIE,EAAEG,MAAYjI,QAAc4H,EAAEA,EAAE5H,OAAS,MAAkB,IAAV0I,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEZ,EAAI,EAAG,SACjG,GAAc,IAAVY,EAAG,MAAcd,GAAMc,EAAG,GAAKd,EAAE,IAAMc,EAAG,GAAKd,EAAE,IAAM,CAAEE,EAAEC,MAAQW,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYZ,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIA,EAAIc,EAAI,MAC7D,GAAId,GAAKE,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIE,EAAEI,IAAIY,KAAKJ,GAAK,MACvDd,EAAE,IAAIE,EAAEI,IAAIW,MAChBf,EAAEG,KAAKY,MAAO,SAEtBH,EAAKjB,EAAKmB,KAAKrC,EAASuB,GAC1B,MAAOZ,GAAKwB,EAAK,CAAC,EAAGxB,GAAIS,EAAI,UAAeD,EAAIE,EAAI,EACtD,GAAY,EAARc,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE3B,MAAO2B,EAAG,GAAKA,EAAG,QAAK,EAAQrB,MAAM,GArB9BL,CAAK,CAACwB,EAAGC,MAwC7D,SAAAM,EAAuBC,EAAGR,GACtB,IAAIS,EAAsB,mBAAXX,QAAyBU,EAAEV,OAAOC,UACjD,IAAKU,EAAG,OAAOD,EACf,IAAmBE,EAAYhC,EAA3BiC,EAAIF,EAAEL,KAAKI,GAAOI,EAAK,GAC3B,IACI,WAAc,IAANZ,GAAsB,EAANA,QAAcU,EAAIC,EAAElC,QAAQI,MAAM+B,EAAGN,KAAKI,EAAEnC,OAExE,MAAOsC,GAASnC,EAAI,CAAEmC,MAAOA,WAEzB,IACQH,IAAMA,EAAE7B,OAAS4B,EAAIE,EAAU,YAAIF,EAAEL,KAAKO,WAExC,GAAIjC,EAAG,MAAMA,EAAEmC,OAE7B,OAAOD,EAGX,SAAAE,IACI,IAAK,IAAIF,EAAK,GAAID,EAAI,EAAGA,EAAII,UAAUvJ,OAAQmJ,IAC3CC,EAAKA,EAAGI,OAAOT,EAAOQ,UAAUJ,KACpC,OAAOC,EC1IX,IAAAK,EAAA,WAgBI,SAAAA,EAAYC,EAAUC,EAAWC,EAAiBC,EAAaC,EAAOC,EAAaC,EAAUC,EAAQC,EAAaC,EAAaC,EAAUC,EAAaC,GAElJ/M,KAAKgN,UAAYb,EACjBnM,KAAKiN,WAAab,EAClBpM,KAAKkN,iBAAmBb,EACxBrM,KAAKmN,aAAeb,EACpBtM,KAAKoN,OAASb,EACdvM,KAAKqN,aAAeb,EACpBxM,KAAKsN,UAAYb,EACjBzM,KAAKuN,QAAUb,EACf1M,KAAKwN,aAAeb,EACpB3M,KAAKyN,aAAeb,EACpB5M,KAAK0N,SAAWb,EAChB7M,KAAK2N,YAAcb,EACnB9M,KAAK4N,SAAWb,EA6GxB,OA1GI7K,OAAAC,eAAI+J,EAAA9J,UAAA,WAAQ,KAAZ,WACI,OAAOpC,KAAKgN,2CAGhB9K,OAAAC,eAAI+J,EAAA9J,UAAA,YAAS,KAAb,WACI,OAAOpC,KAAKiN,gBA+ChB,SAAgBb,GACZpM,KAAKiN,WAAab,mCA7CtBlK,OAAAC,eAAI+J,EAAA9J,UAAA,kBAAe,KAAnB,WACI,OAAOpC,KAAKkN,sBA+ChB,SAAqBb,GACjBrM,KAAKkN,iBAAmBb,mCA7C5BnK,OAAAC,eAAI+J,EAAA9J,UAAA,cAAW,KAAf,WACI,OAAOpC,KAAKmN,kBA+ChB,SAAiBb,GACbtM,KAAKmN,aAAeb,mCA7CxBpK,OAAAC,eAAI+J,EAAA9J,UAAA,QAAK,KAAT,WACI,OAAOpC,KAAKoN,YA+ChB,SAAWb,GACPvM,KAAKoN,OAASb,mCA7ClBrK,OAAAC,eAAI+J,EAAA9J,UAAA,cAAW,KAAf,WACI,OAAOpC,KAAKqN,kBA+ChB,SAAiBb,GACbxM,KAAKqN,aAAeb,mCA7CxBtK,OAAAC,eAAI+J,EAAA9J,UAAA,WAAQ,KAAZ,WACI,OAAOpC,KAAKsN,eA+ChB,SAAcb,GACVzM,KAAKsN,UAAYb,mCA7CrBvK,OAAAC,eAAI+J,EAAA9J,UAAA,SAAM,KAAV,WACI,OAAOpC,KAAKuN,aA+ChB,SAAYb,GACR1M,KAAKuN,QAAUb,mCA7CnBxK,OAAAC,eAAI+J,EAAA9J,UAAA,cAAW,KAAf,WACI,OAAOpC,KAAKwN,kBA+ChB,SAAiBb,GACb3M,KAAKwN,aAAeb,mCA7CxBzK,OAAAC,eAAI+J,EAAA9J,UAAA,cAAW,KAAf,WACI,OAAOpC,KAAKyN,kBA+ChB,SAAiBb,GACb5M,KAAKyN,aAAeb,mCA7CxB1K,OAAAC,eAAI+J,EAAA9J,UAAA,UAAO,KAAX,WACI,OAAOpC,KAAK0N,cA+ChB,SAAab,GACT7M,KAAK0N,SAAWb,mCA7CpB3K,OAAAC,eAAI+J,EAAA9J,UAAA,aAAU,KAAd,WACI,OAAOpC,KAAK2N,iBA+ChB,SAAgBb,GACZ9M,KAAK2N,YAAcb,mCA7CvB5K,OAAAC,eAAI+J,EAAA9J,UAAA,UAAO,KAAX,WACI,OAAOpC,KAAK4N,cA+ChB,SAAab,GACT/M,KAAK4N,SAAWb,mCASxBb,EA3IA,GCEa2B,EAAyB,IAAIC,EAAAA,eAAkC,kCCc1E,SAAAC,EACUC,EACAC,EACAC,EACAC,EACmCtO,EACSuO,GAL5CpO,KAAAgO,WAAAA,EACAhO,KAAAiO,WAAAA,EACAjO,KAAAkO,UAAAA,EACAlO,KAAAmO,aAAAA,EACmCnO,KAAAH,SAAAA,EACSG,KAAAoO,kBAAAA,EAP9CpO,KAAAqO,oBAA8B,SAYtCN,EAAA3L,UAAAkM,YAAA,eACMzE,EASJ,OARI7J,KAAKqO,oBACPxE,GAAS,EACT7J,KAAKqO,oBAAqB,GAG1BxE,GAAS,EAGJA,GAITkE,EAAA3L,UAAAmM,oBAAA,SAAoBpC,EAAkBO,GAAtC,IAAA8B,EAAAxO,KACMyO,EAAoGzO,KAAKiO,WAAWS,OAAO,gCAI/H,OAHAD,EAAgCE,YAAYxC,GAC5CsC,EAAgCG,UAAUlC,GAEnCmC,EAAAA,WAAWC,OAAM,SAAEC,GACxBP,EAAKR,WAAWgB,SAASP,GAAiCtI,UAAS,SAAE8I,GAEnElL,QAAQ4B,MAAM,iDAAkDsJ,GAEhEF,EAASrF,KAAKuF,EAAa,QAC3BF,EAASG,gBAMfnB,EAAA3L,UAAA+M,oBAAA,SAAoBC,EAAiBC,GAArC,IAAAb,EAAAxO,KACMsP,EAAqFtP,KAAKiO,WAAWS,OAAO,2BAKhH,OAJAY,EAA2BC,WAAWH,GACtCE,EAA2BE,YAAYH,GACvCC,EAA2BG,QAAS,EAE7BZ,EAAAA,WAAWC,OAAM,SAAEC,GACxBP,EAAKR,WAAWgB,SAASM,GAA4BnJ,UAAS,SAAE8I,GAC9DlL,QAAQC,IAAI,4BAA4BiL,OACpCS,EAAcT,EAAW,KAE7B,GAAIS,EAAa,KAEXC,EAAgD,GACpDD,EAAYE,QAAO,SAAC1K,OAEd2K,EAAqC,IAAI3D,EAAiBhH,EAAK4K,SAAU5K,EAAK6K,UAAW7K,EAAK8K,gBAAiB9K,EAAK+K,YAAa/K,EAAKgL,MAAOhL,EAAKiL,YAAajL,EAAKkL,UAAWlL,EAAKmL,OAAQ7B,EAAK8B,YAAY,IAAI/O,KAAK2D,EAAKqL,cAAe/B,EAAKgC,YAAY,IAAIjP,KAAK2D,EAAKqL,cAAcrL,EAAKuL,QAAUvL,EAAKwL,WAAYxL,EAAKyL,SAChUhB,EAAqBpE,KAAKsE,KAI5Bd,EAASrF,KAAKiG,GACdZ,EAASG,gBAITH,EAASrF,MAAK,GACdqF,EAASG,gBAQVnB,EAAA3L,UAAAkO,YAAP,SAAmBvL,GAEjB,OAAIA,EACE/E,KAAKH,SACAG,KAAKH,SAASyQ,YAAYvL,GAG1B/E,KAAKkO,UAAU0C,aAAa7L,EAAM,cAGpC,OAKJgJ,EAAA3L,UAAAoO,YAAP,SAAmBzL,GACjB,OAAIA,EACK/E,KAAKkO,UAAU0C,aAAa7L,EAAM,aAGlC,OAIJgJ,EAAA3L,UAAAyO,mBAAP,SAA0BC,EAAwBC,GAEhD,YAFgD,IAAAA,IAAAA,EAAA,IAEzB,KAAnBD,EACKE,EAAAA,KAAKhR,KAAKiR,wBAAwBF,IAElCC,EAAAA,KAAKhR,KAAKkR,gCAIPnD,EAAA3L,UAAA6O,wBAAd,SAAsCF,qHAEpChN,QAAQC,IAAI,gCACRmN,EAAa,KACbC,EAAQ,oBAS+B,6BALrCC,OAAc,EAEdC,EAAmBtR,KAAKiO,WAAWS,OAAO,uBAC1C6C,EAAavR,KAAKiO,WAAWS,OAAO,4BAEC,CAAA,EAAMtF,QAAQoI,IAAI,CACzDxR,KAAKgO,WAAWgB,SAASuC,GAAYE,YACrCzR,KAAKgO,WAAWgB,SAASsC,GAAkBG,sBAO7C,GATAC,EAAAlG,EAAAxB,WAAA,EAAA,CAAA2H,EAAAlH,OAAA,IAAC4G,EAAAK,EAAA,GAAgBE,EAAAF,EAAA,GAKjB3N,QAAQC,IAAI,uBAAwB4N,GACpC7N,QAAQC,IAAI,iBAAkBqN,IAG3BA,EAAeQ,OAAe,OAG/B,KAAM,uCAAuCR,EAS/C,GAXES,EAAWT,EAAeU,KAAKpP,OAAM,SAACC,GAAK,MAAe,KAAfA,EAAEoP,YAAkB,GAAGC,SAKhEC,EAAgB,UAEjBlS,KAAKoO,oBACN8D,EAAgBlS,KAAKoO,kBAAkB+D,kBAAkBpB,KAGxDa,EAAqBC,OAAe,OAgBrC,KAAM,mDAAmDD,SAfrDQ,EAAW,QACE,WAAdrB,GAAyC,cAAdA,IAC5BqB,EAAW,QAEE,CAAC,OAAO,OACdxC,QAAO,SAAChN,OACXyP,EAAUT,EAAqBG,KAAKpP,OAAM,SAAC2P,GAAM,OAAAA,EAAGL,UAAYH,GAAYQ,EAAGC,UAAYH,GAAYE,EAAGE,UAAY5P,IAAG,GAC7HmB,QAAQC,IAAI,WAAWqO,GACvBjB,EAAM7F,KAAK,CACTgB,MAAO,QAAQ3J,EACf6P,sBAA2C,GAArBJ,EAAQK,SAAiBL,EAAQM,KAAON,EAAQK,SACtEE,uBAAwBP,EAAQQ,WAOtC1B,EAAa,CACXe,cAAgBA,EAChBY,MAAQ1B,kCAIVpR,KAAKmO,aAAa4E,YAAY,IAAIC,EAAAA,SAAS,SAAS,gCAAkCC,EAAMC,uBAI9F,OADAnP,QAAQC,IAAI,sCAAsCmN,GAClD,CAAA,EAAOA,SAIKpD,EAAA3L,UAAA8O,4BAAd,6IAiBMC,EAAa,oBAOwB,6BAHrCI,EAAavR,KAAKiO,WAAWS,OAAO,4BACpCyE,EAAsBnT,KAAKiO,WAAWS,OAAO,uBAER,CAAA,EAAMtF,QAAQoI,IAAI,CACzDxR,KAAKgO,WAAWgB,SAASuC,GAAYE,YACrCzR,KAAKgO,WAAWgB,SAASmE,GAAqB1B,sBAKhD,GAPAC,EAAAlG,EAAAxB,WAAA,EAAA,CAAA2H,EAAAlH,OAAA,IAAC4G,EAAAK,EAAA,GAAgB0B,EAAA1B,EAAA,GAIjB3N,QAAQC,IAAI,iBAAiBqN,GAC7BtN,QAAQC,IAAI,uBAAuBoP,IAEhC/B,EAAeQ,OAAe,OAU/B,KAAM,uCAAuCR,EAG/C,GAZMgC,EAAahC,EAAeU,KAAKpP,OAAM,SAACC,GAAK,MAAe,KAAfA,EAAEoP,YAAkB,GACrEC,EAAWoB,EAAWpB,SACtBqB,EAAwBD,EAAWE,uBACnCC,EAA0BH,EAAWG,wBACrCC,EAAuBJ,EAAWI,qBAClCC,EAA2BL,EAAWK,yBACtCC,EAAuBN,EAAWM,qBAClCC,EAAyBP,EAAWO,wBAKnCR,EAAqBvB,OAAe,OAqBrC,KAAM,uDAAuDuB,SAnBzDS,EAAsBT,EAAqBrB,KAAKpP,OAAM,SAACC,GAAK,OAAAA,EAAEqP,UAAYA,GAA0B,OAAdrP,EAAE2P,UAAmC,UAAd3P,EAAE4P,WAAsB,IAGrHsB,KAAQD,EAAoBC,OAAS,EAAK,EAAID,EAAoBC,KACtFD,EAAoBE,SAAYF,EAAoBE,WAAa,EAAK,EAAIF,EAAoBE,SAC9FF,EAAoBG,KAAQH,EAAoBG,OAAS,EAAK,EAAIH,EAAoBG,KACtFH,EAAoBI,OAAUJ,EAAoBI,SAAW,EAAK,EAAIJ,EAAoBI,OAC1FJ,EAAoBK,QAAWL,EAAoBK,UAAY,EAAK,EAAIL,EAAoBK,QAE5FC,EAAmBN,EAAoBC,KAAOL,EACtBI,EAAoBE,SAAWL,EAC/BG,EAAoBG,KAAOL,EAC3BE,EAAoBI,OAASL,EAC7BC,EAAoBK,QAAUV,EAGtDZ,EAAyBQ,EAAqBrB,KAAKpP,OAAM,SAACC,GAAK,OAAAA,EAAEqP,UAAYA,GAA0B,SAAdrP,EAAE2P,UAAqC,UAAd3P,EAAE4P,WAAsB,GAAG4B,KAC7I3B,EAAuBW,EAAqBrB,KAAKpP,OAAM,SAACC,GAAK,OAAAA,EAAEqP,UAAYA,GAA0B,SAAdrP,EAAE2P,UAAqC,QAAd3P,EAAE4P,WAAoB,GAAG4B,KAI3IjD,EAAa,CACXgD,iBAAkBA,EAClBb,sBAAuBA,EACvBb,qBAAsBA,EACtBG,uBAAwBA,kCAG1B5S,KAAKmO,aAAa4E,YAAY,IAAIC,EAAAA,SAAS,SAAS,oCAAsCqB,EAAMnB,uBAGhG,OADAnP,QAAQC,IAAI,0CAA0CmN,EAAWmD,KAAKC,UAAUpD,IAChF,CAAA,EAAOA,SAEFpD,EAAA3L,UAAAoS,aAAP,WAEE,MAAO,WAGFzG,EAAA3L,UAAAqS,oBAAP,SAA2BrI,EAAkBsI,EAAY5R,GAAzD,IAAA0L,EAAAxO,KACE,OAAO6O,EAAAA,WAAWC,OAAM,SAAEC,GACxBhL,QAAQC,IAAI,6BAA6BoI,EAAUsI,EAAI5R,OACnD6R,EAA0CnG,EAAKP,WAAWS,OAAO,uBACrEiG,EAAgBvI,UAAYA,EAC5BuI,EAAgBD,IAAMA,EACtBC,EAAgB7R,IAAMA,EACtB0L,EAAKR,WAAWgB,SAAS2F,GAAiBlD,YAAY1H,KAAI,SAAC6K,GACzD7Q,QAAQC,IAAI,2BAA2B4Q,GACvC7F,EAASrF,KAAKkL,EAAa,QAC3B7F,EAASG,oCArRhB2F,EAAAA,WAAU5M,KAAA,CAAC,CACV6M,WAAY,oDAXLC,EAAAA,mBAAa9G,EAAAA,kBAAkF+G,EAAAA,iBADjEC,EAAAA,gDAsBlC3M,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMH,KAAA,CAACO,EAAAA,oDACnBF,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMH,KAAA,CAAC4F,yPCvBxBqH,EAAA,WA6DE,SAAAA,EACsD9G,EAC5C+G,GAD4CnV,KAAAoO,kBAAAA,EAC5CpO,KAAAmV,iBAAAA,EAhDHnV,KAAAoV,aAAyC,GAGzCpV,KAAAiB,SAAW,IAAIC,EAAAA,SACflB,KAAAqV,WAAqB,GACrBrV,KAAAsV,cAAwB,GACxBtV,KAAAoB,SAAW,EACXpB,KAAAuV,UAAiB,KA6BdvV,KAAAwV,YAAc,IAAI1T,EAAAA,aAClB9B,KAAAyV,gBAAkB,IAAI3T,EAAAA,aACtB9B,KAAA0V,aAAe,IAAI5T,EAAAA,aACnB9B,KAAA2V,uBAAyB,IAAI7T,EAAAA,aAYnC9B,KAAK4V,OA+BX,OAzEE1T,OAAAC,eACI+S,EAAA9S,UAAA,cAAW,KAMf,WACE,OAAOpC,KAAKoV,kBARd,SACgB1F,GAEd1P,KAAKoV,aAAe1F,EAEpB3L,QAAQC,IAAI,mBAAoBhE,KAAKoV,+CAMvClT,OAAAC,eACI+S,EAAA9S,UAAA,YAAS,KADb,WAEE,OAAOpC,KAAK6V,gBAEd,SAAcC,GAAd,IAAAtH,EAAAxO,KACEA,KAAK6V,WAAaC,EAEf9V,KAAKoO,mBACNpO,KAAKoO,kBAAkB2H,uBAAuBD,GAAW3P,UAAS,SAAC8I,GACjET,EAAK6G,WAAapG,EAAK+G,OACvBxH,EAAK8G,cAAgBrG,EAAKgH,4CAYhCf,EAAA9S,UAAAa,eAAA,SAAeC,GACblD,KAAKoB,SAAW8B,GAWlBgS,EAAA9S,UAAAwD,SAAA,WACE5F,KAAK6F,YAAcC,OAAOC,YAIpBmP,EAAA9S,UAAAwT,KAAR,WACE5V,KAAKuV,UAAYvV,KAAKmV,iBAAiBX,gBAGzCU,EAAA9S,UAAA8T,cAAA,WACElW,KAAKwV,YAAY5Q,QAEnBsQ,EAAA9S,UAAA+T,kBAAA,SAAkB/G,GAChBpP,KAAKyV,gBAAgB7Q,KAAKwK,IAG5B8F,EAAA9S,UAAAgU,yBAAA,SAAyBlT,GACvBlD,KAAK2V,uBAAuB/Q,KAAK1B,IAInCgS,EAAA9S,UAAAiU,eAAA,SAAenD,GACblT,KAAK0V,aAAa9Q,KAAKsO,wBAlF1BlL,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,uBACVC,SAAA,68HAmDGG,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMH,KAAA,CAAC4F,YA7DfE,0CAuBNnF,EAAAA,yBAWAA,EAAAA,2BAgBAC,EAAAA,gCACAA,EAAAA,6BACAA,EAAAA,uCACAA,EAAAA,UA2CHqM,EAjGA,GCAAoB,EAAA,WAgBE,SAAAA,IARStW,KAAAuW,QAAS,EACTvW,KAAAwW,UAAW,EACXxW,KAAAyW,eAAgB,EAChBzW,KAAA0W,SAAW,OAGpB1W,KAAA2W,QAAU,WAyBZ,OApBEL,EAAAlU,UAAAwD,SAAA,WACE5F,KAAK2W,QAAU,OAAO3W,KAAK0W,SAC3B1W,KAAK4W,iBAGCN,EAAAlU,UAAAwU,cAAR,WACsB,QAAjB5W,KAAK8M,WACN9M,KAAKwW,UAAW,EAEQ,WAAjBxW,KAAK8M,WACZ9M,KAAKwW,UAAW,EACTxW,KAAK8M,YAGhBwJ,EAAAlU,UAAAyU,QAAA,SAAQ3T,yBA/BT8E,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4BACVC,SAAA,muMAICS,EAAAA,wBACAA,EAAAA,6BACAA,EAAAA,wBACAA,EAAAA,0BACAA,EAAAA,SA2BH0N,EAvCA,gBCoEE,SAAAQ,EACUC,EACA5B,EACA6B,EACAC,EACAC,EACApX,EACAqX,EACAC,EACAC,EACAC,EACqB1X,GAVrBI,KAAA+W,cAAAA,EACA/W,KAAAmV,iBAAAA,EACAnV,KAAAgX,gBAAAA,EACAhX,KAAAiX,gBAAAA,EACAjX,KAAAkX,eAAAA,EACAlX,KAAAF,iBAAAA,EACAE,KAAAmX,mBAAAA,EACAnX,KAAAoX,SAAAA,EACApX,KAAAqX,gBAAAA,EACArX,KAAAsX,gBAAAA,EACqBtX,KAAAJ,WAAAA,EA/DxBI,KAAAuX,UAAY,GACZvX,KAAAwX,iBAAkB,EAClBxX,KAAAyX,iBAAkB,EAClBzX,KAAA0X,eAAgB,EAChB1X,KAAA2X,mBAAoB,EAEpB3X,KAAA4X,qBAAgD,GAChD5X,KAAAqC,kBAAgD,GAChDrC,KAAA6X,uBAAqD,GACrD7X,KAAA8X,aAAwC,GAGxC9X,KAAAiB,SAAqB,IAAIC,EAAAA,SACzBlB,KAAA+X,OAAe,IAAIxW,KAEnBvB,KAAAgY,wBAAoD,GACpDhY,KAAAiY,kBAA8C,GAC9CjY,KAAAkY,uBAAiC,EACjClY,KAAAmY,uBAAiC,EAKjCnY,KAAAoY,iBAAmB,GAEnBpY,KAAAqY,gBAAkB,IAAIC,EAAAA,SAGtBtY,KAAAuY,gBAAiB,EACjBvY,KAAAwY,kBAAmB,EAGnBxY,KAAAyY,sBAAgC,EAChCzY,KAAA0Y,cAAwB,EACxB1Y,KAAA2Y,oBAA8B,EAC9B3Y,KAAAI,aAAoC,IAAIC,IACxCL,KAAA4Y,UAA6C,IAAIvY,IAEjDL,KAAA6Y,aAAuB,EAEvB7Y,KAAA8Y,iBAAuC,GACvC9Y,KAAA+Y,cAAoC,GACnC/Y,KAAAgZ,aAA8B,CAAC,YAAa,WAC5ChZ,KAAAiZ,aAA8B,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACzEjZ,KAAAkZ,WAA4B,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC3IlZ,KAAAmZ,WAAqB,cAGtBnZ,KAAAoZ,kBAAyC,IAAI/Y,IAC7CL,KAAAqZ,iBAAwC,GACxCrZ,KAAAsZ,mBAA6B,GAiBlCtZ,KAAKuZ,mBAAqBvZ,KAAKJ,WAAWI,KAAKJ,WAAWc,KAAKC,UAAUC,oBAAoB4Y,KAC7FxZ,KAAKS,mBAAqBT,KAAKJ,WAAWI,KAAKJ,WAAWc,KAAKC,UAAUC,oBAAoBC,KAC7Fb,KAAKyZ,mBAAqBzZ,KAAKJ,WAAWI,KAAKJ,WAAWc,KAAKC,UAAU+Y,oBAAoBF,KAC7FxZ,KAAK2Z,mBAAqB3Z,KAAKJ,WAAWI,KAAKJ,WAAWc,KAAKC,UAAU+Y,oBAAoB7Y,KAiUjG,OA9TEiW,EAAA1U,UAAAwD,SAAA,WAAA,IAAA4I,EAAAxO,KAGEA,KAAKqY,gBAAgBuB,SAAW,EAChC5Z,KAAK8Y,iBAAmB9Y,KAAKmX,mBAAmB0C,aAAa,iBAC7D7Z,KAAK+Y,cAAgB/Y,KAAKmX,mBAAmB0C,aAAa,uBAC1D7Z,KAAK4Y,UAAUkB,IAAI,gBAAiB9Z,KAAK8Y,kBACzC9Y,KAAK4Y,UAAUkB,IAAI,sBAAuB9Z,KAAK+Y,eAC/C/Y,KAAKgZ,aAAapJ,QAAO,SAAEmK,GACzBvL,EAAKpO,aAAa0Z,IAAIC,EAASvL,EAAK1O,iBAAiBka,UAAUD,MAEjE/Z,KAAKiZ,aAAarJ,QAAO,SAAEqK,GACzBzL,EAAKpO,aAAa0Z,IAAIG,EAASzL,EAAK1O,iBAAiBka,UAAUC,MAEjEja,KAAKkZ,WAAWtJ,QAAO,SAAEjJ,GACvB6H,EAAKpO,aAAa0Z,IAAInT,EAAO6H,EAAK1O,iBAAiBka,UAAUrT,MAE/D3G,KAAKI,aAAa0Z,IAAI9Z,KAAKmZ,WAAYnZ,KAAKF,iBAAiBka,UAAUha,KAAKmZ,aAG5EnZ,KAAK6F,YAAcC,OAAOC,WAC1B/F,KAAK2X,kBAAqB3X,KAAK6F,YAAc,MAAyB7F,KAAKmV,iBAAiB7G,cAG5FtO,KAAK2B,SAAW3B,KAAK+X,OAErB/X,KAAKka,eAELla,KAAKma,kBAELna,KAAKoa,wBAAwBpa,KAAK+X,OAAQ/X,KAAKuZ,mBAAoBvZ,KAAKS,oBAGxET,KAAKmW,kBAAkB,UAAU,GAKjCnW,KAAKqa,sBAIPvD,EAAA1U,UAAAkY,SADA,SACSpX,GAEPlD,KAAK6F,YAAc3C,EAAMqX,OAAOxU,WAChC/F,KAAKkX,eAAesD,eAChBxa,KAAK6F,YAAc,OACrB7F,KAAK2X,mBAAoB,IAMfb,EAAA1U,UAAA+X,gBAAd,+FAQE,IANIM,EAAsBC,EAAAA,QAAQ1a,KAAK+X,OAAQ/X,KAAKyZ,oBAIhDkB,EAAmC,oBAGjCC,EAAa/W,EAAAA,QAAQ4W,EAAqB7O,GAE9C+O,EAAYpP,KAAK,IAAInC,QAAO,SAAEyR,EAAKC,GACjCtM,EAAKuM,uBAAuBC,EAAAA,WAAWJ,GAAaK,EAAAA,SAASL,IAAa7Q,KAAI,SAAEkF,OAC1E/J,EAAO,CACTR,SAAUkW,EACV/V,UAAWoK,EACXiM,cAAeF,EAAAA,WAAWxM,EAAKuJ,QAAQhV,UAAYiY,EAAAA,WAAWJ,GAAY7X,UAC1EoY,QAASH,EAAAA,WAAWxM,EAAKuJ,QAAQhV,WAAaiY,EAAAA,WAAWJ,GAAY7X,WAGvE8X,EAAI3V,SAZD0G,EAAI,EAAGA,EAAI5L,KAAKyZ,mBAAqBzZ,KAAK2Z,mBAAqB,EAAG/N,eAiB3ExC,QAAQoI,IAAImJ,GAAa5Q,KAAI,SAAEqR,GAC7B5M,EAAK4J,iBAAmBgD,EACxBrX,QAAQC,IAAI,0BAA2BwK,EAAK4J,6BAanCtB,EAAA1U,UAAAiZ,YAAb,SAAyBnY,sGAGvB,OADAlD,KAAKqY,gBAAgBiD,WACrB,CAAA,EAAMtb,KAAKmW,kBAAkBnW,KAAKub,uBAAuB,kBAAzD7J,EAAAjH,OACAxG,WAAU,WACRuK,EAAKgJ,iBAAkB,EACvBhJ,EAAK0I,eAAesE,4BAIX1E,EAAA1U,UAAAqZ,eAAb,SAA4BvY,sGAQ1B,OANAlD,KAAKqY,gBAAgBqD,YAMrB,CAAA,EAAM1b,KAAKsX,gBAAgBqE,2BAI3B,OAJAjK,EAAAjH,OAIA,CAAA,EAAMrB,QAAQoI,IAAI,CAACxR,KAAKmW,kBAAkBnW,KAAKub,uBAAuB,GAAQvb,KAAKma,kBAAmBna,KAAKoa,wBAAwBpa,KAAK2B,SAAU3B,KAAKuZ,mBAAoBvZ,KAAKS,qCAAhLiR,EAAAjH,OACA1G,QAAQC,IAAI,qBACZC,WAAU,WACRuK,EAAKiJ,iBAAkB,GAGtB,eAMSX,EAAA1U,UAAA8X,aAAd,uFACE,MAAA,CAAA,EAAO,IAAI9Q,QAAO,SAAEyR,EAAKC,GACvBtM,EAAK4I,SAAS8C,eAAe/T,UAAS,SAAEyV,GACtCpN,EAAKqN,mBAAqBD,EAC1B7X,QAAQ+X,KAAK,4BAA6BtN,EAAKqN,oBAC/ChB,cAMC/D,EAAA1U,UAAA+T,kBAAP,SAAyB/G,EAAS2M,GAAlC,IAAAvN,EAAAxO,KASE,OANK+b,GACH/b,KAAKqY,gBAAgBqD,YAGvB1b,KAAKub,sBAAwBnM,EAEtBpP,KAAKmV,iBAAiBhG,oBAAoBC,EAASpP,KAAKqY,iBAAiB5G,YAAY1H,KAAI,SAAEkF,GAC5F8M,EAEgB,EAAd9M,EAAKxM,SACP+L,EAAKoJ,qBAAoB7L,EAAOyC,EAAKoJ,qBAAyB3I,IAIhET,EAAKoJ,qBAAoB7L,EAAOkD,MAK/B6H,EAAA1U,UAAAgU,yBAAP,SAAgClT,GAAhC,IAAAsL,EAAAxO,KACE+D,QAAQC,IAAI,uCAAwCd,EAAO,aAAcA,EAAM8Y,UAAW,WAAY9Y,EAAMkM,SAC5GpP,KAAKmV,iBAAiBV,oBAAoBvR,EAAM8Y,UAAW,aAAc,QAAQvK,YAAY1H,KAAI,SAAC6K,GAChG7Q,QAAQC,IAAI,gCAAiC4Q,GAC7CpG,EAAK2H,kBAAkBjT,EAAMkM,SAAS,MAI7B0H,EAAA1U,UAAA6Z,yBAAb,mGAEE,MAAA,CAAA,EAAMjc,KAAKmW,kBAAkBnW,KAAKub,uBAAuB,kBAAzD7J,EAAAjH,OACAzK,KAAKkY,uBAAwB,YAGlBpB,EAAA1U,UAAA8Z,yBAAb,mGAEE,MAAA,CAAA,EAAMlc,KAAKmW,kBAAkBnW,KAAKub,uBAAuB,kBAAzD7J,EAAAjH,OACAzK,KAAKmY,uBAAwB,YAIvBrB,EAAA1U,UAAA+Z,sBAAR,SAA8BC,GAE5B,OAAOpc,KAAKiX,gBAAgBoF,0BAA0BD,IAGhDtF,EAAA1U,UAAAka,oBAAR,SAA4BF,GAC1B,OAAOpc,KAAKiX,gBAAgBsF,wBAAwBH,IAGxCtF,EAAA1U,UAAAgY,wBAAd,SAAsCQ,EAAYpB,EAAM3Y,+EAEtD,MAAA,CAAA,EAAOb,KAAKiX,gBAAgBmD,wBAAwBQ,EAAYpB,EAAM3Y,GAAM4Q,YAAY1H,KAAI,SAAEkF,GAC5FT,EAAKsJ,aAAe7I,UAIV6H,EAAA1U,UAAA2Y,uBAAd,SAAqCyB,EAAW5Y,oEAC9C,MAAA,CAAA,EAAO5D,KAAKgX,gBAAgByF,qBAAqBD,EAAW5Y,EAAS,IAAI6N,kBAIpEqF,EAAA1U,UAAAsa,cAAP,WACE1c,KAAK2X,mBAAoB,GAGpBb,EAAA1U,UAAAua,eAAP,SAAsBzJ,GAAtB,IAAA1E,EAAAxO,KAGE+D,QAAQC,IAAI,kBAAmBkP,OAC3BkJ,EAAWlJ,EAAQ/G,SACD,UAAlB+G,EAAQxG,QACV1M,KAAKmV,iBAAiB5G,oBAAoB2E,EAAQ/G,SAAU,WAAWhG,UAAS,SAAC8I,MAIxD,cAAvBiE,EAAQ5G,YACVtM,KAAKmc,sBAAsBC,GAAUjW,UAAS,SAAE8I,GAC9CT,EAAKwJ,wBAA0B/I,EAC/BT,EAAK0J,sBAAsC,EAAdjJ,EAAKxM,SAIN,YAAvByQ,EAAQ5G,aACftM,KAAKsc,oBAAoBF,GAAUjW,UAAS,SAAE8I,GAC5CT,EAAKyJ,kBAAoBhJ,EACzBT,EAAK2J,sBAAsC,EAAdlJ,EAAKxM,SAItCzC,KAAKkX,eAAesE,iBAIf1E,EAAA1U,UAAAwa,oBAAP,SAA2B1Z,GAEzBa,QAAQC,IAAI,gBAAiBd,GAC7BlD,KAAK6c,qBAAuB3Z,EAAM2B,UAAUsH,SAC5CnM,KAAK2B,SAAW,IAAIJ,KAAK2B,EAAMwB,UAC/B1E,KAAKqC,kBAAoBrC,KAAKoY,iBAAiBzV,OAAM,SAACC,GAAK,OAAAA,EAAE8B,UAAYxB,EAAMwB,WAAU,GAAGG,UAE5Fd,QAAQC,IAAI,aAAchE,KAAK2B,UAC/B3B,KAAK8c,wBAAwB9c,KAAK6c,uBAI5B/F,EAAA1U,UAAA0a,wBAAR,SAAgC3Q,GAAhC,IAAAqC,EAAAxO,KACEA,KAAKgX,gBAAgB+F,uBAAuB5Q,GAAUhG,UAAS,SAAC8I,GAE9DlL,QAAQC,IAAI,yBAA0BiL,GACtCT,EAAKwO,oBAAsB/N,EAC3BT,EAAK8K,mBAAqB9K,EAAK4K,kBAAkB6D,IAAIzO,EAAKwO,oBAAoBE,kBAC9E1O,EAAKwO,oBAAoBG,gBAAkB3O,EAAK2I,mBAAmBiG,iBAAiB,gBAAiB5O,EAAKwO,oBAAoBK,UAC9H7O,EAAKwO,oBAAoBM,cAAgB9O,EAAK2I,mBAAmBiG,iBAAiB,sBAAuB5O,EAAKwO,oBAAoBO,QAClI/O,EAAKwO,oBAAoBQ,cAAgBhP,EAAK2I,mBAAmBiG,iBAAiB,sBAAuB5O,EAAKwO,oBAAoBS,QAClIjP,EAAK+J,gBAAiB,EACtB/J,EAAK0I,eAAesE,mBAKjB1E,EAAA1U,UAAAsb,UAAP,WACE1d,KAAK0Y,cAAe,GAGf5B,EAAA1U,UAAAub,UAAP,WACE3d,KAAKwY,kBAAmB,GAGnB1B,EAAA1U,UAAAwb,qBAAP,WAAA,IAAApP,EAAAxO,KAEEA,KAAKgX,gBAAgB6G,oBAAoB7d,KAAK6c,sBAAsB1W,UAAS,SAAC8I,GACxEA,EAAKvC,SACP8B,EAAK+J,gBAAiB,EACtB/J,EAAKiK,sBAAuB,EAE5BjK,EAAK4J,iBAAiBxI,QAAO,SAAC1K,GAC5BA,EAAKL,UAAYK,EAAKL,UAAUlC,OAAM,SAACC,GAAK,OAAAA,EAAEuJ,UAAYqC,EAAKqO,yBAGjErO,EAAK4J,iBAAgBrM,EAAOyC,EAAK4J,sBAMhCtB,EAAA1U,UAAA0b,oBAAP,SAA2BlJ,OAErBrM,EAAOqM,EAAKrM,KACZ0G,EAAO2F,EAAK3F,KACH,SAAT1G,IACFvI,KAAK8c,wBAAwB7N,EAAKa,UAClC9P,KAAKma,kBACLna,KAAK2Y,oBAAqB,EAC1B3Y,KAAK0Y,cAAe,GAEtB1Y,KAAK6Y,aAAc,GAGd/B,EAAA1U,UAAA2b,uBAAP,WACE/d,KAAK6Y,aAAc,GAGb/B,EAAA1U,UAAAiY,mBAAR,WAAA,IAAA7L,EAAAxO,KACMqP,EAAW,IAAIiJ,EAAAA,SACnBjJ,EAASuK,UAAY,MACjBoE,EAAiB,IAAIC,EAAAA,uBACzBje,KAAKiX,gBAAgBiH,gBAAgBF,EAAgB3O,GAAUlJ,UAAS,SAAE8I,WACxElL,QAAQC,IAAI,OAAQiL,OAChBkP,EAAa,OACjB,IAAqB,IAAAC,ENvS3B,SAAAC,EAIyB5S,GACrB,IAAIC,EAAsB,mBAAXX,QAAyBU,EAAEV,OAAOC,UAAWY,EAAI,EAChE,OAAIF,EAAUA,EAAEL,KAAKI,GACd,CACH/B,KAAM,WAEF,OADI+B,GAAKG,GAAKH,EAAEhJ,SAAQgJ,OAAI,GACrB,CAAEjC,MAAOiC,GAAKA,EAAEG,KAAM9B,MAAO2B,KM6RrB6S,CAAArP,GAAIsP,EAAAH,EAAA1U,QAAA6U,EAAAzU,KAAAyU,EAAAH,EAAA1U,OAAE,CAAtB,IAAI8U,EAAQD,EAAA/U,MACfgF,EAAK4K,kBAAkBU,IAAI0E,EAASrS,SAAUqC,EAAKuI,cAAc3Q,kBAAkBoY,EAASnY,UAAWmY,EAASlY,WAChH6X,EAAW5S,KAAK,IAAIkT,EAAAA,aAAaD,EAASrS,SAAUqC,EAAKuI,cAAc3Q,kBAAkBoY,EAASnY,UAAWmY,EAASlY,iHAExHkI,EAAK6K,iBAAmB8E,yBA1Y7BnW,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,SAAA,u+fAEAuW,gBAAiBC,EAAAA,wBAAwBC,41CAPkFC,EAAAA,qBALpH9Q,SAKsD+Q,EAAAA,uBAAtDC,EAAAA,uBAN4EC,EAAAA,yBAIEvW,EAAAA,wBAAkBwW,EAAAA,0BAAsDC,EAAAA,uBAA0CC,EAAAA,uBAAiBC,EAAAA,mDA2ErNhX,EAAAA,OAAMH,KAAA,CAACI,EAAAA,oDAmDTgX,EAAAA,aAAYpX,KAAA,CAAC,gBAAiB,CAAC,cAqRlC6O,KC/YAwI,EAAA,WAcE,SAAAA,EACUlI,GAAApX,KAAAoX,SAAAA,EARHpX,KAAAuf,YAAcC,EAAAA,WAAWC,MAEzBzf,KAAA0f,KAAe,KACf1f,KAAAiB,SAAW,IAAIC,EAAAA,SACflB,KAAAoB,SAAmB,EAMxBpB,KAAK4V,OACL7R,QAAQ4B,MAAM,sBA0DlB,OAvDE2Z,EAAAld,UAAAwD,SAAA,aAGc0Z,EAAAld,UAAAwT,KAAd,6GACkB,MAAA,CAAA,EAAM5V,KAAKoX,SAAS8C,eAAeyF,KAAKC,EAAAA,KAAK,IAAInO,2BAA7DqE,EAAYpE,EAAAjH,OAEhB1G,QAAQ4B,MAAM,yBAA0BmQ,GAEpC+J,EAAW/J,EAAUgK,WAAWhK,EAAUgK,WAAWrd,OAAS,GAElEsB,QAAQ4B,MAAM,uBAAwBka,GAElCE,EAAY/f,KAAKggB,4BAA4BH,GAEjD9b,QAAQ4B,MAAM,6BAA8Boa,GAE5C/f,KAAKigB,cAAcF,aAGrBT,EAAAld,UAAAa,eAAA,SAAeid,GACblgB,KAAKoB,SAAW8e,GAGVZ,EAAAld,UAAA6d,cAAR,SAAsBP,GACpB,OAAOA,GACL,KAAKS,EAAAA,KAAKC,MACRpgB,KAAK0f,KAAO,KACZ,MACF,KAAKS,EAAAA,KAAKE,YACRrgB,KAAK0f,KAAO,SACZ,MACF,KAAKS,EAAAA,KAAKG,SACV,KAAKH,EAAAA,KAAKI,IACRvgB,KAAK0f,KAAO,QAMVJ,EAAAld,UAAA4d,4BAAR,SAAoCH,GAElC,OAAQA,GACN,IAAK,KACH,OAAOM,EAAAA,KAAKC,MACd,IAAK,KACH,OAAOD,EAAAA,KAAKE,YACd,IAAK,UACH,OAAOF,EAAAA,KAAKG,SACd,IAAK,aACH,OAAOH,EAAAA,KAAKI,0BAtEnBvY,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4BACVC,SAAA,8sDAT2C+W,EAAAA,mBAmF7CI,EA5EA,gBCkBE,SAAAkB,EACUrL,EACAiC,EACAjJ,EACAsS,EACAC,GAJA1gB,KAAAmV,iBAAAA,EACAnV,KAAAoX,SAAAA,EACApX,KAAAmO,aAAAA,EACAnO,KAAAygB,OAAAA,EACAzgB,KAAA0gB,gBAAAA,EAlBH1gB,KAAA2gB,yBAA0C,GAC1C3gB,KAAAiP,KAAY,KACZjP,KAAA4gB,kBAA4B,EAE5B5gB,KAAAiB,SAAW,IAAIC,EAAAA,SACflB,KAAA6F,YAAsB,KAe3B7F,KAAK4V,OAmIT,OAhIE4K,EAAApe,UAAAwD,SAAA,WACE5F,KAAK6F,YAAcC,OAAOC,YAEdya,EAAApe,UAAAwT,KAAd,kHAEoB,6BAAA,CAAA,EAAM5V,KAAKoX,SAAS8C,eAAeyF,KAAKC,EAAAA,KAAK,IAAInO,oBAQrD,OARIE,EAAAlH,OAEhBzK,KAAKoX,SAAS8C,eAAe/T,UAAS,SAAEyV,GACtC7X,QAAQC,IAAI,8BAA+B4X,GACvCA,IACFpN,EAAKqS,SAAWjF,EAAKkE,WAAW,IAClC/b,QAAQC,IAAI,kBAAmBwK,EAAKqS,YAE1B,CAAA,GAAZnP,EAAA1R,MAAuBmV,iBAAiBtE,mBAAmB,IAAK7Q,KAAK6gB,UAAUpP,2BAA/EC,EAAKzC,KAAO0C,EAAAlH,OACK,MAAbzK,KAAKiP,OAUPjP,KAAK4gB,kBAAmB,EACxB5gB,KAAKkS,cAAgBlS,KAAKiP,KAAKiD,cAE/BlS,KAAK8gB,2BAA6B,IAAIC,MACtC/gB,KAAKghB,8BAAgC,IAAID,MAEzChd,QAAQC,IAAI,sBAAuBhE,KAAKkS,eACxClS,KAAKiP,KAAK6D,MAAMlD,QAAO,SAAE9M,EAAKme,OAExBC,EAAsB1S,EAAK2S,QAAQre,EAA4B,uBAAGA,EAA0B,sBAChGA,EAAyB,oBAAI0L,EAAK4S,qBAAqBF,EAAqB,OACxEG,EAAK7S,EAAK8S,cAAcxe,EAAyB,qBAEjDye,EAAmB/S,EAAKgT,gBAAgB1e,EAA4B,wBACpE2e,EAAqBjT,EAAKgT,gBAAgB1e,EAA0B,sBAIpE4e,EAAMlT,EAAKmT,oBAAoBJ,EAAkBE,EAAoB,IAAK,KAC9EjT,EAAKsS,2BAA2BvV,KAAK8V,GACrC7S,EAAKwS,8BAA8BzV,KAAKmW,qCAK5C1hB,KAAKmO,aAAa4E,YAAY,IAAIC,EAAAA,SAAS,SAAU,sCAAwCC,EAAMC,uCAI/FsN,EAAApe,UAAA+e,QAAR,SAAgBS,EAAQC,GACtB,OAAU,GAAND,GAAYE,EAAAA,YAAYC,SAASH,KAC3B,GAANC,GAAYC,EAAAA,YAAYC,SAASF,GAC9BD,EAAIC,GAFsC,GAK3CrB,EAAApe,UAAAkf,cAAR,SAAsBM,GACpB,OAAU,GAANA,GAAYE,EAAAA,YAAYC,SAASH,IACzB,IAAJA,GAASI,WAD+B,MAI1CxB,EAAApe,UAAA6f,iBAAR,SAAyBL,GACvB,OAAU,GAANA,GAAYE,EAAAA,YAAYC,SAASH,GAC9B,EAAII,WADqC,KAI1CxB,EAAApe,UAAAof,gBAAR,SAAwBU,OAClBC,EAAUC,OAAOF,GAErB,OAAGC,GAAWE,IACL,EAEDF,IAAY,EACX,EAEU,GAAXA,EACC,EAGAA,GAIH3B,EAAApe,UAAAuf,oBAAR,SAA4BJ,EAAyBE,EAA2Ba,EAAkBC,GAEhG,GAAuB,GAApBhB,GAA+C,GAAtBE,EAC1B,MAAO,QAGLe,EAAMC,KAAKC,MAAOnB,EAAmBE,EAAsB,KAAOc,EACtE,OAAeD,GAAPE,EAAoBF,EAAUN,WAAaQ,EAAIR,YAIjDxB,EAAApe,UAAAgf,qBAAR,SAA6BuB,EAAaC,GACxC,OAAc,IAAVA,EACKH,KAAKC,MAAMC,GACH,EAARC,EACAH,KAAKC,MAAMC,EAAMF,KAAKI,IAAI,GAAID,IAAWH,KAAKI,IAAI,GAAID,GAGtDD,GAKJnC,EAAApe,UAAA0gB,sBAAP,SAA6BH,GAE3B,GAAIA,IAAQ,IAAMb,EAAAA,YAAYC,SAASY,GAAM,MAAO,KAKpD,QAHII,EAAYJ,EAAIX,WAChBgB,EAAU,iBAEPA,EAAQC,KAAKF,IAClBA,EAAYA,EAAUG,QAAQF,EAAS,SAEzC,OAAOD,GAGFvC,EAAApe,UAAA+gB,aAAP,eACMC,EAAMC,EAAAA,IAAIC,QACdtjB,KAAK0gB,gBAAgB6C,wBAAwBH,GAC7CpjB,KAAKygB,OAAO+C,SAAS,iCA3JxBxb,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iCACVC,SAAA,u7KALO4F,SADUmR,EAAAA,uBAFSjK,EAAAA,oBAE0CwO,EAAAA,iBAE7DC,EAAAA,mBAgKTlD,kBCrIE,SAAAmD,EACUxO,EACAhH,EAEAsS,EACAC,GAJA1gB,KAAAmV,iBAAAA,EACAnV,KAAAmO,aAAAA,EAEAnO,KAAAygB,OAAAA,EACAzgB,KAAA0gB,gBAAAA,EAtBH1gB,KAAAiP,KAAY,KACZjP,KAAAiB,SAAW,IAAIC,EAAAA,SACflB,KAAA6F,YAAsB,KAOtB7F,KAAA4jB,0BAAoC,KACpC5jB,KAAA6jB,6BAAuC,IAEvC7jB,KAAA8jB,+BAAyC,KACzC9jB,KAAA+jB,8BAAwC,IACxC/jB,KAAAgkB,2BAAqC,KACrChkB,KAAAikB,wBAAkC,KASvCjkB,KAAK4V,OAwKT,OArKE+N,EAAAvhB,UAAA8hB,WAAA,WAEE,OAAgB,KADJpe,OAAOC,YAIrB4d,EAAAvhB,UAAAwD,SAAA,WACE5F,KAAK6F,YAAcC,OAAOC,WAC1B/F,KAAKkkB,cAIPP,EAAAvhB,UAAAkY,SADA,SACSpX,GACPlD,KAAKkkB,cAGOP,EAAAvhB,UAAAwT,KAAd,mHAEgB,6BAAA,CAAA,GAAZlE,EAAA1R,MAAuBmV,iBAAiBtE,mBAAmB,KAAKY,2BAAhEC,EAAKzC,KAAO0C,EAAAlH,OAEZ1G,QAAQ4B,MAAM,yBAA0B3F,KAAKiP,MAEzCkV,EAAcnkB,KAAKwhB,gBAAgBxhB,KAAKiP,KAAuB,kBAC/DmV,EAAcpkB,KAAKwhB,gBAAgBxhB,KAAKiP,KAA4B,uBAEpEsS,EAAmBvhB,KAAKwhB,gBAAgBxhB,KAAKiP,KAA6B,wBAC1EwS,EAAqBzhB,KAAKwhB,gBAAgBxhB,KAAKiP,KAA2B,sBAG9EjP,KAAK4jB,0BAA6B5jB,KAAKiP,KAAuB,mBAAM,EAAK,KAAOjP,KAAKiP,KAAuB,iBAC5GjP,KAAK6jB,6BAA+B7jB,KAAKqkB,qBAAqBF,EAAaC,EAAa,GAExFrgB,QAAQ4B,MAAM,WAAY3F,KAAK6jB,8BAG/B7jB,KAAKgkB,2BAA8BhkB,KAAKiP,KAA6B,yBAAM,EAAK,KAAOjP,KAAKiP,KAA6B,uBACzHjP,KAAKikB,wBAA2BjkB,KAAKiP,KAA2B,uBAAM,EAAK,KAAOjP,KAAKiP,KAA2B,qBAGlHjP,KAAK8jB,+BAAiC9jB,KAAKskB,qBAAqB/C,EAAkBE,GAClF1d,QAAQ4B,MAAM,WAAY3F,KAAK8jB,gCAG/B9jB,KAAK+jB,8BAAgC/jB,KAAK2hB,oBAAoBJ,EAAkBE,EAAoB,IAAK,KACzG1d,QAAQ4B,MAAM,WAAY3F,KAAK+jB,8DAsB/B/jB,KAAKmO,aAAa4E,YAAY,IAAIC,EAAAA,SAAS,SAAU,0CAA4CC,EAAMC,uCAKnGyQ,EAAAvhB,UAAAof,gBAAR,SAAwBU,OAClBC,EAAUC,OAAOF,GAErB,OAAGC,GAAWE,IACL,EAEDF,IAAY,EACX,EAEU,GAAXA,EACC,EAGAA,GAIHwB,EAAAvhB,UAAAiiB,qBAAR,SAA6BF,EAAoBC,EAAoB9B,GAEnE,GAAkB,GAAf6B,GAAmC,GAAfC,EACrB,MAAO,QAGL5B,EAAO2B,EAAcC,EACzB,OAAU9B,GAAPE,EACMF,EAAUN,WAGVQ,EAAIR,YAIP2B,EAAAvhB,UAAAkiB,qBAAR,SAA6B/C,EAAyBE,GACpD,GAAuB,GAApBF,GAA+C,GAAtBE,EAC1B,MAAO,QAGLe,EAAOjB,EAAmBE,EAAsB,IAEpD,OADiBgB,KAAKC,MAAMF,GACVR,YAGZ2B,EAAAvhB,UAAAuf,oBAAR,SAA4BJ,EAAyBE,EAA2Ba,EAAkBC,GAEhG,GAAuB,GAApBhB,GAA+C,GAAtBE,EAC1B,MAAO,QAGLe,EAAMC,KAAKC,MAAOnB,EAAmBE,EAAsB,KAAOc,EACtE,OAAeD,GAAPE,EAAoBF,EAAUN,WAAaQ,EAAIR,YAKjD2B,EAAAvhB,UAAA+e,QAAR,SAAgBoD,EAAUC,GACxB,OAAID,GAAO,IAAMzC,EAAAA,YAAYC,SAASwC,GAAa,EAC/CC,GAAO,IAAM1C,EAAAA,YAAYC,SAASyC,GAAa,EAE3CD,EAAMC,GAIRb,EAAAvhB,UAAAgf,qBAAR,SAA6BuB,EAAaC,GAExC,OAAc,IAAVA,EACKH,KAAKC,MAAMC,GACH,EAARC,EACAH,KAAKC,MAAMC,EAAMF,KAAKI,IAAI,GAAID,IAAWH,KAAKI,IAAI,GAAID,GAGtDD,GAMJgB,EAAAvhB,UAAA0gB,sBAAP,SAA6BH,GAE3B,GAAIA,IAAQ,IAAMb,EAAAA,YAAYC,SAASY,GAAM,MAAO,KAKpD,QAHII,EAAYJ,EAAIX,WAChBgB,EAAU,iBAEPA,EAAQC,KAAKF,IAClBA,EAAYA,EAAUG,QAAQF,EAAS,SAEzC,OAAOD,GAGFY,EAAAvhB,UAAA+gB,aAAP,eACMC,EAAMC,EAAAA,IAAIoB,YACdzkB,KAAK0gB,gBAAgB6C,wBAAwBH,GAC7CpjB,KAAKygB,OAAO+C,SAAS,iCArMxBxb,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,qCACVC,SAAA,i3NAPO4F,SADiCkH,EAAAA,oBAEAwO,EAAAA,iBAEjCC,EAAAA,qDA+CNrE,EAAAA,aAAYpX,KAAA,CAAC,gBAAiB,CAAC,cA2JlC0b,QC7MIe,OAAS,SACTC,IAAM,MACNC,YAAc,cACdC,SAAW,WACXC,SAAW,WACXC,gBAAkB,gCC2DpB,SAAAC,EACUllB,EACAsX,EACAjJ,EACA8W,EACAxE,EACAnJ,EACA4N,EAC4C9W,EACTvO,GARnCG,KAAAF,iBAAAA,EACAE,KAAAoX,SAAAA,EACApX,KAAAmO,aAAAA,EACAnO,KAAAilB,uBAAAA,EACAjlB,KAAAygB,OAAAA,EACAzgB,KAAAsX,gBAAAA,EACAtX,KAAAklB,YAAAA,EAC4CllB,KAAAoO,kBAAAA,EACTpO,KAAAH,SAAAA,EAxDtCG,KAAAmlB,QAAU,SACVnlB,KAAAkB,SAAW,IAAIA,EAAAA,SACflB,KAAAolB,UAAW,EACXplB,KAAAqlB,OAAQ,EACPrlB,KAAAoV,aAAwC,GACxCpV,KAAAoP,QAAkB,SACnBpP,KAAAslB,QAAuE,GACtEtlB,KAAAulB,eACJ,CAAC,CACD/b,MAAOgc,EAAqBd,OAC5Be,YAAazlB,KAAKkB,SAASwkB,QAC1B,CACDlc,MAAOgc,EAAqBb,IAC5Bc,YAAazlB,KAAKkB,SAASsQ,KAC1B,CACDhI,MAAOgc,EAAqBZ,YAC5Ba,YAAazlB,KAAKkB,SAASykB,oBAM7B,CACEnc,MAAOgc,EAAqBV,SAC5BW,YAAazlB,KAAKkB,SAAS0kB,UAC1B,CACDpc,MAAOgc,EAAqBT,gBAC5BU,YAAazlB,KAAKkB,SAAS2kB,kBAGxB7lB,KAAA8lB,gBAAkB,CACvBlB,YAAe,OACfE,SAAY,QAIP9kB,KAAA+lB,0BAA4B,CACjCnB,YAAe,cACfE,SAAY,YAIP9kB,KAAAgmB,cAAgB,CACrBC,SAAW,EACXC,QAAU,GAsBLlmB,KAAAyV,gBAAwC,IAAI3T,EAAAA,aAE5C9B,KAAA0V,aAA+C,IAAI5T,EAAAA,aAEnD9B,KAAA2V,uBAA4C,IAAI7T,EAAAA,aAZrD9B,KAAK4V,OAoGT,OAjGEoP,EAAA5iB,UAAAwD,SAAA,aAWA1D,OAAAC,eACI6iB,EAAA5iB,UAAA,cAAW,KA0Bf,WACE,OAAOpC,KAAKoV,kBA5Bd,SACgB1F,GACW,EAArBA,EAAYjN,QACdzC,KAAKolB,UAAW,EAChBrhB,QAAQC,IAAI,qBAGZhE,KAAKolB,UAAW,EAgBlBplB,KAAKoV,aAAe1F,EAEpB3L,QAAQC,IAAI,mBAAoBhE,KAAKoV,+CAUzB4P,EAAA5iB,UAAAwT,KAAd,2GAE6B,OAD3B7R,QAAQC,IAAI,kBACe,CAAA,EAAMhE,KAAKoX,SAAS8C,eAAeyF,KAAKC,EAAAA,KAAK,IAAInO,2BAAxEqE,EAAuBpE,EAAAjH,OAC3B1G,QAAQC,IAAI,4BAA6B8R,GACrC9V,KAAKoO,mBACH+X,EAAWnmB,KAAKoO,kBAAkBgY,gBAAgBtQ,GACtD9V,KAAKslB,QAAUtlB,KAAKulB,eAAe5iB,OAAM,SAACC,GAAK,OAA6B,EAA7BujB,EAASE,QAAQzjB,EAAE4G,UAGlExJ,KAAKslB,QAAUtlB,KAAKulB,eACtBxhB,QAAQC,IAAI,sBAAuBhE,KAAKslB,mBAGnCN,EAAA5iB,UAAAkkB,OAAP,SAAclX,GACZpP,KAAKoP,QAAUA,EACfpP,KAAKyV,gBAAgB7Q,KAAKwK,IAGrB4V,EAAA5iB,UAAAmkB,eAAP,SAAsBrT,GACpB,GAAwB,MAApBA,EAAQnG,QAAiB,CAC3BhJ,QAAQC,IAAI,UAAWkP,OACnBzG,EAAW6H,KAAKkS,MAAMtT,EAAQzG,UAElC,GADA1I,QAAQC,IAAI,WAAYyI,EAAU,yBAA0BA,GACpC,MAApByG,EAAQrG,QACV7M,KAAK0V,aAAa9Q,KAAKsO,GACvBlT,KAAKyV,gBAAgB7Q,KAAK5E,KAAKoP,SAC/BrL,QAAQC,IAAI,gBACZhE,KAAKsX,gBAAgBmP,iBAAiBC,EAAAA,iBAAiBxT,EAAQ5G,aAAcG,QACxE,GAAwB,MAApByG,EAAQrG,QAAiB,CAClC9I,QAAQC,IAAI,MAAQyI,EAASka,QAAU,eACvC3mB,KAAK0V,aAAa9Q,KAAKsO,GACvBlT,KAAKyV,gBAAgB7Q,KAAK5E,KAAKoP,aAE3BwX,EAAoC,IAAIC,EAAAA,oBAAoBpa,EAAkB,QAAGA,EAAoB,UAAGA,EAAmB,SAAGA,EAAqB,YAKvJ1I,QAAQC,IAAI,eAAgB4iB,GAC5B5mB,KAAKilB,uBAAuB6B,uBAAuBF,GACnD5mB,KAAKygB,OAAO+C,SAAS,mBAIM,MAApBtQ,EAAQnG,SACjBhJ,QAAQC,IAAI,oDA/JjBgE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAA,wpGAZiBM,EAAAA,wBAAkByW,EAAAA,uBADoBjK,EAAAA,oBAI1C8R,EAAAA,8BAHgHtD,EAAAA,iBAApDrE,EAAAA,uBAAiBD,EAAAA,mDAwEvF7W,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMH,KAAA,CAAC4F,wCACnBvF,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMH,KAAA,CAACO,EAAAA,6DASrBK,EAAAA,6BAEAA,EAAAA,uCAEAA,EAAAA,4BAGAD,EAAAA,SAsFHoc,KChLAgC,EAAA,WAeA,SAAAA,KAU+B,2BAV9BC,EAAAA,SAAQhf,KAAA,CAAC,CACRif,QAAS,CACPC,EAAAA,SACAC,EAAAA,WACAC,EAAAA,aACAC,EAAAA,mCAEFC,aAAc,CAACzQ,EAAoBnX,EAAwBuV,EAA0BoB,EAA6BgJ,EAA+BkB,EAAmCmD,EAAuCqB,GAC3NwC,QAAS,CAAC1Q,EAAoBnX,EAAwBuV,EAA0BoB,OAEnD0Q,EAzB/B,GCAAS,EAAA,WAKI,SAAAA,EAAYxR,EAAUD,GAClBhW,KAAK0nB,UAAYzR,EACjBjW,KAAK2nB,QAAU3R,EAUvB,OAPI9T,OAAAC,eAAIslB,EAAArlB,UAAA,WAAQ,KAAZ,WACI,OAAOpC,KAAK0nB,2CAGhBxlB,OAAAC,eAAIslB,EAAArlB,UAAA,SAAM,KAAV,WACI,OAAOpC,KAAK2nB,yCAEpBF,EAjBA","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, Inject, ChangeDetectorRef, ViewChildren, QueryList, AfterViewInit, Optional } from '@angular/core';\n\nimport { CalendarEventDetail, CustomerBirthday } from '@allianzSND/integration-calendar-customer';\nimport { TranslateService, Language, ConfigToken, showRuleToken, showRule, StringUtils } from '@allianzSND/core';\nimport { getYear, addDays, format } from 'date-fns';\n\n@Component({\n  selector: 'app-dashboard-list',\n  templateUrl: './dashboard-list.component.html',\n  styleUrls: ['./dashboard-list.component.scss']\n})\nexport class DashboardListComponent implements OnInit, AfterViewInit {\n\n\n  // birthdat tab tag .. if the birthday date is today, show tag \n  public isBirthdayToday = true;\n\n  // tab schedule and birthay has data or not\n  public isHasScheduleData = true;\n  public isHasBirthdayData = true;\n  // if current tab no data height need full\n  public isTabContentNoData: string;\n\n  public translateMap: Map<string, string> = new Map<string, string>();\n  public calendarEventDetail: CalendarEventDetail; //Detail\n  public _calendarEventList = [];\n  public isCalendarEventListBefore = [];\n  private _birthdayItemList: Array<CustomerBirthday> = [];\n\n  public searchBirthdayAddN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchBirthdayRange.addN;\n  public beforeTodayBirthdayItemList: Array<CustomerBirthday> = [];\n  public afterTodayBirthdayItemList: Array<CustomerBirthday> = [];\n\n  //private calendarUtils = new CalendarUtils();\n  public eventListBGColor = '#fff';\n  public showDate: string;\n  public language = new Language();\n\n  //calendar-ui config setting\n  public viewTypeIndex = 2; // 'month'\n  public tabIndex = 0;\n  private tabHeight = 0;\n  //public _viewDate = new Date(); //current date\n  private _viewDate: Date = new Date();\n  private _eventList;\n  public weekStartsOn = 1; // Monday\n  public startDate;\n  public endDate;\n  today = new Date();\n  yearVal = this.viewDate.getFullYear();\n  public todayDisplayStr: string;\n  public endDateDisplayStr: string;\n  public windowWidth;\n\n  @ViewChildren('calendarList') calendarListContents: QueryList<any>;\n\n  @Input()\n  get calendarEventList() {\n    return this._calendarEventList;\n  };\n  set calendarEventList(calendarEventList) {\n\n    this._calendarEventList = calendarEventList;\n    this.isHasScheduleData = this.judgeIsScheduleHasData();\n  }\n  @Input() public eventMonthList: Array<CalendarEventDetail>;\n\n\n  @Input()\n  get birthdayItemList() {\n    return this._birthdayItemList;\n  };\n  set birthdayItemList(birthdayItemList) {\n\n    if (birthdayItemList.length == 0) {\n      this.isHasBirthdayData = false;\n    }\n    else {\n      this.isHasBirthdayData = true;\n    }\n\n    this._birthdayItemList = birthdayItemList;\n    this.beforeTodayBirthdayItemList = [];\n    this.afterTodayBirthdayItemList = [];\n\n\n    //convert to before & after array\n    this.beforeTodayBirthdayItemList = this._sortBirthDayListByName(this._birthdayItemList.filter(x => this.itemBirthdayIsBeforeToday(x)));\n    this.afterTodayBirthdayItemList = this._sortBirthDayListByName(this._birthdayItemList.filter(x => !this.itemBirthdayIsBeforeToday(x)));\n   \n\n  }\n\n\n  @Input()\n  get viewDate() {\n    return this._viewDate;\n  }\n  set viewDate(val) {\n    if (this._viewDate.getTime() != val.getTime()) {\n      this.changeViewDate(new Date(val));\n      this.yearVal = this._viewDate.getFullYear();\n    }\n  } // end set viewDate\n\n\n  @Output() clickCalendarItem = new EventEmitter<any>();\n\n  // get tab content\n  @ViewChild('tabContent') tabContent: ElementRef;\n  changeViewDate: any;\n\n\n  constructor(\n    @Inject(ConfigToken) private APP_CONFIG: any,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n    private translateService: TranslateService,\n    private elementRef: ElementRef,\n  ) {}\n  tabChangeEvent(event) {\n\n    let _this = this;\n    let tabContentBlock = _this.elementRef.nativeElement.querySelector(\".layut-home-list-block .tab-content-block\");\n    tabContentBlock.style.opacity = 0;\n\n    this.tabHeight = this.tabContent.nativeElement.scrollHeight;\n    this.tabIndex = event;\n    this.todayDisplayStr = this.convertCalendarDateToShow(this.today);\n\n    let endDate = addDays(this.today, this.searchBirthdayAddN);\n    this.endDateDisplayStr = this.convertCalendarDateToShow(endDate);  \n    \n    console.log(\"this.tabIndex:\",this.tabIndex);\n    if(this.tabIndex===0){\n      setTimeout(()=>{\n        this.scrollToContent(0);\n        tabContentBlock.style.opacity = 1;\n      },100);\n\n    }else if(this.tabIndex===1){\n      setTimeout(()=>{\n        this.scrollToContent(1);\n        tabContentBlock.style.opacity = 1;\n      },100);\n    }\n\n\n  }\n  //tab content scroll to today top\n\n  scrollToContent(tabOpenIndex) {\n    //tab content scroll to spcifict position ( location on today top half )\n    let tabContentTarget = this.tabContent.nativeElement.querySelector('.tab-content_' + tabOpenIndex);\n    let scrollEle = tabContentTarget.querySelector('.ts-today');\n    let scrollContent = this.tabContent.nativeElement;\n    if (scrollEle !== null) {\n      // let move =  this.tabHeight + scrollEle.offsetTop - 50;\n      let move = scrollEle.offsetTop - 50;\n      console.log('this.tabHeigh',this.tabHeight);\n      console.log('scrollEle.offsetTop',scrollEle.offsetTop);\n      scrollContent.scrollTop = move;\n      //console.log('move',move);\n    }\n  }\n\n\n  @Output()\n  completeLoadEvent = new EventEmitter<boolean>();\n\n  @Output()\n  updateCalendarEventDetail = new EventEmitter<CalendarEventDetail>();\n\n  @Output()\n  clickDate = new EventEmitter<Date>();\n\n  onClickEventItem(showDate, calendarItem) {\n    this.clickCalendarItem.emit({ showDate: showDate, eventList: calendarItem });\n\n\n\n\n    //console.log(\"item: \", calendarItem);\n  }\n\n  // click month day\n  monthDayClicked(date) {\n    this.clickDate.emit(date);\n\n  }\n\n  switchMonthClicked(date) {\n    //console.log(\"in switch\");\n    this.clickDate.emit(date);\n  }\n\n\n\n  itemBirthdayIsToday(item: CustomerBirthday): boolean {\n\n    return (this.today.getMonth() + 1) == parseInt(item.birthdayMonth) && this.today.getDate() == parseInt(item.birthdayDate);\n  }\n\n\n\n  itemBirthdayIsBeforeToday(item: CustomerBirthday): boolean {\n\n    let todayDate = Date.UTC(2000, this.today.getMonth() + 1, this.today.getDate());\n    let itemDate = Date.UTC(2000, parseInt(item.birthdayMonth), parseInt(item.birthdayDate));\n\n    console.debug('compare birthday', todayDate, itemDate);\n\n    return todayDate > itemDate;\n  }\n\n\n\n\n\n  judgeIsScheduleHasData() {\n    return (this._calendarEventList.filter(x => x.eventList.length > 0).length) > 0;\n  }\n\n  ngOnInit() {\n    this.tabChangeEvent(0);\n    this.windowWidth = window.innerWidth;\n    console.log(\"this.windowWidth\",this.windowWidth);\n  }\n\n  ngAfterViewInit() {\n    this.calendarListContents.changes.subscribe(() => {\n        this.scrollToContent(0);\n    })\n  } \n\n  convertNameToShow(firstName: string, lastName: string): string {\n    if (this.showRule) {\n      return this.showRule.convertName(firstName, lastName);\n    }\n    else {\n      let firstNameStr: string = StringUtils.isNotEmpty(firstName) ? firstName : '';\n      let lastNameStr: string = StringUtils.isNotEmpty(lastName) ? (' ' + lastName) : '';\n      return firstNameStr + lastNameStr;\n    }\n  }\n\n  convertBirthdayToShow(month: string, date: string): string {\n    let combineDate = new Date(getYear(new Date()) + '/' + month + '/' + date);\n    return this._convertDateWithoutYear(combineDate);\n  }\n\n\n  convertCalendarDateToShow(date: Date): string { \n    return this._convertDateWithoutYear(date);\n  }\n\n  private _convertDateWithoutYear(date: Date) {\n    if(this.showRule) {\n      return this.showRule.convertDateWithoutYear(date);\n    }\n    else {\n      return format(date,'MM/dd');\n    }\n  }\n\n  private _sortBirthDayListByName(birthdayItemList: Array<CustomerBirthday>) {\n\n    let cloneList = birthdayItemList.map(x => x.clone());\n    cloneList.sort((item1, item2) => {\n\n      let comapareBirthdayMonth = this._comapare(item1.birthdayMonth, item2.birthdayMonth);\n      if(comapareBirthdayMonth !== 0) {\n        return comapareBirthdayMonth;\n      }\n\n      let comapareBirthdayDate = this._comapare(item1.birthdayDate, item2.birthdayDate);\n      if(comapareBirthdayDate !== 0) {\n        return comapareBirthdayDate;\n      }\n\n      let item1_name = StringUtils.isNotEmpty(item1.lastName) ? item1.lastName : '';\n      let item2_name = StringUtils.isNotEmpty(item2.lastName) ? item2.lastName : '';\n\n      if (!StringUtils.isHasChinese(item1_name) && StringUtils.isHasChinese(item2_name)) {\n        return -1;\n      }\n      else if (StringUtils.isHasChinese(item1_name) && !StringUtils.isHasChinese(item2_name)) {\n        return 1;\n      }\n      else {\n        return item1_name.localeCompare(item2_name, \"zh-Hant\");\n      }\n\n    });\n\n    return cloneList;\n  }\n\n  private _comapare(n1, n2) {\n    if(n1 < n2) {\n      return -1;\n    }\n    else if(n1 > n2) {\n      return 1;\n    }\n    else {\n      return 0;\n    }\n  }\n\n\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport class DashboardMessage {\n\n    private _clientID: string;\n    private _messageID: number;\n    private _messageCategory: string;\n    private _messageType: string;\n    private _title: string;\n    private _description: string;\n    private _argument: string;\n    private _status: string;\n    private _messageDate: string;\n    private _messageTime: string;\n    private _isPopup: string;\n    private _linkStatus: string;\n    private _isClick: string;\n\n    constructor(clientID, messageID, messageCatogory, messageType, title, description, argument, status, messageDate, messageTime, isPopup , linkStatus , isClick) {\n        \n        this._clientID = clientID;\n        this._messageID = messageID;\n        this._messageCategory = messageCatogory;\n        this._messageType = messageType;\n        this._title = title;\n        this._description = description;\n        this._argument = argument;\n        this._status = status;\n        this._messageDate = messageDate;\n        this._messageTime = messageTime;\n        this._isPopup = isPopup;\n        this._linkStatus = linkStatus;\n        this._isClick = isClick;\n    }\n\n    get clientID() {\n        return this._clientID;\n    }\n    \n    get messageID() { \n        return this._messageID; \n    }\n\n    get messageCategory() {\n        return this._messageCategory;\n    }\n\n    get messageType() {\n        return this._messageType;\n    }\n\n    get title() {\n        return this._title;\n    }\n\n    get description() {\n        return this._description;\n    }\n\n    get argument() {\n        return this._argument;\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    get messageDate() {\n        return this._messageDate;\n    }\n\n    get messageTime() {\n        return this._messageTime;\n    }\n\n    get isPopup() {\n        return this._isPopup;\n    }\n\n    get linkStatus() {\n        return this._linkStatus;\n    }\n\n    get isClick() {\n        return this._isClick;\n    }\n\n    set messageID ( messageID ) { \n        this._messageID = messageID; \n    }\n\n    set messageCategory( messageCatogory ) {\n        this._messageCategory = messageCatogory;\n    }\n\n    set messageType( messageType ) {\n        this._messageType = messageType;\n    }\n\n    set title( title ) {\n        this._title = title;\n    }\n\n    set description( description ) {\n        this._description = description;\n    }\n\n    set argument( argument ) {\n        this._argument = argument;\n    }\n\n    set status( status ) {\n        this._status = status;\n    }\n\n    set messageDate( messageDate ) {\n        this._messageDate = messageDate;\n    }\n\n    set messageTime( messageTime ) {\n        this._messageTime = messageTime;\n    }\n\n    set isPopup( isPopup ) {\n        this._isPopup = isPopup;\n    }\n\n    set linkStatus( linkStatus ) {\n        this._linkStatus = linkStatus;\n    }\n\n    set isClick( isClick ) {\n        this._isClick = isClick;\n    }\n\n\n\n\n\n    \n\n}","import { InjectionToken } from \"@angular/core\";\nimport { showDashboardRule } from \"../interface/showDashboardRule.interface\";\n\nexport const showDashboardRuleToken = new InjectionToken<showDashboardRule>('showDashboardRule');\n","import { Injectable, Optional, Inject, ErrorHandler} from '@angular/core';\nimport { APIDispatch, APIFactory, PageInfo, DashboardUpdateMessageStatusAPI,DashboardGetMessageListAPI, DateUtils, showRuleToken, showRule, APPError} from '@allianzSND/core';\nimport { Observable, of ,from } from 'rxjs';\nimport { DashboardMessage } from './model/DashboardMessage';\nimport { NullTemplateVisitor } from '@angular/compiler';\nimport { formArrayNameProvider } from '@angular/forms/src/directives/reactive_directives/form_group_name';\nimport { showDashboardRule } from '../interface';\nimport { showDashboardRuleToken } from '../injectionToken/injection-token';\nimport { ProgressPersonalData } from '@allianzSND/progress';\nimport { ChangeMessageStatusAPI } from '@allianzSND/core/lib/api/register/changeMessageStatusAPI';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  private isFirstInDashboard: boolean = true;\n  constructor(\n    private dispatcher: APIDispatch,\n    private APIFactory: APIFactory,\n    private dateUtils: DateUtils,\n    private errorHandler: ErrorHandler,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n    @Optional() @Inject(showDashboardRuleToken) private showDashboardRule: showDashboardRule,\n  ) {\n    //register api\n  }\n\n  isFirstTime(): boolean {\n    let result: boolean;\n    if (this.isFirstInDashboard) {\n      result = true;\n      this.isFirstInDashboard = false;\n    }\n    else {\n      result = false;\n    }\n\n    return result;\n  }\n\n\n  updateMessageStatus(clientID: string, status: string): Observable<any> {\n    let dashboardUpdateMessageStatusAPI: DashboardUpdateMessageStatusAPI = <DashboardUpdateMessageStatusAPI>this.APIFactory.getAPI('updateDashboardMessageStatus');\n    dashboardUpdateMessageStatusAPI.setClientID(clientID);\n    dashboardUpdateMessageStatusAPI.setStatus(status);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(dashboardUpdateMessageStatusAPI).subscribe((data) => {\n\n        console.debug('dashboard-service-updateDashboardMessageStatus', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n\n  getMessageByKeyword(keyword: string, pageInfo: PageInfo): Observable<any> {\n    let dashboardGetMessageListAPI: DashboardGetMessageListAPI = <DashboardGetMessageListAPI>this.APIFactory.getAPI('getDashboardMessageList');\n    dashboardGetMessageListAPI.setKeyword(keyword);\n    dashboardGetMessageListAPI.setPageInfo(pageInfo);\n    dashboardGetMessageListAPI.isShow = true;\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(dashboardGetMessageListAPI).subscribe((data) => {\n        console.log(\"getMessageByKeyword data:\",data);\n        let messageList = data['Body'];\n\n        if (messageList) {\n\n          let DashboardMessageList: Array<DashboardMessage> = [];\n          messageList.forEach(item => {\n\n            let dashboardMessage: DashboardMessage = new DashboardMessage(item.ClientID, item.MessageID, item.MessageCategory, item.MessageType, item.Title, item.Description, item.Arguments, item.Status, this.convertDate(new Date(item.MessageTime)), this.convertTime(new Date(item.MessageTime)),item.IsPopup , item.LinkStatus, item.IsClick );\n            DashboardMessageList.push(dashboardMessage);\n            \n          });\n\n          observer.next(DashboardMessageList);\n          observer.complete();\n        }\n\n        else {\n          observer.next(false);\n          observer.complete();\n        }\n      })\n    });\n  }\n\n\n\n  public convertDate(date: Date) {\n\n    if (date) {\n      if (this.showRule) {\n        return this.showRule.convertDate(date);\n      }\n      else {\n        return this.dateUtils.toDateString(date, 'yyyy-MM-dd');\n      }\n    } else {\n      return '- -';\n    }\n\n  }\n\n  public convertTime(date: Date) {\n    if (date) {\n      return this.dateUtils.toDateString(date, 'shortTime');\n    }\n    else {\n      return '- -';\n    }\n  }\n\n  public getPerformanceData(performanceType:string, appUseMode:string=''): Observable<any>{\n\n    if (performanceType == 'T'){\n      return from(this._getPerformanceTeamData(appUseMode));\n    }else{\n      return from(this._getPerformancePersonalData());\n    }\n  }\n\n  private async _getPerformanceTeamData(appUseMode:string){ \n\n    console.log('into _getPerformanceTeamData');\n    let returnData = null;\n    let Datas = [];\n\n    try{\n      let teamProgressMainResp;\n      let yearConfigResp;\n  \n      let teamProgressMain = this.APIFactory.getAPI(\"getTeamProgressMain\");\n      let yearConfig = this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n  \n      [yearConfigResp, teamProgressMainResp] = await Promise.all([\n        this.dispatcher.dispatch(yearConfig).toPromise(),\n        this.dispatcher.dispatch(teamProgressMain).toPromise(),\n      ]);\n  \n      console.log(\"TeamProgressMainResp\", teamProgressMainResp);\n      console.log(\"yearConfigResp\", yearConfigResp);\n  \n      let DataYear; \n      if(yearConfigResp.Header[\"status\"]){\n        DataYear = yearConfigResp.Body.filter(x => x.IsCurrent == \"Y\")[0].DataYear;\n      }else{\n        throw \"get yearConfig fail. yearConfigResp:\"+yearConfigResp;\n      }\n\n      let timeBaseTitle = \"monthly\";\n      //timeBase title\n      if(this.showDashboardRule){\n        timeBaseTitle = this.showDashboardRule.showTimeBaseTitle(appUseMode);\n      }\n\n      if(teamProgressMainResp.Header[\"status\"]){\n        let timeBase = \"Month\";\n        if(appUseMode == \"Manager\" || appUseMode == \"Supervisor\"){\n          timeBase = \"Year\";\n        }\n        let dataType = [\"FYFC\",\"ANP\"];\n        dataType.forEach(x => {\n          let dataobj = teamProgressMainResp.Body.filter(xx => xx.DataYear == DataYear && xx.TimeBase == timeBase && xx.DataType == x)[0];\n          console.log('dataobj:',dataobj);\n          Datas.push({\n            title: `Home_${x}`,\n            MonthlyProgressTotal: dataobj.Forecast == -1 ? dataobj.Goal : dataobj.Forecast,\n            MonthlyProgressCurrent: dataobj.Actual\n          });\n        });\n      }else{\n        throw \"get teamProgressMain fail. teamProgressMainResp:\"+teamProgressMainResp;\n      }\n\n      returnData = {\n        timeBaseTitle : timeBaseTitle,\n        datas : Datas\n      }\n\n    }catch (error) {\n      this.errorHandler.handleError(new APPError('F00130','_getPerformanceTeamData fail!' + error.message));\n    }\n        //TODO ZH&CAO éinterface\\\n    console.log(\"_getPerformanceTeamData returnData:\",returnData);\n    return returnData;\n\n  }\n\n  private async _getPerformancePersonalData(){\n\n    let yearConfigResp;\n    let personalProgressResp;\n\n    let DataYear; \n    let ActivitiesPoints;\n    let ActivitiesPointsTotal;\n    let MonthlyProgressTotal;\n    let MonthlyProgressCurrent;\n\n    let InforceConvertPointBase;\n    let FindConvertPointBase;\n    let ScheduleConvertPointBase;\n    let MeetConvertPointBase;\n    let SubmitConvertPointBase;\n\n    let returnData = {};\n\n    try{\n\n    let yearConfig = this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n    let getPersonalProgress = this.APIFactory.getAPI(\"getPersonalProgress\");\n\n    [yearConfigResp, personalProgressResp] = await Promise.all([\n      this.dispatcher.dispatch(yearConfig).toPromise(),\n      this.dispatcher.dispatch(getPersonalProgress).toPromise(),\n    ]);\n    console.log(\"yearConfigResp\",yearConfigResp);\n    console.log(\"personalProgressResp\",personalProgressResp);\n\n    if(yearConfigResp.Header[\"status\"]){\n      let currentObj = yearConfigResp.Body.filter(x => x.IsCurrent == \"Y\")[0];\n      DataYear = currentObj.DataYear;\n      ActivitiesPointsTotal = currentObj.ProgressDayPointsLimit;\n      InforceConvertPointBase = currentObj.InforceConvertPointBase;\n      FindConvertPointBase = currentObj.FindConvertPointBase;\n      ScheduleConvertPointBase = currentObj.ScheduleConvertPointBase;\n      MeetConvertPointBase = currentObj.MeetConvertPointBase;\n      SubmitConvertPointBase = currentObj.SubmitConvertPointBase;\n    }else{\n      throw \"get yearConfig fail. yearConfigResp:\"+yearConfigResp;\n    }\n\n    if(personalProgressResp.Header[\"status\"]){\n      //todo need to figure out ActivitiesPoints cant add -1 to sum   \n      let personalProgressObj = personalProgressResp.Body.filter(x => x.DataYear == DataYear && x.TimeBase == \"Day\" && x.DataType == \"Actual\")[0];\n\n      //dirty way\n      personalProgressObj.Find = (personalProgressObj.Find <= -1) ? 0 : personalProgressObj.Find;\n      personalProgressObj.Schedule = (personalProgressObj.Schedule <= -1) ? 0 : personalProgressObj.Schedule;\n      personalProgressObj.Meet = (personalProgressObj.Meet <= -1) ? 0 : personalProgressObj.Meet;\n      personalProgressObj.Submit = (personalProgressObj.Submit <= -1) ? 0 : personalProgressObj.Submit;\n      personalProgressObj.Inforce = (personalProgressObj.Inforce <= -1) ? 0 : personalProgressObj.Inforce;\n\n      ActivitiesPoints = personalProgressObj.Find * FindConvertPointBase \n                            + personalProgressObj.Schedule * ScheduleConvertPointBase \n                            + personalProgressObj.Meet * MeetConvertPointBase\n                            + personalProgressObj.Submit * SubmitConvertPointBase\n                            + personalProgressObj.Inforce * InforceConvertPointBase;\n      //ActivitiesPoints = (ActivitiesPoints>=ActivitiesPointsTotal)?ActivitiesPointsTotal:ActivitiesPoints;\n      \n      MonthlyProgressCurrent = personalProgressResp.Body.filter(x => x.DataYear == DataYear && x.TimeBase == \"Month\" && x.DataType == \"Actual\")[0].FYFC;\n      MonthlyProgressTotal = personalProgressResp.Body.filter(x => x.DataYear == DataYear && x.TimeBase == \"Month\" && x.DataType == \"Goal\")[0].FYFC;\n    }else{\n      throw \"get personalProgressResp fail. personalProgressResp:\"+personalProgressResp;\n    }\n    returnData = {\n      ActivitiesPoints: ActivitiesPoints,\n      ActivitiesPointsTotal: ActivitiesPointsTotal,\n      MonthlyProgressTotal: MonthlyProgressTotal,\n      MonthlyProgressCurrent: MonthlyProgressCurrent\n    }\n  }catch (error) {\n    this.errorHandler.handleError(new APPError('F00131','_getPerformancePersonalData fail!' + error.message));\n  }\n    console.log(\"_getPerformancePersonalData returnData:\",returnData,JSON.stringify(returnData));\n    return returnData;\n  }\n  public getUserLevel(): string {\n\n    return 'diamond';\n  }\n\n  public changeMessageStatus(messageID:number, col:string, val:string){\n    return Observable.create((observer) => {\n      console.log(\"into changeMessageStatus :\",messageID,col,val);\n      let changeStatusObj = <ChangeMessageStatusAPI>this.APIFactory.getAPI(\"ChangeMessageStatus\");\n      changeStatusObj.messageID = messageID;\n      changeStatusObj.col = col;\n      changeStatusObj.val = val;\n      this.dispatcher.dispatch(changeStatusObj).toPromise().then(resp =>{\n        console.log(\"changeMessageStatus resp\",resp);\n        observer.next(resp['Header']);\n        observer.complete();\n      });\n    } );\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef, Input, Output, EventEmitter, Optional, Inject } from '@angular/core';\nimport { DashboardService } from '../../service/dashboard-service.service';\nimport { DashboardMessage } from '../../service/model/DashboardMessage';\nimport { LoginInfo, Language } from '@allianzSND/core';\nimport { showDashboardRuleToken } from '../../injectionToken/injection-token';\nimport { showDashboardRule } from '../../interface/showDashboardRule.interface';\n\n\n\n@Component({\n  selector: 'app-dashboard-detail',\n  templateUrl: './dashboard-detail.component.html',\n  styleUrls: ['./dashboard-detail.component.scss']\n})\nexport class DashboardDetailComponent implements OnInit {\n  public _messageList : Array<DashboardMessage> = [];\n  public windowWidth;\n  public _loginInfo: LoginInfo;\n  public language = new Language();\n  public userImgUrl: string = '';\n  public userAgentName: string = '';\n  public tabIndex = 0;\n  public userLevel: any = null;\n\n  @Input()\n  set messageList(messageList) {\n    \n    this._messageList = messageList;\n\n    console.log(\"detail message: \", this._messageList);\n  }\n  get messageList() {\n    return this._messageList;\n  }\n\n  @Input()\n  get loginInfo() {\n    return this._loginInfo;\n  }\n  set loginInfo(loginInfo) {\n    this._loginInfo = loginInfo;\n\n    if(this.showDashboardRule) {\n      this.showDashboardRule.dashboardShowLoginInfo(loginInfo).subscribe(data => {\n        this.userImgUrl = data.imgUrl;\n        this.userAgentName = data.showName;\n      });\n     }\n\n  }\n\n  @Output() onClickLink = new EventEmitter();\n  @Output() filterByKeyword = new EventEmitter();\n  @Output() clickMessage = new EventEmitter();\n  @Output() changeCommitmentStatus = new EventEmitter();\n  \n  \n  tabChangeEvent(event) {\n    this.tabIndex = event;\n  }\n\n  constructor(\n    @Optional() @Inject(showDashboardRuleToken) private showDashboardRule: showDashboardRule,\n    private dashboardService: DashboardService,\n    \n    ) { \n      this.init();\n    }\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n  }\n\n  \n  private init() {\n    this.userLevel = this.dashboardService.getUserLevel();\n  }\n\n  ClickListShow(){\n    this.onClickLink.emit();\n  }\n  doFilterByKeyword(keyword){\n    this.filterByKeyword.emit(keyword);\n  }\n  \n  onChangeCommitmentStatus(event){\n    this.changeCommitmentStatus.emit(event);\n  }\n\n\n  doMessageClick(message:DashboardMessage){\n    this.clickMessage.emit(message);\n  }\n    \n  \n\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-ui-card-msg',\n  templateUrl: './dashboard-ui-card-msg.component.html',\n  styleUrls: ['./dashboard-ui-card-msg.component.scss']\n})\nexport class DashboardUiCardMsgComponent implements OnInit {\n  @Input() isRead = true;\n  @Input() isHasBtn = false;  // has approve or cancel button\n  @Input() isHasApproved = false;  // false: show approve; true show cancel\n  @Input() cardType = 'goal'; // 0 goal 1 cust 2 progress\n  @Input() linkStatus ; \n\n  imgType = 'img-male'  // 0 img-goal 1 img-cust 2 img-progress\n\n  constructor() { }\n\n\n  ngOnInit() {\n    this.imgType = 'img-'+this.cardType;\n    this.linkBtnStatus();\n  }\n\n  private linkBtnStatus(){\n    if(this.linkStatus=='Done'){\n      this.isHasBtn = true;\n      //this.isHasApproved = true;\n    }else if(this.linkStatus=='Approve'){\n      this.isHasBtn = true;\n    }else if(this.linkStatus=='null'){\n    }\n  }\n  approve(event){\n    \n  }\n      \n\n\n}\n","import { Component, OnInit, Inject, HostListener, ChangeDetectionStrategy, Optional, ChangeDetectorRef } from '@angular/core';\nimport { DashboardService } from '../../service/dashboard-service.service';\n\nimport { addDays, subDays, startOfDay, endOfDay, format } from 'date-fns';\nimport { LoginMgrToken, ConfigToken, ILoginMgr, LoginInfo, DeviceService, ProfileCode, TranslateService, ProfileCodeService, Language, PageInfo, SelectOption, DefaultLoginMgr, APIFactory, APIDispatch, DataSyncService, NotificationMgr } from '@allianzSND/core';\nimport { DashboardMessage } from '../../service/model/DashboardMessage';\nimport { CustomerService, CustomerBirthday, CustomerAlertItem, CalendarService, CalendarEventDetail, CustomerFilterCriteria, CustomerUtils } from '@allianzSND/integration-calendar-customer';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent implements OnInit {\n  public hello_str = '';\n  public isLoadingFinish = true;\n  public isRefreshFinish = true;\n  public isLazyLoading = true;\n  public isMobilePopupOpen = false;\n\n  public dashboardMessageList: Array<DashboardMessage> = [];\n  public calendarEventList: Array<CalendarEventDetail> = [];\n  public calendarEventMonthList: Array<CalendarEventDetail> = [];\n  public birthdayList: Array<CustomerBirthday> = [];\n  public searchRangeDate;\n  public windowWidth;\n  public language: Language = new Language();\n  public todate: Date = new Date();\n  public dashboardLoginInfo: LoginInfo;\n  public alertAutoDeleteCustomer: Array<CustomerAlertItem> = [];\n  public alertOverTimeList: Array<CustomerAlertItem> = [];\n  public isDisplayDeleteRemind: boolean = false;\n  public isDisplayUpdateRemind: boolean = false;\n  public searchBirthdaySubN: number;\n  public searchBirthdayAddN: number;\n  public searchCalendarSubN: number;\n  public searchCalendarAddN: number;\n  public showCalendarList = [];\n  public currentMessageKeyword: string;\n  public messagePageInfo = new PageInfo();\n\n  // calendar\n  public isExpandDetail = false;\n  public isCalendarDelete = false;\n  public calendarEventDetail: CalendarEventDetail;\n  public calendarItemClientID: string;\n  public isPopupDeleteSuccess: boolean = false;\n  public isExpandEdit: boolean = false;\n  public isDisplaySavePopup: boolean = false;\n  public translateMap: Map<string, string> = new Map<string, string>();\n  public optionMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public viewDate: Date;\n  public isSaveClick: boolean = false;\n  // translate\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public alertTypeList: Array<ProfileCode> = [];\n  private dayTypesList: Array<string> = ['Cross_Day', 'All_Day'];\n  private weekdaysList: Array<string> = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  private monthsList: Array<string> = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  private noSchedule: string = 'No_Schedule';\n  //calendar end\n\n  public customerClientMap: Map<string, string> = new Map<string, string>();\n  public customerItemList: Array<SelectOption> = [];\n  public customerClientName: string = '';\n\n  constructor(\n    private customerUtils: CustomerUtils,\n    private dashboardService: DashboardService,\n    private calendarService: CalendarService,\n    private customerService: CustomerService,\n    private changeDetector: ChangeDetectorRef,\n    private translateService: TranslateService,\n    private profileCodeService: ProfileCodeService,\n    private loginMgr: DefaultLoginMgr,\n    private dataSyncService: DataSyncService,\n    private notificationMgr: NotificationMgr,\n    @Inject(ConfigToken) private APP_CONFIG: any,\n  ) {\n\n\n    this.searchBirthdaySubN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchBirthdayRange.subN;\n    this.searchBirthdayAddN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchBirthdayRange.addN;\n    this.searchCalendarSubN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchCalendarRange.subN;\n    this.searchCalendarAddN = this.APP_CONFIG[this.APP_CONFIG.ENV].DASHBOARD.SearchCalendarRange.addN;\n  }\n\n  ngOnInit() {\n    //init calendar type\n\n    this.messagePageInfo.pageSize = 5;\n    this.activityTypeList = this.profileCodeService.getCodeArray('Calendar_Type');\n    this.alertTypeList = this.profileCodeService.getCodeArray('Calendar_RemindTime');\n    this.optionMap.set('Calendar_Type', this.activityTypeList);\n    this.optionMap.set('Calendar_RemindTime', this.alertTypeList);\n    this.dayTypesList.forEach((dayType) => {\n      this.translateMap.set(dayType, this.translateService.translate(dayType))\n    });\n    this.weekdaysList.forEach((weekday) => {\n      this.translateMap.set(weekday, this.translateService.translate(weekday))\n    });\n    this.monthsList.forEach((month) => {\n      this.translateMap.set(month, this.translateService.translate(month))\n    });\n    this.translateMap.set(this.noSchedule, this.translateService.translate(this.noSchedule));\n\n\n    this.windowWidth = window.innerWidth;\n    this.isMobilePopupOpen = (this.windowWidth < 1024 ? true : false) && (this.dashboardService.isFirstTime());\n\n\n    this.viewDate = this.todate;\n\n    this.getLoginInfo();\n\n    this.getCalendarList();\n\n    this.getCustomerBirthdayList(this.todate, this.searchBirthdaySubN, this.searchBirthdayAddN);\n\n    //get UnRead message\n    this.doFilterByKeyword(\"UnRead\", false);\n\n    //5/24\n    //this.changeDetector.detectChanges();\n\n    this.createCustomerList();\n\n  }\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n\n    this.windowWidth = event.target.innerWidth;\n    this.changeDetector.markForCheck();\n    if (this.windowWidth < 1024) {\n      this.isMobilePopupOpen = true;\n    }\n    // console.warn('Width: ', this.windowWidth);\n  }\n\n\n  private async getCalendarList() {\n\n    let searchCalendarStart = subDays(this.todate, this.searchCalendarSubN);\n\n    let calendarList = [];\n\n    let PromiseList: Array<Promise<any>> = [];\n\n    for (var i = 0; i < this.searchCalendarSubN + this.searchCalendarAddN + 1; i++) {\n      let targetDate = addDays(searchCalendarStart, i);\n\n      PromiseList.push(new Promise((res, rej) => {\n        this.getCalendarBetweenDate(startOfDay(targetDate), endOfDay(targetDate)).then((data) => {\n          let item = {\n            showDate: targetDate,\n            eventList: data,\n            isBeforeToday: startOfDay(this.todate).getTime() > startOfDay(targetDate).getTime(),\n            isToday: startOfDay(this.todate).getTime() == startOfDay(targetDate).getTime()\n          }\n\n          res(item);\n        });\n      }));\n    }\n\n    Promise.all(PromiseList).then((list) => {\n      this.showCalendarList = list;\n      console.log(\"this.showCalendarList: \", this.showCalendarList);\n      //5/24\n      //this.changeDetector.detectChanges();\n    });\n\n\n\n\n\n\n  }\n\n  // scroll load content\n  public async loadContent(event) {\n\n    this.messagePageInfo.nextPage();\n    await this.doFilterByKeyword(this.currentMessageKeyword, true);\n    setTimeout(() => {\n      this.isLoadingFinish = true;\n      this.changeDetector.detectChanges();\n    });\n  }\n  //refreshContent\n  public async refreshContent(event) {\n\n    this.messagePageInfo.resetPage();\n    // this.getCalendarList();\n\n    // this.getCustomerBirthdayList(this.viewDate, this.searchBirthdaySubN, this.searchBirthdayAddN);\n\n    // await this.dataSyncService.syncFunc([\"DASHBOARD\"], true);\n    await this.notificationMgr.fetchMessageData();\n\n    //get message\n    // await this.getDashboardMessageList();\n    await Promise.all([this.doFilterByKeyword(this.currentMessageKeyword, false), this.getCalendarList(), this.getCustomerBirthdayList(this.viewDate, this.searchBirthdaySubN, this.searchBirthdayAddN)]);\n    console.log(\"PromiseAll finish\");\n    setTimeout(() => {\n      this.isRefreshFinish = true;\n      //5/24\n      //this.changeDetector.detectChanges();\n    }, 500);\n\n\n\n  }\n\n  private async getLoginInfo() {\n    return new Promise((res, rej) => {\n      this.loginMgr.getLoginInfo().subscribe((info) => {\n        this.dashboardLoginInfo = info;\n        console.warn('this.dashboardLoginInfo: ', this.dashboardLoginInfo);\n        res();\n      })\n    });\n  }\n\n\n  public doFilterByKeyword(keyword, isAppend): Promise<any> {\n    // console.log(\"keyword: \" ,keyword);\n\n    if (!isAppend) {\n      this.messagePageInfo.resetPage();\n    }\n\n    this.currentMessageKeyword = keyword;\n\n    return this.dashboardService.getMessageByKeyword(keyword, this.messagePageInfo).toPromise().then((data) => {\n      if (isAppend) {\n\n        if (data.length > 0) {\n          this.dashboardMessageList = [...this.dashboardMessageList, ...data];\n        }\n      }\n      else {\n        this.dashboardMessageList = [...data];\n      }\n    });\n  }\n\n  public onChangeCommitmentStatus(event) {\n    console.log(\"into onChangeCommitmentStatus event:\", event, \"messageId:\", event.messageId, \"keyword:\", event.keyword);\n    this.dashboardService.changeMessageStatus(event.messageId, \"LinkStatus\", \"Done\").toPromise().then(resp => {\n      console.log(\"onChangeCommitmentStatus resp\", resp);\n      this.doFilterByKeyword(event.keyword, false);\n    });\n  }\n\n  public async afterDisplayDeleteRemind() {\n\n    await this.doFilterByKeyword(this.currentMessageKeyword, false);\n    this.isDisplayDeleteRemind = false;\n  }\n\n  public async afterDisplayUpdateRemind() {\n\n    await this.doFilterByKeyword(this.currentMessageKeyword, false);\n    this.isDisplayUpdateRemind = false;\n  }\n\n\n  private getCustomerAutoDelete(cliendID): Observable<any> {\n\n    return this.customerService.getAutoDeleteCustomerList(cliendID);\n  }\n\n  private getCustomerOverTime(cliendID): Observable<any> {\n    return this.customerService.getOverTimeCustomerList(cliendID);\n  }\n\n  private async getCustomerBirthdayList(targetDate, subN, addN) {\n\n    return this.customerService.getCustomerBirthdayList(targetDate, subN, addN).toPromise().then((data) => {\n      this.birthdayList = data;\n    })\n  }\n\n  private async getCalendarBetweenDate(startDate, endDate) {\n    return this.calendarService.getCalendarEventList(startDate, endDate, '').toPromise();\n  }\n\n\n  public clickListShow() {\n    this.isMobilePopupOpen = true;\n  }\n\n  public onClickMessage(message: DashboardMessage) {\n\n\n    console.log(\"click message: \", message);\n    let cliendID = message.clientID;\n    if (message.status == 'UnRead') {\n      this.dashboardService.updateMessageStatus(message.clientID, 'Reading').subscribe(data => {\n      });\n    }\n\n    if (message.messageType == \"AutoDelete\") {\n      this.getCustomerAutoDelete(cliendID).subscribe((data) => {\n        this.alertAutoDeleteCustomer = data;\n        this.isDisplayDeleteRemind = data.length > 0 ? true : false;\n      });\n    }\n\n    else if (message.messageType == \"Overtime\") {\n      this.getCustomerOverTime(cliendID).subscribe((data) => {\n        this.alertOverTimeList = data;\n        this.isDisplayUpdateRemind = data.length > 0 ? true : false;\n      });\n    }\n\n    this.changeDetector.detectChanges();\n\n  }\n\n  public onClickCalendarItem(event) {\n    //event = {showDate: \"04/24\", eventList: CalendarEventDetail}\n    console.log(\"click event: \", event);\n    this.calendarItemClientID = event.eventList.clientID;\n    this.viewDate = new Date(event.showDate);\n    this.calendarEventList = this.showCalendarList.filter(x => x.showDate == event.showDate)[0].eventList;\n    //console.log(\"calendarEventList: \", this.calendarEventList);\n    console.log(\"viewDate: \", this.viewDate);\n    this.loadCalendarEventDetail(this.calendarItemClientID);\n  }\n\n\n  private loadCalendarEventDetail(clientID: string) {\n    this.calendarService.getCalendarEventDetail(clientID).subscribe(data => {\n\n      console.log('getCalendarEventDetail', data);\n      this.calendarEventDetail = data;\n      this.customerClientName = this.customerClientMap.get(this.calendarEventDetail.customerClientID);\n      this.calendarEventDetail.displayActivity = this.profileCodeService.convertCode2Text('Calendar_Type', this.calendarEventDetail.activity);\n      this.calendarEventDetail.displayAlert1 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert1);\n      this.calendarEventDetail.displayAlert2 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert2);\n      this.isExpandDetail = true;\n      this.changeDetector.detectChanges();\n    });\n  }\n\n\n  public editEvent() {\n    this.isExpandEdit = true;\n  }\n\n  public delete() {\n    this.isCalendarDelete = true;\n  }\n\n  public onClickDeleteConfirm() {\n\n    this.calendarService.deleteCalendarEvent(this.calendarItemClientID).subscribe(data => {\n      if (data.status) {\n        this.isExpandDetail = false;\n        this.isPopupDeleteSuccess = true;\n\n        this.showCalendarList.forEach(item => {\n          item.eventList = item.eventList.filter(x => x.clientID != this.calendarItemClientID);\n        });\n\n        this.showCalendarList = [...this.showCalendarList];\n      }\n    });\n\n  }\n\n  public onSaveCalendarEvent(resp) {\n\n    let type = resp.type;\n    let data = resp.data;\n    if (type !== 'fail') {\n      this.loadCalendarEventDetail(data.ClientID);\n      this.getCalendarList();\n      this.isDisplaySavePopup = true;\n      this.isExpandEdit = false;\n    }\n    this.isSaveClick = false;\n  }\n\n  public onClickAppointmentSave() {\n    this.isSaveClick = true;\n  }\n\n  private createCustomerList() {\n    let pageInfo = new PageInfo();\n    pageInfo.pageSize = -1;\n    let filterCriteria = new CustomerFilterCriteria();\n    this.customerService.getCustomerList(filterCriteria, pageInfo).subscribe((data) => {\n      console.log('data', data);\n      let temp_array = [];\n      for (let custItem of data) {\n        this.customerClientMap.set(custItem.clientID, this.customerUtils.convertNameToShow(custItem.firstName, custItem.lastName));\n        temp_array.push(new SelectOption(custItem.clientID, this.customerUtils.convertNameToShow(custItem.firstName, custItem.lastName)));\n      }\n      this.customerItemList = temp_array;\n    });\n  }\n\n}\n","import { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { LoginMgrToken, ILoginMgr, Language, DefaultLoginMgr } from '@allianzSND/core';\nimport { take } from 'rxjs/operators';\nimport { CONTENTGAP } from '@allianzSND/ui';\nimport { ROLE } from '@allianzSND/goal';\n// import { CONTENTGAP } from 'projects/ui/src/lib/components/ui-content-b-gap/ui-content-b-gap-enum';\n// import { CONTENTGAP } from 'projects/ui/src/public_api';\n\n@Component({\n  selector: 'snd-dashboard-performance',\n  templateUrl: './dashboard-performance.component.html',\n  styleUrls: ['./dashboard-performance.component.scss']\n})\nexport class DashboardPerformanceComponent implements OnInit {\n\n  public GAP_SIZE_20 = CONTENTGAP.GAP20;\n\n  public role: string = null;\n  public language = new Language();\n  public tabIndex: number = 0;\n\n\n  constructor(\n    private loginMgr: DefaultLoginMgr,\n  ) {\n    this.init();\n    console.debug(\"check start ......\");\n  }\n\n  ngOnInit() {}\n\n  //LEADER  //AG   <--- page\n  private async init() {\n    let loginInfo = await this.loginMgr.getLoginInfo().pipe(take(1)).toPromise();\n\n    console.debug(\"dashboard login info: \", loginInfo);\n\n    let identity = loginInfo.AppUseMode[loginInfo.AppUseMode.length - 1];\n\n    console.debug(\"dashboard identity: \", identity);\n\n    let agentRole = this._ConvertIdentityToRolesType(identity);//AG\n\n    console.debug(\"dashboard agent rolepage: \", agentRole);\n\n    this._ShowRolePage(agentRole);\n  }\n\n  tabChangeEvent(index) {\n    this.tabIndex = index;\n  }\n\n  private _ShowRolePage(role: ROLE){\n    switch(role) {\n      case ROLE.AGENT:\n        this.role = \"AG\";\n        break;\n      case ROLE.AGENTLEADER:\n        this.role = \"LEADER\";\n        break;\n      case ROLE.ZONEHEAD:\n      case ROLE.CAO:\n        this.role = \"CAO\";\n        break;\n    }\n    //this.role = (role == ROLE.AGENT) ? \"AG\": \"LEADER\";\n  }\n\n  private _ConvertIdentityToRolesType(identity: string): ROLE {\n    //AG AL Manager Supervisor\n    switch (identity) {\n      case \"AG\":\n        return ROLE.AGENT;\n      case \"AL\":\n        return ROLE.AGENTLEADER;\n      case \"Manager\":\n        return ROLE.ZONEHEAD;\n      case \"Supervisor\":\n        return ROLE.CAO;\n    }\n  }\n\n  \n\n}\n","import { Component, OnInit, ErrorHandler } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { Language, DefaultLoginMgr, LoginInfo, APPError, NumberUtils, AppRouter } from '@allianzSND/core';\nimport { DashboardService } from '../../service/dashboard-service.service';\nimport { ProgressService, Tag } from '@allianzSND/progress';\n\n@Component({\n  selector: 'snd-dashboard-performance-team',\n  templateUrl: './dashboard-performance-team.component.html',\n  styleUrls: ['./dashboard-performance-team.component.scss']\n})\nexport class DashboardPerformanceTeamComponent implements OnInit {\n\n  public dashboardPerformanceTeam: Array<Object> = [];\n  public data: any = null;\n  public isLoadDataFinish: boolean = false;\n\n  public language = new Language();\n  public windowWidth: number = null;\n  private _monthlyProgressRate;\n  public timeBaseTitle: string;\n  public userRole: string;\n\n  public ShowMonthlyProgressRateArr: Array<string>;\n  public ShowMonthlyProgressRateBarArr: Array<string>;\n\n  constructor(\n    private dashboardService: DashboardService,\n    private loginMgr: DefaultLoginMgr,\n    private errorHandler: ErrorHandler,\n    private router: AppRouter,\n    private progressService: ProgressService,\n  ) {\n    this.init();\n  }\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n  }\n  private async init() {\n    try {\n      let loginInfo = await this.loginMgr.getLoginInfo().pipe(take(1)).toPromise();\n\n      this.loginMgr.getLoginInfo().subscribe((info: LoginInfo) => {\n        console.log('check permission subscribe:', info);\n        if (info)\n          this.userRole = info.AppUseMode[0];\n        console.log(\"get AppUseModeï¼\", this.userRole);\n      });\n      this.data = await this.dashboardService.getPerformanceData(\"T\", this.userRole).toPromise();\n      if (this.data != null) {\n        // this.isLoadDataFinish = true;\n        // this.timeBaseTitle = this.data.timeBaseTitle;\n\n        // console.log(\" this.timeBaseTitle\", this.timeBaseTitle);\n        // this.data.datas.forEach((val,key) => {\n        //   let MonthlyProgressRate = val[\"MonthlyProgressCurrent\"] / val[\"MonthlyProgressTotal\"];\n        //   val[\"MonthlyProgressRate\"] = this.convertNumberDigital(MonthlyProgressRate, 2);\n        // });\n\n        this.isLoadDataFinish = true;\n        this.timeBaseTitle = this.data.timeBaseTitle;\n\n        this.ShowMonthlyProgressRateArr = new Array<string>();\n        this.ShowMonthlyProgressRateBarArr = new Array<string>();\n\n        console.log(\" this.timeBaseTitle\", this.timeBaseTitle);\n        this.data.datas.forEach((val, key) => {\n\n          let MonthlyProgressRate = this.getRate(val[\"MonthlyProgressCurrent\"], val[\"MonthlyProgressTotal\"]);\n          val[\"MonthlyProgressRate\"] = this.convertNumberDigital(MonthlyProgressRate, 2);\n          let pc = this.getPercentage(val[\"MonthlyProgressRate\"]);\n\n          let monthlyNumerator = this.convertToNumber(val[\"MonthlyProgressCurrent\"]);\n          let monthlyDenominator = this.convertToNumber(val[\"MonthlyProgressTotal\"]);\n\n          //let pcb = this.getPercentageBar(MonthlyProgressRate);\n\n          let pcb = this.getMonthlyBarLength(monthlyNumerator, monthlyDenominator, 1.5, 150);\n          this.ShowMonthlyProgressRateArr.push(pc);\n          this.ShowMonthlyProgressRateBarArr.push(pcb);\n        });\n\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00600', 'DashboardPerformanceTeam init fail!' + error.message));\n    }\n  }\n\n  private getRate(a: any, b: any): number {\n    if (a == -1 || !NumberUtils.isNumber(a)) return -1;\n    if (b == -1 || !NumberUtils.isNumber(b)) return -1;\n    return a / b;\n  }\n\n  private getPercentage(a: any): string {\n    if (a == -1 || !NumberUtils.isNumber(a)) return \"--\";\n    return (a * 100).toString();\n  }\n\n  private getPercentageBar(a: any): string {\n    if (a == -1 || !NumberUtils.isNumber(a)) return \"0\";\n    return (a).toString();\n  }\n\n  private convertToNumber(str:string):number {\n    let convert = Number(str);\n\n    if(convert == NaN) {\n      return 0;\n    } \n    else if(convert <= -1) {\n      return 0;\n    }\n    else if(convert == 0) {\n      return 0;\n    }\n    else {\n      return convert;\n    }\n  }\n\n  private getMonthlyBarLength(monthlyNumerator:number, monthlyDenominator:number, maxLength:number, maxBase: number):string {\n\n    if(monthlyNumerator == 0 || monthlyDenominator == 0) {\n      return \"0\";\n    }\n\n    let ans = Math.round((monthlyNumerator / monthlyDenominator) * 100) / maxBase;\n    return (ans >= maxLength) ? maxLength.toString() : ans.toString();\n  }\n\n  //åæ¨äºå¥\n  private convertNumberDigital(num: number, digit: number): number {\n    if (digit === 0)\n      return Math.round(num);\n    else if (digit > 0) {\n      return Math.round(num * Math.pow(10, digit)) / (Math.pow(10, digit));\n    }\n    else {\n      return num;\n    }\n  }\n\n  //è½æåä½æ¸è¡¨ç¤ºæ³ï¼000,000,000ï¼\n  public convertNumberThousand(num: number): string {\n\n    if (num <= -1 || !NumberUtils.isNumber(num)) return \"--\";\n\n    var numString = num.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n\n    while (pattern.test(numString)) {\n      numString = numString.replace(pattern, \"$1,$2\");\n    }\n    return numString;\n  }\n\n  public goToProgress() {\n    let tag = Tag.TeamTag;\n    this.progressService.SetCurrentNavigationTag(tag);\n    this.router.navigate(\"Progress\");\n  }\n\n}\n","import { Component, OnInit, HostListener, ErrorHandler } from '@angular/core';\nimport { DashboardService } from '../../service/dashboard-service.service';\nimport { Language, APPError, NumberUtils, AppRouter } from '@allianzSND/core';\nimport { Router } from '@angular/router';\nimport { ProgressService, Tag } from '@allianzSND/progress';\n\n@Component({\n  selector: 'snd-dashboard-performance-personal',\n  templateUrl: './dashboard-performance-personal.component.html',\n  styleUrls: ['./dashboard-performance-personal.component.scss']\n})\n\nexport class DashboardPerformancePersonalComponent implements OnInit {\n\n  public data: any = null;\n  public language = new Language();\n  public windowWidth: number = null;\n  //public ShowMonthlyProgressRate: string = \"--\";\n // public ShowMonthlyProgressRateBar: string = \"0\";\n  //public ShowActivitiesPoints: string = \"--\";\n\n\n  //activity \n  public ShowCurrentActivityPoints: string = \"--\";\n  public ShowCurrentActivityPointsBar: string = \"0\";\n\n  public ShowCurrentMonthlyProgressRate: string = \"--\";\n  public ShowCurrentMonthlyProgressBar: string = \"0\";\n  public ShowCurrentMonthlyProgress: string = \"--\";\n  public ShowCurrentMonthlyTotal: string = \"--\";\n\n  constructor(\n    private dashboardService: DashboardService,\n    private errorHandler: ErrorHandler,\n    // private router: Router,\n    private router: AppRouter,\n    private progressService: ProgressService,\n  ) {\n    this.init();\n  }\n\n  windowSize() {\n    let width = window.innerWidth;\n    return (width > 1023) ? true : false;\n  }\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n    this.windowSize();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowSize();\n  }\n\n  private async init() {\n    try {\n      this.data = await this.dashboardService.getPerformanceData(\"P\").toPromise();\n\n      console.debug(\"test i got this shit: \", this.data);\n\n      let totalPoints = this.convertToNumber(this.data[\"ActivitiesPoints\"]);\n      let limitPoints = this.convertToNumber(this.data[\"ActivitiesPointsTotal\"]);\n\n      let monthlyNumerator = this.convertToNumber(this.data[\"MonthlyProgressCurrent\"]);\n      let monthlyDenominator = this.convertToNumber(this.data[\"MonthlyProgressTotal\"]);\n\n      //get activity points\n      this.ShowCurrentActivityPoints = (this.data[\"ActivitiesPoints\"] <= -1) ? \"--\" : this.data[\"ActivitiesPoints\"];\n      this.ShowCurrentActivityPointsBar = this.getActivityCircleBar(totalPoints, limitPoints, 1);\n\n      console.debug(\"ans111: \", this.ShowCurrentActivityPointsBar);\n\n      //get monthly points\n      this.ShowCurrentMonthlyProgress = (this.data[\"MonthlyProgressCurrent\"] <= -1) ? \"--\" : this.data[\"MonthlyProgressCurrent\"];\n      this.ShowCurrentMonthlyTotal = (this.data[\"MonthlyProgressTotal\"] <= -1) ? \"--\" : this.data[\"MonthlyProgressTotal\"];\n\n      //monthly percentage x%\n      this.ShowCurrentMonthlyProgressRate = this.getMonthlyPercentage(monthlyNumerator, monthlyDenominator);\n      console.debug(\"ans222: \", this.ShowCurrentMonthlyProgressRate);\n      \n      //month bar length\n      this.ShowCurrentMonthlyProgressBar = this.getMonthlyBarLength(monthlyNumerator, monthlyDenominator, 1.5, 150);\n      console.debug(\"ans333: \", this.ShowCurrentMonthlyProgressBar);\n\n      // //activity points and circle bar \n      // this.ShowCurrentActivityPoints = (this.data[\"ActivitiesPoints\"] <= -1) ? \"--\" : this.data[\"ActivitiesPoints\"];\n      // this.ShowCurrentActivityPointsBar = this.getRate(this.data[\"ActivitiesPoints\"], this.data[\"ActivitiesPointsTotal\"]).toString();\n\n      // let bar = this.getRate(this.data[\"ActivitiesPoints\"], this.data[\"ActivitiesPointsTotal\"]);\n      // this.ShowCurrentActivityPointsBar = (bar >= 1) ? \"1\" : bar.toFixed(2);\n\n      // let rate = this.getRate(this.data[\"MonthlyProgressCurrent\"], this.data[\"MonthlyProgressTotal\"]);\n      // let percentage = (rate * 100);\n      // let monthlyRate = this.convertNumberDigital(percentage, 2);\n\n      // this.ShowCurrentMonthlyProgressRate = monthlyRate.toString();\n      // this.ShowCurrentMonthlyProgressBar = (monthlyRate >= 1) ? \"1\" : monthlyRate.toString();\n\n      // let mp: number = this.data[\"MonthlyProgressCurrent\"];\n      // let mt: number = this.data[\"MonthlyProgressTotal\"];\n      // this.ShowCurrentMonthlyProgress = this.convertNumberThousand(mp);\n      // this.ShowCurrentMonthlyTotal = this.convertNumberThousand(mt);\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00601', 'DashboardPerformancePersonal init fail!' + error.message));\n    }\n  }\n\n\n  private convertToNumber(str:string):number {\n    let convert = Number(str);\n\n    if(convert == NaN) {\n      return 0;\n    } \n    else if(convert <= -1) {\n      return 0;\n    }\n    else if(convert == 0) {\n      return 0;\n    }\n    else {\n      return convert;\n    }\n  }\n\n  private getActivityCircleBar(totalPoints:number, limitPoints:number, maxLength:number):string {\n    \n    if(totalPoints == 0 || limitPoints == 0) {\n      return \"0\";\n    }\n\n    let ans = (totalPoints / limitPoints);\n    if(ans >= maxLength) {\n      return maxLength.toString();\n    }\n    else {\n      return ans.toString();\n    }\n  }\n\n  private getMonthlyPercentage(monthlyNumerator:number, monthlyDenominator:number):string {\n    if(monthlyNumerator == 0 || monthlyDenominator == 0) {\n      return \"0\";\n    }\n\n    let ans = (monthlyNumerator / monthlyDenominator) * 100;\n    let percentage = Math.round(ans);\n    return percentage.toString();\n  }\n\n  private getMonthlyBarLength(monthlyNumerator:number, monthlyDenominator:number, maxLength:number, maxBase: number):string {\n\n    if(monthlyNumerator == 0 || monthlyDenominator == 0) {\n      return \"0\";\n    }\n\n    let ans = Math.round((monthlyNumerator / monthlyDenominator) * 100) / maxBase;\n    return (ans >= maxLength) ? maxLength.toString() : ans.toString();\n  }\n\n\n\n  private getRate(sum: any, max: any): number {\n    if (sum <= 0 || !NumberUtils.isNumber(sum)) return 0;\n    if (max <= 0 || !NumberUtils.isNumber(max)) return 0;\n\n    return (sum / max);\n  }\n\n  //åæ¨äºå¥  \n  private convertNumberDigital(num: number, digit: number): number {\n\n    if (digit === 0)\n      return Math.round(num);\n    else if (digit > 0) {\n      return Math.round(num * Math.pow(10, digit)) / (Math.pow(10, digit));\n    }\n    else {\n      return num;\n    }\n  }\n\n\n  //è½æåä½æ¸è¡¨ç¤ºæ³ï¼000,000,000ï¼\n  public convertNumberThousand(num: number): string {\n\n    if (num <= -1 || !NumberUtils.isNumber(num)) return \"--\";\n\n    var numString = num.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n\n    while (pattern.test(numString)) {\n      numString = numString.replace(pattern, \"$1,$2\");\n    }\n    return numString;\n  }\n\n  public goToProgress() {\n    let tag = Tag.PersonalTag;\n    this.progressService.SetCurrentNavigationTag(tag);\n    this.router.navigate(\"Progress\");\n  }\n\n}\n","export enum DashboardMessageType {\n    Unread = 'UnRead',\n    All = 'All',\n    GoalSetting = 'GoalSetting',\n    Progress = 'Progress',\n    Customer = 'Customer',\n    PendingApproval = 'PendingApproval'\n}","import { Component, OnInit, Input, Output, EventEmitter, ErrorHandler, Optional, Inject } from '@angular/core';\nimport { Language, TranslateService, DefaultLoginMgr, LoginInfo, APPError, NotificationMgr, DataSyncService, NotificationType, AppRouter, showRuleToken, showRule } from '@allianzSND/core';\nimport { DashboardMessage } from '../../service/model/DashboardMessage';\nimport { getYear, getMonth, getDate, format } from 'date-fns';\nimport { ROLE, AgencyPlanStoreService, AGENCY_STATE, AgencyPlanAgentInfo, AgencyPlanStatus } from '@allianzSND/goal';\nimport { showDashboardRuleToken } from '../../injectionToken/injection-token';\nimport { showDashboardRule } from '../../interface/showDashboardRule.interface';\nimport { DashboardMessageType } from './dashboard-message-type';\nimport { take, takeUntil, first } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'snd-dashboard-message',\n  templateUrl: './dashboard-message.component.html',\n  styleUrls: ['./dashboard-message.component.scss']\n})\nexport class DashboardMessageComponent implements OnInit {\n\n  public MsgType = 'UnRead';\n  public Language = new Language();\n  public IsHasMsg = false;\n  public IsCAO = false;\n  private _messageList: Array<DashboardMessage> = [];\n  private keyword: string = 'UnRead';\n  public msgType: Array<{ value: DashboardMessageType, displayName: string }> = [];\n  private defaultMsgType: Array<{ value: DashboardMessageType, displayName: string }>\n    = [{\n      value: DashboardMessageType.Unread,\n      displayName: this.Language.unread\n    }, {\n      value: DashboardMessageType.All,\n      displayName: this.Language.all\n    }, {\n      value: DashboardMessageType.GoalSetting,\n      displayName: this.Language.goalSettingMsgType\n    }, \n    // {\n    //   value: DashboardMessageType.Progress,\n    //   displayName: this.Language.progress\n    // }, \n    {\n      value: DashboardMessageType.Customer,\n      displayName: this.Language.customer\n    }, {\n      value: DashboardMessageType.PendingApproval,\n      displayName: this.Language.pendingApproval\n    }]\n\n  public ConvertToImgUrl = {\n    \"GoalSetting\": 'goal',\n    \"Customer\": 'cust',\n    // \"Progress\": 'progress'\n  }\n\n  public ConvertCategoryToLanguage = {\n    \"GoalSetting\": 'goalSetting',\n    \"Customer\": 'customer',\n    // \"Progress\": 'progress'\n  }\n\n  public ConvertStatus = {\n    \"Reading\": true,\n    \"UnRead\": false\n  }\n\n  constructor(\n    private translateService: TranslateService,\n    private loginMgr: DefaultLoginMgr,\n    private errorHandler: ErrorHandler,\n    private agencyPlanStoreService: AgencyPlanStoreService,\n    private router: AppRouter,\n    private notificationMgr: NotificationMgr,\n    private syncService: DataSyncService,\n    @Optional() @Inject(showDashboardRuleToken) private showDashboardRule: showDashboardRule,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n  ) {\n    this.init();\n  }\n\n  ngOnInit() { }\n\n  //#region  getter setter (input output)\n\n  @Output()\n  public filterByKeyword: EventEmitter<string> = new EventEmitter();\n  @Output()\n  public clickMessage: EventEmitter<DashboardMessage> = new EventEmitter();\n  @Output()\n  public changeCommitmentStatus: EventEmitter<any> = new EventEmitter();\n\n  @Input()\n  set messageList(messageList) {\n    if (messageList.length > 0) {\n      this.IsHasMsg = true;\n      console.log('isHasMsg is true');\n    }\n    else {\n      this.IsHasMsg = false;\n    }\n\n\n    // if(this.showRule) {\n    //   messageList.forEach(x => {\n    //     x.messageDate = this.showRule.convertDate(new Date(x.messageDate));\n    //   });\n    // }\n\n    // else {\n    //   messageList.forEach(x => {\n    //     x.messageDate = format(new Date(x.messageDate),'MM/dd/yyyy');\n    //   });\n    // }\n\n    this._messageList = messageList;\n\n    console.log(\"detail message: \", this._messageList);\n  }\n  get messageList() {\n    return this._messageList;\n  }\n\n  //#endregion\n\n  //#region function\n\n  private async init() {\n    console.log(\"Dashboard init\");\n    let loginInfo: LoginInfo = await this.loginMgr.getLoginInfo().pipe(take(1)).toPromise();\n    console.log(\"Dashboard init loginInfo:\", loginInfo);\n    if (this.showDashboardRule) {\n      let filtered = this.showDashboardRule.showMessageType(loginInfo);\n      this.msgType = this.defaultMsgType.filter(x => filtered.indexOf(x.value) > -1);\n    }\n    else\n      this.msgType = this.defaultMsgType;\n    console.log(\"Dashboard init end:\", this.msgType);\n  }\n\n  public Filter(keyword) {\n    this.keyword = keyword;\n    this.filterByKeyword.emit(keyword);\n  }\n\n  public OnClickMessage(message: DashboardMessage) {\n    if (message.isClick === 'Y') {\n      console.log(\"message\", message)\n      let argument = JSON.parse(message.argument);\n      console.log(\"argument\", argument, \"typeof argument\", typeof argument);\n      if (message.isPopup === 'Y') {\n        this.clickMessage.emit(message);\n        this.filterByKeyword.emit(this.keyword);\n        console.log('éè¦run push()');\n        this.notificationMgr.pushNotification(NotificationType[message.messageType], argument);\n      } else if (message.isPopup === 'N') {\n        console.log(\"è·³è½å°\" + argument.agentID + \"çcommitment\");\n        this.clickMessage.emit(message);\n        this.filterByKeyword.emit(this.keyword);\n        // get\n        let agencyDetail: AgencyPlanAgentInfo = new AgencyPlanAgentInfo(argument['agentID'], argument['agentName'], argument['DataYear'], argument['AppUseMode']);\n        // agencyDetail['agentID'] = argument['agentID'];\n        // agencyDetail['agentName'] = argument['agentName'];\n        // agencyDetail['dataYear'] = argument['DataYear'];\n        // agencyDetail['appUseMode'] = argument['AppUseMode'];\n        console.log(\"agencyDetail\", agencyDetail);\n        this.agencyPlanStoreService.setCurrentAgencyDetail(agencyDetail);\n        this.router.navigate(\"commitment\");\n\n        // this._location.go('')  //å»commitment\n      }\n    } else if (message.isClick === 'N') {\n      console.log('this is no action for click');\n    }\n  }\n\n  //#endregion\n\n}\n","import { NgModule } from '@angular/core';\nimport { UIModule } from '@allianzSND/ui';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@allianzSND/core';\nimport { IntegrationCalendarCustomerModule } from '@allianzSND/integration-calendar-customer';\n\nimport { DashboardListComponent } from './components/dashboard-list/dashboard-list.component';\nimport { DashboardDetailComponent } from './components/dashboard-detail/dashboard-detail.component';\nimport { DashboardUiCardMsgComponent } from './components/dashboard-ui-card-msg/dashboard-ui-card-msg.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { DashboardPerformanceComponent } from './components/dashboard-performance/dashboard-performance.component';\nimport { DashboardPerformanceTeamComponent } from './components/dashboard-performance-team/dashboard-performance-team.component';\nimport { DashboardPerformancePersonalComponent } from './components/dashboard-performance-personal/dashboard-performance-personal.component';\nimport { DashboardMessageComponent } from './components/dashboard-message/dashboard-message.component';\n\n@NgModule({\n  imports: [\n    UIModule,\n    CoreModule,\n    CommonModule,\n    IntegrationCalendarCustomerModule\n  ],\n  declarations: [DashboardComponent, DashboardListComponent, DashboardDetailComponent, DashboardUiCardMsgComponent, DashboardPerformanceComponent, DashboardPerformanceTeamComponent, DashboardPerformancePersonalComponent, DashboardMessageComponent],\n  exports: [DashboardComponent, DashboardListComponent, DashboardDetailComponent, DashboardUiCardMsgComponent]\n})\nexport class DashboardModule { }\n","export class DashboardShowLoginInfo {\n    \n    private _showName: string;\n    private _imgUrl: string;\n\n    constructor(showName, imgUrl) {\n        this._showName = showName;\n        this._imgUrl = imgUrl;\n    }\n\n    get showName(): string {\n        return this._showName;\n    }\n\n    get imgUrl(): string {\n        return this._imgUrl;\n    }\n}"]}