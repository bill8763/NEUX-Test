import { OnInit, EventEmitter, ElementRef, QueryList, AfterViewInit } from '@angular/core';
import { CalendarEventDetail, CustomerBirthday } from '@allianzSND/integration-calendar-customer';
import { TranslateService, Language, showRule } from '@allianzSND/core';
export declare class DashboardListComponent implements OnInit, AfterViewInit {
    private APP_CONFIG;
    private showRule;
    private translateService;
    private elementRef;
    isBirthdayToday: boolean;
    isHasScheduleData: boolean;
    isHasBirthdayData: boolean;
    isTabContentNoData: string;
    translateMap: Map<string, string>;
    calendarEventDetail: CalendarEventDetail;
    _calendarEventList: any[];
    isCalendarEventListBefore: any[];
    private _birthdayItemList;
    searchBirthdayAddN: any;
    beforeTodayBirthdayItemList: Array<CustomerBirthday>;
    afterTodayBirthdayItemList: Array<CustomerBirthday>;
    eventListBGColor: string;
    showDate: string;
    language: Language;
    viewTypeIndex: number;
    tabIndex: number;
    private tabHeight;
    private _viewDate;
    private _eventList;
    weekStartsOn: number;
    startDate: any;
    endDate: any;
    today: Date;
    yearVal: number;
    todayDisplayStr: string;
    endDateDisplayStr: string;
    windowWidth: any;
    calendarListContents: QueryList<any>;
    calendarEventList: any[];
    eventMonthList: Array<CalendarEventDetail>;
    birthdayItemList: CustomerBirthday[];
    viewDate: Date;
    clickCalendarItem: EventEmitter<any>;
    tabContent: ElementRef;
    changeViewDate: any;
    constructor(APP_CONFIG: any, showRule: showRule, translateService: TranslateService, elementRef: ElementRef);
    tabChangeEvent(event: any): void;
    scrollToContent(tabOpenIndex: any): void;
    completeLoadEvent: EventEmitter<boolean>;
    updateCalendarEventDetail: EventEmitter<CalendarEventDetail>;
    clickDate: EventEmitter<Date>;
    onClickEventItem(showDate: any, calendarItem: any): void;
    monthDayClicked(date: any): void;
    switchMonthClicked(date: any): void;
    itemBirthdayIsToday(item: CustomerBirthday): boolean;
    itemBirthdayIsBeforeToday(item: CustomerBirthday): boolean;
    judgeIsScheduleHasData(): boolean;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    convertNameToShow(firstName: string, lastName: string): string;
    convertBirthdayToShow(month: string, date: string): string;
    convertCalendarDateToShow(date: Date): string;
    private _convertDateWithoutYear;
    private _sortBirthDayListByName;
    private _comapare;
}
