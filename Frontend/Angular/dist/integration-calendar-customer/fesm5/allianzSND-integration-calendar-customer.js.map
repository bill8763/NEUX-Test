{"version":3,"file":"allianzSND-integration-calendar-customer.js.map","sources":["ng://@allianzSND/integration-calendar-customer/lib/calendar/injection-token.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-edit/DefaultCalendarEditMetaController.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/injectionToken/injection-token.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-edit/calendar-edit.component.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-detail/DefaultCalendarDetailMetaController.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-detail/calendar-detail.component.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-filter/calendar-filter.component.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/service/model/CalendarEventColor.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/service/model/CalendarEventDetail.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/service/calendar-service.service.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/bean/customer-filter-preset.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/bean/customer-filter-criteria.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerItem.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerAlertItem.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerTel.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerBirthday.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-filter/DefaultCustomerCriteriaSearch.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/customer-service.service.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/utils/customer-utils.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar/calendar.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-contact-list/customer-contact-list.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-detail/customer-detail.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/customerStore/customerStore-service.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-edit/DefaultCustomerEditMetaController.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-edit/customer-edit.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-filter/customer-filter.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-import/customer-import.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-list/customer-list.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/bean/customer-import-group.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customers/DefaultCustomerImportDisplay.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customers/customers.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-contact-detail/customer-contact-detail.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-contact-edit/customer-contact-edit.component.ts","ng://@allianzSND/integration-calendar-customer/lib/integration-calendar-customer.module.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/bean/customer-confirm-action.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerAddress.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerContactNote.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerEmail.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerList.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/MobileCustomerItem.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/MobileCustomerList.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerAddContactNote.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerAutoDeleteAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerContactNoteAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerDeleteAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerDeleteContactNote.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerDetailAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerEditContactNote.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerEditOvertimeAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerGetePresetAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerListAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerSaveDetailAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerSavePresetAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerTelAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerUpdateFollowAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/ImportContactAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerBirthdayListAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/DashboardUpdateToReadAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventAddAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventDeleteAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventDetailAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventListAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventUpdateAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventSaveAPI.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\nimport { MetaController } from \"@allianzSND/core\";\n\nexport const calendarEditMetaControllerToken = new InjectionToken<MetaController>(\"calendarEditMetaController\");\nexport const calendarDetailMetaControllerToken = new InjectionToken<MetaController>(\"calendarDetailMetaController\");","import { MetaController, ValidationResult, ProfileCodeService, ProfileCode } from \"@allianzSND/core\";\nimport { Injectable } from \"@angular/core\";\nimport { v4 as uuid } from 'uuid';\nimport {\n    addDays,\n    addHours,\n    addMinutes,\n    differenceInCalendarDays,\n    differenceInMinutes,\n    getDate,\n    getHours,\n    getMinutes,\n    isSameDay,\n    isAfter,\n    getMonth,\n    getYear, setDate, setHours, setMinutes, setYear, setMonth, getSeconds, setSeconds, isEqual, startOfDay, isBefore\n} from 'date-fns';\nimport { SelectOption } from \"@allianzSND/ui\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DefaultCalendarEditMetaController implements MetaController {\n\n    constructor(\n        private profileCodeService: ProfileCodeService\n    ) {\n        this.alertOpt = this.profileCodeService.getCodeArray(\"Calendar_RemindTime\");\n    }\n\n    private alertOpt: Array<ProfileCode> = [];\n\n    onDataUpdated(data: any) {\n\n        let IsAllDay = data['IsAllDay'] === 'Y';\n\n        data[\"Alert1Option\"] = this.getAlertOption(IsAllDay);\n        data[\"Alert2Option\"] = this.getAlertOption(IsAllDay);\n        data[\"Alert3Option\"] = this.getAlertOption(IsAllDay);\n\n\n        if (data['StartTime']) {\n            data['StartDate'] = startOfDay(new Date(data['StartTime']));\n            data['StartTime'] = new Date(data['StartTime']);\n        } else {\n            data['StartDate'] = data[\"ViewDate\"];\n            data['StartTime'] = addHours(this.toFiveUnit(this.combineDateTime(data[\"ViewDate\"], new Date())), 1);\n            if (!IsAllDay)\n                data['StartDate'] = data['StartTime'];\n        }\n\n        if (data['EndTime']) {\n            data['EndDate'] = startOfDay(new Date(data['EndTime']));\n            data['EndTime'] = new Date(data['EndTime']);\n        }\n        else {\n            data['EndDate'] = startOfDay(data['StartDate']);\n            data['EndTime'] = addHours(data['StartTime'], 1);\n            if (!IsAllDay)\n                data['EndDate'] = data['EndTime'];\n\n        }\n\n        if (!data['IsAllDay']) {\n            data['IsAllDay'] = 'N';\n        }\n\n        if (!data['IsAlert']) {\n            data['IsAlert'] = 'Y';\n        }\n        if (!data['Alert1']) {\n            data['Alert1'] = IsAllDay ? \"2\" : \"8\";\n        }\n        if (!data['Alert2']) {\n            data['Alert2'] = '';\n        }\n        console.log(\"Default controller onDataUpdated:\", data);\n    }\n\n    onValueChange(column: string, value: any, groupId: string, index: number, data: any, validationResult: ValidationResult) {\n        let IsAllDay = data['IsAllDay'] === 'Y';\n\n        if (column === 'IsAllDay') {\n            data[column] = value ? 'Y' : 'N';\n            this.checkEndBeforeStartError(data, validationResult);\n\n            data[\"Alert1Option\"] = this.getAlertOption(value);\n            data[\"Alert2Option\"] = this.getAlertOption(value);\n            data[\"Alert3Option\"] = this.getAlertOption(value);\n\n            data[\"Alert1\"] = value ? \"2\" : \"8\";\n            data[\"Alert2\"] = \"\";\n            validationResult.deleteError(\"Alert1\");\n            validationResult.deleteError(\"Alert2\");\n\n        }\n        else if (column === 'IsAlert') {\n            data[column] = value ? 'Y' : 'N';\n            if (value) {\n                if (data['Alert1'] === data['Alert2'] && data['Alert1'])\n                    validationResult.setErrorMap('Alert2', 'Wrong_Alert');\n                else if (!data['Alert1'] && !data['Alert2'])\n                    validationResult.setErrorMap('Alert1', 'Wrong_Alert_Require');\n            }\n            else {\n                validationResult.deleteError(\"Alert1\");\n                validationResult.deleteError(\"Alert1\");\n            }\n        }\n        else if (column === 'StartDate') {\n            if (!value)\n                data[\"StartDate\"] = startOfDay(new Date());\n            else\n                data[\"StartDate\"] = value;\n            if (IsAllDay) {\n                data['EndDate'] = data[\"StartDate\"];\n            }\n            else {\n                data['EndDate'] = this.getToDate(data[\"StartDate\"], data[\"StartTime\"]);\n                data['EndTime'] = this.getToDate(data[\"StartDate\"], data[\"StartTime\"]);\n            }\n            this.checkEndBeforeStartError(data, validationResult);\n        }\n        else if (column === 'StartTime') {\n            if (!value)\n                data[\"StartTime\"] = this.toFiveUnit(new Date());\n            else\n                data[\"StartTime\"] = this.toFiveUnit(value);\n            data['EndDate'] = this.getToDate(data[\"StartDate\"], data[\"StartTime\"]);\n            data['EndTime'] = this.getToDate(data[\"StartDate\"], data[\"StartTime\"]);\n            this.checkEndBeforeStartError(data, validationResult);\n        }\n        else if (column === 'EndDate') {\n            //CHECK if to > from+15\n            if (!value)\n                data[\"EndDate\"] = startOfDay(new Date());\n            else\n                data[\"EndDate\"] = value;\n            this.checkEndBeforeStartError(data, validationResult);\n        }\n        else if (column === 'EndTime') {\n            if (!value)\n                data[\"EndTime\"] = this.toFiveUnit(new Date());\n            else\n                data[\"EndTime\"] = this.toFiveUnit(value);\n            this.checkEndBeforeStartError(data, validationResult);\n        }\n        else if (column === 'Alert1' || column === 'Alert2') {\n            if (data['Alert1'] === data['Alert2'] && data['Alert1'])\n                validationResult.setErrorMap('Alert2', 'Wrong_Alert');\n            else if (data['IsAlert'] === 'Y' && !data['Alert1'] && !data['Alert2'])\n                validationResult.setErrorMap(\"Alert1\", \"Wrong_Alert_Require\");\n            else {\n                validationResult.deleteError('Alert1');\n                validationResult.deleteError('Alert2');\n            }\n        }\n\n    }\n\n    onValidateAll(data: any, validationResult: ValidationResult) {\n        if (data[\"IsAllDay\"] === 'Y') {\n            data[\"StartDateTime\"] = startOfDay(data[\"StartDate\"]);\n            data[\"EndDateTime\"] = startOfDay(data[\"EndDate\"]);\n        }\n        else {\n            data[\"StartDateTime\"] = this.combineDateTime(data[\"StartDate\"], data[\"StartTime\"]);\n            data[\"EndDateTime\"] = this.combineDateTime(data[\"EndDate\"], data[\"EndTime\"]);\n\n        }\n        if (!data[\"ClientID\"])\n            data[\"ClientID\"] = uuid();\n        if (data[\"IsAlert\"] === 'Y' && !data[\"Alert1\"] && !data[\"Alert2\"]) {\n            validationResult.setErrorMap(\"Alert1\", \"Wrong_Alert_Require\");\n        }\n        return validationResult.isTrue();\n    }\n\n    btnClick(type: string, id: string, data: any) { }\n\n    private toFiveUnit(date: Date): Date {\n        let now = date;\n        let minutes = getMinutes(now);\n        let toAdd = minutes % 5 === 0 ? 0 : 5 - (minutes % 5);\n        return addMinutes(now, toAdd);\n    }\n\n\n    private getToDate(fromDate: Date, fromTime: Date): Date {\n        console.log(\"GetToDate:\", fromDate, fromTime);\n        console.log(\"GetMonth:\", getMonth(fromDate));\n        let from = new Date(getYear(fromDate), getMonth(fromDate), getDate(fromDate), getHours(fromTime), getMinutes(fromTime));\n        from = this.toFiveUnit(from);\n        return addHours(from, 1);\n    }\n\n    private checkEndBeforeStartError(data, validationResult: ValidationResult) {\n        validationResult.deleteError(\"StartDate\");\n        validationResult.deleteError(\"EndDate\");\n        validationResult.deleteError(\"StartTime\");\n        validationResult.deleteError(\"EndTime\");\n\n        let IsAllDay = data['IsAllDay'] === 'Y';\n        if (!(isSameDay(data[\"StartDate\"], data[\"EndDate\"]) || isAfter(data[\"EndDate\"], data[\"StartDate\"]))) {\n            validationResult.setErrorMap('StartDate', \"Wrong_Start_Time\");\n            return;\n        }\n        if (!IsAllDay) {\n\n            let fromDate = data[\"StartDate\"];\n            let fromTime = data[\"StartTime\"];\n            let EndDate = data[\"EndDate\"];\n            let EndTime = data[\"EndTime\"];\n            let from = this.combineDateTime(fromDate, fromTime);\n            let end = this.combineDateTime(EndDate, EndTime);\n            if (isBefore(end, addMinutes(from, 15))) {\n                validationResult.setErrorMap('EndDate', \"\");\n                validationResult.setErrorMap('EndTime', \"Wrong_End_Time\");\n            }\n        }\n    }\n\n    private combineDateTime(date, time): Date {\n        return new Date(getYear(date), getMonth(date), getDate(date), getHours(time), getMinutes(time));\n    }\n\n    private getAlertOption(IsAllDay: boolean): Array<SelectOption> {\n        return this.alertOpt.filter(x => JSON.parse(x.getArguments()).isAllDay === IsAllDay)\n            .map(x => new SelectOption(x.getCode(), this.profileCodeService.convertCode2Text(x.getTypeId(), x.getCode())))\n    }\n\n\n}","import { InjectionToken } from \"@angular/core\";\nimport { MetaController } from \"@allianzSND/core\";\nimport { CriteriaSearch } from \"../interface/CriteriaSearch\";\nimport { CustomerImportDisplay} from \"../interface/CustomerImportDisplay\";\nimport { AddProgressPoint } from \"../interface/AddProgressPoint\";\nimport { CustomerShowRule } from \"../interface/CustomerShowRule\";\n\nexport const customerEditMetaControllerToken = new InjectionToken<MetaController>(\"customerEditMetaController\");\nexport const customerDetailMetaControllerToken = new InjectionToken<MetaController>(\"customerDetailMetaController\");\nexport const customerContactEditMetaControllerToken = new InjectionToken<MetaController>(\"customerContactEditMetaController\");\nexport const customerContactDetailMetaControllerToken = new InjectionToken<MetaController>(\"customerContactDetailMetaController\");\nexport const customerFilterMetaControllerToken = new InjectionToken<MetaController>(\"customerFilterMetaController\");\nexport const customerCriteriaSearchToken = new InjectionToken<CriteriaSearch>(\"customerCriteriaSearch\");\nexport const customerImportDisplayToken = new InjectionToken<CustomerImportDisplay>(\"customerImportDisplay\");\nexport const addProgressPointToken = new InjectionToken<AddProgressPoint>(\"addProgressPoint\");\nexport const customerShowRuleToken  = new InjectionToken<CustomerShowRule>(\"customerShowRule\");","import { Component, Input, OnInit, HostListener, Output, EventEmitter, ElementRef, Inject, Optional } from '@angular/core';\nimport { SelectOption, MetaService, MetaController, FormMetaComponent, ProfileCodeService, DefaultMetaParser, APIExecutor, MetaColumn, showRuleToken, showRule } from '@allianzSND/core';\nimport { CalendarEventDetail } from '../../service/model/CalendarEventDetail';\nimport {\n  getDate,\n  getMonth,\n  getYear,\n  format\n} from 'date-fns';\nimport { Language } from '@allianzSND/core';\nimport { calendarEditMetaControllerToken } from '../../injection-token';\nimport { DefaultCalendarEditMetaController } from './DefaultCalendarEditMetaController';\nimport { addProgressPointToken } from '../../../customer/injectionToken/injection-token';\nimport { AddProgressPoint } from '../../../customer/interface/AddProgressPoint';\n\n\n@Component({\n  selector: 'snd-calendar-edit',\n  templateUrl: './calendar-edit.component.html',\n  styleUrls: ['./calendar-edit.component.scss']\n})\nexport class CalendarEditComponent extends FormMetaComponent implements OnInit {\n\n\n  @Output() isMetaDataDone: EventEmitter<boolean> = new EventEmitter();\n\n  @Input()\n  get isSaveClick() { return this._isSaveClick; }\n  set isSaveClick(isSaveClick: boolean) {\n    console.log(\"CalendarEdit set isSaveClick:\", isSaveClick);\n    this._isSaveClick = isSaveClick;\n    if (this._isSaveClick == true) {\n      console.log(\"Click Calendar edit save\")\n      this.onBtnClick('submit', 'save');\n      setTimeout(() => {\n        this.isSaveClickChange.emit(false);\n      }, 500);\n    }\n  }\n\n  @Output() isSaveClickChange: EventEmitter<boolean> = new EventEmitter();\n\n  private _clientID;\n  private editType = 'add';\n\n  @Input()\n  public get clientID() {\n    return this._clientID;\n  }\n  public set clientID(value) {\n    this._clientID = value;\n    if (value.length == 0) {\n      this.editType = 'add';\n    }\n    else\n      this.editType = 'edit';\n    if (this.isMetaLoaded())\n      this.loadData();\n  }\n\n  public getMetaParams() {\n    return {\n      \"_clientID\": this._clientID\n    };\n  }\n\n\n  // Forå®¢æ¶Selectç¨çé¸é \n  @Input()\n  get customerItemList() { return this.customerClientOptionList }\n  set customerItemList(customerItemList: Array<SelectOption>) {\n    console.log(\"calendar-edit set customerItemList:\", customerItemList);\n    this.customerClientOptionList = customerItemList;\n    if (this._data)\n      this.fillDefaultVal();\n  }\n\n  // For EventListç¨ç\n  @Input()\n  get translateMap() { return this._translateMap }\n  set translateMap(translateMap: Map<string, string>) {\n    this._translateMap = translateMap;\n  }\n\n\n  @Input()\n  get viewDate() { return this._viewDate }\n  set viewDate(viewDate: Date) {\n    console.warn('viewDateChange');\n    this._viewDate = viewDate;\n  }\n\n\n  // For EventListç¨ç\n  @Input()\n  get todayCalendarEvent() { return this.calendarEventList }\n  set todayCalendarEvent(calendarEventList: Array<CalendarEventDetail>) {\n    this.calendarEventList = calendarEventList;\n  }\n\n  @Output() saveEvent = new EventEmitter();\n\n  private _viewDate: Date = new Date();\n  private _isSaveClick: boolean = false;\n  public showDate: string;\n  public language: Language = new Language();\n  public _translateMap: Map<string, string> = new Map<string, string>();\n\n\n  public _calendarEventDetail: CalendarEventDetail; //Detail\n  public windowWidth: number;\n  public calendarEventList: Array<CalendarEventDetail> = [];\n  public activityOptionList: Array<SelectOption> = [];\n  public customerClientOptionList: Array<SelectOption> = [];\n  public alertOptionList: Array<SelectOption> = [];\n  public startDate: Date;\n  public endDate: Date;\n  public eventListBGColor = 'transparent';\n  private _metaController: MetaController;\n\n  constructor(\n    private elementRef: ElementRef,\n    protected metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: APIExecutor,\n    defaultMetaController: DefaultCalendarEditMetaController,\n    @Optional() @Inject(calendarEditMetaControllerToken) customMetaController: MetaController,\n    @Optional() @Inject(addProgressPointToken) private addProgressPoint: AddProgressPoint,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n    console.log(\"calendar-edit construct:\", defaultMetaController, customMetaController);\n    if (customMetaController)\n      this._metaController = customMetaController;\n    else\n      this._metaController = defaultMetaController;\n  }\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n    this.editEvent();\n    super.ngOnInit();\n  }\n\n  btnClick(type: string, id: string) {\n    if (type === 'submit') {\n      //offline add progress point\n      console.log(\"calendar addProgressPoint\", this.addProgressPoint);\n      if (this.addProgressPoint && this.editType == \"add\") {\n        this.addProgressPoint.addCalendarPoint(this._data, 1);\n      }\n      this.saveEvent.emit({ data: this._data, type: this.editType });\n    }\n    this._metaController.btnClick(type, id, this._data);\n  }\n  onValidateAll() {\n    let result = true;\n    if (!this.validationResult.isTrue()) {\n      //If basic validation has error.\n      result = false;\n      if (this.validationResult.isError('Note'))\n        alert(\"Note \" + this.validationResult.getErrorMsg(\"Note\"));\n    }\n    else {\n      result = this._metaController.onValidateAll(this._data, this.validationResult);\n      console.log(\"onValidate:\", result);\n    }\n\n\n    if (!result) {\n      this.saveEvent.emit({ data: null, type: 'fail' });\n      this.scrollToError();\n    }\n    return result;\n\n  }\n  getMetaID() {\n    return 'calendarEdit';\n  }\n  onValueChange(column: string, value: any, groupId: string = null, index: number = -1) {\n    this._data[column] = value;\n    this._metaController.onValueChange(column, value, groupId, index, this._data, this.validationResult);\n  }\n\n  onDataUpdated() {\n    super.onDataUpdated();\n    console.log(\"Calendar Edit DataUpdated:\", this._data);\n    this._data[\"ViewDate\"] = this._viewDate;\n    this._data[\"EditType\"] = this.editType;\n    this._data[\"CustomerClientID\"] = this._customerClientID ? this._customerClientID : this._data[\"CustomerClientID\"];;\n    this.fillDefaultVal();\n    if (this._metaController) {\n      this._metaController.onDataUpdated(this._data);\n    }\n    \n    this.isMetaDataDone.emit(true);\n\n  }\n\n  shouldHidden(id: string): boolean {\n    let alertId = ['Alert1', 'Alert2'];\n    let timePickerId = ['StartTime', 'EndTime'];\n    if (alertId.indexOf(id) > -1)\n      return this._data[\"IsAlert\"] === 'N';\n    else if (timePickerId.indexOf(id) > -1)\n      return this._data[\"IsAllDay\"] === 'Y';\n    else if (id === 'CustomerClientID')\n      return this._customerClientID.length > 0;\n  }\n\n  private _customerClientID = '';\n\n  @Input()\n  get customerClientID() {\n    return this._customerClientID;\n  }\n\n  set customerClientID(id: string) {\n    this._customerClientID = id;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get rowConfig(): Array<Array<MetaColumn>> {\n    return this.metaConfig.Rows;\n  }\n\n\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowWidth = event.target.innerWidth;\n    // wle.warn('Width: ', this.windowWidth);\n  }\n\n  private fillDefaultVal() {\n    this._data[\"CustomerClientIDOption\"] = this.customerClientOptionList;\n  }\n\n  editEvent() {\n    this.showDate = this._convertDate(this._viewDate);\n    console.log(\"EditEvent showDate:\", this.showDate);\n  }\n\n  isMetaLoaded() {\n    return this.metaLoaded;\n  }\n\n  scrollToError() {\n    console.log('in scrollToError');\n    setTimeout(() => {\n      let errorBlock = this.elementRef.nativeElement.querySelector('.error-msg');\n      let scrollContent = document.querySelector('.calendar-edit-content').querySelector('.form-scroll-content');\n      if (errorBlock && scrollContent) {\n        let move = errorBlock.offsetTop - 50;\n        scrollContent.scrollTo({ top: move, behavior: \"smooth\" });\n        console.log('scrollToError', move);\n      }\n      console.log('scrollToError', scrollContent,errorBlock);\n      \n    }, 200)\n  }\n\n  private _convertDate(date: Date) {\n    if (this.showRule) {\n      return this.showRule.convertDate(date);\n    }\n    else {\n      return format(date, 'MM/dd/yyyy');\n    }\n  }\n\n}\n","import { MetaController, ValidationResult } from \"@allianzSND/core\";\nimport { Injectable } from \"@angular/core\";\n\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DefaultCalendarDetailMetaController implements MetaController {\n\n    onDataUpdated(data: any) { }\n\n    onValidateAll(data: any) {\n        return true;\n    }\n    onValueChange(column: string, value: any, groupId: string, index: number, data: any, vaildResult: ValidationResult) {\n\n    }\n\n    btnClick(type: string, id: string, data: any) { }\n}","import { Component, Input, OnInit, Optional, Inject, Output, EventEmitter } from '@angular/core';\nimport { CalendarEventDetail } from '../../service/model/CalendarEventDetail';\nimport { isSameDay } from 'date-fns';\nimport { Language, MetaService, MetaController, DisplayMetaComponent, ProfileCodeService, DefaultMetaParser, APIExecutor, MetaColumn } from '@allianzSND/core';\nimport { StringUtils } from '@allianzSND/core';\nimport { calendarDetailMetaControllerToken } from '../../injection-token';\nimport { DefaultCalendarDetailMetaController } from './DefaultCalendarDetailMetaController';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'snd-calendar-detail',\n  templateUrl: './calendar-detail.component.html',\n  styleUrls: ['./calendar-detail.component.scss']\n})\nexport class CalendarDetailComponent extends DisplayMetaComponent implements OnInit {\n\n  @Output() isMetaDataDone: EventEmitter<boolean> = new EventEmitter();\n  \n  @Input()\n  get calendarEventDetail() { return this._calendarEventDetail }\n  set calendarEventDetail(calendarEventDetail) {\n    if (StringUtils.isNotEmpty(calendarEventDetail)) {\n      this._calendarEventDetail = calendarEventDetail;\n      this.isSameDay = isSameDay(this._calendarEventDetail.end, this._calendarEventDetail.start);\n      this.isAllDay = calendarEventDetail.allDay;\n      this._clientID = calendarEventDetail.clientID;\n      if (this.isMetaLoaded())\n        this.loadData();\n    }\n  }\n\n  private _customerClientName = '';\n\n  @Input()\n  get customerClientName() {\n    return this._customerClientName;\n  }\n\n  set customerClientName(val) {\n    this._customerClientName = val;\n    this.waitUntilMetaLoaded().then(() => {\n      this.onDataUpdated();\n    })\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get rowConfig(): Array<Array<MetaColumn>> {\n    return this.metaConfig.Rows;\n  }\n\n\n  public language: Language = new Language();\n  public _calendarEventDetail: CalendarEventDetail; //Detail\n  public isSameDay: boolean = true;\n  public isAllDay: boolean = false;\n\n  private _metaController = null;\n  private _clientID: string = '';\n\n\n  constructor(\n    private DatePipe: DatePipe,\n    metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: APIExecutor,\n    defaulterMetaController: DefaultCalendarDetailMetaController,\n    @Optional() @Inject(calendarDetailMetaControllerToken) customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n    if (customMetaController) {\n      this._metaController = customMetaController;\n    }\n    else\n      this._metaController = defaulterMetaController;\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n\n  getMetaID() {\n    return 'calendarDetail';\n  }\n\n  getMetaParams() {\n    return {\n      _clientID: this._clientID\n    };\n  }\n\n  onDataUpdated() {\n    super.onDataUpdated();\n    console.log(\"calendar-detail onDataUpdated:\", this._data);\n    this._data[\"CustomerClientName\"] = this._customerClientName;\n    this._data[\"DisplayDate\"] = this.getDisplayDateHTML();\n    this.isMetaDataDone.emit(true);\n  }\n\n  private getDisplayDateHTML(): string {\n    let _HTML = '';\n    let start = new Date(this._data[\"StartTime\"]);\n    let end = new Date(this._data[\"EndTime\"]);\n    if (this.isAllDay) {\n      _HTML = `${this.DatePipe.transform(start, 'MM/dd/y')}-${this.DatePipe.transform(end, 'MM/dd/y')}`;\n    }\n    else {\n      if (this.isSameDay)\n        _HTML = `${this.DatePipe.transform(start, 'MM/dd/y HH:mm')}-${this.DatePipe.transform(end, 'HH:mm')}`;\n      else\n        _HTML = `${this.DatePipe.transform(start, 'MM/dd/y HH:mm')}-<br />${this.DatePipe.transform(end, 'MM/dd/y HH:mm')}`;\n    }\n    return _HTML;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ProfileCode} from '@allianzSND/core';\n\n@Component({\n  selector: 'snd-calendar-filter',\n  templateUrl: './calendar-filter.component.html',\n  styleUrls: ['./calendar-filter.component.scss']\n})\nexport class CalendarFilterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  private _optionMap : Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public currentFilterOptionList: Array<string> = [];\n\n  @Input()\n  get optionMap() {return this._optionMap}\n  set optionMap(optionMap : Map<string, Array<ProfileCode>>) {\n    this._optionMap = optionMap;\n    this.activityTypeList = this._optionMap.get('Calendar_Type');\n    this.activityTypeList.forEach((codeItem) => {\n      if (codeItem.isCheck) {\n        this.currentFilterOptionList.push(codeItem.getCode());\n      }\n    });\n  }\n\n  @Output() activityTypeListChange = new EventEmitter();\n\n  onActivityFilter() {\n    this.activityTypeListChange.emit(this.activityTypeList);\n  } // filter event\n\n  toActivityColor(item: ProfileCode) {\n    return JSON.parse(item.getArguments()).color;\n  }\n}\n","export class CalendarEventColor {\n  private _primary: string;\n  private _secondary: string;\n\n  constructor(primary: string, secondary: string) {\n    this._primary = primary;\n    this._secondary = secondary;\n  }\n\n  setCalendarEventColor(primary: string, secondary: string) {\n    this._primary = primary;\n    this._secondary = secondary;\n  }\n\n  set primary(primary) {\n    this._primary = primary;\n  }\n\n  set secondary(secondary) {\n    this._secondary = secondary;\n  }\n\n  get primary() {\n    return this._primary;\n  }\n\n  get secondary() {\n    return this._secondary;\n  }\n}\n","import {CalendarEventColor} from './CalendarEventColor';\nimport { StringUtils } from '@allianzSND/core';\n\nexport class CalendarEventDetail {\n  private _clientID: string;\n  private _calendarID: string;\n  private _customerClientID: string;\n  private _title: string;\n  private _location: string;\n  private _activity :string;\n  private _isAllDay: boolean;\n  private _start: Date;\n  private _end: Date;\n  private _isAlert: boolean;\n  private _alert1: string;\n  private _alert2: string;\n  private _alert3: string;\n  private _remark: string;\n  private _color;\n  private _displayActivity: string;\n  private _displayAlert1: string;\n  private _displayAlert2: string;\n\n  constructor(clientID: string,calendarID: string, customerClientID: string, title: string, location: string, calendarType: string,isAllDay: string, start: Date, end: Date, isAlert: string, alert1: string, alert2: string, alert3: string, remark: string, color: string) {\n    this._clientID = clientID;\n    this._calendarID = calendarID;\n    this._customerClientID = customerClientID;\n    this._title = title;\n    this._location = location;\n    this._activity = calendarType;\n    this._isAllDay = (isAllDay == 'Y');\n    this._start = new Date(start);\n    this._end = new Date(end);\n    this._isAlert = (isAlert == 'Y');\n    this._alert1 = alert1;\n    this._alert2 = alert2;\n    this._alert3 = alert3;\n    this._remark = remark;\n\n\n    if(StringUtils.isEmpty(this._customerClientID)) this._customerClientID = null;\n    if(StringUtils.isEmpty(this._activity)) this._activity = null;\n    if(StringUtils.isEmpty(this._title)) this._title = '';\n    if(StringUtils.isEmpty(this._location)) this._location = '';\n    if(StringUtils.isEmpty(this._alert1)) this._alert1 = '';\n    if(StringUtils.isEmpty(this._alert2)) this._alert2 = null;\n    if(StringUtils.isEmpty(this._alert3)) this._alert3 = '';\n    if(StringUtils.isEmpty(this._remark)) this._remark = '';\n\n    let eventColor = JSON.parse(color);\n    if(eventColor != null)\n      this._color = new CalendarEventColor(eventColor.color, eventColor.backgroundColor);\n  }\n\n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  set calendarID(calendarID: string) {\n    this._calendarID = calendarID\n  }\n\n  set customerClientID(customerClientID: string) {\n    this._customerClientID = customerClientID;\n  }\n  \n  set title(title: string) {\n    this._title = title;\n  }\n\n  set location(location: string) {\n    this._location = location;\n  }\n\n  set activity(calendarType: string) {\n    this._activity = calendarType;\n  }\n\n  set allDay(isAllDay : boolean) {\n    this._isAllDay = isAllDay;\n  }\n\n  set start(date: Date) {\n    this._start = date;\n  }\n\n  set end(date: Date) {\n    this._end = date;\n  }\n\n  set isAlert(isAlert: boolean) {\n    this._isAlert = isAlert;\n  }\n\n  set alert1(alert1: string) {\n    this._alert1 = alert1;\n  }\n\n  set alert2(alert2: string) {\n    this._alert2 = alert2;\n  }\n\n  set alert3(alert3: string) {\n    this._alert3 = alert3;\n  }\n\n  set remark(remark: string) {\n    this._remark =  remark;\n  }\n\n  set color(color: string) {\n    let eventColor = JSON.parse(color);\n    if(eventColor != null)\n      this._color = new CalendarEventColor(eventColor.color, eventColor.backgroundColor);\n  }\n\n  set displayActivity(displayActivity : string) {\n    this._displayActivity = displayActivity;\n  }\n\n  set displayAlert1(displayAlert1 : string) {\n    this._displayAlert1 = displayAlert1;\n  }\n\n  set displayAlert2(displayAlert2 : string) {\n    this._displayAlert2 = displayAlert2;\n  }\n\n  get clientID() {\n    return this._clientID;\n  }\n\n  get calendarID() {\n    return this._calendarID;\n  }\n\n  get customerClientID() {\n    return this._customerClientID;\n  }\n  \n  get title() {\n    return this._title;\n  }\n\n  get location() {\n    return this._location;\n  }\n\n  get activity() {\n    return this._activity;\n  }\n\n  get allDay() {\n    return this._isAllDay;\n  }\n\n  get start() {\n    return this._start;\n  }\n\n  get end() {\n    return this._end;\n  }\n\n  get isAlert() {\n    return this._isAlert;\n  }\n\n  get alert1() {\n    return this._alert1;\n  }\n\n  get alert2() {\n    return this._alert2;\n  }\n\n  get alert3() {\n    return this._alert3;\n  }\n\n  get remark() {\n    return this._remark;\n  }\n\n  get color() {\n    return this._color;\n  }\n\n  get displayActivity() {\n    return this._displayActivity;\n  }\n\n  get displayAlert1() {\n    return this._displayAlert1;\n  }\n\n  get displayAlert2() {\n    return this._displayAlert2;\n  }\n}\n","import { Injectable, inject, Inject } from '@angular/core';\nimport { APIDispatch } from '@allianzSND/core';\nimport { APIFactory } from '@allianzSND/core';\nimport { CalendarEventListAPI } from '../api/CalendarEventListAPI';\nimport { Observable } from 'rxjs';\nimport {CalendarEventDetail} from './model/CalendarEventDetail';\nimport {CalendarEventDetailAPI} from '../api/CalendarEventDetailAPI';\nimport {CalendarEventDeleteAPI} from '../api/CalendarEventDeleteAPI';\nimport {CalendarEventAddAPI} from '../api/CalendarEventAddAPI';\nimport {CalendarEventUpdateAPI} from '../api/CalendarEventUpdateAPI';\nimport {ProfileCodeService} from '@allianzSND/core';\nimport {ValidationResult} from '@allianzSND/core';\nimport {differenceInMinutes, isSameDay} from 'date-fns';\nimport { StringUtils } from '@allianzSND/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n  constructor(private dispatch: APIDispatch,\n              private profileCodeService: ProfileCodeService,\n              private APIFactory: APIFactory,\n) {\n    //register api\n  }\n\n  getCalendarEventList(start: Date, end: Date, key:string): Observable<Array<CalendarEventDetail>> {\n\n    console.debug('calendar-service-getCalendarEventList',start,end,key);\n\n    let calendarEventListAPI: CalendarEventListAPI = <CalendarEventListAPI>this.APIFactory.getAPI('getCalendarEventList');\n    calendarEventListAPI.startTime = start;\n    calendarEventListAPI.endTime = end;\n\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventListAPI).subscribe((data) => {\n        console.debug('calendar-service-getCAlendarEventList response',data);\n\n        let returnList: Array<CalendarEventDetail> = [];\n        let calendarEventList = data['Body'];\n        if(calendarEventList) {\n          for (let i = 0; i < calendarEventList.length; i++) {\n            let json = calendarEventList[i];\n            let event = new CalendarEventDetail(json.ClientID,\n              json.CalendarID,\n              json.CustomerClientID,\n              json.Title,\n              json.Location,\n              json.CalendarType,\n              json.IsAllDay,\n              new Date(json.StartTime),\n              new Date(json.EndTime),\n              json.Remark,\n              json.IsAlert,\n              json.Alert1,\n              json.Alert2,\n              json.Alert3,\n              this.profileCodeService.getArgumentsByCode('Calendar_Type',json.CalendarType));\n            returnList.push(event);\n          }\n          returnList = this.sortCalendarEventList(returnList);\n          observer.next(returnList);\n          observer.complete();\n        } else {\n          observer.next([]);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  getCalendarEventDetail(clientID: string): Observable<CalendarEventDetail> {\n    let calendarEventDetailAPI: CalendarEventDetailAPI = <CalendarEventDetailAPI>this.APIFactory.getAPI('getCalendarEventDetail');\n    calendarEventDetailAPI.ClientID = clientID;\n    return Observable.create((observer)=>{\n      this.dispatch.dispatch(calendarEventDetailAPI).subscribe((data) => {\n        let detail;\n        let eventDetail  = data['Body'];\n        eventDetail = eventDetail[0];\n        detail = new CalendarEventDetail(eventDetail.ClientID,eventDetail.CalendarID,eventDetail.CustomerClientID,eventDetail.Title,eventDetail.Location,eventDetail.CalendarType,eventDetail.IsAllDay,new Date(eventDetail.StartTime),new Date(eventDetail.EndTime),eventDetail.IsAlert,eventDetail.Alert1, eventDetail.Alert2, eventDetail.Alert3,eventDetail.Remark,this.profileCodeService.getArgumentsByCode('Calendar_Type',eventDetail.CalendarType));\n        observer.next(detail);\n        observer.complete();\n      });\n    });\n  }\n\n  deleteCalendarEvent(clientID: string): Observable<any>  {\n    let calendarEventDeleteAPI:  CalendarEventDeleteAPI = <CalendarEventDeleteAPI>this.APIFactory.getAPI('deleteCalendarEvent');\n    calendarEventDeleteAPI.clientID = clientID;\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventDeleteAPI).subscribe((data) => {\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n  }\n\n  addCalendarEvent(event: CalendarEventDetail): Observable<any>  {\n    event = this.adjustAlert(event);\n    let calendarEventAddAPI:  CalendarEventAddAPI = <CalendarEventAddAPI>this.APIFactory.getAPI('addCalendarEvent');\n    calendarEventAddAPI.setCalendarEvent(event);\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventAddAPI).subscribe((data) => {\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n  }\n\n  updateCalendarEvent(clientID: string,event: CalendarEventDetail): Observable<any>  {\n    event = this.adjustAlert(event);\n    let calendarEventUpdateAPI:  CalendarEventUpdateAPI = <CalendarEventUpdateAPI>this.APIFactory.getAPI('updateCalendarEvent');\n    calendarEventUpdateAPI.ClientID = clientID;\n    calendarEventUpdateAPI.setCalendarEvent(event);\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventUpdateAPI).subscribe((data) => {\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  adjustAlert(event: CalendarEventDetail): CalendarEventDetail {\n\n    if(event.alert1 == 'Default') event.alert1 = '';\n    if(event.alert2 == 'Default') event.alert2 = '';\n\n    //when alert1 & alert2 have data and not empty\n    if(event.isAlert && StringUtils.isNotEmpty(event.alert1) && StringUtils.isNotEmpty(event.alert2)) {\n      if(event.allDay) { // sort alert if allDay\n        if(JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert1)).day > JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert2)).day) {\n          let temp = event.alert1 ;\n          event.alert1 = event.alert2;\n          event.alert2 = temp;\n        }\n      } else { // sort if not allDay\n        if(JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert1)).min > JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert2)).min) {\n          let temp = event.alert1 ;\n          event.alert1 = event.alert2;\n          event.alert2 = temp;\n        }\n      }\n    }\n    else if(!event.isAlert) {\n      event.alert1 = '';\n      event.alert2 = '';\n      event.alert3 = '';\n    }\n    event.color = this.profileCodeService.getArgumentsByCode('Calendar_Type',event.activity); // get activity color\n    return event;\n  }\n\n  calendarValidation(data): ValidationResult {\n    let validationResult = new ValidationResult();\n    if (data.title == '')\n      validationResult.setErrorMap('title', 'required');\n    if (data.title.length > 60) //title length\n      validationResult.setErrorMap('title', 'maxLength');\n    if (data.location == '')\n      validationResult.setErrorMap('location', 'required');\n    if (data.location.length > 100) //title length\n      validationResult.setErrorMap('location', 'maxLength');\n    if (data.activity == 'Default' || data.activity == '') // activity validate\n      validationResult.setErrorMap('activity', 'required');\n    if (data.isAlert == true && (data.alert1 == 'Default') && (data.alert2 == 'Default'))\n      validationResult.setErrorMap('alert1', 'required');\n    if (data.isAlert == true && (data.alert1 == data.alert2) && data.alert1 != 'Default')\n      validationResult.setErrorMap('alert2', 'sameAlert');\n    if (differenceInMinutes(data.end,data.start) < 15 && differenceInMinutes(data.end,data.start) >= 0 && data.allDay != true) {\n      validationResult.setErrorMap('time', 'minTime');\n    } else if(differenceInMinutes(data.end,data.start) < 0) {\n      validationResult.setErrorMap('time', 'errorTime');\n    }\n    if (data.remark.length > 500)\n      validationResult.setErrorMap('remark', 'maxLength');\n    return validationResult;\n  }\n\n  sortCalendarEventList(calendarEventList: Array<CalendarEventDetail>): Array<CalendarEventDetail> {\n    for (let i = 0; i < calendarEventList.length - 1; i++) {\n      for (let j = i + 1; j < calendarEventList.length; j++) {\n        if(calendarEventList[j].allDay && !calendarEventList[i].allDay) {\n          let temp = calendarEventList[i];\n          calendarEventList[i] = calendarEventList[j];\n          calendarEventList[j] = temp;\n        }\n      }\n    }\n    for (let i = 0; i < calendarEventList.length - 1; i++) {\n      for (let j = i + 1; j < calendarEventList.length; j++) {\n        if(calendarEventList[j].allDay == calendarEventList[i].allDay) {\n          if(calendarEventList[i].allDay) {\n            if(calendarEventList[j].start < calendarEventList[i].start) {\n              let temp = calendarEventList[i];\n              calendarEventList[i] = calendarEventList[j];\n              calendarEventList[j] = temp;\n            } else if(isSameDay(calendarEventList[j].start, calendarEventList[i].start)) {\n              if (calendarEventList[j].end > calendarEventList[i].end){\n                let temp = calendarEventList[i];\n                calendarEventList[i] = calendarEventList[j];\n                calendarEventList[j] = temp;\n              }\n            }\n          } else {\n            if(calendarEventList[j].start < calendarEventList[i].start) {\n              let temp = calendarEventList[i];\n              calendarEventList[i] = calendarEventList[j];\n              calendarEventList[j] = temp;\n            }\n          }\n        }\n      }\n    }\n    return calendarEventList\n  }\n}\n","export class CustomerFilterPreset{\n    \n    public addValues(column : string,values : Array<string>) {\n        this[column] = values;        \n        \n    }\n\n}","import { CustomerFilterPreset } from \"./customer-filter-preset\";\nimport { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerFilterCriteria {\n    private _keyword: string;\n    private filterMap: Map<string, Array<string>> = new Map<string, Array<string>>();\n    private optionMap: Map<string, any> = new Map<string, any>();\n    public extension = {};\n\n    constructor(keyword = '', filterMap = new Map<string, Array<string>>()) {\n        this._keyword = keyword;\n        this.filterMap = filterMap;\n    }\n\n    addCriteria(filterCol: string, value: string) {\n        let values: Array<string> = this.filterMap.get(filterCol);\n        if (values == undefined) values = new Array<string>();\n\n        if (!values.includes(value)) {\n            values.push(value);\n\n            this.filterMap.set(filterCol, values);\n        }\n    }\n\n    addCriteriaCols(filterCol: string, values: string[]) {\n        this.filterMap.set(filterCol, values);\n    }\n\n    hasCriteria() {\n        return this.filterMap.size != 0 || StringUtils.isNotEmpty(this._keyword);\n    }\n\n    set keyword(keyword: string) { this._keyword = keyword }\n    get keyword() { return this._keyword }\n\n    getFilterMap() {\n        return this.filterMap;\n    }\n\n    getOptionMap() {\n        return this.optionMap;\n    }\n\n    setOption(name: string, value: any) {\n        this.optionMap.set(name, value);\n    }\n\n    getOption(name: string) {\n        if (this.optionMap.has(name))\n            return this.optionMap.get(name);\n        else\n            return null;\n    }\n\n\n\n    toPresetJSON(): CustomerFilterPreset {\n        let preset = new CustomerFilterPreset();\n\n        this.filterMap.forEach((value: Array<string>, column: string) => {\n            preset.addValues(column, value);\n        });\n        console.debug('toPresetJSON', preset);\n\n        return preset;\n    }\n\n    toMetaJSON(): CustomerFilterPreset {\n        let preset = this.toPresetJSON();\n        this.optionMap.forEach((value: any, column: string) => {\n            preset.addValues(column, value);\n        })\n        return preset;\n\n    }\n\n\n    public clone(): CustomerFilterCriteria {\n        let cloneCriteria: CustomerFilterCriteria = new CustomerFilterCriteria();\n        cloneCriteria._keyword = this._keyword;\n        cloneCriteria.filterMap = new Map(this.filterMap);\n        cloneCriteria.optionMap = new Map(this.optionMap);\n        cloneCriteria.extension = Object.assign({}, this.extension);\n\n        return cloneCriteria;\n    }\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerItem{\n    \n    private _clientID : string;\n    private _firstName : string;\n    private _lastName : string;\n    private _showName: string;\n    private _tag : string;\n    private _complementPercent : number;\n    private _isFollow : boolean;\n    private _isOtherSource : boolean;\n    private _isHighlight : boolean;\n\n    constructor(clientID : string,firstName : string ,lastName : string, possibility : string ,\n         complementPercent : number,isFollow : boolean , isOtherSource : boolean , isOverTimeAlert : string) {\n\n        this._clientID = clientID;\n        this._firstName = firstName;\n        this._lastName = lastName;\n        this._tag = possibility;\n        this._complementPercent = complementPercent;\n        this._isFollow = isFollow;\n        this._isOtherSource = isOtherSource;\n        \n        if(isOverTimeAlert == 'Y') {\n            this._isHighlight = true;\n        }\n\n        if(StringUtils.isEmpty(this._firstName)) this._firstName = '';\n    }\n\n\n    get isOtherSource() {\n        return this._isOtherSource;\n    }\n\n    get isFollow() {\n        return this._isFollow;\n    }\n\n    get clientID(){\n        return this._clientID;\n    }\n\n    get firstName(){\n        return this._firstName;\n    }\n\n    get lastName(){\n        return this._lastName;\n    }\n\n    get tag(){\n        return this._tag;\n    }\n\n    get complementPercent(){\n        return this._complementPercent;\n    }\n\n    set clientID(clientID : string){\n        this._clientID = clientID;\n    }    \n\n    set firstName(name : string){\n        this._firstName = name;\n    }\n\n    set lastName(name : string){\n        this._lastName = name;\n    }\n\n    set tag(tag : string){\n        this._tag = tag;\n    }\n\n    set complementPercent(complementPercent : number){\n        this._complementPercent = complementPercent;\n    }\n\n    set isFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    set isOtherSource(isOtherSource : boolean) {\n        this._isOtherSource = isOtherSource;\n    }\n\n    get isHighlight() {\n        return this._isHighlight;\n    }\n\n    set isHighLight(isHighLight : boolean) {\n        this._isHighlight = isHighLight;\n    }\n\n    get showName() {\n        return this._showName;\n    }\n    \n    set showName(showName: string) {\n        this._showName = showName;\n    }\n\n\n    clone():CustomerItem {\n        return new CustomerItem(this._clientID, this._firstName, this._lastName, this._tag, this._complementPercent, this._isFollow, this._isOtherSource, (this._isHighlight ? 'Y' : 'N'));\n    }\n}","export class CustomerAlertItem {\n    private _clientID : string;\n    private _name : string;\n\n    constructor(clientID : string, name : string) {\n       this._clientID = clientID;\n       this._name = name;  \n    }\n\n   get clientID() {\n       return this._clientID;\n   }\n\n   get name(){\n    return this._name;\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerTel {\n\n    public clientID: string;\n    public telType: string;\n    public tel: string;\n    public dataSource: string;\n\n    constructor(clientID: string, telType: string, tel: string, dataSource: string) {\n        this.clientID = clientID;\n        this.telType = telType;\n        this.tel = tel;\n        this.dataSource = dataSource;\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.tel);\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\nimport { getMonth, getDate } from 'date-fns';\n\nexport class CustomerBirthday{\n    \n    private _clientID : string;\n    public lastName : string;\n    public firstName : string;\n    public birthdayMonth : string;\n    public birthdayDate : string;\n\n    constructor(clientID : string,firstName : string ,lastName : string, birthdayMonth: string , birthdayDate : string) {\n\n        this._clientID = clientID;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.birthdayMonth = birthdayMonth;\n        this.birthdayDate =  birthdayDate;\n       \n\n         if(StringUtils.isEmpty(this.firstName)) this.firstName = '';\n\n    }\n\n    clone(): CustomerBirthday{\n        return new CustomerBirthday(this._clientID, this.firstName, this.lastName, this.birthdayMonth, this.birthdayDate);\n    }\n\n\n   \n\n   \n}","import { CriteriaSearch } from \"../../interface/CriteriaSearch\";\nimport { Injectable } from \"@angular/core\";\nimport { CustomerFilterCriteria } from \"../bean/customer-filter-criteria\";\nimport { IRestriction, StringUtils, ORCompoundRestriction, LikeRestriction, InRestriction, EqualRestriction, AndCompoundRestriction, NotEqualRestriction, ProfileCodeService, GreaterOrEqualRestriction, LessOrEqualRestriction } from \"@allianzSND/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DefaultCustomerCriteriaSearch implements CriteriaSearch {\n\n    constructor(\n        private profileCodeService: ProfileCodeService\n    ) { }\n\n    getRestriction(criteria: CustomerFilterCriteria): Array<IRestriction> {\n\n        console.debug('DefaultCustomerCriteriaSearch criteria:', criteria);\n\n        let keyword = criteria.keyword;\n\n        let conditions = [];\n\n        console.debug('customerListAPI keyword', keyword);\n        if (StringUtils.isNotEmpty(keyword)) {\n            let compoundRestriction = new ORCompoundRestriction([new LikeRestriction('FirstName', [keyword]), new LikeRestriction('LastName', [keyword])]);\n            conditions.push(compoundRestriction);\n        }\n\n        let filterMap: Map<string, Array<string>> = criteria.getFilterMap();\n\n        filterMap.forEach((array: Array<string>, key: string) => {\n            console.log(key, array);\n\n            if (key == 'Birthday') {\n                let birthdayRestriction = new Array<IRestriction>();\n                let monthArray = new Array<string>();\n                for (let birthday of array) {\n                    if (birthday == 'Today') {\n                        let today = new Date();\n                        let startNum = today.getMonth() + 1;\n                        let endNum = today.getDate();\n                        let start = String(startNum);\n                        let end = String(endNum);\n                        if (start.length == 1) start = '0' + start;\n                        if (end.length == 1) end = '0' + end;\n\n                        birthdayRestriction.push(new AndCompoundRestriction([new EqualRestriction('BirthdayMonth', [start]),\n                        new EqualRestriction('BirthdayDate', [end])]));\n                    }\n                    else {\n                        if (birthday.length == 1) birthday = '0' + birthday;\n                        monthArray.push(birthday);\n                    }\n                }\n\n                if (monthArray.length != 0) {\n                    birthdayRestriction.push(new InRestriction('BirthdayMonth', monthArray));\n                }\n\n                conditions.push(new ORCompoundRestriction(birthdayRestriction));\n            }\n            else if (key == 'CustomerSource') {\n                if (array.length != 2) {\n                    let datasource = array[0];\n                    if (datasource == 'E') {\n                        conditions.push(new EqualRestriction('DataSource', ['OPUS']));\n                    }\n                    else {\n                        conditions.push(new NotEqualRestriction('DataSource', ['OPUS']));\n                    }\n\n                }\n            }\n            else if (key == 'Completeness') {\n                let completenessOption = this.profileCodeService.getCodeArray('Customer_Completeness');\n                let completenessRestriction = new Array<IRestriction>();\n                completenessOption.forEach(profileCode => {\n                    let code = profileCode.getCode();\n                    if (array.includes(code)) {\n                        let obj = JSON.parse(profileCode.getArguments());\n                        let start = obj.start;\n                        let end = obj.end;\n                        start = start / 100;\n                        end = end / 100;\n\n                        completenessRestriction.push(new AndCompoundRestriction([new GreaterOrEqualRestriction('Completeness', [start]), new LessOrEqualRestriction('Completeness', [end])]));\n                    }\n                })\n\n                console.debug('completenessRestriction length', completenessRestriction.length);\n                console.log('completenessRestriction:', completenessRestriction);\n                if (completenessRestriction.length != 0) {\n                    conditions.push(new ORCompoundRestriction(completenessRestriction));\n                }\n\n            }\n            else {\n                conditions.push(new InRestriction(key, array));\n            }\n\n        });\n        return conditions;\n    }\n}","import { APIFactory, APIDispatch, ProfileCodeService, ContactItem, PageInfo, ValidationResult, StringUtils, ExtDataProcess } from '@allianzSND/core';\nimport { Injectable, Optional, Inject } from '@angular/core';\nimport { Observable, of, from } from 'rxjs';\nimport { CustomerListAPI } from '../api/CustomerListAPI';\nimport { CustomerBirthdayListAPI } from '../api/CustomerBirthdayListAPI';\nimport { CustomerDetailAPI } from '../api/CustomerDetailAPI';\nimport { CustomerContactNoteAPI } from '../api/CustomerContactNoteAPI';\nimport { CustomerItem } from './model/CustomerItem';\nimport { CustomerAlertItem } from './model/CustomerAlertItem';\nimport { CustomerTel } from './model/CustomerTel';\nimport { CustomerTelAPI } from '../api/CustomerTelAPI';\nimport { ImportContactAPI } from '../api/ImportContactAPI';\nimport { CustomerDeleteContactNoteAPI } from '../api/CustomerDeleteContactNote';\nimport { CustomerFilterCriteria } from '../components/bean/customer-filter-criteria';\nimport { CustomerDeleteAPI } from '../api/CustomerDeleteAPI';\nimport { CustomerEditOvertimeAPI } from '../api/CustomerEditOvertimeAPI';\nimport { CustomerAutoDeleteAPI } from '../api/CustomerAutoDeleteAPI';\nimport { CustomerSavePresetAPI } from '../api/CustomerSavePresetAPI';\nimport { CustomerGetPresetAPI } from '../api/CustomerGetePresetAPI';\nimport { CustomerUpdateFollowAPI } from '../api/CustomerUpdateFollowAPI';\nimport { CustomerFilterPreset } from '../components/bean/customer-filter-preset';\nimport { CustomerBirthday } from './model/CustomerBirthday';\nimport { DashboardUpdateToReadAPI } from '../api/DashboardUpdateToReadAPI';\nimport { customerCriteriaSearchToken } from '../injectionToken/injection-token';\nimport { CriteriaSearch } from '../interface/CriteriaSearch';\nimport { DefaultCustomerCriteriaSearch } from '../components/customer-filter/DefaultCustomerCriteriaSearch';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  //is first time use customer function\n  private _isFirstTime = true;\n\n\n  constructor(\n    private dispatcher: APIDispatch,\n    private APIFactory: APIFactory,\n    private profileCodeService: ProfileCodeService,\n    private defaultCriteriaSearch: DefaultCustomerCriteriaSearch,\n    @Optional() @Inject(customerCriteriaSearchToken) private customCriteriaSearch: CriteriaSearch\n  ) {\n    //register api\n  }\n\n  isFirstTime(): boolean {\n    if (this._isFirstTime) {\n      this._isFirstTime = false;\n      return true;\n    }\n    else {\n      return this._isFirstTime;\n    }\n\n  }\n\n\n\n  updateMessageToRead(messageType: string, messageDataCategory: string): Observable<any> {\n    let dashboardUpdateToReadAPI: DashboardUpdateToReadAPI = <DashboardUpdateToReadAPI>this.APIFactory.getAPI('updateDashboardToRead');\n    dashboardUpdateToReadAPI.setMessageType(messageType);\n    dashboardUpdateToReadAPI.setMessageDataCategory(messageDataCategory);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(dashboardUpdateToReadAPI).subscribe((data) => {\n\n        console.debug('dashboard-service-updateMessageToRead', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getOverTimeCustomerList(clientID): Observable<Array<CustomerAlertItem>> {\n    let customerOverTimeAPI: CustomerEditOvertimeAPI = <CustomerEditOvertimeAPI>this.APIFactory.getAPI('getCustomerOverTime');\n\n    customerOverTimeAPI.setClientID(clientID);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerOverTimeAPI).subscribe((data) => {\n\n        console.debug('customer-service-getOverTimeList', data);\n\n        let returnList = new Array<CustomerAlertItem>();\n\n        let messages = data['Body'];\n        //set body data\n        for (let i = 0; i < messages.length; i++) {\n          let message = messages[i];\n\n          let args = JSON.parse(message['Arguments']);\n          let customerList = args['customers'];\n\n          for (let j = 0; j < customerList.length; j++) {\n            let event = new CustomerAlertItem(customerList[j].id, customerList[j].name);\n            returnList.push(event);\n          }\n\n        }\n\n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  getAutoDeleteCustomerList(clientID): Observable<Array<CustomerAlertItem>> {\n    let customerDeleteAPI: CustomerAutoDeleteAPI = <CustomerAutoDeleteAPI>this.APIFactory.getAPI('getCustomerAutoDelete');\n\n    customerDeleteAPI.setClientID(clientID);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerDeleteAPI).subscribe((data) => {\n        console.log('customer-service-getAutoDeleteCustomerList', data);\n\n        let returnList = new Array<CustomerAlertItem>();\n\n        let messages = data['Body'];\n        //set body data\n        for (let i = 0; i < messages.length; i++) {\n          let message = messages[i];\n\n          let args = JSON.parse(message['Arguments']);\n          let customerList = args['customers'];\n\n          for (let j = 0; j < customerList.length; j++) {\n            let event = new CustomerAlertItem(customerList[j].id, customerList[j].name);\n            returnList.push(event);\n          }\n\n        }\n\n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  updateCustomerFollowStatus(clientID, isFollow): Observable<any> {\n    let updateCustomerFollowStatus: CustomerUpdateFollowAPI = <CustomerUpdateFollowAPI>this.APIFactory.getAPI('updateCustomerFollowStatus');\n    updateCustomerFollowStatus.setClient(clientID);\n    updateCustomerFollowStatus.setIsFollow(isFollow);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(updateCustomerFollowStatus).subscribe((data) => {\n\n        console.debug('customer-service-updateCustomerFollowStatus', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getFilterCriteriaPreset(): Observable<CustomerFilterPreset> {\n    let getFilterCriteria: CustomerGetPresetAPI = <CustomerGetPresetAPI>this.APIFactory.getAPI('getCustomerFilterPreset');\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(getFilterCriteria).subscribe((data) => {\n\n        console.debug('customer-service-getFilterCriteria', data);\n\n        let settingArray = data['Body'];\n\n        let preset: CustomerFilterPreset;\n        if (settingArray.length = !0) {\n          preset = JSON.parse(settingArray[0].SettingVal);\n        }\n\n        console.debug('customer-service-getFilterCriteriaPreset', preset);\n\n        observer.next(preset);\n        observer.complete();\n      })\n    })\n  }\n\n  saveFilterCriteria(filterCriteria: CustomerFilterCriteria): Observable<any> {\n    let saveFilterCriteria: CustomerSavePresetAPI = <CustomerSavePresetAPI>this.APIFactory.getAPI('saveCustomerFilterPreset');\n\n    saveFilterCriteria.setFilterCriteria(filterCriteria);\n\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(saveFilterCriteria).subscribe((data) => {\n\n        console.debug('customer-service-saveFilterCriteria', data);\n        observer.next(data);\n        observer.complete();\n\n      })\n    })\n  }\n\n  checkInFilterCriteria(clientID: string, filterCriteria: CustomerFilterCriteria): Observable<boolean> {\n\n    let customerListAPI: CustomerListAPI = <CustomerListAPI>this.APIFactory.getAPI('getCustomerList');\n    let restrictions = [];\n    if (this.customCriteriaSearch)\n      restrictions = this.customCriteriaSearch.getRestriction(filterCriteria);\n    else\n      restrictions = this.defaultCriteriaSearch.getRestriction(filterCriteria);\n\n\n    customerListAPI.restrictions = restrictions;\n    customerListAPI.clientID = clientID;\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerListAPI).subscribe((data) => {\n\n        console.debug('customer-service-checkInFilterCriteria', data);\n\n        observer.next(data['Body'].length != 0);\n        observer.complete();\n      })\n    })\n\n  }\n\n  //get customer datas\n  getCustomerList(filterCriteria: CustomerFilterCriteria, _pageInfo: PageInfo): Observable<Array<CustomerItem>> {\n\n    let restrictions = [];\n    if (this.customCriteriaSearch)\n      restrictions = this.customCriteriaSearch.getRestriction(filterCriteria);\n    else\n      restrictions = this.defaultCriteriaSearch.getRestriction(filterCriteria);\n\n    let customerListAPI: CustomerListAPI = <CustomerListAPI>this.APIFactory.getAPI('getCustomerList');\n\n    console.debug('customer-service-getCustomerList', filterCriteria, restrictions, _pageInfo);\n\n    customerListAPI.restrictions = restrictions;\n    customerListAPI.pageInfo = _pageInfo;\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerListAPI).subscribe((data) => {\n\n        console.debug('customer-service-getCustomerList', data);\n\n        let returnList = new Array<CustomerItem>();\n        let header = data['Header'];\n        let customerList = data['Body'];\n\n        //set header pageInfo\n        // _pageInfo.totalPage = header.PageInfo.totalPage;\n        // _pageInfo.totalRec = header.PageInfo.totalRec;\n\n        //set body data\n        for (let i = 0; i < customerList.length; i++) {\n          let json = customerList[i];\n          let isOtherSystem = json.DataSource != 'APP';\n          let isFollow = json.IsFollow == 'Y';\n          let completeness = json.Completeness;\n          let isOverTimeAlert = json.IsOverTimeAlert;\n\n\n          let event = new CustomerItem(json.ClientID, json.FirstName, json.LastName, json.Possibility, completeness, isFollow, isOtherSystem, isOverTimeAlert);\n          returnList.push(event);\n        }\n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n\n  }\n\n  getCustomerBirthdayList(targetDate, subN, addN): Observable<Array<CustomerBirthday>> {\n    let customerBirthdayListAPI: CustomerBirthdayListAPI = <CustomerBirthdayListAPI>this.APIFactory.getAPI('getCustomerBirthdayList');\n    customerBirthdayListAPI.subN = subN;\n    customerBirthdayListAPI.addN = addN;\n    customerBirthdayListAPI.targetDate = targetDate;\n\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerBirthdayListAPI).subscribe((data) => {\n\n        console.debug('customer-service-getCustomerBirthdayList', data);\n\n        let returnList: Array<CustomerBirthday> = [];\n        // let header = data['Header'];\n        let birthdayList = data['Body'];\n\n\n        console.log(\"cusSer: \", birthdayList);\n\n        // //set body data\n        for (let i = 0; i < birthdayList.length; i++) {\n          let event = new CustomerBirthday(birthdayList[i]['ClientID'], birthdayList[i]['FirstName'], birthdayList[i]['LastName'], birthdayList[i]['BirthdayMonth'], birthdayList[i]['BirthdayDate']);\n          returnList.push(event);\n        }\n        observer.next(returnList);\n        observer.complete();\n      });\n\n\n\n\n    });\n  }\n\n  getCustomerDetail(clientID: string): Observable<any> {\n    if (StringUtils.isEmpty(clientID)) {\n      return of(undefined);\n    }\n    else {\n      let customerDetailAPI: CustomerDetailAPI = <CustomerDetailAPI>this.APIFactory.getAPI('getCustomerDetail');\n      customerDetailAPI.id = clientID;\n\n      return from(this.dispatcher.dispatch(customerDetailAPI).toPromise().then(resp => {\n        if (resp.Header.status && resp.Body.length > 0)\n          return resp[\"Body\"][0];\n        else\n          return null;\n      }));\n    }\n  }\n\n  importContact(items: Array<ContactItem>): Observable<string> {\n    let importContactAPI: ImportContactAPI = <ImportContactAPI>this.APIFactory.getAPI('importContact');\n\n    console.debug('customer-service-importContact', items);\n    importContactAPI.setItems(items);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(importContactAPI).subscribe((data) => {\n        console.debug('customer-service-importContact', data);\n        observer.next(data['Header']);\n        observer.complete();\n\n      });\n    });\n  }\n\n\n\n  validProfile(customerDetail: any): ValidationResult {\n    let validationResult = new ValidationResult();\n\n    //valid required\n    if (StringUtils.isEmpty(customerDetail.lastName))\n      validationResult.setErrorMap('lastName', 'required');\n    // if (customerProfile.firstName == '')\n    //   validationResult.setErrorMap('firstName', 'required');\n\n    //valid format      \n\n    //valid email\n    if (customerDetail.emails.length != 0) {\n      let i = 0;\n      customerDetail.emails.forEach((email) => {\n        if (!email.isEmpty()) {\n          if (!this.isEmailFormat(email.email)) {\n            validationResult.setErrorMap(('email' + i).toString(), 'format');\n          }\n        }\n        i++;\n      });\n\n    }\n\n    //valid date\n    // if(customerProfile.birthday == null) {\n    //   validationResult.setErrorMap('birthday', 'date');\n    // }\n\n    return validationResult;\n  }\n\n  private isEmailFormat(email) {\n    let regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n    return regexp.test(email);\n  }\n\n\n\n  deleteCustomerProfile(clientID: string): Observable<any> {\n    console.log(\"deleteCustomerProfile\", clientID);\n    let deleteAPI: CustomerDeleteAPI = <CustomerDeleteAPI>this.APIFactory.getAPI('deleteCustomer');\n    deleteAPI.clientID = clientID;\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(deleteAPI).subscribe((data) => {\n\n        console.debug('customer-service-deleteCustomerProfile', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n\n      })\n    })\n  }\n\n  getCustomerContactNote(clientID: string, pageInfo: PageInfo): Observable<Array<any>> {\n    let customerContactNoteAPI: CustomerContactNoteAPI = <CustomerContactNoteAPI>this.APIFactory.getAPI('getCustomerContactNote');\n\n    customerContactNoteAPI.setClientID(clientID);\n    customerContactNoteAPI.setPageInfo(pageInfo);\n\n    console.debug('customer-service-getCustomerContactNote', customerContactNoteAPI);\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerContactNoteAPI).subscribe((data) => {\n        console.debug('customer-service-getCustomerContactNote', data);\n        let customerContactNoteList = data['Body'];\n        observer.next(customerContactNoteList);\n        observer.complete();\n      })\n    })\n  }\n\n\n  deleteCustomerContact(contactClientID: string): Observable<any> {\n    console.log(\"deleteCustomerContact\");\n    let deleteCustomerContactAPI: CustomerDeleteContactNoteAPI = <CustomerDeleteContactNoteAPI>this.APIFactory.getAPI('deleteCustomerContactNote');\n    deleteCustomerContactAPI.setContactClientID(contactClientID);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(deleteCustomerContactAPI).subscribe((data) => {\n\n        console.debug('customer-service-editCustomerContact', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getCustomerContactTel(clientID: string): Observable<Array<CustomerTel>> {\n    let customerTelAPI: CustomerTelAPI = <CustomerTelAPI>this.APIFactory.getAPI('getCustomerTel');\n\n    customerTelAPI.setClientID(clientID);\n\n    console.debug('customer-service-getCustomerContactTel', customerTelAPI);\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerTelAPI).subscribe((data) => {\n        console.debug('customer-service-getCustomerContactTel response', data);\n        let returnCustomerTel: Array<CustomerTel> = new Array<CustomerTel>();\n        let customerTelList = data['Body'];\n\n        customerTelList.map(tel => new CustomerTel(tel.ClientID, this.profileCodeService.convertCode2Text('Customer_TelType', tel.TelType), tel.Tel, tel.DataSource)).forEach(element => {\n          returnCustomerTel.push(element);\n        });\n\n        observer.next(returnCustomerTel);\n        observer.complete();\n      })\n    })\n  }\n\n}\n","import { ProfileCode, ProfileCodeService, SQLiteTable, StringUtils, showRuleToken } from \"@allianzSND/core\";\nimport { SelectOption, showRule} from \"@allianzSND/core\";\nimport { differenceInCalendarDays } from 'date-fns';\nimport { Injectable, Optional, Inject } from \"@angular/core\";\nimport { customerShowRuleToken } from \"../injectionToken/injection-token\";\nimport { CustomerShowRule } from \"../interface/CustomerShowRule\";\n\n\n@Injectable({ providedIn: 'root' })\nexport class CustomerUtils {\n\n    constructor(\n        private profileCodeService: ProfileCodeService,\n        @Optional() @Inject(showRuleToken) private showRule: showRule,\n        @Optional() @Inject(customerShowRuleToken) private customerShowRule: CustomerShowRule,\n\n    ) { }\n\n    setCode2Option(codeArray: Array<ProfileCode>) {\n        let options: Array<SelectOption> = new Array();\n        if (codeArray != undefined) {\n            for (let code of codeArray) {\n                options.push(new SelectOption(code.getCode(), code.displayText));\n            }\n        }\n\n\n        return options;\n    }\n\n\n    countCompleteness(customerObj: any): number {\n        console.log(\"this.customerShowRule: \",this.customerShowRule);\n        if(this.customerShowRule) {\n            return this.customerShowRule.calculateCompleteness(customerObj);\n        }\n        else {\n\n            return 0;\n        }\n    }\n\n    setCustomerDefaultValue(dataObject: SQLiteTable) {\n\n        //count age\n        if (StringUtils.isNotEmpty(dataObject.getValue('BirthdayYear')) &&\n            StringUtils.isNotEmpty(dataObject.getValue('BirthdayMonth')) &&\n            StringUtils.isNotEmpty(dataObject.getValue('BirthdayDate'))) {\n            let birthday = new Date(Number(dataObject.getValue('BirthdayYear')),\n                Number(dataObject.getValue('BirthdayMonth') - 1),\n                Number(dataObject.getValue('BirthdayDate')));\n\n            let age = this.countAge(birthday);\n            dataObject.setValue('age', age);\n\n            //check age range\n            if (StringUtils.isEmpty(dataObject.getValue('AgeRange'))) {\n                let ageRange = this.countAgeRange(age);\n                if (ageRange != undefined) {\n                    dataObject.setValue('AgeRange', ageRange);\n                }\n            }\n\n        }\n\n    }\n\n    countAgeRange(age: number) {\n        console.debug('countAgeRange', age);\n        let rangeResult;\n        let ageRange: Array<ProfileCode> = this.profileCodeService.getCodeArray('Customer_Age');\n        console.log(\"ageRange:\", ageRange);\n        ageRange.forEach(profileCode => {\n            let args = profileCode.getArguments();\n            console.debug('customer-utils countAgeRange args', args);\n\n            let obj = JSON.parse(args);\n            console.debug('customer-utils countAgeRange obj', obj);\n            if (age >= obj.start && age <= obj.end) {\n                console.debug('match age range', profileCode.getCode());\n                rangeResult = profileCode.getCode();\n            }\n        });\n\n        console.debug('rangeResult', rangeResult);\n\n        return rangeResult;\n    }\n\n    countAge(birthday: Date): number {\n        let dates = this.calCEIntervalDays(birthday, new Date());\n        console.debug('dates', dates);\n        let age = Math.floor(dates / 365);\n        console.debug('age', age);\n\n        return age;\n    }\n\n    /**\n     * javascriptå³å¥èµ·å§æ¥èçµæ\n     * æ¥ææ ¼å¼çºæ°åå¹´ææ¥(EX.1060802)\n     * å³å¥ 1060702,1060802 æåå³31å¤©\n     * å³å¥ 1060901,1061001 æåå³30å¤©\n     * @param  sDate \n     * @param  eDate \n     * @return å¤©æ¸\n     */\n    calRocIntervalDays(sDate, eDate) {\n        var msecPerMinute = 1000 * 60;\n        var msecPerHour = msecPerMinute * 60;\n        var msecPerDay = msecPerHour * 24;\n        sDate = this.leftPad(sDate, 7, '0');\n        eDate = this.leftPad(eDate, 7, '0');\n        var begDateStr = \"\" + sDate.substring(3, 5) + \"/\" + sDate.substring(5) + \"/\" + (Number(sDate.substring(0, 3)) + Number(1911));\n        var endDateStr = \"\" + eDate.substring(3, 5) + \"/\" + eDate.substring(5) + \"/\" + (Number(eDate.substring(0, 3)) + Number(1911));\n        var begDate = new Date(begDateStr);\n        var endDate = new Date(endDateStr);\n        var interval = endDate.getTime() - begDate.getTime();\n        var days = Math.floor(interval / msecPerDay);\n        return days;\n    }\n    /**\n     * javascriptå³å¥èµ·å§æ¥èçµæ\n     * æ¥ææ ¼å¼çºè¥¿åå¹´ææ¥(EX.20170801)\n     * å³å¥ 20170702,20170802 æåå³31å¤©\n     * å³å¥ 20170901,20171001 æåå³30å¤©\n     * @param  sDate \n     * @param  eDate \n     * @return å¤©æ¸\n     */\n    calCEIntervalDays(sDate, eDate) {\n        // var msecPerMinute = 1000 * 60;\n        // var msecPerHour = msecPerMinute * 60;\n        // var msecPerDay = msecPerHour * 24;\n        // var begDateStr = \"\" + sDate.substring(4, 6) + \"/\" + sDate.substring(6) + \"/\" + sDate.substring(0, 4);\n        // var endDateStr = \"\" + eDate.substring(4, 6) + \"/\" + eDate.substring(6) + \"/\" + eDate.substring(0, 4);\n        // var begDate = new Date(begDateStr);\n        // var endDate = new Date(endDateStr);\n        // var interval = endDate.getTime() - begDate.getTime();\n        // var days = Math.floor(interval / msecPerDay);\n\n        // return days;\n        return differenceInCalendarDays(eDate, sDate);\n\n    }\n    /**\n     * åå·¦è£é¶\n     * Ex:leftPad(3,3,'0')->003\n     * @param  val    [åå¼]\n     * @param  padLen [è£è¶³é·åº¦]\n     * @param  padVal [è£è¶³å¼]\n     * @return        [description]\n     */\n    leftPad(val, padLen, padVal) {\n        if (val.toString().length < padLen) {\n            for (var i = 1; i < padLen; i++) {\n                val = padVal + val;\n                if (val.toString().length >= padLen) {\n                    break;\n                }\n            }\n        }\n        return val;\n    }\n\n    convertNameToShow(firstName: string, lastName: string): string {\n        if (this.showRule) {\n          return this.showRule.convertName(firstName, lastName);\n        }\n        else {\n          let firstNameStr: string = StringUtils.isNotEmpty(firstName) ? firstName : '';\n          let lastNameStr: string = StringUtils.isNotEmpty(lastName) ? (' ' + lastName) : '';\n          return firstNameStr + lastNameStr;\n        }\n      }\n\n}","import { Component, OnInit, HostListener, ElementRef, ChangeDetectorRef, EventEmitter, Output, Input, ViewChild, AfterViewInit, ChangeDetectionStrategy, Optional, Inject } from '@angular/core';\nimport { CalendarService } from '../../service/calendar-service.service';\nimport { CalendarEventDetail } from '../../service/model/CalendarEventDetail';\nimport {\n  addDays,\n  addHours,\n  addMinutes,\n  addMonths,\n  getDate,\n  getDay,\n  getHours,\n  getMinutes,\n  getMonth,\n  getYear,\n  isSameMonth,\n  subMinutes,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  startOfDay,\n  endOfDay\n} from 'date-fns';\nimport { ProfileCodeService, PageInfo, showRuleToken, showRule, DataSyncService } from '@allianzSND/core';\nimport { ProfileCode } from '@allianzSND/core';\nimport { SettingService } from '@allianzSND/core';\nimport { Setting } from '@allianzSND/core';\nimport { UiInformationBtnComponent, ModalManager } from '@allianzSND/ui';\nimport { StringUtils, SelectOption } from '@allianzSND/core';\nimport { ViewDateChange } from '@allianzSND/core';\nimport { ChangeAction } from '@allianzSND/core';\nimport { UiInformationContentComponent } from '@allianzSND/ui';\nimport { Language } from '@allianzSND/core';\nimport { TranslateService } from '@allianzSND/core';\nimport { CustomerItem } from '../../../customer/service/model/CustomerItem';\nimport { CustomerFilterCriteria } from '../../../customer/components/bean/customer-filter-criteria';\nimport { CustomerService } from '../../../customer/service/customer-service.service';\nimport { CustomerUtils } from '../../../customer/utils/customer-utils';\n\n\n\n@Component({\n  selector: 'snd-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss']\n  , changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class CalendarComponent implements OnInit, AfterViewInit {\n\n  //two-way binding\n  private _parentHeight: number = 0;\n  @Input()\n  get parentHeight() {\n    return this._parentHeight;\n  }\n  set parentHeight(val) {\n    this._parentHeight = val;\n\n    if (this._parentHeight == 0) {\n      this._parentHeight = window.innerHeight;\n    }\n\n    this.parentHeightChange.emit(this._parentHeight);\n\n    var _this = this;\n    let titleBtnsBlock_ele = _this.titleBtnsBlock.nativeElement;\n    let titleBtnsBlock_size = titleBtnsBlock_ele.getBoundingClientRect();\n    _this.calendarHeight = _this._parentHeight\n      - titleBtnsBlock_size.height\n      - parseInt(window.getComputedStyle(titleBtnsBlock_ele).marginBottom);\n    this.changeDetector.markForCheck();\n\n    // console.warn('parentHeight', this._parentHeight);\n    // console.warn('titleBtnsBlock_ele', titleBtnsBlock_size.height, parseInt(window.getComputedStyle(titleBtnsBlock_ele).marginBottom));\n    // console.warn('calendarHeight', _this.calendarHeight);\n  } // end set parentHeight\n  @Output() parentHeightChange = new EventEmitter();\n\n  @ViewChild('titleBtnsBlock') titleBtnsBlock: ElementRef;\n\n  private YEAR: string = 'year';\n  private MONTH: string = 'month';\n  private WEEK: string = 'week';\n  private DAY: string = 'day';\n\n  //calendar-ui config setting\n  public viewTypeIndex: number = 2; // 'month'\n  public viewType: string = this.MONTH; //\n  public viewDate = new Date(); //current date\n  public weekStartsOn: number = 1; // Monday\n\n  //count content height\n  private calendarHeight: number = 0;\n\n  //click calendar id\n  public clientID: string = '';\n\n  public translateMap: Map<string, string> = new Map<string, string>();\n  public optionMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public customerItemList: Array<SelectOption> = [];\n  private storeStartDate: Date = new Date();\n  private storeEndDate: Date = new Date();\n\n  public calendarEventList: Array<CalendarEventDetail> = []; // eventList\n  public calendarEventListAfterFilter: Array<CalendarEventDetail> = []; // filterå¾ event\n  public viewDateCalendarEventList: Array<CalendarEventDetail> = [];\n  public calendarEventDetail: CalendarEventDetail;\n  public calendarEventEdit: CalendarEventDetail = null;\n  public customerClientName: string;\n  private customerClientMap: Map<string, string> = new Map<string, string>();\n  // private calendarEventMap = new CalendarEventMap();\n\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public alertTypeList: Array<ProfileCode> = [];\n  public language: Language = new Language();\n  private currentFilterOptionList: Array<string> = [];\n\n  // popup\n  public isExpandFilter: boolean = false;\n  public isExpandDetail: boolean = false;\n  public isExpandEdit: boolean = false;\n  public isDelete: boolean = false;\n  public isSave: boolean = false;\n  public isSaveClick: boolean = false;\n  public isCalendarDelete: boolean = false;\n  public isLoading: boolean = false;\n  public isCalendarEditMetaDataDone: boolean = false;\n  public isCalendarDetailMetaDataDone: boolean = false;\n\n  // translate\n  private dayTypesList: Array<string> = ['Cross_Day', 'All_Day'];\n  private weekdaysList: Array<string> = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  private monthsList: Array<string> = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  private noSchedule: string = 'No_Schedule';\n\n\n  // info config\n  //é¿åç¶å±¤å¶ä» position relative å¼é¿ info\n  public outsideSpace = {\n    top: 0,\n    left: 0\n  };\n  //info content å·¦å³æå°padding\n  public paddindData = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: window.innerWidth > 1023 ? 170 : 10\n  };\n\n\n  //check is pad or mobile\n  public windowWidth: number;\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowWidth = event.target.innerWidth;\n    this.calcuContentHeight();  // resize for android bottom show or hide \n    this.scrollToCurrentTime(); // resize for android bottom show or hide .. caculate day week height\n    console.log('calendar inside cacualte height');\n\n    this.changeDetector.markForCheck();\n  }\n\n\n  constructor(private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    private settingService: SettingService,\n    private translateService: TranslateService,\n    private calendarService: CalendarService,\n    private profileCodeService: ProfileCodeService,\n    private customerService: CustomerService,\n    private customerUtils: CustomerUtils,\n    private modalManager: ModalManager,\n    private dataSyncService: DataSyncService\n  ) { }\n\n  ngOnInit() {\n    //init calendar type\n    this.activityTypeList = this.profileCodeService.getCodeArray('Calendar_Type');\n    this.alertTypeList = this.profileCodeService.getCodeArray('Calendar_RemindTime');\n    this.optionMap.set('Calendar_Type', this.activityTypeList);\n    this.optionMap.set('Calendar_RemindTime', this.alertTypeList);\n    this.dayTypesList.forEach((dayType) => {\n      this.translateMap.set(dayType, this.translateService.translate(dayType))\n    });\n    this.weekdaysList.forEach((weekday) => {\n      this.translateMap.set(weekday, this.translateService.translate(weekday))\n    });\n    this.monthsList.forEach((month) => {\n      this.translateMap.set(month, this.translateService.translate(month))\n    });\n    this.translateMap.set(this.noSchedule, this.translateService.translate(this.noSchedule));\n\n    this.windowWidth = window.innerWidth;\n\n    //set component is detach\n    // this.changeDetector.detach();\n\n    //phone default view is day view\n    if (this.windowWidth < 1024) {\n      this.viewTypeIndex = 0;\n      this.changeDetector.markForCheck();\n    }\n\n    //load default filter setting\n    let defaultSettingVal = this.settingService.getSetting('CalendarFilterSetting').SettingVal;\n    if (StringUtils.isNotEmpty(defaultSettingVal)) {\n      let calendarSetting = JSON.parse(defaultSettingVal);\n\n      //default all checked\n      if (Object.keys(calendarSetting).length == 0) {\n        this.activityTypeList.forEach((codeItem) => {\n          codeItem.isCheck = true;\n        });\n      }\n      else {\n        this.activityTypeList.forEach((codeItem) => {\n          let code = codeItem.getCode();\n          let isCheck = calendarSetting[code] == undefined ? false : calendarSetting[code];\n          codeItem.isCheck = isCheck;\n        });\n      }\n\n    }\n\n    this.setCurrentFilterOption(undefined);\n\n\n    this.typeChange(this.viewTypeIndex);\n    this.loadCalendarData();\n    this.createCustomerList();\n\n  } // end ngOnInit\n\n  ngAfterViewInit() {\n    this.typeChange(this.viewTypeIndex);\n  }\n\n  switchPadViewMode(activeTabIndex) {\n    console.debug('switchPadViewMode:', this.viewDate);\n\n    if (activeTabIndex != this.viewTypeIndex) {\n      //count start & end\n      this.typeChange(activeTabIndex);\n\n      this.changeDetector.detectChanges();\n\n      //load data & refresh\n      this.loadCalendarData();\n    }\n\n  }\n\n  typeChange(activeTabIndex) {\n    console.debug('calendar-component-typeChange', activeTabIndex, this.viewType, this.viewDate);\n\n    let start, end;\n    this.viewTypeIndex = activeTabIndex;\n\n    switch (activeTabIndex) {\n      // YEAR\n      case 3:\n        this.viewType = this.YEAR;\n        this.calcuContentHeight();\n        break;\n      // MONTH\n      case 2:\n        this.viewType = this.MONTH;\n        this.calcuContentHeight();\n        start = startOfMonth(this.viewDate);\n        end = endOfMonth(this.viewDate);\n        //count current time is have data\n        break;\n      // WEEK\n      case 1:\n        this.viewType = this.WEEK;\n        start = startOfWeek(this.viewDate, { weekStartsOn: 1 });\n        end = endOfWeek(this.viewDate, { weekStartsOn: 1 });\n        //count current time is have data\n        this.scrollToCurrentTime();\n\n        break;\n      // DAY\n      case 0:\n        this.viewType = this.DAY;\n        start = startOfDay(this.viewDate);\n        end = endOfDay(this.viewDate);\n        //count current time is have data\n        this.scrollToCurrentTime();\n        // console.warn('view type change: day');\n        break;\n    } // end switch\n\n    if (this.viewType != this.YEAR) {\n\n      if (StringUtils.isNotEmpty(start) && StringUtils.isNotEmpty(end)) {\n        this.storeStartDate = start;\n        this.storeEndDate = end;\n      }\n    }\n\n    console.debug('calendar-component-typeChange done');\n\n\n\n  } // end typeChange\n\n  //phone header change mode\n  mobileBackViewType() {\n    console.debug('mobileBackViewType', this.viewType);\n    switch (this.viewType) {\n      case this.MONTH:\n        this.typeChange(3); // back to year\n        break;\n      case this.WEEK:\n        this.typeChange(2); // back to month\n        break;\n      case this.DAY:\n        this.typeChange(2); // back to month\n        break;\n    } // end switch\n\n\n    //because change view type , so date range is change\n    this.loadCalendarData();\n\n  } // end mobileChangeViewType\n\n  clickToday() {\n    this.viewDate = new Date();\n    console.warn('clickToday', this.viewDate);\n\n    this.changeDetector.detectChanges();\n\n\n    //calculate new start and end\n    this.typeChange(this.viewTypeIndex);\n\n    //load data & refresh\n    this.loadCalendarData();\n    this.loadViewDateCalendarEventList();\n  }\n\n  //when calendar component any click change viewDate , will check pad/phone current viewType to change mode\n  onViewDateChange(viewDateChange: ViewDateChange) {\n    let val = new Date(viewDateChange.viewDate);\n    let action = viewDateChange.action;\n\n    console.debug('calendar-component update viewDate:', val);\n\n    console.debug('calendar-component update viewDate:', val, this.viewType);\n    console.debug('this.viewDate:', this.viewDate, isSameMonth(this.viewDate, val));\n\n\n    if (this.isPad() && (isSameMonth(this.viewDate, val) && this.viewType === this.MONTH)) {\n      this.viewDate = val;\n      return;\n    }\n    else {\n      this.viewDate = val;\n      //if year change date , alwasy switch month\n      if (this.viewType == this.YEAR && action == ChangeAction.CLICK) {\n        this.typeChange(2);\n      }\n      else if (this.viewType == this.MONTH && !this.isPad() && action == ChangeAction.CLICK) {\n        //if device is phone , click day switch to week when view type is month\n        this.typeChange(0);\n      }\n      else {\n        //else calculate new start & end\n        this.typeChange(this.viewTypeIndex);\n      }\n\n      //load data & refresh\n      this.loadViewDateCalendarEventList();\n      this.loadCalendarData();\n    }\n  }\n\n  //fetch calendar between start & end range\n  loadCalendarData() {\n    console.debug('loadCalendar data');\n    if (this.viewType !== this.YEAR) { // year no need query data , only view\n\n      //If old data is larger than 20, clear first to make view change faster\n      if (this.calendarEventListAfterFilter.length > 20)\n        this.calendarEventListAfterFilter = [];\n\n      if (StringUtils.isNotEmpty(this.storeStartDate) && StringUtils.isNotEmpty(this.storeEndDate)) {\n\n        this.calendarService.getCalendarEventList(this.storeStartDate, this.storeEndDate, '').subscribe(data => {\n          this.calendarEventList = data;\n          this.refreshCalendarEventList();\n        });\n      }\n    }\n    console.debug('loadCalendar data done');\n  }\n\n  loadCalendarEventDetail(clientID: string) {\n    console.log(\"loadCalendarEventDetail:\", clientID);\n    this.calendarService.getCalendarEventDetail(clientID).subscribe(data => {\n      console.warn('getCalendarEventDetail', data);\n      this.isLoading = false;\n      this.calendarEventDetail = data;\n      this.customerClientName = this.customerClientMap.get(this.calendarEventDetail.customerClientID);\n      console.log(\"customerClientMap:\", this.customerClientMap);\n      this.calendarEventDetail.displayActivity = this.profileCodeService.convertCode2Text('Calendar_Type', this.calendarEventDetail.activity);\n      this.calendarEventDetail.displayAlert1 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert1);\n      this.calendarEventDetail.displayAlert2 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert2);\n      this.onToggleDetailModal(true);\n    });\n  }\n\n  private loadViewDateCalendarEventList() {\n    let queryDate = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), 0, 0, 0);\n    this.calendarService.getCalendarEventList(queryDate, subMinutes(addDays(this.viewDate, 1), 1), '').subscribe(data => {\n      console.warn('loadViewDateCalendarEventList', data);\n      this.viewDateCalendarEventList = data;\n    });\n  }\n\n  onClickDetail(eventItem) {\n    this.clientID = eventItem.clientID;\n    this.loadCalendarEventDetail(this.clientID);\n    this.loadViewDateCalendarEventList();\n\n    console.warn('clickDetail', this.clientID);\n  } // end clickDetail\n\n  onClickDeleteCancel() {\n  } // end clickDeleteCancel\n\n  onClickDeleteConfirm() {\n    this.modalManager.toggleLoading(true);\n\n    this.calendarService.deleteCalendarEvent(this.clientID).subscribe(async data => {\n      console.warn(\"this.calendarService.deleteCalendarEvent data: \", data);\n      await this.dataSyncService.syncFunc(['CALENDAR']);\n      if (data.status) {\n        this.isDelete = data.status;\n      }\n      this.loadCalendarData();\n      if (this.isExpandDetail) { // close pop up\n        this.onToggleDetailModal(false);\n      }\n      this.modalManager.toggleLoading(false);\n    });\n  } // end clickDeleteConfirm\n\n  onClickAppointmentSave() {\n    this.isSaveClick = true;\n  }\n\n  async onSaveCalendarEvent(resp) {\n    let type = resp.type;\n    console.log(\"onSaveCalendarEvent:\", resp);\n    if (type !== 'fail') {\n      let data = resp.data;\n      let clientID = data.ClientID;\n      console.warn('saveCalendarEvent');\n\n      console.warn('updateCalendarEvent', clientID);\n      this.modalManager.toggleLoading(true);\n      await this.dataSyncService.syncFunc(['CALENDAR']);\n      this.modalManager.toggleLoading(false);\n      this.calendarService.getCalendarEventDetail(clientID).subscribe((data) => {\n        this.calendarEventDetail = data;\n        this.onToggleAppointmentModal(false);\n        this.loadCalendarData();\n\n        if (type === 'edit') {\n          this.loadCalendarEventDetail(clientID);\n          this.isSave = true;\n          this.loadViewDateCalendarEventList();\n        }\n        else if (type === 'add') {\n          this.isSave = true;\n          console.warn('addCalendarEvent');\n        }\n      })\n    }\n    this.isSaveClick = false;\n    return;\n  }\n\n  private isPad() {\n    return this.windowWidth >= 1024;\n  }\n\n  editEvent() {\n    console.log(\"calendar EditEvent:\", this.calendarEventDetail);\n    this.calendarEventEdit = new CalendarEventDetail(this.calendarEventDetail.clientID,\n      this.calendarEventDetail.calendarID,\n      this.calendarEventDetail.customerClientID,\n      this.calendarEventDetail.title,\n      this.calendarEventDetail.location,\n      this.calendarEventDetail.activity,\n      '',\n      this.calendarEventDetail.start,\n      this.calendarEventDetail.end,\n      '',\n      this.calendarEventDetail.alert1,\n      this.calendarEventDetail.alert2,\n      this.calendarEventDetail.alert3,\n      this.calendarEventDetail.remark,\n      null);\n    this.calendarEventEdit.allDay = this.calendarEventDetail.allDay;\n    this.calendarEventEdit.isAlert = this.calendarEventDetail.isAlert;\n    this.onToggleAppointmentModal(true);\n  }\n\n  addEvent() {\n    this.clientID = '';\n    let currentTime; // adjust time to next interval\n    currentTime = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), getHours(new Date()), getMinutes(new Date()));\n    currentTime = addMinutes(currentTime, (5 - getMinutes(currentTime) % 5));  // adjust minutes to next 5 minutes\n    currentTime = addHours(currentTime, 1);\n    this.calendarEventEdit = new CalendarEventDetail('', '', null, '', '', null, 'N', currentTime, addMinutes(currentTime, 15), 'Y', '8', '', '', '', null);\n    this.loadViewDateCalendarEventList();\n    this.onToggleAppointmentModal(true);\n  }\n\n  // block which control filter\n\n  onActivityTypeListChange(alertTypeList: Array<ProfileCode>) {\n    this.alertTypeList = alertTypeList;\n    this.currentFilterOptionList = [];\n    let settingVal = {};\n    this.activityTypeList.forEach((codeItem) => {\n      console.debug('activityType codeItem', codeItem);\n      if (settingVal != undefined) settingVal[codeItem.getCode()] = codeItem.isCheck;\n\n      if (codeItem.isCheck) {\n        this.currentFilterOptionList.push(codeItem.getCode());\n      }\n    });\n\n    this.filterOptionChange(this.currentFilterOptionList);\n    this.settingValueChange(settingVal);\n  }\n\n  settingValueChange(settingValue) {\n    //update filter setting\n    let settingObj = new Setting(this.settingService.getSetting('CalendarFilterSetting').SettingID, this.settingService.getSetting('CalendarFilterSetting').SettingName, JSON.stringify(settingValue));\n    this.settingService.updateSetting(settingObj).subscribe(data => {\n      console.debug('calendar.component-update setting', data);\n    });\n  }\n\n  filterOptionChange(currentFilterOption: Array<string>) {\n    console.warn('currentFilterOption', currentFilterOption);\n    this.currentFilterOptionList = currentFilterOption;\n    this.refreshCalendarEventList();\n  }\n\n  private setCurrentFilterOption(settingVal) {\n    this.currentFilterOptionList = [];\n\n    //find checked filter\n    this.activityTypeList.forEach((codeItem) => {\n      console.debug('activityType codeItem', codeItem);\n      if (settingVal != undefined) settingVal[codeItem.getCode()] = codeItem.isCheck;\n\n      if (codeItem.isCheck) {\n        this.currentFilterOptionList.push(codeItem.getCode());\n      }\n    });\n  }\n\n  private refreshCalendarEventList() {\n\n    this.calendarEventListAfterFilter = [];\n\n    //filter event calendar type\n    console.debug('start refreshCalendarEventList', this.calendarEventList.length);\n    this.calendarEventListAfterFilter = this.calendarEventList.filter(x => this.currentFilterOptionList.indexOf(x.activity) > -1);\n    console.debug('start refreshCalendarEventList done', this.calendarEventListAfterFilter);\n    console.debug('start refreshCalendarEventList done', this.calendarEventListAfterFilter.length);\n    // this.changeDetector.detectChanges();\n\n    //count height\n    if (this.viewType == this.DAY || this.viewType == this.WEEK) {\n      this.scrollToCurrentTime();\n    }\n  }\n\n  // end block\n\n\n\n  scrollToCurrentTime() {\n    let _this = this;\n    setTimeout(() => {\n      let timeEventAll_ele = _this.elementRef.nativeElement.querySelectorAll('div.cal-time-events');\n      // console.warn('_this.timeEventAll_ele', timeEventAll_ele.length, timeEventAll_ele);\n\n      // if(timeEventAll_ele !=null){\n      for (let timeEvent_ele of timeEventAll_ele) {\n        let mobileDayHeader_ele = _this.elementRef.nativeElement.querySelector('div.cal-day-headers');\n        let allDayEvent_ele = _this.elementRef.nativeElement.querySelector('div.cal-all-day-events');\n        let allDayEvent_h = (allDayEvent_ele != null\n          ? allDayEvent_ele.getBoundingClientRect().height\n          : 0);\n\n        // console.warn('mobileDayHeader_ele', mobileDayHeader_ele);\n        if (mobileDayHeader_ele != null) {\n\n          // console.warn('if _this.calendarHeight', timeEvent_ele, _this.calendarHeight);\n          // console.warn('if mobileDayHeader_ele', mobileDayHeader_ele);\n\n          timeEvent_ele.style.maxHeight = (_this.calendarHeight\n            - mobileDayHeader_ele.getBoundingClientRect().height\n            - allDayEvent_h\n            - parseInt(window.getComputedStyle(mobileDayHeader_ele).marginBottom)) + 'px';\n\n          // scroll to time\n          let currentHour = getHours(new Date());\n          console.log('current Hour:', getHours(new Date()));\n          if (currentHour > 3)\n            timeEvent_ele.scrollTop = Math.floor((currentHour - 3) / 2) * 80\n              + (Math.floor((currentHour - 3) / 2)\n                + (currentHour - 3) % 2) * 82;\n        }\n      } // end for: timeEventAll_ele\n      this.changeDetector.markForCheck();\n\n      // }\n\n    }, 100); // ææExpressionChangedAfterItHasBeenCheckedError å setTimeOut è§£\n  } // end scrollToCurrentTime\n\n  calcuContentHeight() {\n\n    console.debug('calcuContentHeight');\n\n    let _this = this;\n    setTimeout(() => {\n      console.warn('calcuContentHeight', this.calendarHeight);\n      // calculate year view height\n      let year_ele = _this.elementRef.nativeElement.querySelector('.ui-calendar-year');\n      let yearTag_ele = _this.elementRef.nativeElement.querySelector('app-ui-calendar-year');\n\n      if (year_ele != null && yearTag_ele != null) {\n\n        if (_this.windowWidth > 1023) {\n          yearTag_ele.style.minHeight = (_this.calendarHeight\n            - parseInt(window.getComputedStyle(year_ele).marginTop)) + 'px';\n          yearTag_ele.style.height = (_this.calendarHeight\n            - parseInt(window.getComputedStyle(year_ele).marginTop)) + 'px';\n        } else {\n\n          year_ele.style.height = (_this.calendarHeight\n            - parseInt(window.getComputedStyle(year_ele).marginTop)) + 'px';\n          console.log('mobile year view: _this.calendarHeight:', _this.calendarHeight, 'window.getComputedStyle(year_ele).marginTop', window.getComputedStyle(year_ele).marginTop);\n\n        }\n      }\n\n      // calculate month view height\n      let month_ele = _this.elementRef.nativeElement.querySelector('.cal-month-view');\n\n      if (month_ele !== null && month_ele !== undefined && _this.windowWidth > 1023) {\n\n        month_ele.style.maxHeight = _this.calendarHeight + 'px';\n        month_ele.style.minHeight = _this.calendarHeight + 'px';\n      }\n      if (month_ele.style.maxHeight == '0px') {\n        console.warn('Here');\n        month_ele.style.maxHeight = 100 - 3 + 'vh';\n        month_ele.style.minHeight = 100 - 3 + 'vh';\n      }\n      this.changeDetector.markForCheck();\n\n    }, 300); // ææExpressionChangedAfterItHasBeenCheckedError å setTimeOut è§£\n  } // end calcuContentHeight\n\n  renderWeek() {\n    console.log('in integration renderWeek');\n    let mobileDayHeader_ele = this.elementRef.nativeElement.querySelector('div.cal-day-headers');\n    let allDayEvent_ele = this.elementRef.nativeElement.querySelector('div.cal-all-day-events');\n    console.log('in integration renderWeek', mobileDayHeader_ele, allDayEvent_ele);\n    this.scrollToCurrentTime();\n  }\n\n\n  // function which control popup\n\n  onToggleAppointmentModal(val) {\n    setTimeout(() => {\n      this.isExpandEdit = val;\n      if (!this.isExpandEdit) {\n        this.isCalendarEditMetaDataDone = false;\n      }\n      if (this.isExpandFilter) { this.onCloseInfo(); }\n      this.changeDetector.markForCheck();\n    }, 0); // ææExpressionChangedAfterItHasBeenCheckedError å setTimeOut è§£\n\n\n  } // end toggleAppointmentModal\n\n  onToggleDetailModal(val) {\n    this.isExpandDetail = val;\n    if (!this.isExpandDetail) {\n      this.isCalendarDetailMetaDataDone = false;\n    }\n    if (this.isExpandFilter) { this.onCloseInfo(); }\n  }\n  onToggleFilterModal(val) {\n    if (!this.isExpandFilter) {\n      this.onCloseInfo();\n    }\n  }\n\n  // end block\n\n  // è¨­ info position\n  @ViewChild(UiInformationBtnComponent) nowShowBtn: UiInformationBtnComponent;\n  @ViewChild(UiInformationContentComponent) infoContent: UiInformationContentComponent;\n  @ViewChild('filterInfo') filterInfo: UiInformationContentComponent;\n  onInfoTabClick(dom) {\n    console.warn('infoTabClick');\n    console.warn('nowShowBtn', this.nowShowBtn);\n\n    if (this.nowShowBtn !== undefined) {\n      // console.log('nowShowBtn click', this.nowShowBtn.btnContent.nativeElement);\n\n      if (dom !== undefined) {\n        console.warn('messageContent', dom.messageContent, this.nowShowBtn.messageContent);\n        if (dom.messageContent !== this.nowShowBtn.messageContent) {\n          // this.closeInfo();\n          this.nowShowBtn.closeInfo();\n          this.nowShowBtn = dom;\n        }\n        else {\n          this.resetInfoPos();\n        }\n      } // end if: dom !== undefined\n    } else {\n      this.nowShowBtn = dom;\n    }\n\n    // console.warn('messageContent filter', this.nowShowBtn.messageContent === this.filterInfo, this.filterInfo);\n    if (this.nowShowBtn.messageContent === this.filterInfo) {\n      this.isExpandFilter = true;\n    }\n  } // end infoTabClick\n  resetInfoPos() {\n    // this.isExpandFilter = true;\n    if (this.nowShowBtn !== undefined) {\n      this.nowShowBtn.countPos();\n    }\n  } // end resetInfoPos\n  onCloseInfo() {\n    this.isExpandFilter = false;\n    if (this.nowShowBtn !== undefined) {\n      this.nowShowBtn.closeInfo();\n      // this.nowShowBtn = undefined;\n\n      // console.warn('closeInfo', this.nowShowBtn, this.nowShowBtn.btnContent.nativeElement);\n    }\n  } // end closeInfo\n\n  createCustomerList() {\n    let pageInfo = new PageInfo();\n    pageInfo.pageSize = -1;\n    let filterCriteria = new CustomerFilterCriteria();\n    this.customerService.getCustomerList(filterCriteria, pageInfo).subscribe((data) => {\n      console.log('data', data);\n      let temp_array = [];\n      for (let custItem of data) {\n        this.customerClientMap.set(custItem.clientID, this.customerUtils.convertNameToShow(custItem.firstName, custItem.lastName));\n        temp_array.push(new SelectOption(custItem.clientID, this.customerUtils.convertNameToShow(custItem.firstName, custItem.lastName)));\n      }\n      this.customerItemList = temp_array;\n    });\n  }\n\n  mobileFilterClick() {\n    this.isExpandFilter = true;\n  }\n\n\n  onMetaDataDone(funcName: string) {\n    if (funcName === 'CalendarEdit') {\n      this.isCalendarEditMetaDataDone = true;\n    }\n    else if (funcName === 'CalendarDetail') {\n      this.isCalendarDetailMetaDataDone = true;\n    }\n\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, Inject, Optional } from '@angular/core';\nimport { DateUtils, Language, showRuleToken, showRule } from '@allianzSND/core';\n\n@Component({\n  selector: 'app-customer-contact-list',\n  templateUrl: './customer-contact-list.component.html',\n  styleUrls: ['./customer-contact-list.component.scss']\n})\nexport class CustomerContactListComponent implements OnInit {\n\n\n  public language: Language = new Language();\n\n  @Output()\n  private onAddNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private onDisplayNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private onEditNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private onDeleteNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private contactListRefresh: EventEmitter<any> = new EventEmitter();\n\n\n\n\n  @Input()\n  get contactList() { return this._contactList; }\n  set contactList(contactList) {\n    console.log(\"customer-contact-list set contactList:\", contactList);\n\n    this._contactList = contactList.map(x => Object.assign({}, x, { NoteTimeDisplay: this.toNoteTime(new Date(x.NoteTime)) }));\n\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n  }\n  private _contactList: Array<any>;\n\n  elementRef: ElementRef;\n  constructor(private dateUtils: DateUtils,\n    @Inject(ElementRef) elementRef: ElementRef,\n    @Optional() @Inject(showRuleToken) private showRule:showRule\n    ) {\n    this.elementRef = elementRef;\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n\n  }\n\n  // ionic sliding need to call close event when every refresh\n  async closeSlidingItems() {\n    console.debug('closeSlidingItems');\n\n\n    const item = this.elementRef.nativeElement.querySelector('ion-item-sliding');\n    if (item != null) {\n      /// console.debug('item size',item.length);\n      console.debug('item', item);\n      await item.close();\n      await item.closeOpened();\n    }\n\n  }\n\n  refreshContactNote() {\n    this.contactListRefresh.emit()\n\n\n    // need to wait ion-item-sliding create at first from no data (when skelton interface)\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n\n  }\n\n  addNote() {\n    this.onAddNote.emit();\n  }\n\n  displayNote(note: any) {\n    this.onDisplayNote.emit(Object.assign({\n      Date: this.toNoteTime(new Date(note.NoteTime))\n    }, note));\n  }\n\n  editNote(note: any) {\n    this.onEditNote.emit(note);\n  }\n\n  deleteNote(note: any) {\n    this.onDeleteNote.emit(note);\n  }\n\n\n  trackByClientID(index, item) {\n    return item.ClientID;\n  }\n\n  public toNoteTime(time: Date) {\n    console.log(\"toNoteTime:\", time);\n    let defaultStr = this.dateUtils.toDateString(time, 'yyyy-MM-dd HH:mm');\n    if (this.showRule)\n      return this.showRule.convertDate(time) + defaultStr.slice(10);\n    else\n      return defaultStr;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef, Optional, Inject, ViewChildren, QueryList } from '@angular/core';\nimport { DateUtils, StringUtils, Language, MetaService, ProfileCodeService, InputExecutor, DefaultMetaParser, MetaColumn, MetaController } from '@allianzSND/core';\nimport { showRuleToken, DisplayMetaComponent } from '@allianzSND/core';\nimport { showRule } from '@allianzSND/core';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { customerDetailMetaControllerToken } from '../../injectionToken/injection-token';\n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.scss']\n})\nexport class CustomerDetailComponent extends DisplayMetaComponent implements OnInit {\n\n  @Output()\n  private onEditDetail: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onCallPhone: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onDeleteDetail: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onAddAppointment: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private followChange: EventEmitter<{ 'isFollow': boolean, 'clientID': string }> = new EventEmitter();\n\n\n\n\n  public DisplayData = null;\n  public readonly dash: string = '- -';\n\n  @Input()\n  get data() {\n    return this._data;\n  }\n  set data(value) {\n    this._data = value;\n    console.log(\"detail Set Data:\", value);\n    if (value && value.ClientID) {\n      this.waitUntilMetaLoaded().then(() => {\n        this.onDataUpdated();\n      })\n    }\n    else {\n      this._data = null;\n    }\n  }\n\n  protected getMetaID() {\n    return 'customerDetail';\n  }\n\n  protected getMetaParams() {\n    return null;\n  }\n\n  get rowMetaWithoutGroup(): Array<Array<MetaColumn>> {\n    return this.metaConfig.Rows.filter(x => x.map(y => y.type !== 'Group').reduce((acc, cur) => acc && cur, true));\n  };\n\n  get rowMetaGroup(): Array<MetaColumn> {\n    return this.metaConfig.Columns.filter(x => x.type === 'Group');\n  }\n\n  get followStatus() {\n    return this._data[\"IsFollow\"] === 'Y'\n  }\n\n\n  public language: Language = new Language();\n\n  // empty status\n  public isEmptyAppointment: boolean = false;\n  public isEmptyEdit: boolean = false;\n  public isEmptyDel: boolean = false;\n  public isEmptyDetailInfo: boolean = false;\n  public isEmptyGroupDetailInfo: boolean = false;\n  public isEmptyContactNote: boolean = false;\n  public isCollapseBtnShow: boolean = true;\n\n  // card2 extend template is null or not\n  public isCardExtendTemplateNull = true;\n  @ViewChildren('detailPostTemp') detailPostTemp: QueryList<any>;\n  //card2 collapse isOpen or not\n  public isCollapseOpen = false;\n\n  public get isHasAgeRange() {\n    return this._data && !!this._data[\"AgeRange\"];\n  }\n\n  public get isHasContactFrequancy() {\n    return this._data && !!this._data[\"ContactFrequancy\"];\n  }\n\n\n\n\n\n  constructor(\n    private dateUtils: DateUtils,\n    protected profileCodeService: ProfileCodeService,\n    private changeDetctor: ChangeDetectorRef,\n    protected metaService: MetaService,\n    private customerUtils: CustomerUtils,\n    inputExecutor: InputExecutor,\n    metaParser: DefaultMetaParser,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n    @Optional() @Inject(customerDetailMetaControllerToken) private customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, inputExecutor);\n  }\n  ngOnInit() {\n    console.log(\"customerDetail ngOninit!\");\n    super.ngOnInit();\n  }\n\n\n  onDataUpdated() {\n    console.log(\"customerDetail onDataUpdated!\", this._data);\n    super.onDataUpdated();\n\n    //check datasource is from OPUS\n    this.isEmptyDel = this._data.DataSource == 'OPUS';\n\n    this.convertEmptyValToDisplayText(this._data);\n    this.checkInfoIsEmpty();\n    this.changeCollateButton();\n\n    this.DisplayData = Object.assign({}, this._data);\n    if (this.customMetaController)\n      this.customMetaController.onDataUpdated(this._data);\n    this.changeDetctor.detectChanges();\n    console.log(\"after customerDetail onDataUpdated!\", this.DisplayData);\n  }\n\n\n\n\n  private changeCollateButton() {\n    console.log(\"changeCollateButton Meta:\", this.metaConfig);\n    this.isCollapseBtnShow = this.metaConfig.Columns.filter(x => x.type === \"Group\")\n      .map(x => this._data[x.id].length > (12 / x.grid.pc))\n      .reduce((acc, cur) => acc || cur, false);\n\n    console.debug('isCollapseBtnShow', this.isCollapseBtnShow);\n  }\n\n\n\n  private checkInfoIsEmpty() {\n    //if detail info is empty , display no data status    \n    this.isEmptyDetailInfo =\n      this.metaConfig.Columns.filter(x => x.type !== \"Group\")\n        .map(x => this._data[x.id] === null || this._data[x.id] === undefined || StringUtils.isEmpty(this._data[x.id]) || this._data[x.id] === this.dash)\n        .reduce((acc, cur) => acc && cur, true);\n\n    this.isEmptyGroupDetailInfo = this.metaConfig.Columns.filter(x => x.type === \"Group\")\n      .map(x => this._data[x.id].length === 0)\n      .reduce((acc, cur) => acc && cur, true);\n\n    console.log(\"isEmptyDetailInfo:\", this.isEmptyDetailInfo);\n    console.log(\"isEmptyGroupDetailInfo:\", this.isEmptyGroupDetailInfo);\n  }\n\n  private convertEmptyValToDisplayText(customerDetail: any) {\n    //if not data set default value(?? or -- --)\n    console.log(\"convertEmptyValToDisplayText: \", customerDetail);\n    customerDetail.AgeRange = this.profileCodeService.convertCode2Text(\"Customer_Age\", customerDetail.AgeRange);\n    customerDetail.ContactFrequancy = this.profileCodeService.convertCode2Text(\"Customer_ContactFrequancy\", customerDetail.ContactFrequancy);\n    customerDetail.showName = this.convertNameToShow(customerDetail.FirstName, customerDetail.LastName);\n    customerDetail.address.forEach(addr => {\n      addr[\"AddressDisplay\"] = this.toFullAddress(Object.assign({}, addr));\n    });\n    this.metaConfig.Columns.filter(x => x.type !== \"Group\").forEach(col => {\n      if (col.id === 'BirthdayDisplay')\n        customerDetail.BirthdayDisplay = StringUtils.isNotEmpty(customerDetail.Birthday) ? this.toBirthdayStr() : this.dash;\n      else\n        customerDetail[col.id] = StringUtils.isEmpty(customerDetail[col.id]) ? this.dash : customerDetail[col.id];\n    });\n  }\n\n  private toBirthdayStr() {\n\n    if (this._data.Birthday !== undefined) {\n      if (this.showRule) {\n        return this.showRule.convertDate(new Date(this._data.Birthday));\n      }\n      else {\n        return this.dateUtils.toDateString(new Date(this._data.Birthday), 'yyyy-MM-dd');\n      }\n    }\n  }\n\n  private toFullAddress(addressObj: any): string {\n    if (this.showRule)\n      return this.showRule.convertAddress(addressObj);\n    else {\n      let array = [];\n      if (StringUtils.isNotEmpty(addressObj.Country)) array.push(addressObj.Country);\n      if (StringUtils.isNotEmpty(addressObj.City)) array.push(addressObj.City);\n      if (StringUtils.isNotEmpty(addressObj.Area)) array.push(addressObj.Area);\n      if (StringUtils.isNotEmpty(addressObj.Zipcode)) array.push(addressObj.Zipcode);\n      if (StringUtils.isNotEmpty(addressObj.Address)) array.push(addressObj.Address);\n      return array.join(', ');\n    }\n  }\n\n  edit() {\n    this.onEditDetail.emit(this._data.ClientID);\n  }\n\n  delete() {\n    this.onDeleteDetail.emit(this._data.ClientID);\n  }\n\n  callPhone() {\n    this.onCallPhone.emit(this._data.ClientID);\n  }\n\n  addAppointment() {\n    this.onAddAppointment.emit(this._data.ClientID);\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n\n  isFollowChange(isFollow: boolean) {\n    console.debug('isFollowChange', isFollow);\n    // display new follow state first\n    this._data[\"IsFollow\"] = isFollow ? \"Y\" : \"N\";\n    this.changeDetctor.detectChanges();\n\n    //ouput follow detail change status\n    this.followChange.emit({ 'isFollow': isFollow, \"clientID\": this._data.ClientID });\n\n\n  }\n\n  private convertNameToShow(firstName: string, lastName: string): string {\n    return this.customerUtils.convertNameToShow(firstName, lastName);\n  }\n\n}\n","import { Observable, BehaviorSubject, Subject } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { CustomerItem } from \"../model/CustomerItem\";\nimport { CustomerFilterCriteria } from \"../../components/bean/customer-filter-criteria\";\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CustomerStoreService {\n\n    private _stateBehaviorSubject: Subject<any>;\n    private _detailBehaviorSubject: Subject<any>;\n    private _listBehaviorSubject: Subject<any>;\n    private _criteriaBehaviorSubject: Subject<any>;\n    private _detailIDSubject: Subject<any>;\n\n    private _customerState: CUSTOMER_STATE;\n    private _customerDetail: any;\n    private _customerList: Array<CustomerItem>;\n    private _customerCriteria: CustomerFilterCriteria\n\n    constructor(\n    ) {\n        this._customerState = CUSTOMER_STATE.DISPLAY;\n        this._customerDetail = {\n            ClientID: \"\"\n        };\n        this._customerList = [];\n        this._customerCriteria = new CustomerFilterCriteria();\n        this._stateBehaviorSubject = new BehaviorSubject(this._customerState);\n        this._detailBehaviorSubject = new BehaviorSubject(this._customerDetail);\n        this._listBehaviorSubject = new BehaviorSubject(this._customerList);\n        this._criteriaBehaviorSubject = new BehaviorSubject(this._customerCriteria);\n        this._detailIDSubject = new BehaviorSubject(this._customerDetail.ClientID);\n\n    }\n\n    setState(state: CUSTOMER_STATE): void {\n        this._customerState = state;\n        this._stateBehaviorSubject.next(this._customerState);\n\n    };\n\n    getState(): Observable<CUSTOMER_STATE> {\n        return this._stateBehaviorSubject;\n    };\n\n    setCurrentCustomerDetail(detail: any): void {\n        this._customerDetail = detail;\n        this._detailBehaviorSubject.next(this._customerDetail);\n        this._detailIDSubject.next(this._customerDetail.ClientID);\n    };\n\n    getCurrentCustomerDetail(): Observable<any> {\n        return this._detailBehaviorSubject;\n    };\n\n    setCustomerList(list: Array<CustomerItem>): void {\n        this._customerList = list;\n        this._listBehaviorSubject.next(this._customerList);\n    };\n\n    getCustomerList(): Observable<Array<CustomerItem>> {\n        return this._listBehaviorSubject;\n    };\n\n    setCriteria(criteria: CustomerFilterCriteria): void {\n        this._customerCriteria = criteria;\n        this._criteriaBehaviorSubject.next(this._customerCriteria);\n    };\n\n    getCriteria(): Observable<CustomerFilterCriteria> {\n        return this._criteriaBehaviorSubject;\n    };\n\n    getCustomerDetailID(): Observable<string> {\n        return this._detailIDSubject;\n    }\n}\n\nexport enum CUSTOMER_STATE {\n    IMPORT = 'import',\n    DISPLAY = 'display',\n    EDIT = 'edit',\n    ADD_SAVED = 'add saved',\n    EDIT_SAVED = 'edit saved',\n    FIRST = 'first'\n}","import { MetaController, ValidationResult } from \"@allianzSND/core\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DefaultCustomerEditMetaController implements MetaController {\n\n    onDataUpdated(data: any) {\n        if (data['tel']) {\n            data['notOPUSTel'] = data['tel'].filter(x => x.DataSource && x.DataSource !== 'OPUS');\n        }\n        console.log(\"Default controller onDataUpdated:\", data);\n    }\n\n    onValueChange(column: string, value: any, groupId: string, index: number, data: any, validationResult: ValidationResult) {\n        // if (column === 'Email') {\n        //     let isEmail = this.isEmailFormat(value);\n        //     if (!isEmail)\n        //         validationResult.setErrorMap(column + index.toString(), 'Wrong_Email');\n        //     else\n        //         validationResult.deleteError(column + index.toString());\n        // }\n    }\n\n    onValidateAll(data: any, validationResult: ValidationResult) {\n        data['tel'] = data['tel'].filter(x => x.dataSource && x.dataSource === 'OPUS').concat(data['notOPUSTel']);\n        if (data['email'] && data['email'].length > 0) {\n            data['email'].forEach((ele, index) => {\n                let isEmail = this.isEmailFormat(ele.Email);\n                if (!isEmail)\n                    validationResult.setErrorMap('Email' + index.toString(), 'Wrong_Email');\n                else\n                    validationResult.deleteError('Email' + index.toString());\n            });\n        }\n        return validationResult.isTrue();\n    }\n\n    btnClick(type: string, id: string, data: any) { }\n\n\n    private isEmailFormat(email) {\n        let regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n        return regexp.test(email);\n    }\n\n\n}","import { Component, OnInit, ElementRef, Output, AfterViewInit, ViewChild, EventEmitter, Optional, Inject, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { MetaService, showRuleToken, showRule, MetaController, AppRouter, FormMetaComponent, ProfileCodeService, DefaultMetaParser, APIExecutor, MetaColumn, TranslateService } from '@allianzSND/core';\nimport { Language, StringUtils } from '@allianzSND/core';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { CUSTOMER_STATE, CustomerStoreService } from '../../service/customerStore/customerStore-service';\nimport { customerEditMetaControllerToken, addProgressPointToken } from '../../injectionToken/injection-token';\nimport { DefaultCustomerEditMetaController } from './DefaultCustomerEditMetaController';\nimport { AddProgressPoint } from '../../interface/AddProgressPoint';\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: ['./customer-edit.component.scss']\n})\nexport class CustomerEditComponent extends FormMetaComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @Output() sendContentHeight = new EventEmitter();\n  public contentHeight;\n\n  @ViewChild('inpageMain') content: ElementRef;\n\n\n  private customerDetailSubscribe = null;\n  public customerDetail;\n  public pageTitle = 'Add_Profile';\n  public today = new Date();\n\n  public language: Language = new Language();\n\n  public disableAge: boolean = false;\n  public isDisplaySavePopup: boolean = false;\n  public isShow: boolean = false;\n\n  get data() {\n    return this._data;\n  }\n\n  get rowConfig(): Array<Array<MetaColumn>> {\n    return this.metaConfig.Rows;\n  }\n  get columnConfig(): Array<MetaColumn> {\n    return this.metaConfig.Columns;\n  }\n\n  get footerConfig(): Array<MetaColumn> {\n    return this.metaConfig.Footer;\n  }\n\n\n  private edit_type = \"add\";\n  private customerID = '';\n  private _metaController: MetaController;\n\n\n\n  constructor(\n    private customerUtils: CustomerUtils,\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    private router: AppRouter,\n    private translateService: TranslateService,\n    defaultMetaController: DefaultCustomerEditMetaController,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: APIExecutor,\n    @Optional() @Inject(customerEditMetaControllerToken) customMetaController: MetaController,\n    private customerStoreService: CustomerStoreService,\n    protected metaService: MetaService,\n    @Optional() @Inject(addProgressPointToken) private addProgressPoint: AddProgressPoint\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n    this._metaController = customMetaController ? customMetaController : defaultMetaController;\n  }\n\n  ngOnInit() {\n    this.customerDetailSubscribe = this.customerStoreService.getCustomerDetailID().subscribe((customerID: string) => {\n      console.log(\"customerID:\", customerID);\n      this.customerID = customerID;\n      super.ngOnInit();\n      if (StringUtils.isEmpty(customerID)) {\n        //ADD\n        this.edit_type = \"add\";\n      }\n      else {\n        //Edit\n        this.edit_type = \"edit\";\n      }\n    })\n\n  }\n\n  ngOnDestroy() {\n    if (this.customerDetailSubscribe)\n      this.customerDetailSubscribe.unsubscribe();\n  }\n\n  public btnClick(type: string, id: string) {\n    console.log(\"BTN CLICK!\", type, id);\n    if (type === 'submit') {\n      if (this.validationResult.isTrue()) {\n        this.customerStoreService.setCurrentCustomerDetail(this._data);\n        let state = this.edit_type == \"add\" ? CUSTOMER_STATE.ADD_SAVED : CUSTOMER_STATE.EDIT_SAVED;\n        this.customerStoreService.setState(state);\n        //offline add progress point\n        console.log(\"customer addProgressPoint\", this.addProgressPoint);\n        if (this.addProgressPoint && this.edit_type == \"add\") {\n          this.addProgressPoint.addCustomerPoint(1);\n        }\n        this.router.navigate(\"Customers\");\n      }\n    }\n    this._metaController.btnClick(type, id, this._data);\n  }\n\n  public getMetaID() {\n    return 'customerEdit';\n  }\n\n  public getMetaParams() {\n    return {\n      id: this.customerID\n    }\n  }\n\n  public onValueChange(column: string, value: any, groupId: string, index: number) {\n    //Trigger other column values\n    if (column === 'Birthday') {\n      this.countAgeRange(value);\n    }\n    this._metaController.onValueChange(column, value, groupId, index, this._data, this.validationResult);\n  }\n\n  public onDataUpdated() {\n    super.onDataUpdated();\n    console.log(\"onDataUpdated!\");\n    console.log(\"data:\", this._data);\n    console.log(\"stringify:\", JSON.stringify(this._data));\n    if (this.edit_type === 'add') {\n      this.pageTitle = this.translateService.translate(this.language.addProfile);\n      this.disableAge = false;\n    }\n    else if (this.edit_type === 'edit') {\n      this.pageTitle = this.convertNameToShow(this._data.FirstName, this._data.LastName);\n      this.disableAge = StringUtils.isNotEmpty(this._data.Birthday);\n      // this.Data.AgeRange = this.disableAge ? this.Data.AgeRange : undefined;\n    }\n    this.isShow = true;\n    this._metaController.onDataUpdated(this._data);\n  }\n\n  public onValidateAll(): boolean {\n    let completeness = this.customerUtils.countCompleteness(this._data);\n    this._data.Completeness = Math.round(completeness * 100) / 100;\n    console.log(\"Calculate Completeness:\", this._data.Completeness);\n    // if (!this.validationResult.isTrue()) {\n    //   //If basic validation has error.\n    //   setTimeout(() => {\n    //     this.scrollToError();\n    //   }, 200);\n    //   return false;\n    // }\n    // else {\n    //   //Do custom validation.\n    //   let result = true;\n    //   result = result && this._metaController.onValidateAll(this._data, this.validationResult);\n    //   return result;\n    // }\n\n    let result = this._metaController.onValidateAll(this._data, this.validationResult) && this.validationResult.isTrue();\n    if (!result) {\n      setTimeout(() => {\n        this.scrollToError();\n      }, 200);\n    }\n\n    return result;\n  }\n\n  ngAfterViewInit() {\n    //ç²å¾å§å®¹é«\n    setTimeout(() => {\n      this.contentHeight = this.content.nativeElement.offsetHeight;\n      console.log('ele Height:', this.contentHeight)\n    }, 600);\n\n    this.sendContentHeight.emit(this.contentHeight);\n\n  }\n\n  private countAgeRange(birthday) {\n\n    if (StringUtils.isEmpty(birthday)) {\n      this._data.AgeRange = undefined;\n      this.disableAge = false;\n    }\n    else {\n      let age = this.customerUtils.countAge(birthday);\n      let ageRange = this.customerUtils.countAgeRange(age);\n      console.debug('ageRange', ageRange);\n\n      if (ageRange != undefined) {\n        this._data.AgeRange = ageRange;\n        this.disableAge = true;\n      }\n    }\n    console.log(\"this.data in countAgeRange:\", this._data);\n    this.changeDetector.detectChanges();\n  }\n\n  private scrollToError() {\n    console.log('scrollToError');\n    let errorBlock = this.elementRef.nativeElement.querySelector('.error-msg');\n    let scrollContent = this.elementRef.nativeElement.querySelector('.form-scroll-content');\n    console.log('scroll error:', scrollContent, 'errorBlock', errorBlock);\n    if (errorBlock && scrollContent) {\n\n      let move = errorBlock.offsetTop;\n      // let move = 50;\n      console.log('scrollToError errorBlock.offsetTop', errorBlock.offsetTop, 'move', move)\n      scrollContent.scrollTo({ top: move, behavior: \"smooth\" });\n    }\n  }\n\n  private convertNameToShow(firstName: string, lastName: string): string {\n    return this.customerUtils.convertNameToShow(firstName, lastName);\n  }\n\n}\n","import { Component, OnInit, Output, Input, EventEmitter, Optional, Inject, OnDestroy } from '@angular/core';\nimport { MetaService, Language, MetaController, FormMetaComponent, ProfileCodeService, DefaultMetaParser, InputExecutor, MetaColumn } from '@allianzSND/core';\nimport { CustomerFilterCriteria } from '../bean/customer-filter-criteria';\nimport { Subject } from 'rxjs';\nimport { customerFilterMetaControllerToken } from '../../injectionToken/injection-token';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-customer-filter',\n  templateUrl: './customer-filter.component.html',\n  styleUrls: ['./customer-filter.component.scss']\n})\nexport class CustomerFilterComponent extends FormMetaComponent implements OnInit, OnDestroy {\n\n\n\n\n  //subject to subscribe for open & save & clear\n  @Input()\n  public clear: Subject<any>;\n\n  @Input()\n  public save: Subject<any>;\n\n  @Input()\n  public open: Subject<any>;\n\n\n\n  //Input criteria\n  private _criteria = new CustomerFilterCriteria();\n  @Input()\n  get criteria() {\n    return this._criteria;\n  }\n\n  set criteria(criteria: CustomerFilterCriteria) {\n    console.log(\"set criteria:\", criteria);\n    console.log(\"PresetJson:\", criteria.toMetaJSON());\n    this._data = this.convertCriteriaToObject(criteria);\n    this.waitUntilMetaLoaded().then(() => {\n      console.log(\"this.metaConfig:\", this.metaConfig);\n      this.onDataUpdated();\n    })\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get columnConfig(): Array<MetaColumn> {\n    return this.metaConfig.Columns;\n  }\n\n  get footerConfig(): Array<MetaColumn> {\n    return this.metaConfig.Footer;\n  }\n\n\n  @Output()\n  private doneCriteria: EventEmitter<CustomerFilterCriteria> = new EventEmitter();\n\n\n\n\n  constructor(\n    protected metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: InputExecutor,\n    @Optional() @Inject(customerFilterMetaControllerToken) private customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n  }\n\n  public language: Language = new Language();\n  private unsubscribe$: Subject<void> = new Subject();\n\n  getMetaParams() {\n    return null;\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.clear) {\n      this.clear\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(() => {\n          this.clearCriteria();\n        })\n    }\n\n    if (this.save) {\n      this.save\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(() => {\n          this.saveCriteria();\n        })\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  btnClick(type: string, id: string) {\n    if (this.customMetaController) {\n      this.customMetaController.btnClick(type, id, this._data);\n    }\n  }\n\n\n  onValidateAll() {\n    if (this.customMetaController)\n      return this.customMetaController.onValidateAll(this._data, this.validationResult);\n    else\n      return true;\n  }\n\n  onValueChange(column: string, value: any, groupId = null, index = -1) {\n    if (this.customMetaController) {\n      this.customMetaController.onValueChange(column, value, groupId, index, this._data, this.validationResult);\n    }\n    else {\n      if (Array.isArray(this._data[column])) {\n        if (this._data[column].indexOf(value) > -1) {\n          this._data[column] = this._data[column].filter(x => x !== value);\n        }\n        else {\n          this._data[column] = [...this._data[column], value];\n        }\n\n        this._data[\"AsPreset\"] = false;\n      }\n      else {\n        this._data[column] = value;\n      }\n    }\n    console.log(\"this.Data:\", this._data);\n  }\n\n  getMetaID() {\n    return 'customerFilter'\n  }\n\n  onDataUpdated() {\n    super.onDataUpdated();\n    this.fillDefaultVal();\n    console.log(\"Filter Data Updated:\", this._data);\n    if (this.customMetaController) {\n      this.customMetaController.onDataUpdated(this._data);\n    }\n  }\n\n  getCheckboxValue(column: string, value: string): boolean {\n    return this._data[column] && this._data[column].indexOf(value) > -1;\n  }\n\n\n  private fillDefaultVal() {\n    this._data = Object.assign(this.getDefaultData(), this._data);\n  }\n\n  private getDefaultData() {\n    let defaultObj = this.metaConfig.Columns.map(x => x.id).reduce((acc, cur) => {\n      acc[cur] = [];\n      return acc;\n    }, {});\n    let footerObj = this.metaConfig.Footer.filter(x => x.type === 'Checkbox').map(x => x.id).reduce((acc, cur) => {\n      acc[cur] = false;\n      return acc;\n    }, {});\n    return Object.assign(defaultObj, footerObj);\n  }\n\n  private clearCriteria() {\n    this._data = Object.assign(this._data, this.getDefaultData());\n  }\n\n\n  private saveCriteria() {\n    this.doneCriteria.emit(this.convertToCriteria());\n  }\n\n\n  private convertCriteriaToObject(criteria: CustomerFilterCriteria): any {\n    return Object.assign({}, criteria.toMetaJSON());\n  }\n\n  private convertToCriteria() {\n    let criteria = new CustomerFilterCriteria();\n    this.metaConfig.Columns.map(x => x.id).forEach(colID => {\n      if (this._data[colID].length > 0)\n        criteria.addCriteriaCols(colID, this._data[colID]);\n    });\n    this.metaConfig.Footer.map(x => x.id).forEach(colID => {\n      criteria.setOption(colID, this._data[colID]);\n    });\n\n    return criteria;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, Optional, Inject } from '@angular/core';\nimport { ContactItem, Language, showRuleToken, showRule } from '@allianzSND/core';\nimport { CustomerImportGroup } from '../bean/customer-import-group';\n\n@Component({\n  selector: 'app-customer-import',\n  templateUrl: './customer-import.component.html',\n  styleUrls: ['./customer-import.component.scss']\n})\nexport class CustomerImportComponent implements OnInit {\n\n  @Input()\n  public importContractMap = new Map<string, CustomerImportGroup>();\n\n  @Output()\n  private importCustomer: EventEmitter<Array<ContactItem>> = new EventEmitter();\n\n\n  public language: Language = new Language();\n\n  constructor(\n    @Optional() @Inject(showRuleToken) private showRule: showRule\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n\n  doImport() {\n\n    let importItems: Array<ContactItem> = new Array<ContactItem>();\n\n    this.importContractMap.forEach((group: CustomerImportGroup, groupName: string) => {\n      group.getItems.forEach((item: ContactItem) => {\n        console.debug(item);\n        if (item.isCheck) {\n          importItems.push(item);\n        }\n      })\n    });\n\n    this.importCustomer.emit(importItems);\n  }\n\n  toDisplayName(firstname: string, lastname: string) {\n    if (this.showRule)\n      return this.showRule.convertName(firstname, lastname);\n    else\n      return `${lastname} ${firstname}`;\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectorRef, ElementRef, Inject, Optional, Injectable, ViewChild, AfterViewInit } from '@angular/core';\nimport { StringUtils, Language } from '@allianzSND/core';\nimport { CustomerItem } from '../../service/model/CustomerItem';\nimport { CustomerUtils } from '../../utils/customer-utils';\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\nexport class CustomerListComponent implements OnInit, AfterViewInit {\n\n\n  public loadingFinish: boolean = true;\n  public refreshFinish: boolean = true;\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private customerUtils: CustomerUtils\n  ) { }\n\n  @Output()\n  public customerClick: EventEmitter<CustomerItem> = new EventEmitter();\n\n  @Output()\n  public customerLoad: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public customerRefresh: EventEmitter<any> = new EventEmitter();\n\n  @Input()\n  get customerList() { return this._customerList; }\n  set customerList(customerList: Array<CustomerItem>) {\n\n    this._customerList = customerList;\n    this.loadingFinish = true;\n    this.refreshFinish = true;\n  }\n  private _customerList: Array<CustomerItem> = [];\n\n  @Input()\n  get filterType() { return this._filterType; }\n  set filterType(filterType) {\n    this._filterType = filterType;\n  }\n  private _filterType;\n\n  public language: Language = new Language();\n\n  private _onClickCustomerID;\n  @Input()\n  get onClickCustomerID() {\n    return this._onClickCustomerID;\n  }\n  set onClickCustomerID(onClickCustomerID) {\n    this._onClickCustomerID = onClickCustomerID;\n  }\n\n  //Is Default Data(No Search Status)\n  public get isDefaultData() {\n    return this.customerList.length == 0 && StringUtils.isNotEmpty(this.filterType) && this.filterType == 'NONE';\n  }\n\n  public get showSearchNoData() {\n    return this.customerList.length == 0 && StringUtils.isNotEmpty(this.filterType) && this.filterType == 'SEARCH';\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n  }\n\n\n  trackByClientID(index, item) {\n    return item.clientID;\n  }\n\n\n\n  async closeSlidingItems() {\n    console.debug('list closeSlidingItems');\n\n    const item = this.elementRef.nativeElement.querySelector('ion-item-sliding');\n    if (item != null) {\n      /// console.debug('item size',item.length);\n      console.debug('item', item);\n      await item.close();\n      await item.closeOpened();\n    }\n\n  }\n\n  onClickCustomer(clientID: string) {\n\n    this._onClickCustomerID = clientID;\n\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 300);\n\n    let item = this.customerList.filter(item => item.clientID == clientID);\n\n    this.customerClick.emit(item[0]);\n  }\n\n\n  loadCustomer(e) {\n    console.log('lazy load customer:', e);\n    //Settimeout to animate loader\n    setTimeout(() => {\n      this.customerLoad.emit();\n    }, 800);\n\n  }\n\n  refreshCustomer() {\n    //set timeout for refresh animation\n    setTimeout(() => {\n      this.customerRefresh.emit();\n    }, 800);\n  }\n\n  convertNameToShow(customerItem: CustomerItem): string {\n    return this.customerUtils.convertNameToShow(customerItem.firstName, customerItem.lastName);\n  }\n}\n","import { ContactItem } from \"@allianzSND/core\";\n\nexport class CustomerImportGroup {\n    private _groupName : string;\n    private _isShow : boolean = true;\n    private _items : Array<ContactItem> = new Array<ContactItem>();\n\n    constructor(groupName : string) {\n        this._groupName = groupName;\n    }\n\n    public addItem(item : ContactItem) {\n        this._items.push(item);\n    }\n\n    public get getItems() {\n        return this._items;\n    }\n\n    public get groupName() {\n        return this._groupName;\n    }\n\n    public set groupName(groupName : string) {\n        this._groupName = groupName;\n    }\n\n    public get isShow() {\n        return this._isShow;\n    }\n\n    public set isShow(isShow : boolean) {\n        this._isShow = isShow;\n    }\n\n}","import { Injectable, Optional, Inject } from '@angular/core';\nimport { CustomerImportDisplay } from '../../interface/CustomerImportDisplay';\nimport { customerImportDisplayToken } from '../../injectionToken/injection-token';\nimport { StringUtils } from '@allianzSND/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DefaultCustomerImportDisplay implements CustomerImportDisplay {\n\n    constructor(\n        @Optional() @Inject(customerImportDisplayToken) private customImportDisplay: CustomerImportDisplay\n    ) { }\n\n    convert(customer: any) {\n        if (this.customImportDisplay)\n            return this.customImportDisplay.convert(customer);\n        else {\n            if (StringUtils.isEmpty(customer.LastName)) {\n                customer.LastName = customer.FirstName;\n                customer.FirstName = '';\n            }\n            return customer;\n        }\n    }\n}","import { Component, OnInit, ViewChild, Optional, Inject, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { trigger, state, style, animate, transition, } from '@angular/animations';\nimport { Language, StringUtils, DateUtils, PageInfo, DeviceService, ProfileCode, ProfileCodeService, TranslateService, ContactItem, ExtDataProcess, DataSyncService, showRuleToken, showRule, NotificationMgr, NotificationObject, ConfigToken, AppRouter, NotificationType } from '@allianzSND/core';\nimport { CalendarService } from '../../../calendar/service/calendar-service.service';\nimport { CalendarEventDetail } from '../../../calendar/service/model/CalendarEventDetail';\nimport { CalendarEditComponent } from '../../../calendar/components/calendar-edit/calendar-edit.component';\nimport { CustomerService } from '../../service/customer-service.service';\nimport { CustomerTel } from '../../service/model/CustomerTel';\nimport { CustomerFilterCriteria } from '../bean/customer-filter-criteria';\nimport { CustomerAlertItem } from '../../service/model/CustomerAlertItem';\nimport { CustomerItem } from '../../service/model/CustomerItem';\nimport { CustomerImportGroup } from '../bean/customer-import-group';\nimport { addDays, addHours, addMinutes, getDate, getHours, getMinutes, getMonth, getYear, subMinutes } from 'date-fns';\nimport { CUSTOMER_STATE } from '../../service/customerStore/customerStore-service';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { Subject, Observable } from 'rxjs';\nimport { CustomerStoreService } from '../../service/customerStore/customerStore-service';\nimport { DefaultCustomerImportDisplay } from './DefaultCustomerImportDisplay';\nimport { addProgressPointToken, customerShowRuleToken } from '../../injectionToken/injection-token';\nimport { AddProgressPoint } from '../../interface/AddProgressPoint';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { CustomerShowRule } from '../../interface/CustomerShowRule';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n  animations: [\n    trigger('searchBlockAni', [\n      state('*', style({\n        width: '0',\n        opacity: 0\n      })),\n      state('open', style({\n        width: '100%',\n        opacity: 1\n      })),\n      state('closed', style({\n        width: '0',\n        opacity: 0\n      })),\n      transition('open => closed', animate('300ms ease-in')),\n      transition('closed => open', animate('300ms ease-in'))\n    ]),\n  ]\n})\nexport class CustomersComponent implements OnInit, OnDestroy {\n\n  //intergration Calendar Module\n  @ViewChild(CalendarEditComponent) calendarEditComponent;\n  public viewTypeIndex = 2; // 'month'\n  public viewType: string;\n  public viewDate = new Date();\n  public weekStartsOn = 1; // Monday \n  public isShowDetailScroll: boolean = true;\n\n\n\n  // control mobile show\n  public isShow = false;\n\n  //use to force refresh customerList\n  public showCustomerList = true;\n\n  // popup\n  public isExpandDetail = false;\n  public isRefreshDetail = false;\n  public isSaveClick = false;\n\n  public language: Language = new Language();\n\n  //å®¢æ¶æ¸å®çsearch block animate\n  public isOpen: boolean = false;\n  public classSearch: string = '';\n\n  //popup control\n  public isDisplayImportSavePopup = false; //import popup\n  public isDisplaySavePopup = false; //save popup\n  public isDisplayDelCustomerPopup = false; //delete customer popup\n  public isDisplayConfirmAlertPopup = false; //confirm alert popup\n  public isDisplayInfoAlertPopup = false; //info alert popup\n  public isDisplayUpdateRemind = false; //alert customer over 6 month popup\n  public isDisplayDeleteRemind = false; //alert customer over 6 month & 7day popup\n  public isPopupImport = false; //import popup\n  public isPopupFilter = false; //filter popup\n  public isExpandEdit = false; // appointment popup\n  public isPopupCallPhone = false; //call customer phone popup\n  public isPopupNoteDetail = false; //contact detail popup\n  public isPopupEditNote = false; //add/edit contact note popup\n  public isPopupDeleteNote = false; //delete contact note popup\n  public isPopupConfirmDisable = true; // confirmPopup btn is disable default\n  public isDisplayDeletePopup = false; //delete success popup\n  public isCalendarEditMetaDataDone: boolean = false;\n\n  //control overtime customer list\n  public alertOverTimeList = new Array<CustomerAlertItem>();\n\n  //control auto delete customer list\n  public alertAutoDeleteCustomer = new Array<CustomerAlertItem>();\n\n  //control refresh  content\n  public isLoadingFinishContent: boolean = false;\n  public isRefreshFinishContent: boolean = true;\n\n  //control\n  public isLazyLoading: boolean = true;\n\n  //intergration customer-detail used\n  //call phone obj\n  public callPhoneTelArray: Array<CustomerTel>;\n\n  //intergration customer-contact-list used\n  //customer contact detail obj\n  public customerContactDetail: any = null;\n  public customerContactList: Array<any> = [];\n  public contactListPageInfo = new PageInfo();\n\n  public calendarEventDetail: CalendarEventDetail;\n  public viewDateCalendarEventList: Array<CalendarEventDetail> = [];\n\n  get customerClientID() {\n    if (this.customerDetail && this.customerDetail.ClientID)\n      return this.customerDetail.ClientID;\n    else\n      return '';\n  }\n\n  //intergration customer-list\n  public customerList = new Array<CustomerItem>();\n  public clickItem: CustomerItem;\n  public customerListPageInfo = new PageInfo();\n  private _filterCriteria = new CustomerFilterCriteria();\n\n  public get filterCriteria() {\n    return this._filterCriteria;\n  }\n  public set filterCriteria(value) {\n    this._filterCriteria = value;\n  }\n  public filterType = 'NONE';\n\n  public optionMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public translateMap: Map<string, string> = new Map<string, string>();\n\n  private dayTypesList: Array<string> = ['Cross_Day', 'All_Day'];\n  private noSchedule: string = 'No_Schedule';\n\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public alertTypeList: Array<ProfileCode> = [];\n\n\n  //intergration customer-import\n  public importContractMap = new Map<string, CustomerImportGroup>();\n  public mobileResultSize: number = 0;\n  public importData: boolean = false;\n  public importContactList: Array<ContactItem> = [];\n  public importSearchKeyword: string = '';\n\n  //filter customer attribute\n  public isLoadCriteria: boolean = false;\n  public isClearCriteria: boolean = false;\n\n  //import result(success | fail);\n  public _onImportResult: boolean = false;\n\n\n  //intergration customer-edit used\n  //add/edit contact note attribute\n  public currentEditNote: any = null;\n  public isRefreshContactList: boolean = false;\n  public loadContactList: boolean = false;\n\n\n\n  // search animate in filter\n  public classBarMove: string = '';\n\n  //intergration customer-detail used\n  public customerDetail: any = null;\n\n  private emptyCustomer: any = {\n    ClientID: ''\n  };\n\n  //current edit customer Id\n  public currentCustomer: any = this.emptyCustomer;\n\n\n\n  public get needConfirmPopup() {\n    let env = this.APP_CONFIG[\"ENV\"];\n    return this.APP_CONFIG && !!this.APP_CONFIG[env][\"CUSTOMER_ADD_ANNOUNCE\"];\n  }\n\n  private confirmAction = null;\n\n\n  // current customer state\n  private customerState: CUSTOMER_STATE = CUSTOMER_STATE.FIRST;\n\n  //pre saved criteria\n  private pre_criteria: CustomerFilterCriteria = new CustomerFilterCriteria();\n\n  //pre saved customerlist\n  private pre_customerList: Array<CustomerItem>;\n\n  //subscribe of store\n  private unsubscribe$: Subject<void> = new Subject();\n\n  //subject of clear & save filter\n  public clearSubject = new Subject();\n  public saveFilterSubject = new Subject();\n  public contactSaveSubject = new Subject();\n\n\n  //for extension used\n\n  constructor(private customerService: CustomerService,\n    private calendarService: CalendarService,\n    private translateService: TranslateService,\n    private deviceService: DeviceService,\n    private dateUtils: DateUtils,\n    private profileCodeService: ProfileCodeService,\n    private customerUtils: CustomerUtils,\n    private router: AppRouter,\n    private customerStoreService: CustomerStoreService,\n    private customerImportDisplay: DefaultCustomerImportDisplay,\n    private notificationMgr: NotificationMgr,\n    private changeDetector: ChangeDetectorRef,\n    @Optional() @Inject(ConfigToken) private APP_CONFIG: any,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n    @Optional() @Inject(customerShowRuleToken) private customerShowRule: CustomerShowRule,\n    @Optional() @Inject(addProgressPointToken) private addProgressPoint: AddProgressPoint\n\n  ) {\n\n  }\n\n  ngOnDestroy() {\n    console.log(\"customer ngOnDestroy!\");\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n\n  ngOnInit() {\n    console.log(\"customer ngOninit!\");\n    this.contactListPageInfo.pageSize = 5;\n    this.activityTypeList = this.profileCodeService.getCodeArray('Calendar_Type');\n    this.alertTypeList = this.profileCodeService.getCodeArray('Calendar_RemindTime');\n    this.optionMap.set('Calendar_Type', this.activityTypeList);\n    this.optionMap.set('Calendar_RemindTime', this.alertTypeList);\n\n    this.dayTypesList.forEach((dayType) => {\n      this.translateMap.set(dayType, this.translateService.translate(dayType))\n    });\n    this.translateMap.set(this.noSchedule, this.translateService.translate(this.noSchedule));\n\n\n    this.customerStoreService.getCriteria()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((criteria) => {\n        this.pre_criteria = criteria;\n      })\n\n    this.customerStoreService.getCurrentCustomerDetail()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(detail => {\n        console.log(\"customer onsubscribe currentCustomerDetail:\", detail);\n        this.currentCustomer = detail;\n      });\n\n    this.customerStoreService.getCustomerList()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(list => {\n        this.pre_customerList = list;\n      })\n\n    this.customerStoreService.getState()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(async (state) => {\n\n        console.log(\"main state: \", state);\n        if (state == CUSTOMER_STATE.EDIT_SAVED && this.customerState != CUSTOMER_STATE.EDIT_SAVED) {\n\n          //after saved, check if current ID in criteria\n          console.log(\"state == CUSTOMER_STATE.EDIT_SAVED\");\n          console.log(\"currentCustomer: \", this.currentCustomer);\n          this.isDisplaySavePopup = true;\n          this.customerList = this.pre_customerList;\n          this.filterCriteria = this.pre_criteria;\n          let hasCriteria = this.pre_criteria.hasCriteria();\n          let inCriteria = false;\n          if (hasCriteria)\n            inCriteria = await this.customerService.checkInFilterCriteria(this.currentCustomer.ClientID, this.pre_criteria).toPromise();\n\n          this.customerList.forEach(item => {\n            if (item.clientID == this.currentCustomer.ClientID) {\n              item.firstName = this.currentCustomer.FirstName;\n              item.lastName = this.currentCustomer.LastName;\n              item.tag = this.currentCustomer.Possibility;\n              item.complementPercent = this.currentCustomer.Completeness;\n              if (hasCriteria)\n                item.isHighLight = !inCriteria;\n            }\n          });\n          this.customerList = [...this.sortCustomerList(this.customerList)];\n          if (hasCriteria)\n            this.customerStoreService.setCustomerList(this.customerList);\n\n\n          await this.onGetCustomerDetailByID(this.currentCustomer.ClientID);\n          this.refreshContactNote(false);\n        }\n        else if (state == CUSTOMER_STATE.EDIT && this.customerState != CUSTOMER_STATE.EDIT && this.customerState == CUSTOMER_STATE.FIRST) {\n          // edit/click page click last page\n\n          this.customerList = this.pre_customerList;\n          this.filterCriteria = this.pre_criteria;\n          if (!StringUtils.isEmpty(this.currentCustomer.ClientID)) {\n            await this.onGetCustomerDetailByID(this.currentCustomer.ClientID);\n          }\n          this.refreshCustomerList(false);\n        }\n        else if (this.customerState == CUSTOMER_STATE.FIRST && state == CUSTOMER_STATE.DISPLAY) {\n          //firt in, fetch preset filter\n          console.log(\"this.customerState == CUSTOMER_STATE.FIRST && state == CUSTOMER_STATE.DISPLAY\");\n          await this.loadPresetCriteria();\n          this.refreshCustomerList(false);\n        }\n        else if (state == CUSTOMER_STATE.ADD_SAVED) {\n\n          //after add , get pre_criteria && refresh customerlist\n          console.log(\"state == CUSTOMER_STATE.ADD_SAVED\", this.currentCustomer);\n          this.isDisplaySavePopup = true;\n          this.filterCriteria = this.pre_criteria;\n          this.refreshCustomerList(false, this.currentCustomer.ClientID);\n        }\n        else if (state == CUSTOMER_STATE.IMPORT) {\n          this.importPopup();\n        }\n\n        if (this.customerState != state) {\n          this.customerState = state;\n          this.customerStoreService.setState(CUSTOMER_STATE.DISPLAY);\n        }\n      })\n    this.customerStoreService.setState(CUSTOMER_STATE.DISPLAY);\n\n    this.refreshContactNote(false);\n\n\n    this.notificationMgr.showCategoryMessage(\"Customer\");\n  }\n\n\n  async refreshCustomerList(isAppend: boolean, clientID = '') {\n    console.debug('refreshCustomerList append', isAppend, clientID);\n    console.debug(this.filterCriteria);\n    console.debug(this.customerListPageInfo);\n\n    //fetch customer-list data\n    if (!isAppend) this.customerListPageInfo.resetPage();\n\n    let data = await this.customerService.getCustomerList(this.filterCriteria, this.customerListPageInfo).pipe(take(1)).toPromise();\n    console.log(\"data in criteria: \", data);\n    if (!isAppend) this.customerList = [...data];\n    else this.customerList = [...this.customerList, ...data];\n\n    if ((!this.filterCriteria.hasCriteria())) {\n      this.filterType = 'NONE';\n    }\n    else {\n      this.filterType = StringUtils.isNotEmpty(this.filterCriteria.keyword) ? 'SEARCH' : 'FILTER';\n    }\n    console.log(\"refreshCustomerList filterType:\", this.filterType);\n\n    this.customerList = [...this.sortCustomerList(this.customerList)];\n    this.customerStoreService.setCustomerList(this.customerList);\n\n\n\n    if (this.customerList.length > 0) {\n      let clickItemFilter = this.customerList.filter(x => x.clientID === clientID);\n      let targetClientID = clickItemFilter.length > 0 ? clientID : this.customerList[0].clientID;\n      await this.onGetCustomerDetailByID(targetClientID);\n      this.refreshContactNote(false);\n    }\n    else {\n      this.customerDetail = this.emptyCustomer;\n      this.customerStoreService.setCurrentCustomerDetail(this.customerDetail);\n    }\n\n\n  }\n\n  /* integration contact-list */\n  private async refreshContactNote(isAppend: boolean) {\n\n    if (this.customerClientID) {\n      //if append data will next page\n      if (!isAppend) this.contactListPageInfo.resetPage();\n\n      let data = await this.customerService.getCustomerContactNote(this.customerDetail.ClientID, this.contactListPageInfo).toPromise();\n      if (isAppend)\n        this.customerContactList = this.customerContactList.concat(data);\n      else\n        this.customerContactList = data;\n\n      console.debug('refreshContactNote success isRefreshContactList status');\n    }\n\n  }\n\n  private sortCustomerList(list: Array<CustomerItem>): Array<CustomerItem> {\n\n    if (this.customerShowRule) {\n      return this.customerShowRule.sortCustomerList(list);\n    }\n\n    else {\n      return list.map(x => x.clone()).sort((n1, n2) => {\n        let n1_name = StringUtils.isEmpty(n1.lastName) ? '' : n1.lastName;\n        let n2_name = StringUtils.isEmpty(n2.lastName) ? '' : n2.lastName;\n        return n1_name.localeCompare(n2_name);\n      });\n    }\n  }\n\n\n\n  onGetCustomerContactListByID(clientID) {\n    this.customerService.getCustomerContactNote(clientID, this.contactListPageInfo)\n      .subscribe(data => {\n        this.customerContactList = data;\n      });\n  }\n\n  async onGetCustomerDetailByID(clientID) {\n    console.log(\"onGetCustomerDetailByID clientID:\", clientID);\n    let data = await this.customerService.getCustomerDetail(clientID).toPromise();\n    console.log(\"onGetCustomerDetailByID data:\", data);\n    this.customerDetail = data;\n    this.customerStoreService.setCurrentCustomerDetail(data);\n  }\n\n  toggleSearch() {\n    this.isOpen = !this.isOpen;\n    this.classSearch = this.isOpen ? ' active' : ''\n    if (!this.isOpen) {\n      // this.filterCriteria = new CustomerFilterCriteria();\n      this.filterCriteria.keyword = '';\n      this.customerStoreService.setCriteria(this.filterCriteria);\n\n      this.refreshCustomerList(false);\n    }\n\n  }\n\n  // search keypress\n  searchCustomerName(name) {\n    console.debug('searchCustomerName', name);\n\n    this.filterCriteria.keyword = name;\n    this.customerStoreService.setCriteria(this.filterCriteria);\n    this.refreshCustomerList(false);\n\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n\n  //when customer-list click get click Item\n  async onChangeCustomer(customerItem: CustomerItem) {\n\n    this.clickItem = customerItem;\n\n\n\n    //get CustomerDetail\n    await this.onGetCustomerDetailByID(customerItem.clientID);\n    this.refreshContactNote(false);\n    this.isShow = true;\n\n  }\n\n  //when customer-list fetch next record\n  onCustomerLoad() {\n    this.customerListPageInfo.nextPage();\n\n    this.refreshCustomerList(true);\n  }\n\n  //when customer-list sync data to backend\n  onCustomerRefresh() {\n    this.refreshCustomerList(false, this.customerClientID);\n  }\n\n  deleteCustomer(customerClientID: string) {\n    this.isDisplayDelCustomerPopup = true;\n  }\n\n  async doDeleteCustomer() {\n    let _clientID = this.customerDetail.ClientID;\n    this.customerList = this.customerList.filter(x => x.clientID != this.customerDetail.ClientID);\n    if (this.customerList.length === 0) {\n      this.customerDetail = this.emptyCustomer;\n      this.customerStoreService.setCurrentCustomerDetail(this.customerDetail);\n    }\n    else {\n      await this.onGetCustomerDetailByID(this.customerList[0].clientID)\n      this.refreshContactNote(false);\n    }\n\n    let data = await this.customerService.deleteCustomerProfile(_clientID).toPromise();\n    console.log(\"customerService.doDeleteCustomer()\", data);\n\n    if (data.status) {\n\n      this.customerStoreService.setCustomerList(this.customerList);\n\n      this.isShow = false;\n      this.isDisplayDeletePopup = true;\n    }\n  }\n\n  addAppointment(customerClientID: string) {\n    let currentTime; // adjust time to next interval\n    currentTime = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), getHours(new Date()), getMinutes(new Date()));\n    currentTime = addMinutes(currentTime, (5 - getMinutes(currentTime) % 5));  // adjust minutes to next 5 minutes\n    currentTime = addHours(currentTime, 1);\n    this.calendarEventDetail = new CalendarEventDetail('', '', customerClientID, '', '', null, 'N', currentTime, addMinutes(currentTime, 15), 'Y', '8', null, '', '', null);\n    let queryDate = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), 0, 0, 0);\n    this.calendarService.getCalendarEventList(queryDate, subMinutes(addDays(this.viewDate, 1), 1), '')\n      .subscribe(data => {\n        this.viewDateCalendarEventList = data;\n        this.onToggleAppointmentModal(true);\n      });\n  }\n\n  onClickAppointmentSave() {\n    this.isSaveClick = true;\n  }\n\n  onToggleAppointmentModal(val) {\n    if (!val) {\n      this.isCalendarEditMetaDataDone = false;\n    }\n    this.isExpandEdit = val;\n  }\n\n  onSaveCalendarEvent(resp) {\n    let type = resp.type;\n    let data = resp.data;\n    console.log(\"calendarEventDetail: \", data);\n    if (type !== 'fail') {\n      this.isDisplaySavePopup = true;\n      this.onToggleAppointmentModal(false);\n      this.calendarService.getCalendarEventDetail(data.ClientID).subscribe(data => {\n        this.calendarEventDetail = data;\n      })\n    }\n    this.isSaveClick = false;\n  }\n\n  addCustomer() {\n\n    let detail = {};\n    this.customerStoreService.setCurrentCustomerDetail(detail);\n    this.customerStoreService.setState(CUSTOMER_STATE.EDIT);\n\n    this.router.navigate(\"CustomerEdit\");\n  }\n\n  editCustomer(customerClientID: string) {\n    this.customerStoreService.setState(CUSTOMER_STATE.EDIT);\n    this.customerService.getCustomerDetail(customerClientID).subscribe((detail: any) => {\n      console.log(\"editCustomer:\", detail);\n      console.log(\"Stringify:\", JSON.stringify(detail));\n      this.customerStoreService.setCurrentCustomerDetail(detail);\n\n      //romove body fixed\n      setTimeout(() => {\n        document.body.classList.remove(\"fixed-body-full-page\");\n      }, 200);\n      this.router.navigate(\"CustomerEdit\")\n    })\n\n  }\n\n\n  followChange(detail) {\n    this.customerService.updateCustomerFollowStatus(detail.clientID, detail.isFollow).subscribe((data) => {\n      if (this.filterCriteria) {\n        this.customerService.checkInFilterCriteria(detail.clientID, this.filterCriteria).subscribe(result => {\n\n          this.customerList.forEach(item => {\n            if (item.clientID == detail.clientID) {\n              //console.debug('change isHighLight status in follow');\n              if (result) {\n                item.isHighLight = false;\n              }\n              else {\n                item.isHighLight = true;\n              }\n            }\n          });\n        })\n      }\n\n      this.customerList.filter(x => x.clientID == detail.clientID).forEach((value) => {\n        value.isFollow = detail.isFollow;\n      });\n    });\n\n  }\n\n  addNote() {\n    console.debug('addNote');\n    this.currentEditNote = {\n      ClientID: '',\n      CustomerClientID: this.customerDetail.ClientID,\n      NoteTime: Date.now(),\n      DisplayDate: this.toNoteTime(new Date())\n    };\n    this.isPopupEditNote = true;\n  }\n\n  editNote(note: any) {\n    console.debug('editNote', note);\n\n    this.currentEditNote = Object.assign({}, note, {\n      CustomerClientID: this.customerDetail.ClientID,\n      NoteTime: Date.now(),\n      DisplayDate: this.toNoteTime(new Date())\n    })\n    console.log(\"this.currentEditNote:\", this.currentEditNote)\n    this.isPopupEditNote = true;\n\n  }\n\n  displayNote(note: any) {\n    console.debug('displayNote', note);\n    this.customerContactDetail = note;\n\n    // add click customer name\n    this.customerContactDetail.Name = this.convertNameToShow(this.customerDetail.FirstName, this.customerDetail.LastName);\n\n    this.isPopupNoteDetail = true;\n  }\n\n\n  deleteNote(note: any) {\n    console.debug('deleteNote', note);\n    this.currentEditNote = note;\n\n    this.isPopupDeleteNote = true;\n  }\n\n  doDeleteContact() {\n    this.customerService.deleteCustomerContact(this.currentEditNote.ClientID).subscribe(data => {\n\n      console.log(\"customerService.deleteNote()\", data);\n\n      if (data.status) {\n        this.customerContactList = this.customerContactList.filter(x => x.ClientID != this.currentEditNote.ClientID);\n        this.currentEditNote = null;\n        this.isDisplayDeletePopup = true;\n      }\n    });\n  }\n\n  onSaveNote(event) {\n    this.contactSaveSubject.next();\n  }\n\n  onSaveNoteFinish(note) {\n    this.isPopupEditNote = false;\n    this.isDisplaySavePopup = true;\n\n    this.isShowDetailScroll = false;\n    setTimeout(() => {\n      this.isShowDetailScroll = true;\n      this.refreshContactNote(false);\n    }, 200);\n  }\n\n  doAction(action) {\n\n    console.log(\"doaction: \", action);\n    if (this.needConfirmPopup) {\n      this.isDisplayConfirmAlertPopup = true;\n      this.isPopupConfirmDisable = true;\n      this.confirmAction = action;\n    }\n    else {\n      if (action == 'add') {\n        this.addCustomer();\n      }\n\n      else if (action == 'import') {\n        this.import();\n      }\n    }\n  }\n\n  confirmPopup() {\n    this.isPopupConfirmDisable = true;\n    this.isDisplayConfirmAlertPopup = false;\n    this.changeDetector.detectChanges();\n    if (this.confirmAction === 'add')\n      this.addCustomer();\n    else if (this.confirmAction == 'import') {\n      this.import();\n    }\n    this.confirmAction = null;\n  }\n\n\n  // detect confirm popup to content bottm and the btn can click\n  detectScroll(isBtm) {\n    console.log('in detect scroll===', isBtm);\n    if (isBtm) {\n      this.isPopupConfirmDisable = false\n    }\n  }\n\n\n\n  private async importPopup() {\n    let importList;\n    try {\n      importList = await this.deviceService.searchContactsByName(\"\");\n      console.debug('import result ', importList);\n      this.importContractMap.clear();\n      //regroup\n      importList.forEach(element => {\n        console.debug(element.LastName);\n        element = this.customerImportDisplay.convert(element);\n        let name = this.convertNameToShow(element.FirstName, element.LastName).trim();\n        if (name != null && name.length > 0) {\n          let firstWord = name.substring(0, 1);\n          firstWord = firstWord.toLowerCase();\n          console.debug('firstWord =' + firstWord);\n          let group: CustomerImportGroup = this.importContractMap.get(firstWord);\n          if (group == undefined) group = new CustomerImportGroup(firstWord);\n          group.addItem(element);\n          this.importContractMap.set(firstWord, group);\n        }\n      });\n      console.debug('importContractMap', this.importContractMap);\n      this.isPopupImport = true;\n    } catch (error) {\n      console.warn('catch error', error);\n      this.notificationMgr.pushNotification(NotificationType.ContactPermissionError, null);\n      if (this.deviceService.getDevicePlatform() == 'iOS') {\n        this.deviceService.grantContactPermission();\n      }\n    }\n\n  }\n\n  import() {\n    this.customerStoreService.setState(CUSTOMER_STATE.IMPORT);\n  }\n\n  //control import popup is display\n  displayImportPopup(isShow: boolean) {\n    this.isPopupImport = isShow;\n  }\n\n  //when keypress keyword refresh contract list\n  refreshImport(keyword: string) {\n    this.importSearchKeyword = keyword;\n    let lowerCaseKeyword = this.importSearchKeyword.toLowerCase();\n    this.importContractMap.forEach((group: CustomerImportGroup, groupName: string) => {\n      // console.log(groupName, group);\n\n      group.isShow = false;\n      group.getItems.forEach((item: ContactItem) => {\n        // console.debug('item',item);\n        let name: string = item.LastName + item.FirstName;\n        name = name.toLowerCase();\n        // console.debug(name);\n        if (name.indexOf(lowerCaseKeyword) === -1) {\n          item.isShow = false;\n        }\n        else {\n          item.isShow = true;\n          group.isShow = true;\n        }\n      })\n    });\n  }\n\n  onCloseImportPopup() {\n    this.customerStoreService.setState(CUSTOMER_STATE.DISPLAY);\n    this.importSearchKeyword = '';\n  }\n\n  doImport() {\n    this.showCustomerList = false;\n    this.customerService.importContact(this.importContactList).subscribe(data => {\n      //alert(\"1\"+JSON.parse(JSON.stringify(data)).status);\n      //å é»æ¸\n      if (this.addProgressPoint && this.importContactList.length > 0) {\n        this.addProgressPoint.addCustomerPoint(this.importContactList.length);\n      }\n      this.customerStoreService.setState(CUSTOMER_STATE.DISPLAY);\n      let status = (JSON.parse(JSON.stringify(data))).status;\n\n      if (status) {\n        //clear list first, prevent lazyloading cache\n        this.customerList = [];\n        this.showCustomerList = true;\n        this.isPopupImport = false;\n        this.isDisplayImportSavePopup = true;\n        this.mobileResultSize = 0;\n        this.importSearchKeyword = '';\n\n        //refresh customer list\n        this.refreshCustomerList(false);\n      }\n    });\n  }\n\n\n\n\n  /* customer-import*/\n  onImportCustomer(importItems) {\n    console.debug('importItems', importItems);\n\n    this.importContactList = importItems;\n    this.mobileResultSize = importItems.length;\n  }\n\n  //call customer function\n  callCustomer(customerClientID: string) {\n    console.debug('callCustomer = ' + customerClientID);\n    this.customerService.getCustomerContactTel(customerClientID).subscribe(data => {\n      this.callPhoneTelArray = data;\n\n      //check number array is single\n      if (this.callPhoneTelArray.length != 0) {\n\n        //only one number just to call out\n        if (this.callPhoneTelArray.length == 1) {\n          this.callPhone(this.callPhoneTelArray[0].tel);\n        }\n        else {\n          this.isPopupCallPhone = true;\n        }\n      }\n\n    });\n\n  }\n\n  //cancel callphone popup\n  cancelCallPhone() {\n    this.isPopupCallPhone = !this.isPopupCallPhone;\n  }\n\n  //call number from phone\n  callPhone(telNumber: string) {\n    console.debug('callPhone', telNumber);\n\n\n    //call phone close popup\n    if (this.isPopupCallPhone) this.isPopupCallPhone = !this.isPopupCallPhone;\n\n\n    window.open('tel:' + telNumber, '_system');\n\n    //popup contact note\n    setTimeout((fun) => {\n      this.addNote();\n    }, 1000);\n  }\n\n\n  //open filter popup\n  filter() {\n    this.isPopupFilter = true;\n  }\n\n  //clear filter item\n  clearFilter() {\n    this.clearSubject.next();\n  }\n\n\n  //filter customer list and close popup\n  doFilter() {\n    this.saveFilterSubject.next();\n  }\n\n  doneCriteria(criteria: CustomerFilterCriteria) {\n    console.debug('doneCriteria', criteria);\n    this.filterCriteria = criteria;\n    this.isPopupFilter = false;\n    this.customerStoreService.setCriteria(criteria);\n    if (criteria.getOption(\"AsPreset\")) {\n      this.customerService.saveFilterCriteria(criteria).subscribe(data => {\n        console.debug('doneCriteria saveFilterCriteria', data);\n      });\n    }\n    this.refreshCustomerList(false);\n  }\n\n  loadPresetCriteria() {\n    //check has preset\n    let criteria = new CustomerFilterCriteria();\n\n    return this.customerService.getFilterCriteriaPreset().toPromise().then(data => {\n      console.debug('getfilterCriteriaPreset', data);\n\n      if (data != undefined) {\n\n        let count = 0;\n        for (let column in data) {\n          let values = data[column];\n          console.debug('column', column, 'arrays', values);\n          criteria.addCriteriaCols(column, values);\n          count++;\n        }\n\n        if (count != 0) {\n          criteria.setOption(\"AsPreset\", true);\n        }\n        else {\n          criteria.setOption(\"AsPreset\", false);\n        }\n        this.filterCriteria = criteria;\n\n      }\n    });\n\n\n  }\n\n\n  cancelDelete() {\n    console.log('cancelDelete');\n  }\n\n  // refreash content\n  refreshContent() {\n    //set timeout for refresh animation\n    setTimeout(() => {\n      this.isRefreshFinishContent = true;\n    }, 800);\n\n  }\n\n\n  // loading contact note \n  async loadContent(event) {\n    console.log('content loading this.customerList.length: ', this.customerList.length);\n    if (this.customerList.length > 0) {\n      this.contactListPageInfo.nextPage();\n      await this.refreshContactNote(true);\n      this.isLoadingFinishContent = true;\n    }\n    else {\n      setTimeout(() => {\n        this.isLoadingFinishContent = true;\n      }, 0);\n    }\n\n  }\n\n\n\n  //isShowChange\n  isShowChange(val) {\n    if (this.isShow !== val) {\n      this.isShow = val;\n      // this.changeDetector.detectChanges();\n    }\n  }\n\n  convertNameToShow(firstName: string, lastName: string): string {\n    return this.customerUtils.convertNameToShow(firstName, lastName);\n  }\n\n  public toNoteTime(time: Date) {\n    if (this.showRule) {\n      return this.showRule.convertDateAndTime(time);\n    }\n    else {\n      return this.dateUtils.toDateString(time, 'MM/dd/yyyy HH:mm');\n    }\n  }\n\n  onCalendarEditMetaDataDone() {\n    this.isCalendarEditMetaDataDone = true;\n  }\n\n\n  filterCriteriaPopupChange(event) {\n    console.warn('filterCriteriaPopupChange event: ', event);\n    this.isPopupFilter = event;\n    if (this.isPopupFilter) {\n      this.filterCriteria = this.filterCriteria.clone();\n    }\n  }\n\n\n}\n","import { Component, OnInit, Input, Optional, Inject } from '@angular/core';\nimport { MetaService, DisplayMetaComponent, ProfileCodeService, DefaultMetaParser, InputExecutor, MetaColumn, MetaController } from '@allianzSND/core';\nimport { customerContactDetailMetaControllerToken } from '../../injectionToken/injection-token';\n\n@Component({\n  selector: 'app-customer-contact-detail',\n  templateUrl: './customer-contact-detail.component.html',\n  styleUrls: ['./customer-contact-detail.component.scss']\n})\nexport class CustomerContactDetailComponent extends DisplayMetaComponent implements OnInit {\n  @Input()\n  public set data(value) {\n    this._data = value;\n    console.log(\"set contact detail data:\", value);\n  }\n\n  public get data() {\n    return this._data;\n  }\n\n  get columnConfig(): Array<MetaColumn> {\n    return this.metaConfig.Columns;\n  }\n\n  constructor(\n    metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: InputExecutor,\n    @Optional() @Inject(customerContactDetailMetaControllerToken) private customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  getMetaID() {\n    return 'customerContactDetail';\n  }\n\n  getMetaParams() {\n    return null;\n  }\n  onDataUpdated() {\n    super.onDataUpdated();\n    if (this.customMetaController)\n      this.customMetaController.onDataUpdated(this._data);\n  }\n}\n","import { Component, OnInit, Input, Inject, Optional, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { MetaService, MetaController, FormMetaComponent, ProfileCodeService, DefaultMetaParser, InputExecutor, MetaColumn } from '@allianzSND/core';\nimport { customerContactEditMetaControllerToken } from '../../injectionToken/injection-token';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-customer-contact-edit',\n  templateUrl: './customer-contact-edit.component.html',\n  styleUrls: ['./customer-contact-edit.component.scss']\n})\nexport class CustomerContactEditComponent extends FormMetaComponent implements OnInit, OnDestroy {\n\n\n  @Input()\n  public set data(value) {\n    let defaultObj = {};\n    if (this.metaConfig)\n      defaultObj = this.metaConfig.Columns.map(x => x.id).reduce((acc, current) => {\n        acc[current] = '';\n        return acc;\n      }, {});\n    if (value != null)\n      this._data = Object.assign(defaultObj, value);\n    else\n      this._data = defaultObj;\n    console.log(\"set contact edit data:\", this._data);\n    if (this.customMetaController)\n      this.customMetaController.onDataUpdated(this._data);\n    this.customerClientID = this._data.CustomerClientID;\n  }\n\n  public get data() {\n    return this._data;\n  }\n\n  get columnConfig(): Array<MetaColumn> {\n    return this.metaConfig.Columns;\n  }\n\n  private customerClientID = '';\n  private unsubscribe$: Subject<void> = new Subject<void>();\n\n  @Input() saveSubject: Subject<any>;\n  @Output() save: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: InputExecutor,\n    @Optional() @Inject(customerContactEditMetaControllerToken) private customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.saveSubject) {\n      this.saveSubject\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(() => {\n          this.onBtnClick('submit', 'save');\n        })\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  getMetaParams() {\n    return {\n      CustomerClientID: this.customerClientID\n    }\n  }\n\n  btnClick(type: string, id: string) {\n    if (type === 'submit') {\n      this.save.emit(this._data);\n    }\n    if (this.customMetaController)\n      this.customMetaController.btnClick(type, id, this._data);\n\n  }\n  getMetaID() {\n    return 'customerContactEdit';\n  }\n  onValidateAll() {\n    if (!this.validationResult.isTrue()) {\n      //If basic validation has error.\n      if (this.validationResult.isError('Note'))\n        alert(\"Note \" + this.validationResult.getErrorMsg(\"Note\"));\n      return false;\n    }\n    else {\n      //Do custom validation.\n      let result = true;\n      if (this.customMetaController)\n        result = result && this.customMetaController.onValidateAll(this._data, this.validationResult);\n      return result;\n    }\n  }\n  onValueChange(column: string, value: any, groupId: string, index: number) {\n    //Trigger other column values\n    if (this.customMetaController)\n      this.customMetaController.onValueChange(column, value, groupId, index, this._data, this.validationResult);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { UIModule } from '@allianzSND/ui';\nimport {CommonModule, DatePipe} from '@angular/common';\nimport { CoreModule } from '@allianzSND/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NxAccordionModule, NxButtonModule, NxDropdownModule, NxMessageModule, NxModalModule, NxRadioModule} from '@allianz/ngx-ndbx';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { CalendarEditComponent } from './calendar/components/calendar-edit/calendar-edit.component';\nimport {CalendarDetailComponent} from './calendar/components/calendar-detail/calendar-detail.component';\nimport {CalendarFilterComponent} from  './calendar/components/calendar-filter/calendar-filter.component';\nimport {CalendarComponent} from './calendar/components/calendar/calendar.component';\nimport { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';\nimport { NxDatefieldModule, NxNativeDateModule } from '@allianz/ngx-ndbx/datefield';\nimport { CustomerContactListComponent } from './customer/components/customer-contact-list/customer-contact-list.component';\nimport { CustomerDetailComponent } from './customer/components/customer-detail/customer-detail.component';\nimport { CustomerEditComponent } from './customer/components/customer-edit/customer-edit.component';\nimport { CustomerFilterComponent } from './customer/components/customer-filter/customer-filter.component';\nimport { CustomerImportComponent } from './customer/components/customer-import/customer-import.component';\nimport { CustomerListComponent } from './customer/components/customer-list/customer-list.component';\nimport { CustomersComponent } from './customer/components/customers/customers.component'\nimport {NxInputModule} from '@allianz/ngx-ndbx/input';\nimport {NxProgressbarModule} from '@allianz/ngx-ndbx/progressbar';\nimport {NxGridModule} from '@allianz/ngx-ndbx/grid';\nimport { CustomerContactDetailComponent } from './customer/components/customer-contact-detail/customer-contact-detail.component';\nimport { CustomerContactEditComponent } from './customer/components/customer-contact-edit/customer-contact-edit.component';\n\n@NgModule({\n  declarations: [CalendarComponent, CalendarEditComponent, CalendarDetailComponent, CalendarFilterComponent,\n    CustomersComponent, CustomerEditComponent, CustomerListComponent ,\n    CustomerDetailComponent, CustomerContactListComponent , CustomerFilterComponent, CustomerImportComponent, CustomerContactDetailComponent, CustomerContactEditComponent],\n  imports: [\n    NxIconModule,\n    NxButtonModule,\n    NxFormfieldModule,\n    NxDatefieldModule,\n    NxNativeDateModule,\n    UIModule,\n    CoreModule,\n    CommonModule,\n    FormsModule,\n    NxDropdownModule,\n    NxRadioModule,\n    NxInputModule,\n    NxMessageModule,\n    NxProgressbarModule,\n    NxModalModule,\n    NxAccordionModule,\n    NxGridModule,\n    ReactiveFormsModule,\n  ],\n  providers:[DatePipe],\n  exports: [\n    CalendarEditComponent,CalendarComponent, CalendarDetailComponent,\n    CustomersComponent,CustomerEditComponent\n  ]\n})\nexport class IntegrationCalendarCustomerModule { }\n","export class CustomerConfirmAction {\n    private _action : string;\n    private _optionObj : Array<string>;\n\n    constructor() {\n        \n    }\n\n    set action(action) {this._action = action}\n    set option(option) {this._optionObj = option}\n\n    get action() {return this._action}\n    get option() {return this._optionObj}\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerAddress {\n\n    public clientID: string;\n    public addressType: string;\n    public country: string;\n    public city: string;\n    public area: string;\n    public zipcode: string;\n    public address: string;\n    public dataSource: string;\n\n    constructor(clientID: string, addressType: string, country: string, city: string, area: string, zipcode: string, address: string, dataSorce: string) {\n        this.clientID = clientID;\n        this.addressType = addressType;\n        this.country = country;\n        this.city = city;\n        this.area = area;\n        this.zipcode = zipcode;\n        this.address = address;\n        this.dataSource = dataSorce;\n\n    }\n\n    toFullAddress() {\n\n        let array = [];\n        if (StringUtils.isNotEmpty(this.country)) array.push(this.country);\n        if (StringUtils.isNotEmpty(this.city)) array.push(this.city);\n        if (StringUtils.isNotEmpty(this.area)) array.push(this.area);\n        if (StringUtils.isNotEmpty(this.zipcode)) array.push(this.zipcode);\n        if (StringUtils.isNotEmpty(this.address)) array.push(this.address);\n\n        return array.join(', ');\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.country)\n            && StringUtils.isEmpty(this.city) && StringUtils.isEmpty(this.area)\n            && StringUtils.isEmpty(this.zipcode) && StringUtils.isEmpty(this.address);\n    }\n}\n","export class CustomerContactNote{\n\n    private clientID : string;\n    public name : string;\n    public date : Date;\n    public noteMessage : string;\n\n    constructor(clientID:string,date : Date , noteMessage : string) {\n        this.clientID = clientID;\n        this.date = date;\n        this.noteMessage = noteMessage;\n    }\n\n    public getClientID() : string {\n        return this.clientID;\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerEmail {\n\n    public clientID: string;\n    public emailType: string;\n    public email: string;\n    public dataSource: string;\n\n    constructor(_clientID: string, _emailType: string, _email: string, _dataSource: string) {\n        this.clientID = _clientID;\n        this.emailType = _emailType;\n        this.email = _email;\n        this.dataSource = _dataSource;\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.email);\n    }\n\n}","import { CustomerItem } from './CustomerItem';\nexport class CustomerList {\n\n    private _customerList : Array<CustomerItem> = [];\n    \n    get length(){\n        return this._customerList.length;\n    }\n\n    constructor() {\n    }\n\n    get customerList(){\n        return this._customerList;\n    }\n\n    set customerList(customerList : Array<CustomerItem>){\n        this._customerList = customerList;\n    }\n    \n    addCustomerItem(customerEvent: CustomerItem) {\n        this._customerList.push(customerEvent);\n    }\n    \n    \n}","export class MobileCustomerItem{\n\n    private lastName : string;\n    private firstName : string;\n    private phoneNumber : Array<{id:number,text:string}>;\n    private email : Array<string>;\n    private address : Array<{id:number,city:string,area:string,code:number,address:string}>;\n    private birthday : string;\n\n    constructor(lastName : string,firstName : string,phoneNumber : Array<{id:number,text:string}>,email : Array<string>,address : Array<{id:number,city:string,area:string,code:number,address:string}>,birthday : string){\n        \n        this.lastName = lastName;\n        this.firstName = firstName;\n        this.phoneNumber = phoneNumber;\n        this.email = email;\n        this.address = address;\n        this.birthday = birthday;\n    }\n\n}","import { MobileCustomerItem } from \"./MobileCustomerItem\";\nexport class MobileCustomerList{\n\n    private mobileCustomerList : Array<MobileCustomerItem>;\n\n    constructor(mobileCustomerList : Array<MobileCustomerItem>){\n        this.mobileCustomerList = mobileCustomerList;\n    }\n\n}","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, TableUtils, SQLiteResponse } from \"@allianzSND/core\";\nimport { Observable, of } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\n\nexport class CustomerAddContactNoteAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  public Data: any;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n\n  getAPIName(): string {\n    return 'addCustomerContactNote';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    console.debug(\"addCustomerContactNote API Data:\", this.Data);\n    // If empty, don't save \n    if (!this.Data.Note) {\n      return of(new SQLiteResponse({\n        status: true\n      }, []));\n    }\n    else {\n      return Observable.create((observer) => {\n        let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n        let contactExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact_Extension\");\n        let dao = this.daoFactory.getDefaultDao();\n        if (contactObj != undefined && dao != undefined) {\n\n          dao = new ClientCustomDao(dao);\n\n          contactObj.setValue('CustomerClientID', this.Data.CustomerClientID);\n          contactObj.setValue('Note', this.Data.Note);\n          contactObj.setValue('NoteTime', this.Data.NoteTime);\n\n          contactExtObj = TableUtils.fillTableColumn(contactExtObj, this.Data);\n          contactExtObj.setValue('CustomerClientID', this.Data.CustomerClientID);\n\n          if (this.Data.ClientID != undefined && this.Data.ClientID != '') {\n            contactObj.addRestriction(new EqualRestriction('ClientID', [this.Data.ClientID]));\n            contactExtObj.addRestriction(new EqualRestriction('ClientID', [this.Data.ClientID]));\n\n            dao.transactionUpdate(contactObj);\n            dao.transactionUpdate(contactExtObj);\n          }\n          else {\n            let clientID = uuid();\n            contactObj.setValue('ClientID', clientID);\n            contactExtObj.setValue('ClientID', clientID);\n\n            dao.transactionInsert(contactObj);\n            dao.transactionInsert(contactExtObj);\n          }\n\n          dao.runTransaction().subscribe(resp => {\n            observer.next(resp);\n            observer.complete();\n          })\n\n\n        } else {\n          observer.next(false);\n          observer.complete();\n        }\n      });\n    }\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, SQLiteTable, SQLCommand, InRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable, from, of } from 'rxjs';\n\nexport class CustomerAutoDeleteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n    \n  private _clientID: string;\n  private _status: string;\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  \n  setClientID(id) {\n    this._clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerAutoDelete';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerAutoDelete.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (messageObj != undefined && dao != undefined) {\n          \n          dao = new ClientCustomDao(dao);\n          \n          if(StringUtils.isNotEmpty(this._clientID)) {\n            messageObj.addRestriction(new EqualRestriction(\"ClientID\", [this._clientID]));\n          }\n          else {\n            messageObj.addRestriction(new EqualRestriction(\"Status\", ['UnRead']));\n          }\n\n          messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", ['Customer']));\n          messageObj.addRestriction(new EqualRestriction(\"MessageType\",['AutoDelete']));\n\n          dao.queryByTable(messageObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n\n      }\n\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n\n    });\n      //   return from(dao.queryByTable(messageObj).toPromise().then( resp => {\n\n\n      //     let messageArgument = JSON.parse(resp['Body'][0]['customers']);\n      //     let customerIDList = messageArgument['ids'];\n\n      //     let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      //     console.log(\"customerIDListInAPI: \", customerIDList);\n      //     customerObj.addRestriction(new InRestriction(\"ClientID\", customerIDList));\n      //     return dao.queryByTable(customerObj).toPromise().then(resp => {\n          \n      //       return resp;\n      //     })\n        \n      \n          \n      // }));\n      \n  } \n\n    \n  \n    \n}\n","import { PageInfo, IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, OrderByRestriction, LimitRestriction, OffsetRestriction } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\n\nexport class CustomerContactNoteAPI implements IAPI , IMockAPI , ISQLiteAPI {\n\n  private customerClientID:  string;\n  private pageInfo : PageInfo;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id : string) {\n      this.customerClientID = id;\n  }\n\n  setPageInfo(pageInfo : PageInfo) {\n    this.pageInfo = pageInfo;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerContactNote';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerContactNote.json';\n  }\n  \n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('CustomerClientID',[this.customerClientID]));\n        contactObj.addRestriction(new OrderByRestriction([{ column: 'NoteTime', order: 'DESC' }]))\n\n        //add page limit\n        contactObj.addRestriction(new LimitRestriction([this.pageInfo.pageSize]));\n        contactObj.addRestriction(new OffsetRestriction([(this.pageInfo.page - 1) * 5]));\n\n        console.debug(contactObj);\n        dao.queryByTable(contactObj).subscribe((resp) => {\n          console.debug(\"getCustomerContactNote:\",resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerDeleteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n  \n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName() : string {\n    return 'deleteCustomer';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (customerObj != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n        customerObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n        dao.deleteByTable(customerObj).subscribe((resp) => {    \n          observer.next(resp);\n          observer.complete();\n        });\n\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerDeleteContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private contactClientID:  string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setContactClientID(contactClientID : string) {\n    this.contactClientID = contactClientID;\n  }\n\n  getAPIName() : string {\n    return 'deleteCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('ClientID',[this.contactClientID]));\n      \n        dao.deleteByTable(contactObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, SQLiteTable, EqualRestriction, SQLiteResponse } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, of, from } from \"rxjs\";\n\nexport class CustomerDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private _id = '';\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n    public get id() {\n        return this._id;\n    }\n    public set id(value) {\n        this._id = value;\n    }\n    getAPIName(): string {\n        return 'getCustomerDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getCustomerDetail.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let defaultObj = {\n            \"ClientID\": \"\",\n            \"LastName\": \"\",\n            \"FirstName\": \"\",\n            \"Occupation\": \"\",\n            \"Company\": \"\",\n            \"BirthdayYear\": \"\",\n            \"BirthdayMonth\": \"\",\n            \"BirthdayDate\": \"\",\n            \"Birthday\": null,\n            \"AgeRange\": null,\n            \"Gender\": null,\n            \"Income\": null,\n            \"Source\": null,\n            \"Marriage\": null,\n            \"Children\": null,\n            \"Familiarity\": null,\n            \"RecentStatus\": null,\n            \"MANPA\": null,\n            \"ContactFrequancy\": null,\n            \"Possibility\": null,\n            \"IsFollow\": \"N\",\n            \"DataSource\": \"APP\",\n            \"tel\": [],\n            \"email\": [],\n            \"address\": []\n        }\n        if (!this._id || (this._id.length == 0)) {\n            //Add\n            let resp = new SQLiteResponse({\n                \"isSuccess\": true\n            }, [defaultObj]);\n            return of(resp);\n        }\n        else {\n            let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n            let defaultDao = this.daoFactory.getDefaultDao();\n            if (customerObj != undefined && defaultDao != undefined) {\n                let dao = new ClientCustomDao(defaultDao);\n                customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n                return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                }).then(({ customer, clientID }) => {\n                    let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                    if (customerEmailObj) {\n                        customerEmailObj = (<SQLiteTable>customerEmailObj);\n                        customerEmailObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['email'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n\n                }).then(({ customer, clientID }) => {\n                    let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                    if (customerAddrObj) {\n                        customerAddrObj = (<SQLiteTable>customerAddrObj);\n                        customerAddrObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['address'] = telList;\n                            return customer;\n                        });\n                    }\n                    else\n                        return customer;\n                }).then(customer => {\n                    //change birthDay to Date Object\n                    if (!!customer['Body'][0]['BirthdayYear'] && !!customer['Body'][0]['BirthdayMonth'] && customer['Body'][0]['BirthdayDate'])\n                        customer['Body'][0]['Birthday'] = new Date(parseInt(customer['Body'][0]['BirthdayYear']), parseInt(customer['Body'][0]['BirthdayMonth']) - 1, customer['Body'][0]['BirthdayDate']);\n                    else\n                        customer['Body'][0]['Birthday'] = null;\n                    console.log(\"CustomerDetailAPI convert BirthDay: \", customer['Body'][0]['Birthday']);\n                    return customer;\n                }))\n            }\n            else {\n                return of(false);\n            }\n        }\n    }\n\n\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerEditContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private contactClientID:  string;\n  private note : string;\n  private noteTime : Date;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setContactClientID(contactClientID : string) {\n    this.contactClientID = contactClientID;\n  }\n\n  setNote(note : string) {\n    this.note = note;\n  }\n\n  setNoteTime(noteTime : Date) {\n    this.noteTime = noteTime;\n  }\n\n  getAPIName() : string {\n    return 'editCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('ClientID',[this.contactClientID]));\n        contactObj.setValue('Note', this.note);\n        contactObj.setValue('NoteTime', this.noteTime.getTime());\n      \n        dao.updateByTable(contactObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, InRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable, of, from } from 'rxjs';\n\nexport class CustomerEditOvertimeAPI implements IAPI , IMockAPI, ISQLiteAPI {\n    \n  private _clientID: string;\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id) {\n    this._clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerOverTime';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerOverTime.json';\n  }\n\n  executeSQL(): Observable<any> {\n    \n    return Observable.create((observer) => {\n      let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (messageObj != undefined && dao != undefined) {\n          \n          dao = new ClientCustomDao(dao);\n          \n          if(StringUtils.isNotEmpty(this._clientID)) {\n            messageObj.addRestriction(new EqualRestriction(\"ClientID\", [this._clientID]));\n          }\n          else {\n            messageObj.addRestriction(new EqualRestriction(\"Status\", ['UnRead']));\n          }\n\n          messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", ['Customer']));\n          messageObj.addRestriction(new EqualRestriction(\"MessageType\",['Overtime']));\n\n          \n          dao.queryByTable(messageObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n\n      }\n\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n\n    });\n    \n  }\n    \n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nexport class CustomerGetPresetAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName(): string {\n        return 'getCustomerFilterPreset';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getCustomerFilterPreset.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let setting = this.daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n                if (setting) {\n                    dao = new ClientCustomDao(dao);\n\n                    setting = (<SQLiteTable>setting);\n\n                    setting.addRestriction(new EqualRestriction('SettingID',['CustomerFilterSetting']));\n\n                    dao.queryByTable(setting).subscribe((resp) => {\n                        console.debug(resp);\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, InRestriction, LikeRestriction, ORCompoundRestriction, EqualRestriction, IRestriction, LimitRestriction, OffsetRestriction, AndCompoundRestriction, PageInfo, OrderByRestriction, ProfileCodeService, LessOrEqualRestriction, GreaterOrEqualRestriction, NotEqualRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport class CustomerListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _restrictions: Array<IRestriction>;\n  private _pageInfo: PageInfo = new PageInfo();\n\n  private _queryClientID: string;\n\n  constructor(private daoFactory: DaoFactory, private profileCodeService: ProfileCodeService) {\n\n  }\n  set clientID(clientID: string) {\n    this._queryClientID = clientID;\n  }\n\n  set restrictions(restrictions: Array<IRestriction>) {\n    this._restrictions = restrictions;\n  }\n\n  set pageInfo(pageInfo: PageInfo) {\n    this._pageInfo = pageInfo;\n  }\n\n  getAPIName(): string {\n    return 'getCustomerList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCustomerList.json';\n  }\n\n  executeSQL(): Observable<any> {\n\n    return Observable.create((observer) => {\n      let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (customerObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n\n        if (this._restrictions.length > 0) {\n          this._restrictions.forEach((condition: IRestriction) => {\n            customerObj.addRestriction(condition);\n          })\n        }\n\n\n        //add order by\n        customerObj.addRestriction(new OrderByRestriction([{ column: 'LastName', order: 'ASC' }]))\n\n        //add page limit\n        if (this._pageInfo.pageSize > 0) {\n          customerObj.addRestriction(new LimitRestriction([this._pageInfo.pageSize]));\n          customerObj.addRestriction(new OffsetRestriction([(this._pageInfo.page - 1) * 10]));\n        }\n\n        //if has edit profile will has clientID\n        if (StringUtils.isNotEmpty(this._queryClientID)) {\n          customerObj.addRestriction(new EqualRestriction('ClientID', [this._queryClientID]));\n        }\n\n        dao.queryByTable(customerObj).subscribe((resp) => {\n\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction, SQLCommand, TableUtils } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerUtils } from \"../utils/customer-utils\";\nimport { v4 as uuid } from 'uuid';\n\n\nexport class CustomerSaveDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n    private Data = null;\n\n    constructor(private daoFactory: DaoFactory, private customerUtils: CustomerUtils) {\n\n    }\n\n    setDetail(detail: any) {\n        this.Data = detail;\n    }\n\n    get customerDetail() {\n        return this.Data;\n    }\n\n    getAPIName(): string {\n        return 'saveCustomerDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        // let returnObj = {\n        //     \"status\": true,\n        //     \"msg\": ''\n        // };\n        return Observable.create((observer) => {\n            let dao;\n            let base_dao = this.daoFactory.getDefaultDao();\n            if (base_dao != undefined) {\n                dao = new ClientCustomDao(base_dao);\n                console.log(\"base_dao:\", base_dao);\n                console.log(\"dao:\", dao);\n                //save customer data\n                let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                let customerExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Extension\");\n                if (customerObj && customerExtObj) {\n\n                    let birthday = this.customerDetail.Birthday;\n                    if (birthday != null && birthday != undefined) {\n                        customerObj.setValue(\"BirthdayYear\", birthday.getFullYear().toString());\n                        let month = (birthday.getMonth() + 1).toString();\n                        if (month.length < 2) {\n                            month = '0' + month.toString();\n                        }\n                        customerObj.setValue(\"BirthdayMonth\", month);\n\n                        let date = (birthday.getDate()).toString();\n                        if (date.length < 2) {\n                            date = '0' + date.toString();\n                        }\n                        customerObj.setValue(\"BirthdayDate\", date);\n                    }\n                    else {\n                        customerObj.setValue(\"BirthdayYear\", null);\n                        customerObj.setValue(\"BirthdayMonth\", null);\n                        customerObj.setValue(\"BirthdayDate\", null);\n                    }\n                    customerObj.setValue(\"AgeRange\", this.customerDetail.AgeRange);\n                    customerObj.setValue('ClientID', this.customerDetail.ClientID);\n                    customerObj.setValue(\"LastName\", this.customerDetail.LastName);\n                    customerObj.setValue(\"FirstName\", this.customerDetail.FirstName);\n                    customerObj.setValue(\"Occupation\", this.customerDetail.Occupation);\n                    customerObj.setValue(\"Company\", this.customerDetail.Company);\n                    customerObj.setValue(\"Gender\", this.customerDetail.Gender);\n                    customerObj.setValue(\"Income\", this.customerDetail.Income);\n                    customerObj.setValue(\"Source\", this.customerDetail.Source);\n                    customerObj.setValue(\"Marriage\", this.customerDetail.Marriage);\n                    customerObj.setValue(\"Children\", this.customerDetail.Children);\n                    customerObj.setValue(\"Familiarity\", this.customerDetail.Familiarity);\n                    customerObj.setValue(\"ContactFrequancy\", this.customerDetail.ContactFrequancy);\n                    customerObj.setValue(\"Possibility\", this.customerDetail.Possibility);\n                    customerObj.setValue(\"IsFollow\", this.customerDetail.IsFollow);\n\n                    customerExtObj.setValue('ClientID', this.customerDetail.ClientID);\n                    // customerExtObj.setValue(\"RecentStatus\", this.customerDetail.RecentStatus);\n                    // customerExtObj.setValue(\"MANPA\", this.customerDetail.MANPA);\n                    console.log(\"save cusomer stringify:\", JSON.stringify(this.customerDetail));\n                    customerExtObj = TableUtils.fillTableColumn(customerExtObj, this.customerDetail);\n                    console.log(\"save cusomer extObj:\", JSON.stringify(customerExtObj));\n\n                    //set customer default column & value\n                    this.customerUtils.setCustomerDefaultValue(customerObj);\n                    this.customerDetail.AgeRange = customerObj.getValue(\"AgeRange\");\n\n                    customerObj.setValue('Completeness', this.customerDetail.Completeness);\n\n                    console.debug('insertCustomer', customerObj);\n                    // console.log('clientID:', customerObj.getValue('ClientID'));\n                    if (customerObj.getValue('ClientID') == '') {\n                        let _clientID = uuid();\n                        customerObj.setValue('ClientID', _clientID);\n                        customerExtObj.setValue('ClientID', _clientID);\n                        dao.transactionInsert(customerObj);\n                        dao.transactionInsert(customerExtObj);\n                    }\n                    else {\n                        let _deletedClientID = customerObj.getValue('ClientID');\n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        let phoneInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel_Extension\");\n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        let emailInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email_Extension\");\n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        let addressInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address_Extension\");\n                        customerObj.addRestriction(new EqualRestriction('ClientID', [_deletedClientID]));\n                        customerExtObj.addRestriction(new EqualRestriction('ClientID', [_deletedClientID]));\n                        phoneInsertObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        phoneInsertExtObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        emailInsertObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        emailInsertExtObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        addressInsertObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        addressInsertExtObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n\n                        dao.transactionUpdate(customerObj);\n                        dao.transactionUpdate(customerExtObj);\n                        base_dao.transactionDelete(phoneInsertObj);\n                        base_dao.transactionDelete(phoneInsertExtObj);\n                        base_dao.transactionDelete(emailInsertObj);\n                        base_dao.transactionDelete(emailInsertExtObj);\n                        base_dao.transactionDelete(addressInsertObj);\n                        base_dao.transactionDelete(addressInsertExtObj);\n                    }\n\n                    //save phone data              \n                    for (let phone of this.customerDetail.tel) {\n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        let phoneInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel_Extension\");\n                        if (phoneInsertObj && phone.Tel) {\n\n                            if (phone.TelType == '') phone.TelType = 'TelHome';\n                            let clientID = uuid();\n                            phoneInsertObj = (<SQLiteTable>phoneInsertObj);\n                            phoneInsertObj.setValue(\"ClientID\", clientID);\n                            phoneInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            phoneInsertObj.setValue('TelType', phone.TelType);\n                            phoneInsertObj.setValue('Tel', phone.Tel);\n\n                            phoneInsertExtObj.setValue(\"ClientID\", clientID);\n                            phoneInsertExtObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            phoneInsertExtObj = TableUtils.fillTableColumn(phoneInsertExtObj, phone);\n\n                            //insert\n                            dao.transactionInsert(phoneInsertObj);\n                            dao.transactionInsert(phoneInsertExtObj);\n                        }\n                    }\n\n                    //save email data\n                    for (let email of this.customerDetail.email) {\n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        let emailInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email_Extension\");\n                        if (emailInsertObj && email.Email) {\n                            if (email.EmailType == '') email.EmailType = 'MailHome';\n                            let clientID = uuid();\n                            emailInsertObj = (<SQLiteTable>emailInsertObj);\n                            emailInsertObj.setValue(\"ClientID\", clientID);\n                            emailInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertObj.setValue('EmailType', email.EmailType);\n                            emailInsertObj.setValue('Email', email.Email);\n\n\n                            emailInsertExtObj.setValue(\"ClientID\", clientID);\n                            emailInsertExtObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertExtObj = TableUtils.fillTableColumn(emailInsertExtObj, email);\n                            //insert\n                            dao.transactionInsert(emailInsertObj);\n                            dao.transactionInsert(emailInsertExtObj);\n                        }\n                    }\n\n                    //save address data\n                    for (let address of this.customerDetail.address) {\n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        let addressInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address_Extension\");\n                        if (addressInsertObj) {\n\n                            if (!this._judgeIsAddressEmpty(address)) {\n                                // if (address.AddressType == '') address.AddressType = 'AddressTypeHome';\n\n                                let clientID = uuid();\n                                addressInsertObj.setValue(\"ClientID\", clientID);\n                                addressInsertObj = (<SQLiteTable>addressInsertObj);\n                                addressInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                                addressInsertObj.setValue('AddressType', address.AddressType);\n                                addressInsertObj.setValue('Country', address.Country);\n                                addressInsertObj.setValue('City', address.City);\n                                addressInsertObj.setValue('Area', address.Area);\n                                addressInsertObj.setValue('Zipcode', address.Zipcode);\n                                addressInsertObj.setValue('Address', address.Address);\n\n                                addressInsertExtObj.setValue(\"ClientID\", clientID);\n                                addressInsertExtObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                                addressInsertExtObj = TableUtils.fillTableColumn(addressInsertExtObj, address);\n\n                                //insert\n                                dao.transactionInsert(addressInsertObj);\n                                dao.transactionInsert(addressInsertExtObj);\n                            }\n                        }\n                    }\n                    dao.runTransaction().subscribe((resp) => {\n                        // let header = resp['Header'];\n                        // if (!header.status) {\n                        //     returnObj['status'] = false;\n                        //     returnObj['msg'] = header.msg;\n                        // }\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n\n\n    private _judgeIsAddressEmpty(customerObj: any): boolean {\n        let requiredCol: Array<string> = ['Country', 'City', 'Area', 'Zipcode', 'Address'];\n        return requiredCol.reduce((total, each) => total && customerObj[each] == '', true);\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport class CustomerSavePresetAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _criteria: CustomerFilterCriteria;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    setFilterCriteria(criteria: CustomerFilterCriteria) {\n        this._criteria = criteria;\n    }\n\n    getAPIName(): string {\n        return 'saveCustomerFilterPreset';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let setting = this.daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n                if (setting) {\n                    dao = new ClientCustomDao(dao);\n\n                    setting = (<SQLiteTable>setting);\n\n                    setting.addRestriction(new EqualRestriction('SettingID',['CustomerFilterSetting']));\n                    setting.setValue(\"SettingVal\",JSON.stringify(this._criteria.toPresetJSON()));\n\n                    dao.updateByTable(setting).subscribe((resp) => {\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\n\nexport class CustomerTelAPI implements IAPI , IMockAPI , ISQLiteAPI {\n\n  private clientID : string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id : string) {\n      this.clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerTel';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerTel.json';\n  }\n  \n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let telObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (telObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        telObj.addRestriction(new EqualRestriction('CustomerClientID',[this.clientID]));\n      \n        dao.queryByTable(telObj).subscribe((resp) => {\n          console.debug(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerUpdateFollowAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID : string;\n    private _isFollow : boolean;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    setClient(clientID : string) {\n        this._clientID = clientID;\n    }\n\n    setIsFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    getAPIName(): string {\n        return 'updateCustomerFollowStatus';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let customer = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                if (customer) {\n                    dao = new ClientCustomDao(dao);\n\n                    customer = (<SQLiteTable>customer);\n\n                    customer.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n                    customer.setValue(\"IsFollow\",this._isFollow ? 'Y' : 'N');\n\n                    dao.updateByTable(customer).subscribe((resp) => {\n                        \n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { ContactItem, IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\nimport { CustomerUtils } from \"../utils/customer-utils\";\nimport { v4 as uuid } from 'uuid';\n\n\nexport class ImportContactAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private items: Array<ContactItem>;\n\n    public setItems(items: Array<ContactItem>) {\n        this.items = items;\n    }\n\n    constructor(private daoFactory: DaoFactory, private customerUtils: CustomerUtils) {\n\n    }\n\n    getAPIName(): string {\n        return 'importContact';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n\n\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                dao = new ClientCustomDao(dao);\n\n                for (let item of this.items) {\n\n                    let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                    let customerExt = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Extension\");\n\n                    let ClientID = uuid();\n                    customerObj.setValue(\"ClientID\", ClientID);\n                    customerObj.setValue(\"LastName\", item.LastName);\n                    customerObj.setValue(\"FirstName\", item.FirstName);\n                    customerObj.setValue(\"IsFollow\", \"N\");\n\n                    customerExt.setValue(\"ClientID\", ClientID);\n\n                    let birthday = item.Birthday;\n                    if (birthday != null) {\n                        customerObj.setValue(\"BirthdayYear\", birthday.getFullYear);\n                        customerObj.setValue(\"BirthdayMonth\", birthday.getMonth);\n                        customerObj.setValue(\"BirthdayDate\", birthday.getDate);\n                    }\n\n                    //set customer default column & value\n                    this.customerUtils.setCustomerDefaultValue(customerObj);\n\n                    //count Completeness\n                    let completeness = this.customerUtils.countCompleteness(item);\n                    customerObj.setValue('Completeness', completeness);\n\n                    //insert customer data\n                    dao.transactionInsert(customerObj);\n                    dao.transactionInsert(customerExt);\n                    //save phone data\n                    for (let phone of item.tel) {\n                        let telType = 'TelHome';\n                        if (phone.type == 'work') {\n                            telType = 'TelWork';\n                        }\n                        else if (phone.type == 'mobile') {\n                            telType = 'TelMobile';\n                        }\n\n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        let phoneInsertObj_Ext = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel_Extension\");\n                        if (phoneInsertObj) {\n                            let clientID = uuid();\n\n                            phoneInsertObj = (<SQLiteTable>phoneInsertObj);\n                            phoneInsertObj.setValue('ClientID', clientID);\n                            phoneInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            phoneInsertObj.setValue('TelType', telType);\n                            phoneInsertObj.setValue('Tel', phone.number);\n                            phoneInsertObj.setValue('DataSource', 'APP');\n\n                            phoneInsertObj_Ext.setValue('ClientID', clientID);\n                            phoneInsertObj_Ext.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            //insert\n                            dao.transactionInsert(phoneInsertObj);\n                            dao.transactionInsert(phoneInsertObj_Ext);\n                        }\n                    }\n\n                    //save email data\n                    let maxEmailCount = 3;\n                    let importEmailCount = maxEmailCount;\n                    if (item.email.length < 3) importEmailCount = item.email.length;\n                    for (let i = 0; i < importEmailCount; i++) {\n                        let email = item.email[i];\n\n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        let emailInsertObj_Ext = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email_Extension\");\n                        if (emailInsertObj) {\n                            let clientID = uuid();\n\n                            emailInsertObj = (<SQLiteTable>emailInsertObj);\n                            emailInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertObj.setValue('EmailType', 'MailHome');\n                            emailInsertObj.setValue('Email', email);\n                            emailInsertObj.setValue('ClientID', clientID);\n                            emailInsertObj.setValue('DataSource', 'APP');\n\n                            emailInsertObj_Ext.setValue('ClientID', clientID);\n                            emailInsertObj_Ext.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            //insert\n                            dao.transactionInsert(emailInsertObj);\n                            dao.transactionInsert(emailInsertObj_Ext);\n                        }\n                    }\n\n                    //save address data\n                    for (let address of item.address) {\n\n                        let addressType = 'AddressTypeHome';\n                        if (address.type == 'work') {\n                            addressType = 'AddressTypeWork';\n                        }\n\n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        let addressInsertObj_Ext = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address_Extension\");\n                        if (addressInsertObj) {\n\n                            let clientID = uuid();\n\n                            addressInsertObj = (<SQLiteTable>addressInsertObj);\n                            addressInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            addressInsertObj.setValue('ClientID', clientID);\n\n                            addressInsertObj.setValue('AddressType', addressType);\n                            addressInsertObj.setValue('Zipcode', address.code);\n                            addressInsertObj.setValue('Address', address.address);\n                            addressInsertObj.setValue('DataSource', 'APP');\n\n\n                            addressInsertObj_Ext.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            addressInsertObj_Ext.setValue('ClientID', clientID);\n                            //insert\n                            dao.transactionInsert(addressInsertObj);\n                            dao.transactionInsert(addressInsertObj_Ext);\n                        }\n                    }\n\n\n                }\n\n                dao.runTransaction().subscribe((resp) => {\n\n                    observer.next(resp);\n                    observer.complete();\n                });\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n\n    }\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { GreaterOrEqualRestriction, LessOrEqualRestriction,  OrderByRestriction, EqualRestriction, ORCompoundRestriction } from '@allianzSND/core';\nimport { getYear, getMonth, getDate, subDays, addDays, setYear } from 'date-fns';\n\nexport class CustomerBirthdayListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _targetDate: Date;\n\n  public isRangeCrossYear: boolean;\n  private _subN : number;\n  private _subNDayTimeStamp: number;\n\n  private _addN : number;\n  private _addNDayTimeStamp: number;\n\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n  set targetDate(targetDate: Date) {\n    this._targetDate = setYear(targetDate, 2000);\n    this._subNDayTimeStamp = subDays(this._targetDate, this._subN).getTime();\n    this._addNDayTimeStamp = addDays(this._targetDate, this._addN).getTime();\n\n\n    if((getYear(this._targetDate) == getYear(this._subNDayTimeStamp)) && (getYear(this._targetDate) == getYear(this._addNDayTimeStamp))) {\n      this.isRangeCrossYear = false;\n    }\n\n    else {\n      this._subNDayTimeStamp = (setYear(this._subNDayTimeStamp, 2000)).getTime();\n      this._addNDayTimeStamp = (setYear(this._addNDayTimeStamp, 2000)).getTime();\n      this.isRangeCrossYear = true;\n    }\n\n    console.warn(this._subN, \"  subDate:  \", this._subNDayTimeStamp);\n    console.warn(this._addN, \"  addDate:  \", this._addNDayTimeStamp);\n  }\n\n  set subN(subN: number) {\n    this._subN = subN;\n  }\n\n  set addN(addN: number) {\n    this._addN = addN;\n  }\n\n\n\n  getAPIName(): string {\n    return 'getCustomerBirthdayList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCustomerBirthday.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let customerObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (customerObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n\n        // if(this.isRangeCrossYear) {\n        //   customerObj.addRestriction(new ORCompoundRestriction([new GreaterOrEqualRestriction('BirthDayTimeStamp', [this._subNDayTimeStamp]), new LessOrEqualRestriction('BirthDayTimeStamp', [this._addNDayTimeStamp])]));\n        // }\n\n        // else {\n        //   customerObj.addRestriction(new GreaterOrEqualRestriction('BirthDayTimeStamp', [this._subNDayTimeStamp]));\n        //   customerObj.addRestriction(new LessOrEqualRestriction('BirthDayTimeStamp', [this._addNDayTimeStamp]));\n        // }\n\n        customerObj.addRestriction(new OrderByRestriction([{ column: 'LastName', order: 'ASC' }]))\n\n        //customerObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' }]));\n        // calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' },{ column: 'EndTime', order: 'DESC' }]));\n        dao.queryByTable(customerObj).subscribe((resp) => {\n          console.warn(\"resp.Body in CustomerBirthdayListAPI: \",resp);\n          resp.Body = resp.Body.filter(birthday => this._judgeCustomrtIsInRange(birthday));\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n  private _judgeCustomrtIsInRange(item): boolean {\n    let birthDayTimeStamp = new Date('2000/' + item.BirthdayMonth + '/' + item.BirthdayDate).getTime();\n    if(this.isRangeCrossYear) {\n      return birthDayTimeStamp >= this._subNDayTimeStamp || birthDayTimeStamp <= this._addNDayTimeStamp ;\n    }\n\n    else {\n      return birthDayTimeStamp >= this._subNDayTimeStamp && birthDayTimeStamp <= this._addNDayTimeStamp ;\n    }\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class DashboardUpdateToReadAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _messageType : string;\n    private _messageDataCategory : string;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    public setMessageType(type) {\n        this._messageType = type;\n    }\n\n    public setMessageDataCategory(dataCategory) {\n        this._messageDataCategory = dataCategory;\n    }\n\n\n\n    getAPIName(): string {\n        return 'updateDashboardToRead';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n                if (messageObj) {\n                    dao = new ClientCustomDao(dao);\n\n                    messageObj = (<SQLiteTable>messageObj);\n\n                    messageObj.addRestriction(new EqualRestriction('MessageCategory',[this._messageDataCategory]));\n                    messageObj.addRestriction(new EqualRestriction('MessageType',[this._messageType]));\n                    messageObj.setValue(\"Status\", 'Reading');\n\n                    dao.updateByTable(messageObj).subscribe((resp) => {\n                        \n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {Observable} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {CalendarEventDetail} from '../service/model/CalendarEventDetail';\n\nexport class CalendarEventAddAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _calendarEvent:  CalendarEventDetail;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  setCalendarEvent(value: CalendarEventDetail) {\n    this._calendarEvent = value;\n  }\n\n  getAPIName() : string {\n    return 'addCalendarEvent';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/addCalendarEvent.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        calendarObj.setValue('CustomerClientID', this._calendarEvent.customerClientID);\n        calendarObj.setValue('Title', this._calendarEvent.title);\n        calendarObj.setValue('Location', this._calendarEvent.location);\n        calendarObj.setValue('CalendarType', this._calendarEvent.activity);\n        if(this._calendarEvent.allDay == true) {\n          calendarObj.setValue('IsAllDay', 'Y');\n        } else {\n          calendarObj.setValue('IsAllDay', 'N');\n        }\n        calendarObj.setValue('StartTime', this._calendarEvent.start.getTime());\n        calendarObj.setValue('EndTime', this._calendarEvent.end.getTime());\n        if(this._calendarEvent.isAlert == true) {\n          calendarObj.setValue('IsAlert', 'Y');\n        } else {\n          calendarObj.setValue('IsAlert', 'N');\n        }\n        calendarObj.setValue('Alert1', this._calendarEvent.alert1);\n        calendarObj.setValue('Alert2', this._calendarEvent.alert2);\n        calendarObj.setValue('Alert3', null);\n        calendarObj.setValue('Remark', this._calendarEvent.remark);\n        dao.insertByTable(calendarObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { EqualRestriction } from '@allianzSND/core';\n\nexport class CalendarEventDeleteAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName(): string {\n    return 'deleteCalendarEvent';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/deleteCalendarEvent.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let calendarExtObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar_Extension\");\n\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new EqualRestriction('ClientID', [this._clientID]));\n        calendarExtObj.addRestriction(new EqualRestriction('ClientID', [this._clientID]));\n        dao.deleteByTable(calendarObj).toPromise().then((resp) => {\n            observer.next(resp);\n            observer.complete();    \n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, SQLiteResponse } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, of } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { EqualRestriction } from '@allianzSND/core';\n\nexport class CalendarEventDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  set ClientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName(): string {\n    return 'getCalendarEventDetail';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCalendarEventDetail.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n\n      console.log(\"CalendarEventDetail ClientID:\", this._clientID);\n\n      let defaultObj = {\n        ClientID: null,\n        CalendarID: null,\n        CustomerClientID: null,\n        Title: '',\n        Location: '',\n        CalendarType: null,\n        IsAllDay: 'N',\n        StartTime: null,\n        EndTime: null,\n        IsAlert: 'Y',\n        Alert1: '8',\n        Alert2: '',\n        Alert3: null,\n        Remark: '',\n        DataSource: 'APP'\n      };\n      if (!this._clientID) {\n        //Add\n        let resp = new SQLiteResponse({\n          \"isSuccess\": true\n        }, [defaultObj]);\n        observer.next(resp);\n        observer.complete();\n      }\n      else {\n        let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_VW_Calendar\");\n        let dao = this._DaoFactory.getDefaultDao();\n        if (calendarObj != undefined && dao != undefined) {\n\n          dao = new ClientCustomDao(dao);\n          calendarObj.addRestriction(new EqualRestriction('ClientID', [this._clientID]));\n          dao.queryByTable(calendarObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n        } else {\n          observer.next(false);\n          observer.complete();\n        }\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { GreaterOrEqualRestriction } from '@allianzSND/core';\nimport { LessOrEqualRestriction } from '@allianzSND/core';\nimport { OrderByRestriction } from \"@allianzSND/core\";\n\nexport class CalendarEventListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _startTime: Date;\n  private _endTime: Date;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  set startTime(startTime: Date) {\n    this._startTime = startTime;\n  }\n\n  set endTime(endTime: Date) {\n    this._endTime = endTime;\n  }\n\n  getAPIName(): string {\n    return 'getCalendarEventList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCalendarEventList.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_VW_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new GreaterOrEqualRestriction('EndTime', [this._startTime.getTime()]));\n        calendarObj.addRestriction(new LessOrEqualRestriction('StartTime', [this._endTime.getTime()]));\n        calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' }]));\n        // calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' },{ column: 'EndTime', order: 'DESC' }]));\n        dao.queryByTable(calendarObj).subscribe((resp) => {\n          console.log(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\nimport {CalendarEventDetail} from '../service/model/CalendarEventDetail';\n\nexport class CalendarEventUpdateAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n  private _calendarEvent: CalendarEventDetail;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n\n  set ClientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  setCalendarEvent(value: CalendarEventDetail) {\n    this._calendarEvent = value;\n  }\n\n  getAPIName() : string {\n    return 'updateCalendarEvent';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/updateCalendarEvent.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n        calendarObj.setValue('CalendarID', this._calendarEvent.calendarID);\n        calendarObj.setValue('Title', this._calendarEvent.title);\n        calendarObj.setValue('Location', this._calendarEvent.location);\n        calendarObj.setValue('CustomerClientID', this._calendarEvent.customerClientID);\n        calendarObj.setValue('CalendarType', this._calendarEvent.activity);\n        if(this._calendarEvent.allDay == true) {\n          calendarObj.setValue('IsAllDay', 'Y');\n        } else {\n          calendarObj.setValue('IsAllDay', 'N');\n        }\n        calendarObj.setValue('StartTime', this._calendarEvent.start.getTime());\n        calendarObj.setValue('EndTime', this._calendarEvent.end.getTime());\n        if(this._calendarEvent.isAlert == true) {\n          calendarObj.setValue('IsAlert', 'Y');\n        } else {\n          calendarObj.setValue('IsAlert', 'N');\n        }\n        calendarObj.setValue('Alert1', this._calendarEvent.alert1);\n        calendarObj.setValue('Alert2', this._calendarEvent.alert2);\n        calendarObj.setValue('Alert3', this._calendarEvent.alert3);\n        calendarObj.setValue('Remark', this._calendarEvent.remark);\n        dao.updateByTable(calendarObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, EqualRestriction, TableUtils } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { CalendarEventDetail } from '../service/model/CalendarEventDetail';\n\nexport class CalendarEventSaveAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private Data: any;\n    private _DaoFactory: DaoFactory;\n    constructor(DaoFactory) {\n        this._DaoFactory = DaoFactory;\n    }\n\n\n\n\n    getAPIName(): string {\n        return 'saveCalendarEvent';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.log(\"CalendarEventSaveAPI executeSQL:\", this.Data);\n        let Alerts = [this.Data.Alert1, this.Data.Alert2];\n        if (this.Data.IsAlert === 'Y') {\n            Alerts.sort((a, b) => parseInt(a) - parseInt(b))\n            this.Data.Alert1 = Alerts[0];\n            this.Data.Alert2 = Alerts[1];\n        }\n\n        return Observable.create((observer) => {\n            let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n            let calendarExtObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar_Extension\");\n            let dao = this._DaoFactory.getDefaultDao();\n            if (calendarObj != undefined) {\n\n                dao = new ClientCustomDao(dao);\n                if (this.Data.ClientID) {\n                    calendarObj.setValue('ClientID', this.Data.ClientID);\n                    calendarExtObj.setValue('ClientID', this.Data.ClientID);\n                }\n                calendarObj.setValue('CustomerClientID', this.Data.CustomerClientID);\n                calendarObj.setValue('Title', this.Data.Title);\n                calendarObj.setValue('Location', this.Data.Location);\n                calendarObj.setValue('CalendarType', this.Data.CalendarType);\n                calendarObj.setValue('IsAllDay', this.Data.IsAllDay);\n                calendarObj.setValue('StartTime', this.Data.StartDateTime.getTime());\n                calendarObj.setValue('EndTime', this.Data.EndDateTime.getTime());\n                calendarObj.setValue('IsAlert', this.Data.IsAlert);\n                if (this.Data.IsAlert === 'Y') {\n                    calendarObj.setValue('Alert1', this.Data.Alert1);\n                    calendarObj.setValue('Alert2', this.Data.Alert2);\n                }\n                else {\n                    calendarObj.setValue('Alert1', null);\n                    calendarObj.setValue('Alert2', null);\n                }\n                calendarObj.setValue('Alert3', null);\n                calendarObj.setValue('Remark', this.Data.Remark);\n                console.log(\"save calendarObj:\", calendarObj);\n\n\n                // fill extension\n                calendarExtObj = TableUtils.fillTableColumn(calendarExtObj, this.Data);\n                \n                if (this.Data[\"EditType\"] === \"edit\") {\n                    calendarObj.addRestriction(new EqualRestriction(\"ClientID\", [this.Data.ClientID]));\n                    calendarExtObj.addRestriction(new EqualRestriction(\"ClientID\", [this.Data.ClientID]));\n                    dao.transactionUpdate(calendarObj);\n                    dao.transactionUpdate(calendarExtObj);\n                }\n                else {\n                    dao.transactionInsert(calendarObj);\n                    dao.transactionInsert(calendarExtObj);\n                }\n\n                dao.runTransaction().subscribe(resp => {\n                    observer.next(resp);\n                    observer.complete();\n                })\n            } else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n"],"names":["uuid","from","tslib_1.__extends","DatePipe","APIFactory","tslib_1.__values","SelectOption","state"],"mappings":"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"}
