import { OnInit, ChangeDetectorRef, QueryList } from '@angular/core';
import { DateUtils, Language, MetaService, ProfileCodeService, InputExecutor, DefaultMetaParser, MetaColumn, MetaController } from '@allianzSND/core';
import { DisplayMetaComponent } from '@allianzSND/core';
import { showRule } from '@allianzSND/core';
import { CustomerUtils } from '../../utils/customer-utils';
export declare class CustomerDetailComponent extends DisplayMetaComponent implements OnInit {
    private dateUtils;
    protected profileCodeService: ProfileCodeService;
    private changeDetctor;
    protected metaService: MetaService;
    private customerUtils;
    private showRule;
    private customMetaController;
    private onEditDetail;
    private onCallPhone;
    private onDeleteDetail;
    private onAddAppointment;
    private followChange;
    DisplayData: any;
    readonly dash: string;
    data: any;
    protected getMetaID(): string;
    protected getMetaParams(): any;
    readonly rowMetaWithoutGroup: Array<Array<MetaColumn>>;
    readonly rowMetaGroup: Array<MetaColumn>;
    readonly followStatus: boolean;
    language: Language;
    isEmptyAppointment: boolean;
    isEmptyEdit: boolean;
    isEmptyDel: boolean;
    isEmptyDetailInfo: boolean;
    isEmptyGroupDetailInfo: boolean;
    isEmptyContactNote: boolean;
    isCollapseBtnShow: boolean;
    isCardExtendTemplateNull: boolean;
    detailPostTemp: QueryList<any>;
    isCollapseOpen: boolean;
    readonly isHasAgeRange: boolean;
    readonly isHasContactFrequancy: boolean;
    constructor(dateUtils: DateUtils, profileCodeService: ProfileCodeService, changeDetctor: ChangeDetectorRef, metaService: MetaService, customerUtils: CustomerUtils, inputExecutor: InputExecutor, metaParser: DefaultMetaParser, showRule: showRule, customMetaController: MetaController);
    ngOnInit(): void;
    onDataUpdated(): void;
    private changeCollateButton;
    private checkInfoIsEmpty;
    private convertEmptyValToDisplayText;
    private toBirthdayStr;
    private toFullAddress;
    edit(): void;
    delete(): void;
    callPhone(): void;
    addAppointment(): void;
    trackByFn(index: any, item: any): any;
    isFollowChange(isFollow: boolean): void;
    private convertNameToShow;
}
