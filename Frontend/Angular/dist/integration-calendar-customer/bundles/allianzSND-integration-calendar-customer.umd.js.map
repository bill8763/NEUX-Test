{"version":3,"file":"allianzSND-integration-calendar-customer.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@allianzSND/integration-calendar-customer/lib/calendar/injection-token.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-edit/DefaultCalendarEditMetaController.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/injectionToken/injection-token.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-edit/calendar-edit.component.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-detail/DefaultCalendarDetailMetaController.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-detail/calendar-detail.component.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar-filter/calendar-filter.component.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/service/model/CalendarEventColor.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/service/model/CalendarEventDetail.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/service/calendar-service.service.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/bean/customer-filter-preset.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/bean/customer-filter-criteria.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerItem.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerAlertItem.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerTel.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerBirthday.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-filter/DefaultCustomerCriteriaSearch.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/customer-service.service.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/utils/customer-utils.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/components/calendar/calendar.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-contact-list/customer-contact-list.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-detail/customer-detail.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/customerStore/customerStore-service.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-edit/DefaultCustomerEditMetaController.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-edit/customer-edit.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-filter/customer-filter.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-import/customer-import.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-list/customer-list.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/bean/customer-import-group.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customers/DefaultCustomerImportDisplay.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customers/customers.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-contact-detail/customer-contact-detail.component.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/customer-contact-edit/customer-contact-edit.component.ts","ng://@allianzSND/integration-calendar-customer/lib/integration-calendar-customer.module.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/components/bean/customer-confirm-action.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerAddress.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerContactNote.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerEmail.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/CustomerList.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/MobileCustomerItem.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/service/model/MobileCustomerList.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerAddContactNote.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerAutoDeleteAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerContactNoteAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerDeleteAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerDeleteContactNote.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerDetailAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerEditContactNote.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerEditOvertimeAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerGetePresetAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerListAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerSaveDetailAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerSavePresetAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerTelAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerUpdateFollowAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/ImportContactAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/CustomerBirthdayListAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/customer/api/DashboardUpdateToReadAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventAddAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventDeleteAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventDetailAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventListAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventUpdateAPI.ts","ng://@allianzSND/integration-calendar-customer/lib/calendar/api/CalendarEventSaveAPI.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\nimport { MetaController } from \"@allianzSND/core\";\n\nexport const calendarEditMetaControllerToken = new InjectionToken<MetaController>(\"calendarEditMetaController\");\nexport const calendarDetailMetaControllerToken = new InjectionToken<MetaController>(\"calendarDetailMetaController\");","import { MetaController, ValidationResult, ProfileCodeService, ProfileCode } from \"@allianzSND/core\";\nimport { Injectable } from \"@angular/core\";\nimport { v4 as uuid } from 'uuid';\nimport {\n    addDays,\n    addHours,\n    addMinutes,\n    differenceInCalendarDays,\n    differenceInMinutes,\n    getDate,\n    getHours,\n    getMinutes,\n    isSameDay,\n    isAfter,\n    getMonth,\n    getYear, setDate, setHours, setMinutes, setYear, setMonth, getSeconds, setSeconds, isEqual, startOfDay, isBefore\n} from 'date-fns';\nimport { SelectOption } from \"@allianzSND/ui\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DefaultCalendarEditMetaController implements MetaController {\n\n    constructor(\n        private profileCodeService: ProfileCodeService\n    ) {\n        this.alertOpt = this.profileCodeService.getCodeArray(\"Calendar_RemindTime\");\n    }\n\n    private alertOpt: Array<ProfileCode> = [];\n\n    onDataUpdated(data: any) {\n\n        let IsAllDay = data['IsAllDay'] === 'Y';\n\n        data[\"Alert1Option\"] = this.getAlertOption(IsAllDay);\n        data[\"Alert2Option\"] = this.getAlertOption(IsAllDay);\n        data[\"Alert3Option\"] = this.getAlertOption(IsAllDay);\n\n\n        if (data['StartTime']) {\n            data['StartDate'] = startOfDay(new Date(data['StartTime']));\n            data['StartTime'] = new Date(data['StartTime']);\n        } else {\n            data['StartDate'] = data[\"ViewDate\"];\n            data['StartTime'] = addHours(this.toFiveUnit(this.combineDateTime(data[\"ViewDate\"], new Date())), 1);\n            if (!IsAllDay)\n                data['StartDate'] = data['StartTime'];\n        }\n\n        if (data['EndTime']) {\n            data['EndDate'] = startOfDay(new Date(data['EndTime']));\n            data['EndTime'] = new Date(data['EndTime']);\n        }\n        else {\n            data['EndDate'] = startOfDay(data['StartDate']);\n            data['EndTime'] = addHours(data['StartTime'], 1);\n            if (!IsAllDay)\n                data['EndDate'] = data['EndTime'];\n\n        }\n\n        if (!data['IsAllDay']) {\n            data['IsAllDay'] = 'N';\n        }\n\n        if (!data['IsAlert']) {\n            data['IsAlert'] = 'Y';\n        }\n        if (!data['Alert1']) {\n            data['Alert1'] = IsAllDay ? \"2\" : \"8\";\n        }\n        if (!data['Alert2']) {\n            data['Alert2'] = '';\n        }\n        console.log(\"Default controller onDataUpdated:\", data);\n    }\n\n    onValueChange(column: string, value: any, groupId: string, index: number, data: any, validationResult: ValidationResult) {\n        let IsAllDay = data['IsAllDay'] === 'Y';\n\n        if (column === 'IsAllDay') {\n            data[column] = value ? 'Y' : 'N';\n            this.checkEndBeforeStartError(data, validationResult);\n\n            data[\"Alert1Option\"] = this.getAlertOption(value);\n            data[\"Alert2Option\"] = this.getAlertOption(value);\n            data[\"Alert3Option\"] = this.getAlertOption(value);\n\n            data[\"Alert1\"] = value ? \"2\" : \"8\";\n            data[\"Alert2\"] = \"\";\n            validationResult.deleteError(\"Alert1\");\n            validationResult.deleteError(\"Alert2\");\n\n        }\n        else if (column === 'IsAlert') {\n            data[column] = value ? 'Y' : 'N';\n            if (value) {\n                if (data['Alert1'] === data['Alert2'] && data['Alert1'])\n                    validationResult.setErrorMap('Alert2', 'Wrong_Alert');\n                else if (!data['Alert1'] && !data['Alert2'])\n                    validationResult.setErrorMap('Alert1', 'Wrong_Alert_Require');\n            }\n            else {\n                validationResult.deleteError(\"Alert1\");\n                validationResult.deleteError(\"Alert1\");\n            }\n        }\n        else if (column === 'StartDate') {\n            if (!value)\n                data[\"StartDate\"] = startOfDay(new Date());\n            else\n                data[\"StartDate\"] = value;\n            if (IsAllDay) {\n                data['EndDate'] = data[\"StartDate\"];\n            }\n            else {\n                data['EndDate'] = this.getToDate(data[\"StartDate\"], data[\"StartTime\"]);\n                data['EndTime'] = this.getToDate(data[\"StartDate\"], data[\"StartTime\"]);\n            }\n            this.checkEndBeforeStartError(data, validationResult);\n        }\n        else if (column === 'StartTime') {\n            if (!value)\n                data[\"StartTime\"] = this.toFiveUnit(new Date());\n            else\n                data[\"StartTime\"] = this.toFiveUnit(value);\n            data['EndDate'] = this.getToDate(data[\"StartDate\"], data[\"StartTime\"]);\n            data['EndTime'] = this.getToDate(data[\"StartDate\"], data[\"StartTime\"]);\n            this.checkEndBeforeStartError(data, validationResult);\n        }\n        else if (column === 'EndDate') {\n            //CHECK if to > from+15\n            if (!value)\n                data[\"EndDate\"] = startOfDay(new Date());\n            else\n                data[\"EndDate\"] = value;\n            this.checkEndBeforeStartError(data, validationResult);\n        }\n        else if (column === 'EndTime') {\n            if (!value)\n                data[\"EndTime\"] = this.toFiveUnit(new Date());\n            else\n                data[\"EndTime\"] = this.toFiveUnit(value);\n            this.checkEndBeforeStartError(data, validationResult);\n        }\n        else if (column === 'Alert1' || column === 'Alert2') {\n            if (data['Alert1'] === data['Alert2'] && data['Alert1'])\n                validationResult.setErrorMap('Alert2', 'Wrong_Alert');\n            else if (data['IsAlert'] === 'Y' && !data['Alert1'] && !data['Alert2'])\n                validationResult.setErrorMap(\"Alert1\", \"Wrong_Alert_Require\");\n            else {\n                validationResult.deleteError('Alert1');\n                validationResult.deleteError('Alert2');\n            }\n        }\n\n    }\n\n    onValidateAll(data: any, validationResult: ValidationResult) {\n        if (data[\"IsAllDay\"] === 'Y') {\n            data[\"StartDateTime\"] = startOfDay(data[\"StartDate\"]);\n            data[\"EndDateTime\"] = startOfDay(data[\"EndDate\"]);\n        }\n        else {\n            data[\"StartDateTime\"] = this.combineDateTime(data[\"StartDate\"], data[\"StartTime\"]);\n            data[\"EndDateTime\"] = this.combineDateTime(data[\"EndDate\"], data[\"EndTime\"]);\n\n        }\n        if (!data[\"ClientID\"])\n            data[\"ClientID\"] = uuid();\n        if (data[\"IsAlert\"] === 'Y' && !data[\"Alert1\"] && !data[\"Alert2\"]) {\n            validationResult.setErrorMap(\"Alert1\", \"Wrong_Alert_Require\");\n        }\n        return validationResult.isTrue();\n    }\n\n    btnClick(type: string, id: string, data: any) { }\n\n    private toFiveUnit(date: Date): Date {\n        let now = date;\n        let minutes = getMinutes(now);\n        let toAdd = minutes % 5 === 0 ? 0 : 5 - (minutes % 5);\n        return addMinutes(now, toAdd);\n    }\n\n\n    private getToDate(fromDate: Date, fromTime: Date): Date {\n        console.log(\"GetToDate:\", fromDate, fromTime);\n        console.log(\"GetMonth:\", getMonth(fromDate));\n        let from = new Date(getYear(fromDate), getMonth(fromDate), getDate(fromDate), getHours(fromTime), getMinutes(fromTime));\n        from = this.toFiveUnit(from);\n        return addHours(from, 1);\n    }\n\n    private checkEndBeforeStartError(data, validationResult: ValidationResult) {\n        validationResult.deleteError(\"StartDate\");\n        validationResult.deleteError(\"EndDate\");\n        validationResult.deleteError(\"StartTime\");\n        validationResult.deleteError(\"EndTime\");\n\n        let IsAllDay = data['IsAllDay'] === 'Y';\n        if (!(isSameDay(data[\"StartDate\"], data[\"EndDate\"]) || isAfter(data[\"EndDate\"], data[\"StartDate\"]))) {\n            validationResult.setErrorMap('StartDate', \"Wrong_Start_Time\");\n            return;\n        }\n        if (!IsAllDay) {\n\n            let fromDate = data[\"StartDate\"];\n            let fromTime = data[\"StartTime\"];\n            let EndDate = data[\"EndDate\"];\n            let EndTime = data[\"EndTime\"];\n            let from = this.combineDateTime(fromDate, fromTime);\n            let end = this.combineDateTime(EndDate, EndTime);\n            if (isBefore(end, addMinutes(from, 15))) {\n                validationResult.setErrorMap('EndDate', \"\");\n                validationResult.setErrorMap('EndTime', \"Wrong_End_Time\");\n            }\n        }\n    }\n\n    private combineDateTime(date, time): Date {\n        return new Date(getYear(date), getMonth(date), getDate(date), getHours(time), getMinutes(time));\n    }\n\n    private getAlertOption(IsAllDay: boolean): Array<SelectOption> {\n        return this.alertOpt.filter(x => JSON.parse(x.getArguments()).isAllDay === IsAllDay)\n            .map(x => new SelectOption(x.getCode(), this.profileCodeService.convertCode2Text(x.getTypeId(), x.getCode())))\n    }\n\n\n}","import { InjectionToken } from \"@angular/core\";\nimport { MetaController } from \"@allianzSND/core\";\nimport { CriteriaSearch } from \"../interface/CriteriaSearch\";\nimport { CustomerImportDisplay} from \"../interface/CustomerImportDisplay\";\nimport { AddProgressPoint } from \"../interface/AddProgressPoint\";\nimport { CustomerShowRule } from \"../interface/CustomerShowRule\";\n\nexport const customerEditMetaControllerToken = new InjectionToken<MetaController>(\"customerEditMetaController\");\nexport const customerDetailMetaControllerToken = new InjectionToken<MetaController>(\"customerDetailMetaController\");\nexport const customerContactEditMetaControllerToken = new InjectionToken<MetaController>(\"customerContactEditMetaController\");\nexport const customerContactDetailMetaControllerToken = new InjectionToken<MetaController>(\"customerContactDetailMetaController\");\nexport const customerFilterMetaControllerToken = new InjectionToken<MetaController>(\"customerFilterMetaController\");\nexport const customerCriteriaSearchToken = new InjectionToken<CriteriaSearch>(\"customerCriteriaSearch\");\nexport const customerImportDisplayToken = new InjectionToken<CustomerImportDisplay>(\"customerImportDisplay\");\nexport const addProgressPointToken = new InjectionToken<AddProgressPoint>(\"addProgressPoint\");\nexport const customerShowRuleToken  = new InjectionToken<CustomerShowRule>(\"customerShowRule\");","import { Component, Input, OnInit, HostListener, Output, EventEmitter, ElementRef, Inject, Optional } from '@angular/core';\nimport { SelectOption, MetaService, MetaController, FormMetaComponent, ProfileCodeService, DefaultMetaParser, APIExecutor, MetaColumn, showRuleToken, showRule } from '@allianzSND/core';\nimport { CalendarEventDetail } from '../../service/model/CalendarEventDetail';\nimport {\n  getDate,\n  getMonth,\n  getYear,\n  format\n} from 'date-fns';\nimport { Language } from '@allianzSND/core';\nimport { calendarEditMetaControllerToken } from '../../injection-token';\nimport { DefaultCalendarEditMetaController } from './DefaultCalendarEditMetaController';\nimport { addProgressPointToken } from '../../../customer/injectionToken/injection-token';\nimport { AddProgressPoint } from '../../../customer/interface/AddProgressPoint';\n\n\n@Component({\n  selector: 'snd-calendar-edit',\n  templateUrl: './calendar-edit.component.html',\n  styleUrls: ['./calendar-edit.component.scss']\n})\nexport class CalendarEditComponent extends FormMetaComponent implements OnInit {\n\n\n  @Output() isMetaDataDone: EventEmitter<boolean> = new EventEmitter();\n\n  @Input()\n  get isSaveClick() { return this._isSaveClick; }\n  set isSaveClick(isSaveClick: boolean) {\n    console.log(\"CalendarEdit set isSaveClick:\", isSaveClick);\n    this._isSaveClick = isSaveClick;\n    if (this._isSaveClick == true) {\n      console.log(\"Click Calendar edit save\")\n      this.onBtnClick('submit', 'save');\n      setTimeout(() => {\n        this.isSaveClickChange.emit(false);\n      }, 500);\n    }\n  }\n\n  @Output() isSaveClickChange: EventEmitter<boolean> = new EventEmitter();\n\n  private _clientID;\n  private editType = 'add';\n\n  @Input()\n  public get clientID() {\n    return this._clientID;\n  }\n  public set clientID(value) {\n    this._clientID = value;\n    if (value.length == 0) {\n      this.editType = 'add';\n    }\n    else\n      this.editType = 'edit';\n    if (this.isMetaLoaded())\n      this.loadData();\n  }\n\n  public getMetaParams() {\n    return {\n      \"_clientID\": this._clientID\n    };\n  }\n\n\n  // Forå®¢æ¶Selectç¨çé¸é \n  @Input()\n  get customerItemList() { return this.customerClientOptionList }\n  set customerItemList(customerItemList: Array<SelectOption>) {\n    console.log(\"calendar-edit set customerItemList:\", customerItemList);\n    this.customerClientOptionList = customerItemList;\n    if (this._data)\n      this.fillDefaultVal();\n  }\n\n  // For EventListç¨ç\n  @Input()\n  get translateMap() { return this._translateMap }\n  set translateMap(translateMap: Map<string, string>) {\n    this._translateMap = translateMap;\n  }\n\n\n  @Input()\n  get viewDate() { return this._viewDate }\n  set viewDate(viewDate: Date) {\n    console.warn('viewDateChange');\n    this._viewDate = viewDate;\n  }\n\n\n  // For EventListç¨ç\n  @Input()\n  get todayCalendarEvent() { return this.calendarEventList }\n  set todayCalendarEvent(calendarEventList: Array<CalendarEventDetail>) {\n    this.calendarEventList = calendarEventList;\n  }\n\n  @Output() saveEvent = new EventEmitter();\n\n  private _viewDate: Date = new Date();\n  private _isSaveClick: boolean = false;\n  public showDate: string;\n  public language: Language = new Language();\n  public _translateMap: Map<string, string> = new Map<string, string>();\n\n\n  public _calendarEventDetail: CalendarEventDetail; //Detail\n  public windowWidth: number;\n  public calendarEventList: Array<CalendarEventDetail> = [];\n  public activityOptionList: Array<SelectOption> = [];\n  public customerClientOptionList: Array<SelectOption> = [];\n  public alertOptionList: Array<SelectOption> = [];\n  public startDate: Date;\n  public endDate: Date;\n  public eventListBGColor = 'transparent';\n  private _metaController: MetaController;\n\n  constructor(\n    private elementRef: ElementRef,\n    protected metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: APIExecutor,\n    defaultMetaController: DefaultCalendarEditMetaController,\n    @Optional() @Inject(calendarEditMetaControllerToken) customMetaController: MetaController,\n    @Optional() @Inject(addProgressPointToken) private addProgressPoint: AddProgressPoint,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n    console.log(\"calendar-edit construct:\", defaultMetaController, customMetaController);\n    if (customMetaController)\n      this._metaController = customMetaController;\n    else\n      this._metaController = defaultMetaController;\n  }\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n    this.editEvent();\n    super.ngOnInit();\n  }\n\n  btnClick(type: string, id: string) {\n    if (type === 'submit') {\n      //offline add progress point\n      console.log(\"calendar addProgressPoint\", this.addProgressPoint);\n      if (this.addProgressPoint && this.editType == \"add\") {\n        this.addProgressPoint.addCalendarPoint(this._data, 1);\n      }\n      this.saveEvent.emit({ data: this._data, type: this.editType });\n    }\n    this._metaController.btnClick(type, id, this._data);\n  }\n  onValidateAll() {\n    let result = true;\n    if (!this.validationResult.isTrue()) {\n      //If basic validation has error.\n      result = false;\n      if (this.validationResult.isError('Note'))\n        alert(\"Note \" + this.validationResult.getErrorMsg(\"Note\"));\n    }\n    else {\n      result = this._metaController.onValidateAll(this._data, this.validationResult);\n      console.log(\"onValidate:\", result);\n    }\n\n\n    if (!result) {\n      this.saveEvent.emit({ data: null, type: 'fail' });\n      this.scrollToError();\n    }\n    return result;\n\n  }\n  getMetaID() {\n    return 'calendarEdit';\n  }\n  onValueChange(column: string, value: any, groupId: string = null, index: number = -1) {\n    this._data[column] = value;\n    this._metaController.onValueChange(column, value, groupId, index, this._data, this.validationResult);\n  }\n\n  onDataUpdated() {\n    super.onDataUpdated();\n    console.log(\"Calendar Edit DataUpdated:\", this._data);\n    this._data[\"ViewDate\"] = this._viewDate;\n    this._data[\"EditType\"] = this.editType;\n    this._data[\"CustomerClientID\"] = this._customerClientID ? this._customerClientID : this._data[\"CustomerClientID\"];;\n    this.fillDefaultVal();\n    if (this._metaController) {\n      this._metaController.onDataUpdated(this._data);\n    }\n    \n    this.isMetaDataDone.emit(true);\n\n  }\n\n  shouldHidden(id: string): boolean {\n    let alertId = ['Alert1', 'Alert2'];\n    let timePickerId = ['StartTime', 'EndTime'];\n    if (alertId.indexOf(id) > -1)\n      return this._data[\"IsAlert\"] === 'N';\n    else if (timePickerId.indexOf(id) > -1)\n      return this._data[\"IsAllDay\"] === 'Y';\n    else if (id === 'CustomerClientID')\n      return this._customerClientID.length > 0;\n  }\n\n  private _customerClientID = '';\n\n  @Input()\n  get customerClientID() {\n    return this._customerClientID;\n  }\n\n  set customerClientID(id: string) {\n    this._customerClientID = id;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get rowConfig(): Array<Array<MetaColumn>> {\n    return this.metaConfig.Rows;\n  }\n\n\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowWidth = event.target.innerWidth;\n    // wle.warn('Width: ', this.windowWidth);\n  }\n\n  private fillDefaultVal() {\n    this._data[\"CustomerClientIDOption\"] = this.customerClientOptionList;\n  }\n\n  editEvent() {\n    this.showDate = this._convertDate(this._viewDate);\n    console.log(\"EditEvent showDate:\", this.showDate);\n  }\n\n  isMetaLoaded() {\n    return this.metaLoaded;\n  }\n\n  scrollToError() {\n    console.log('in scrollToError');\n    setTimeout(() => {\n      let errorBlock = this.elementRef.nativeElement.querySelector('.error-msg');\n      let scrollContent = document.querySelector('.calendar-edit-content').querySelector('.form-scroll-content');\n      if (errorBlock && scrollContent) {\n        let move = errorBlock.offsetTop - 50;\n        scrollContent.scrollTo({ top: move, behavior: \"smooth\" });\n        console.log('scrollToError', move);\n      }\n      console.log('scrollToError', scrollContent,errorBlock);\n      \n    }, 200)\n  }\n\n  private _convertDate(date: Date) {\n    if (this.showRule) {\n      return this.showRule.convertDate(date);\n    }\n    else {\n      return format(date, 'MM/dd/yyyy');\n    }\n  }\n\n}\n","import { MetaController, ValidationResult } from \"@allianzSND/core\";\nimport { Injectable } from \"@angular/core\";\n\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DefaultCalendarDetailMetaController implements MetaController {\n\n    onDataUpdated(data: any) { }\n\n    onValidateAll(data: any) {\n        return true;\n    }\n    onValueChange(column: string, value: any, groupId: string, index: number, data: any, vaildResult: ValidationResult) {\n\n    }\n\n    btnClick(type: string, id: string, data: any) { }\n}","import { Component, Input, OnInit, Optional, Inject, Output, EventEmitter } from '@angular/core';\nimport { CalendarEventDetail } from '../../service/model/CalendarEventDetail';\nimport { isSameDay } from 'date-fns';\nimport { Language, MetaService, MetaController, DisplayMetaComponent, ProfileCodeService, DefaultMetaParser, APIExecutor, MetaColumn } from '@allianzSND/core';\nimport { StringUtils } from '@allianzSND/core';\nimport { calendarDetailMetaControllerToken } from '../../injection-token';\nimport { DefaultCalendarDetailMetaController } from './DefaultCalendarDetailMetaController';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'snd-calendar-detail',\n  templateUrl: './calendar-detail.component.html',\n  styleUrls: ['./calendar-detail.component.scss']\n})\nexport class CalendarDetailComponent extends DisplayMetaComponent implements OnInit {\n\n  @Output() isMetaDataDone: EventEmitter<boolean> = new EventEmitter();\n  \n  @Input()\n  get calendarEventDetail() { return this._calendarEventDetail }\n  set calendarEventDetail(calendarEventDetail) {\n    if (StringUtils.isNotEmpty(calendarEventDetail)) {\n      this._calendarEventDetail = calendarEventDetail;\n      this.isSameDay = isSameDay(this._calendarEventDetail.end, this._calendarEventDetail.start);\n      this.isAllDay = calendarEventDetail.allDay;\n      this._clientID = calendarEventDetail.clientID;\n      if (this.isMetaLoaded())\n        this.loadData();\n    }\n  }\n\n  private _customerClientName = '';\n\n  @Input()\n  get customerClientName() {\n    return this._customerClientName;\n  }\n\n  set customerClientName(val) {\n    this._customerClientName = val;\n    this.waitUntilMetaLoaded().then(() => {\n      this.onDataUpdated();\n    })\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get rowConfig(): Array<Array<MetaColumn>> {\n    return this.metaConfig.Rows;\n  }\n\n\n  public language: Language = new Language();\n  public _calendarEventDetail: CalendarEventDetail; //Detail\n  public isSameDay: boolean = true;\n  public isAllDay: boolean = false;\n\n  private _metaController = null;\n  private _clientID: string = '';\n\n\n  constructor(\n    private DatePipe: DatePipe,\n    metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: APIExecutor,\n    defaulterMetaController: DefaultCalendarDetailMetaController,\n    @Optional() @Inject(calendarDetailMetaControllerToken) customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n    if (customMetaController) {\n      this._metaController = customMetaController;\n    }\n    else\n      this._metaController = defaulterMetaController;\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n\n  getMetaID() {\n    return 'calendarDetail';\n  }\n\n  getMetaParams() {\n    return {\n      _clientID: this._clientID\n    };\n  }\n\n  onDataUpdated() {\n    super.onDataUpdated();\n    console.log(\"calendar-detail onDataUpdated:\", this._data);\n    this._data[\"CustomerClientName\"] = this._customerClientName;\n    this._data[\"DisplayDate\"] = this.getDisplayDateHTML();\n    this.isMetaDataDone.emit(true);\n  }\n\n  private getDisplayDateHTML(): string {\n    let _HTML = '';\n    let start = new Date(this._data[\"StartTime\"]);\n    let end = new Date(this._data[\"EndTime\"]);\n    if (this.isAllDay) {\n      _HTML = `${this.DatePipe.transform(start, 'MM/dd/y')}-${this.DatePipe.transform(end, 'MM/dd/y')}`;\n    }\n    else {\n      if (this.isSameDay)\n        _HTML = `${this.DatePipe.transform(start, 'MM/dd/y HH:mm')}-${this.DatePipe.transform(end, 'HH:mm')}`;\n      else\n        _HTML = `${this.DatePipe.transform(start, 'MM/dd/y HH:mm')}-<br />${this.DatePipe.transform(end, 'MM/dd/y HH:mm')}`;\n    }\n    return _HTML;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ProfileCode} from '@allianzSND/core';\n\n@Component({\n  selector: 'snd-calendar-filter',\n  templateUrl: './calendar-filter.component.html',\n  styleUrls: ['./calendar-filter.component.scss']\n})\nexport class CalendarFilterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  private _optionMap : Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public currentFilterOptionList: Array<string> = [];\n\n  @Input()\n  get optionMap() {return this._optionMap}\n  set optionMap(optionMap : Map<string, Array<ProfileCode>>) {\n    this._optionMap = optionMap;\n    this.activityTypeList = this._optionMap.get('Calendar_Type');\n    this.activityTypeList.forEach((codeItem) => {\n      if (codeItem.isCheck) {\n        this.currentFilterOptionList.push(codeItem.getCode());\n      }\n    });\n  }\n\n  @Output() activityTypeListChange = new EventEmitter();\n\n  onActivityFilter() {\n    this.activityTypeListChange.emit(this.activityTypeList);\n  } // filter event\n\n  toActivityColor(item: ProfileCode) {\n    return JSON.parse(item.getArguments()).color;\n  }\n}\n","export class CalendarEventColor {\n  private _primary: string;\n  private _secondary: string;\n\n  constructor(primary: string, secondary: string) {\n    this._primary = primary;\n    this._secondary = secondary;\n  }\n\n  setCalendarEventColor(primary: string, secondary: string) {\n    this._primary = primary;\n    this._secondary = secondary;\n  }\n\n  set primary(primary) {\n    this._primary = primary;\n  }\n\n  set secondary(secondary) {\n    this._secondary = secondary;\n  }\n\n  get primary() {\n    return this._primary;\n  }\n\n  get secondary() {\n    return this._secondary;\n  }\n}\n","import {CalendarEventColor} from './CalendarEventColor';\nimport { StringUtils } from '@allianzSND/core';\n\nexport class CalendarEventDetail {\n  private _clientID: string;\n  private _calendarID: string;\n  private _customerClientID: string;\n  private _title: string;\n  private _location: string;\n  private _activity :string;\n  private _isAllDay: boolean;\n  private _start: Date;\n  private _end: Date;\n  private _isAlert: boolean;\n  private _alert1: string;\n  private _alert2: string;\n  private _alert3: string;\n  private _remark: string;\n  private _color;\n  private _displayActivity: string;\n  private _displayAlert1: string;\n  private _displayAlert2: string;\n\n  constructor(clientID: string,calendarID: string, customerClientID: string, title: string, location: string, calendarType: string,isAllDay: string, start: Date, end: Date, isAlert: string, alert1: string, alert2: string, alert3: string, remark: string, color: string) {\n    this._clientID = clientID;\n    this._calendarID = calendarID;\n    this._customerClientID = customerClientID;\n    this._title = title;\n    this._location = location;\n    this._activity = calendarType;\n    this._isAllDay = (isAllDay == 'Y');\n    this._start = new Date(start);\n    this._end = new Date(end);\n    this._isAlert = (isAlert == 'Y');\n    this._alert1 = alert1;\n    this._alert2 = alert2;\n    this._alert3 = alert3;\n    this._remark = remark;\n\n\n    if(StringUtils.isEmpty(this._customerClientID)) this._customerClientID = null;\n    if(StringUtils.isEmpty(this._activity)) this._activity = null;\n    if(StringUtils.isEmpty(this._title)) this._title = '';\n    if(StringUtils.isEmpty(this._location)) this._location = '';\n    if(StringUtils.isEmpty(this._alert1)) this._alert1 = '';\n    if(StringUtils.isEmpty(this._alert2)) this._alert2 = null;\n    if(StringUtils.isEmpty(this._alert3)) this._alert3 = '';\n    if(StringUtils.isEmpty(this._remark)) this._remark = '';\n\n    let eventColor = JSON.parse(color);\n    if(eventColor != null)\n      this._color = new CalendarEventColor(eventColor.color, eventColor.backgroundColor);\n  }\n\n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  set calendarID(calendarID: string) {\n    this._calendarID = calendarID\n  }\n\n  set customerClientID(customerClientID: string) {\n    this._customerClientID = customerClientID;\n  }\n  \n  set title(title: string) {\n    this._title = title;\n  }\n\n  set location(location: string) {\n    this._location = location;\n  }\n\n  set activity(calendarType: string) {\n    this._activity = calendarType;\n  }\n\n  set allDay(isAllDay : boolean) {\n    this._isAllDay = isAllDay;\n  }\n\n  set start(date: Date) {\n    this._start = date;\n  }\n\n  set end(date: Date) {\n    this._end = date;\n  }\n\n  set isAlert(isAlert: boolean) {\n    this._isAlert = isAlert;\n  }\n\n  set alert1(alert1: string) {\n    this._alert1 = alert1;\n  }\n\n  set alert2(alert2: string) {\n    this._alert2 = alert2;\n  }\n\n  set alert3(alert3: string) {\n    this._alert3 = alert3;\n  }\n\n  set remark(remark: string) {\n    this._remark =  remark;\n  }\n\n  set color(color: string) {\n    let eventColor = JSON.parse(color);\n    if(eventColor != null)\n      this._color = new CalendarEventColor(eventColor.color, eventColor.backgroundColor);\n  }\n\n  set displayActivity(displayActivity : string) {\n    this._displayActivity = displayActivity;\n  }\n\n  set displayAlert1(displayAlert1 : string) {\n    this._displayAlert1 = displayAlert1;\n  }\n\n  set displayAlert2(displayAlert2 : string) {\n    this._displayAlert2 = displayAlert2;\n  }\n\n  get clientID() {\n    return this._clientID;\n  }\n\n  get calendarID() {\n    return this._calendarID;\n  }\n\n  get customerClientID() {\n    return this._customerClientID;\n  }\n  \n  get title() {\n    return this._title;\n  }\n\n  get location() {\n    return this._location;\n  }\n\n  get activity() {\n    return this._activity;\n  }\n\n  get allDay() {\n    return this._isAllDay;\n  }\n\n  get start() {\n    return this._start;\n  }\n\n  get end() {\n    return this._end;\n  }\n\n  get isAlert() {\n    return this._isAlert;\n  }\n\n  get alert1() {\n    return this._alert1;\n  }\n\n  get alert2() {\n    return this._alert2;\n  }\n\n  get alert3() {\n    return this._alert3;\n  }\n\n  get remark() {\n    return this._remark;\n  }\n\n  get color() {\n    return this._color;\n  }\n\n  get displayActivity() {\n    return this._displayActivity;\n  }\n\n  get displayAlert1() {\n    return this._displayAlert1;\n  }\n\n  get displayAlert2() {\n    return this._displayAlert2;\n  }\n}\n","import { Injectable, inject, Inject } from '@angular/core';\nimport { APIDispatch } from '@allianzSND/core';\nimport { APIFactory } from '@allianzSND/core';\nimport { CalendarEventListAPI } from '../api/CalendarEventListAPI';\nimport { Observable } from 'rxjs';\nimport {CalendarEventDetail} from './model/CalendarEventDetail';\nimport {CalendarEventDetailAPI} from '../api/CalendarEventDetailAPI';\nimport {CalendarEventDeleteAPI} from '../api/CalendarEventDeleteAPI';\nimport {CalendarEventAddAPI} from '../api/CalendarEventAddAPI';\nimport {CalendarEventUpdateAPI} from '../api/CalendarEventUpdateAPI';\nimport {ProfileCodeService} from '@allianzSND/core';\nimport {ValidationResult} from '@allianzSND/core';\nimport {differenceInMinutes, isSameDay} from 'date-fns';\nimport { StringUtils } from '@allianzSND/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n  constructor(private dispatch: APIDispatch,\n              private profileCodeService: ProfileCodeService,\n              private APIFactory: APIFactory,\n) {\n    //register api\n  }\n\n  getCalendarEventList(start: Date, end: Date, key:string): Observable<Array<CalendarEventDetail>> {\n\n    console.debug('calendar-service-getCalendarEventList',start,end,key);\n\n    let calendarEventListAPI: CalendarEventListAPI = <CalendarEventListAPI>this.APIFactory.getAPI('getCalendarEventList');\n    calendarEventListAPI.startTime = start;\n    calendarEventListAPI.endTime = end;\n\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventListAPI).subscribe((data) => {\n        console.debug('calendar-service-getCAlendarEventList response',data);\n\n        let returnList: Array<CalendarEventDetail> = [];\n        let calendarEventList = data['Body'];\n        if(calendarEventList) {\n          for (let i = 0; i < calendarEventList.length; i++) {\n            let json = calendarEventList[i];\n            let event = new CalendarEventDetail(json.ClientID,\n              json.CalendarID,\n              json.CustomerClientID,\n              json.Title,\n              json.Location,\n              json.CalendarType,\n              json.IsAllDay,\n              new Date(json.StartTime),\n              new Date(json.EndTime),\n              json.Remark,\n              json.IsAlert,\n              json.Alert1,\n              json.Alert2,\n              json.Alert3,\n              this.profileCodeService.getArgumentsByCode('Calendar_Type',json.CalendarType));\n            returnList.push(event);\n          }\n          returnList = this.sortCalendarEventList(returnList);\n          observer.next(returnList);\n          observer.complete();\n        } else {\n          observer.next([]);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  getCalendarEventDetail(clientID: string): Observable<CalendarEventDetail> {\n    let calendarEventDetailAPI: CalendarEventDetailAPI = <CalendarEventDetailAPI>this.APIFactory.getAPI('getCalendarEventDetail');\n    calendarEventDetailAPI.ClientID = clientID;\n    return Observable.create((observer)=>{\n      this.dispatch.dispatch(calendarEventDetailAPI).subscribe((data) => {\n        let detail;\n        let eventDetail  = data['Body'];\n        eventDetail = eventDetail[0];\n        detail = new CalendarEventDetail(eventDetail.ClientID,eventDetail.CalendarID,eventDetail.CustomerClientID,eventDetail.Title,eventDetail.Location,eventDetail.CalendarType,eventDetail.IsAllDay,new Date(eventDetail.StartTime),new Date(eventDetail.EndTime),eventDetail.IsAlert,eventDetail.Alert1, eventDetail.Alert2, eventDetail.Alert3,eventDetail.Remark,this.profileCodeService.getArgumentsByCode('Calendar_Type',eventDetail.CalendarType));\n        observer.next(detail);\n        observer.complete();\n      });\n    });\n  }\n\n  deleteCalendarEvent(clientID: string): Observable<any>  {\n    let calendarEventDeleteAPI:  CalendarEventDeleteAPI = <CalendarEventDeleteAPI>this.APIFactory.getAPI('deleteCalendarEvent');\n    calendarEventDeleteAPI.clientID = clientID;\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventDeleteAPI).subscribe((data) => {\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n  }\n\n  addCalendarEvent(event: CalendarEventDetail): Observable<any>  {\n    event = this.adjustAlert(event);\n    let calendarEventAddAPI:  CalendarEventAddAPI = <CalendarEventAddAPI>this.APIFactory.getAPI('addCalendarEvent');\n    calendarEventAddAPI.setCalendarEvent(event);\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventAddAPI).subscribe((data) => {\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n  }\n\n  updateCalendarEvent(clientID: string,event: CalendarEventDetail): Observable<any>  {\n    event = this.adjustAlert(event);\n    let calendarEventUpdateAPI:  CalendarEventUpdateAPI = <CalendarEventUpdateAPI>this.APIFactory.getAPI('updateCalendarEvent');\n    calendarEventUpdateAPI.ClientID = clientID;\n    calendarEventUpdateAPI.setCalendarEvent(event);\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventUpdateAPI).subscribe((data) => {\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  adjustAlert(event: CalendarEventDetail): CalendarEventDetail {\n\n    if(event.alert1 == 'Default') event.alert1 = '';\n    if(event.alert2 == 'Default') event.alert2 = '';\n\n    //when alert1 & alert2 have data and not empty\n    if(event.isAlert && StringUtils.isNotEmpty(event.alert1) && StringUtils.isNotEmpty(event.alert2)) {\n      if(event.allDay) { // sort alert if allDay\n        if(JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert1)).day > JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert2)).day) {\n          let temp = event.alert1 ;\n          event.alert1 = event.alert2;\n          event.alert2 = temp;\n        }\n      } else { // sort if not allDay\n        if(JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert1)).min > JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert2)).min) {\n          let temp = event.alert1 ;\n          event.alert1 = event.alert2;\n          event.alert2 = temp;\n        }\n      }\n    }\n    else if(!event.isAlert) {\n      event.alert1 = '';\n      event.alert2 = '';\n      event.alert3 = '';\n    }\n    event.color = this.profileCodeService.getArgumentsByCode('Calendar_Type',event.activity); // get activity color\n    return event;\n  }\n\n  calendarValidation(data): ValidationResult {\n    let validationResult = new ValidationResult();\n    if (data.title == '')\n      validationResult.setErrorMap('title', 'required');\n    if (data.title.length > 60) //title length\n      validationResult.setErrorMap('title', 'maxLength');\n    if (data.location == '')\n      validationResult.setErrorMap('location', 'required');\n    if (data.location.length > 100) //title length\n      validationResult.setErrorMap('location', 'maxLength');\n    if (data.activity == 'Default' || data.activity == '') // activity validate\n      validationResult.setErrorMap('activity', 'required');\n    if (data.isAlert == true && (data.alert1 == 'Default') && (data.alert2 == 'Default'))\n      validationResult.setErrorMap('alert1', 'required');\n    if (data.isAlert == true && (data.alert1 == data.alert2) && data.alert1 != 'Default')\n      validationResult.setErrorMap('alert2', 'sameAlert');\n    if (differenceInMinutes(data.end,data.start) < 15 && differenceInMinutes(data.end,data.start) >= 0 && data.allDay != true) {\n      validationResult.setErrorMap('time', 'minTime');\n    } else if(differenceInMinutes(data.end,data.start) < 0) {\n      validationResult.setErrorMap('time', 'errorTime');\n    }\n    if (data.remark.length > 500)\n      validationResult.setErrorMap('remark', 'maxLength');\n    return validationResult;\n  }\n\n  sortCalendarEventList(calendarEventList: Array<CalendarEventDetail>): Array<CalendarEventDetail> {\n    for (let i = 0; i < calendarEventList.length - 1; i++) {\n      for (let j = i + 1; j < calendarEventList.length; j++) {\n        if(calendarEventList[j].allDay && !calendarEventList[i].allDay) {\n          let temp = calendarEventList[i];\n          calendarEventList[i] = calendarEventList[j];\n          calendarEventList[j] = temp;\n        }\n      }\n    }\n    for (let i = 0; i < calendarEventList.length - 1; i++) {\n      for (let j = i + 1; j < calendarEventList.length; j++) {\n        if(calendarEventList[j].allDay == calendarEventList[i].allDay) {\n          if(calendarEventList[i].allDay) {\n            if(calendarEventList[j].start < calendarEventList[i].start) {\n              let temp = calendarEventList[i];\n              calendarEventList[i] = calendarEventList[j];\n              calendarEventList[j] = temp;\n            } else if(isSameDay(calendarEventList[j].start, calendarEventList[i].start)) {\n              if (calendarEventList[j].end > calendarEventList[i].end){\n                let temp = calendarEventList[i];\n                calendarEventList[i] = calendarEventList[j];\n                calendarEventList[j] = temp;\n              }\n            }\n          } else {\n            if(calendarEventList[j].start < calendarEventList[i].start) {\n              let temp = calendarEventList[i];\n              calendarEventList[i] = calendarEventList[j];\n              calendarEventList[j] = temp;\n            }\n          }\n        }\n      }\n    }\n    return calendarEventList\n  }\n}\n","export class CustomerFilterPreset{\n    \n    public addValues(column : string,values : Array<string>) {\n        this[column] = values;        \n        \n    }\n\n}","import { CustomerFilterPreset } from \"./customer-filter-preset\";\nimport { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerFilterCriteria {\n    private _keyword: string;\n    private filterMap: Map<string, Array<string>> = new Map<string, Array<string>>();\n    private optionMap: Map<string, any> = new Map<string, any>();\n    public extension = {};\n\n    constructor(keyword = '', filterMap = new Map<string, Array<string>>()) {\n        this._keyword = keyword;\n        this.filterMap = filterMap;\n    }\n\n    addCriteria(filterCol: string, value: string) {\n        let values: Array<string> = this.filterMap.get(filterCol);\n        if (values == undefined) values = new Array<string>();\n\n        if (!values.includes(value)) {\n            values.push(value);\n\n            this.filterMap.set(filterCol, values);\n        }\n    }\n\n    addCriteriaCols(filterCol: string, values: string[]) {\n        this.filterMap.set(filterCol, values);\n    }\n\n    hasCriteria() {\n        return this.filterMap.size != 0 || StringUtils.isNotEmpty(this._keyword);\n    }\n\n    set keyword(keyword: string) { this._keyword = keyword }\n    get keyword() { return this._keyword }\n\n    getFilterMap() {\n        return this.filterMap;\n    }\n\n    getOptionMap() {\n        return this.optionMap;\n    }\n\n    setOption(name: string, value: any) {\n        this.optionMap.set(name, value);\n    }\n\n    getOption(name: string) {\n        if (this.optionMap.has(name))\n            return this.optionMap.get(name);\n        else\n            return null;\n    }\n\n\n\n    toPresetJSON(): CustomerFilterPreset {\n        let preset = new CustomerFilterPreset();\n\n        this.filterMap.forEach((value: Array<string>, column: string) => {\n            preset.addValues(column, value);\n        });\n        console.debug('toPresetJSON', preset);\n\n        return preset;\n    }\n\n    toMetaJSON(): CustomerFilterPreset {\n        let preset = this.toPresetJSON();\n        this.optionMap.forEach((value: any, column: string) => {\n            preset.addValues(column, value);\n        })\n        return preset;\n\n    }\n\n\n    public clone(): CustomerFilterCriteria {\n        let cloneCriteria: CustomerFilterCriteria = new CustomerFilterCriteria();\n        cloneCriteria._keyword = this._keyword;\n        cloneCriteria.filterMap = new Map(this.filterMap);\n        cloneCriteria.optionMap = new Map(this.optionMap);\n        cloneCriteria.extension = Object.assign({}, this.extension);\n\n        return cloneCriteria;\n    }\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerItem{\n    \n    private _clientID : string;\n    private _firstName : string;\n    private _lastName : string;\n    private _showName: string;\n    private _tag : string;\n    private _complementPercent : number;\n    private _isFollow : boolean;\n    private _isOtherSource : boolean;\n    private _isHighlight : boolean;\n\n    constructor(clientID : string,firstName : string ,lastName : string, possibility : string ,\n         complementPercent : number,isFollow : boolean , isOtherSource : boolean , isOverTimeAlert : string) {\n\n        this._clientID = clientID;\n        this._firstName = firstName;\n        this._lastName = lastName;\n        this._tag = possibility;\n        this._complementPercent = complementPercent;\n        this._isFollow = isFollow;\n        this._isOtherSource = isOtherSource;\n        \n        if(isOverTimeAlert == 'Y') {\n            this._isHighlight = true;\n        }\n\n        if(StringUtils.isEmpty(this._firstName)) this._firstName = '';\n    }\n\n\n    get isOtherSource() {\n        return this._isOtherSource;\n    }\n\n    get isFollow() {\n        return this._isFollow;\n    }\n\n    get clientID(){\n        return this._clientID;\n    }\n\n    get firstName(){\n        return this._firstName;\n    }\n\n    get lastName(){\n        return this._lastName;\n    }\n\n    get tag(){\n        return this._tag;\n    }\n\n    get complementPercent(){\n        return this._complementPercent;\n    }\n\n    set clientID(clientID : string){\n        this._clientID = clientID;\n    }    \n\n    set firstName(name : string){\n        this._firstName = name;\n    }\n\n    set lastName(name : string){\n        this._lastName = name;\n    }\n\n    set tag(tag : string){\n        this._tag = tag;\n    }\n\n    set complementPercent(complementPercent : number){\n        this._complementPercent = complementPercent;\n    }\n\n    set isFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    set isOtherSource(isOtherSource : boolean) {\n        this._isOtherSource = isOtherSource;\n    }\n\n    get isHighlight() {\n        return this._isHighlight;\n    }\n\n    set isHighLight(isHighLight : boolean) {\n        this._isHighlight = isHighLight;\n    }\n\n    get showName() {\n        return this._showName;\n    }\n    \n    set showName(showName: string) {\n        this._showName = showName;\n    }\n\n\n    clone():CustomerItem {\n        return new CustomerItem(this._clientID, this._firstName, this._lastName, this._tag, this._complementPercent, this._isFollow, this._isOtherSource, (this._isHighlight ? 'Y' : 'N'));\n    }\n}","export class CustomerAlertItem {\n    private _clientID : string;\n    private _name : string;\n\n    constructor(clientID : string, name : string) {\n       this._clientID = clientID;\n       this._name = name;  \n    }\n\n   get clientID() {\n       return this._clientID;\n   }\n\n   get name(){\n    return this._name;\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerTel {\n\n    public clientID: string;\n    public telType: string;\n    public tel: string;\n    public dataSource: string;\n\n    constructor(clientID: string, telType: string, tel: string, dataSource: string) {\n        this.clientID = clientID;\n        this.telType = telType;\n        this.tel = tel;\n        this.dataSource = dataSource;\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.tel);\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\nimport { getMonth, getDate } from 'date-fns';\n\nexport class CustomerBirthday{\n    \n    private _clientID : string;\n    public lastName : string;\n    public firstName : string;\n    public birthdayMonth : string;\n    public birthdayDate : string;\n\n    constructor(clientID : string,firstName : string ,lastName : string, birthdayMonth: string , birthdayDate : string) {\n\n        this._clientID = clientID;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.birthdayMonth = birthdayMonth;\n        this.birthdayDate =  birthdayDate;\n       \n\n         if(StringUtils.isEmpty(this.firstName)) this.firstName = '';\n\n    }\n\n    clone(): CustomerBirthday{\n        return new CustomerBirthday(this._clientID, this.firstName, this.lastName, this.birthdayMonth, this.birthdayDate);\n    }\n\n\n   \n\n   \n}","import { CriteriaSearch } from \"../../interface/CriteriaSearch\";\nimport { Injectable } from \"@angular/core\";\nimport { CustomerFilterCriteria } from \"../bean/customer-filter-criteria\";\nimport { IRestriction, StringUtils, ORCompoundRestriction, LikeRestriction, InRestriction, EqualRestriction, AndCompoundRestriction, NotEqualRestriction, ProfileCodeService, GreaterOrEqualRestriction, LessOrEqualRestriction } from \"@allianzSND/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DefaultCustomerCriteriaSearch implements CriteriaSearch {\n\n    constructor(\n        private profileCodeService: ProfileCodeService\n    ) { }\n\n    getRestriction(criteria: CustomerFilterCriteria): Array<IRestriction> {\n\n        console.debug('DefaultCustomerCriteriaSearch criteria:', criteria);\n\n        let keyword = criteria.keyword;\n\n        let conditions = [];\n\n        console.debug('customerListAPI keyword', keyword);\n        if (StringUtils.isNotEmpty(keyword)) {\n            let compoundRestriction = new ORCompoundRestriction([new LikeRestriction('FirstName', [keyword]), new LikeRestriction('LastName', [keyword])]);\n            conditions.push(compoundRestriction);\n        }\n\n        let filterMap: Map<string, Array<string>> = criteria.getFilterMap();\n\n        filterMap.forEach((array: Array<string>, key: string) => {\n            console.log(key, array);\n\n            if (key == 'Birthday') {\n                let birthdayRestriction = new Array<IRestriction>();\n                let monthArray = new Array<string>();\n                for (let birthday of array) {\n                    if (birthday == 'Today') {\n                        let today = new Date();\n                        let startNum = today.getMonth() + 1;\n                        let endNum = today.getDate();\n                        let start = String(startNum);\n                        let end = String(endNum);\n                        if (start.length == 1) start = '0' + start;\n                        if (end.length == 1) end = '0' + end;\n\n                        birthdayRestriction.push(new AndCompoundRestriction([new EqualRestriction('BirthdayMonth', [start]),\n                        new EqualRestriction('BirthdayDate', [end])]));\n                    }\n                    else {\n                        if (birthday.length == 1) birthday = '0' + birthday;\n                        monthArray.push(birthday);\n                    }\n                }\n\n                if (monthArray.length != 0) {\n                    birthdayRestriction.push(new InRestriction('BirthdayMonth', monthArray));\n                }\n\n                conditions.push(new ORCompoundRestriction(birthdayRestriction));\n            }\n            else if (key == 'CustomerSource') {\n                if (array.length != 2) {\n                    let datasource = array[0];\n                    if (datasource == 'E') {\n                        conditions.push(new EqualRestriction('DataSource', ['OPUS']));\n                    }\n                    else {\n                        conditions.push(new NotEqualRestriction('DataSource', ['OPUS']));\n                    }\n\n                }\n            }\n            else if (key == 'Completeness') {\n                let completenessOption = this.profileCodeService.getCodeArray('Customer_Completeness');\n                let completenessRestriction = new Array<IRestriction>();\n                completenessOption.forEach(profileCode => {\n                    let code = profileCode.getCode();\n                    if (array.includes(code)) {\n                        let obj = JSON.parse(profileCode.getArguments());\n                        let start = obj.start;\n                        let end = obj.end;\n                        start = start / 100;\n                        end = end / 100;\n\n                        completenessRestriction.push(new AndCompoundRestriction([new GreaterOrEqualRestriction('Completeness', [start]), new LessOrEqualRestriction('Completeness', [end])]));\n                    }\n                })\n\n                console.debug('completenessRestriction length', completenessRestriction.length);\n                console.log('completenessRestriction:', completenessRestriction);\n                if (completenessRestriction.length != 0) {\n                    conditions.push(new ORCompoundRestriction(completenessRestriction));\n                }\n\n            }\n            else {\n                conditions.push(new InRestriction(key, array));\n            }\n\n        });\n        return conditions;\n    }\n}","import { APIFactory, APIDispatch, ProfileCodeService, ContactItem, PageInfo, ValidationResult, StringUtils, ExtDataProcess } from '@allianzSND/core';\nimport { Injectable, Optional, Inject } from '@angular/core';\nimport { Observable, of, from } from 'rxjs';\nimport { CustomerListAPI } from '../api/CustomerListAPI';\nimport { CustomerBirthdayListAPI } from '../api/CustomerBirthdayListAPI';\nimport { CustomerDetailAPI } from '../api/CustomerDetailAPI';\nimport { CustomerContactNoteAPI } from '../api/CustomerContactNoteAPI';\nimport { CustomerItem } from './model/CustomerItem';\nimport { CustomerAlertItem } from './model/CustomerAlertItem';\nimport { CustomerTel } from './model/CustomerTel';\nimport { CustomerTelAPI } from '../api/CustomerTelAPI';\nimport { ImportContactAPI } from '../api/ImportContactAPI';\nimport { CustomerDeleteContactNoteAPI } from '../api/CustomerDeleteContactNote';\nimport { CustomerFilterCriteria } from '../components/bean/customer-filter-criteria';\nimport { CustomerDeleteAPI } from '../api/CustomerDeleteAPI';\nimport { CustomerEditOvertimeAPI } from '../api/CustomerEditOvertimeAPI';\nimport { CustomerAutoDeleteAPI } from '../api/CustomerAutoDeleteAPI';\nimport { CustomerSavePresetAPI } from '../api/CustomerSavePresetAPI';\nimport { CustomerGetPresetAPI } from '../api/CustomerGetePresetAPI';\nimport { CustomerUpdateFollowAPI } from '../api/CustomerUpdateFollowAPI';\nimport { CustomerFilterPreset } from '../components/bean/customer-filter-preset';\nimport { CustomerBirthday } from './model/CustomerBirthday';\nimport { DashboardUpdateToReadAPI } from '../api/DashboardUpdateToReadAPI';\nimport { customerCriteriaSearchToken } from '../injectionToken/injection-token';\nimport { CriteriaSearch } from '../interface/CriteriaSearch';\nimport { DefaultCustomerCriteriaSearch } from '../components/customer-filter/DefaultCustomerCriteriaSearch';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  //is first time use customer function\n  private _isFirstTime = true;\n\n\n  constructor(\n    private dispatcher: APIDispatch,\n    private APIFactory: APIFactory,\n    private profileCodeService: ProfileCodeService,\n    private defaultCriteriaSearch: DefaultCustomerCriteriaSearch,\n    @Optional() @Inject(customerCriteriaSearchToken) private customCriteriaSearch: CriteriaSearch\n  ) {\n    //register api\n  }\n\n  isFirstTime(): boolean {\n    if (this._isFirstTime) {\n      this._isFirstTime = false;\n      return true;\n    }\n    else {\n      return this._isFirstTime;\n    }\n\n  }\n\n\n\n  updateMessageToRead(messageType: string, messageDataCategory: string): Observable<any> {\n    let dashboardUpdateToReadAPI: DashboardUpdateToReadAPI = <DashboardUpdateToReadAPI>this.APIFactory.getAPI('updateDashboardToRead');\n    dashboardUpdateToReadAPI.setMessageType(messageType);\n    dashboardUpdateToReadAPI.setMessageDataCategory(messageDataCategory);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(dashboardUpdateToReadAPI).subscribe((data) => {\n\n        console.debug('dashboard-service-updateMessageToRead', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getOverTimeCustomerList(clientID): Observable<Array<CustomerAlertItem>> {\n    let customerOverTimeAPI: CustomerEditOvertimeAPI = <CustomerEditOvertimeAPI>this.APIFactory.getAPI('getCustomerOverTime');\n\n    customerOverTimeAPI.setClientID(clientID);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerOverTimeAPI).subscribe((data) => {\n\n        console.debug('customer-service-getOverTimeList', data);\n\n        let returnList = new Array<CustomerAlertItem>();\n\n        let messages = data['Body'];\n        //set body data\n        for (let i = 0; i < messages.length; i++) {\n          let message = messages[i];\n\n          let args = JSON.parse(message['Arguments']);\n          let customerList = args['customers'];\n\n          for (let j = 0; j < customerList.length; j++) {\n            let event = new CustomerAlertItem(customerList[j].id, customerList[j].name);\n            returnList.push(event);\n          }\n\n        }\n\n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  getAutoDeleteCustomerList(clientID): Observable<Array<CustomerAlertItem>> {\n    let customerDeleteAPI: CustomerAutoDeleteAPI = <CustomerAutoDeleteAPI>this.APIFactory.getAPI('getCustomerAutoDelete');\n\n    customerDeleteAPI.setClientID(clientID);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerDeleteAPI).subscribe((data) => {\n        console.log('customer-service-getAutoDeleteCustomerList', data);\n\n        let returnList = new Array<CustomerAlertItem>();\n\n        let messages = data['Body'];\n        //set body data\n        for (let i = 0; i < messages.length; i++) {\n          let message = messages[i];\n\n          let args = JSON.parse(message['Arguments']);\n          let customerList = args['customers'];\n\n          for (let j = 0; j < customerList.length; j++) {\n            let event = new CustomerAlertItem(customerList[j].id, customerList[j].name);\n            returnList.push(event);\n          }\n\n        }\n\n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  updateCustomerFollowStatus(clientID, isFollow): Observable<any> {\n    let updateCustomerFollowStatus: CustomerUpdateFollowAPI = <CustomerUpdateFollowAPI>this.APIFactory.getAPI('updateCustomerFollowStatus');\n    updateCustomerFollowStatus.setClient(clientID);\n    updateCustomerFollowStatus.setIsFollow(isFollow);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(updateCustomerFollowStatus).subscribe((data) => {\n\n        console.debug('customer-service-updateCustomerFollowStatus', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getFilterCriteriaPreset(): Observable<CustomerFilterPreset> {\n    let getFilterCriteria: CustomerGetPresetAPI = <CustomerGetPresetAPI>this.APIFactory.getAPI('getCustomerFilterPreset');\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(getFilterCriteria).subscribe((data) => {\n\n        console.debug('customer-service-getFilterCriteria', data);\n\n        let settingArray = data['Body'];\n\n        let preset: CustomerFilterPreset;\n        if (settingArray.length = !0) {\n          preset = JSON.parse(settingArray[0].SettingVal);\n        }\n\n        console.debug('customer-service-getFilterCriteriaPreset', preset);\n\n        observer.next(preset);\n        observer.complete();\n      })\n    })\n  }\n\n  saveFilterCriteria(filterCriteria: CustomerFilterCriteria): Observable<any> {\n    let saveFilterCriteria: CustomerSavePresetAPI = <CustomerSavePresetAPI>this.APIFactory.getAPI('saveCustomerFilterPreset');\n\n    saveFilterCriteria.setFilterCriteria(filterCriteria);\n\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(saveFilterCriteria).subscribe((data) => {\n\n        console.debug('customer-service-saveFilterCriteria', data);\n        observer.next(data);\n        observer.complete();\n\n      })\n    })\n  }\n\n  checkInFilterCriteria(clientID: string, filterCriteria: CustomerFilterCriteria): Observable<boolean> {\n\n    let customerListAPI: CustomerListAPI = <CustomerListAPI>this.APIFactory.getAPI('getCustomerList');\n    let restrictions = [];\n    if (this.customCriteriaSearch)\n      restrictions = this.customCriteriaSearch.getRestriction(filterCriteria);\n    else\n      restrictions = this.defaultCriteriaSearch.getRestriction(filterCriteria);\n\n\n    customerListAPI.restrictions = restrictions;\n    customerListAPI.clientID = clientID;\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerListAPI).subscribe((data) => {\n\n        console.debug('customer-service-checkInFilterCriteria', data);\n\n        observer.next(data['Body'].length != 0);\n        observer.complete();\n      })\n    })\n\n  }\n\n  //get customer datas\n  getCustomerList(filterCriteria: CustomerFilterCriteria, _pageInfo: PageInfo): Observable<Array<CustomerItem>> {\n\n    let restrictions = [];\n    if (this.customCriteriaSearch)\n      restrictions = this.customCriteriaSearch.getRestriction(filterCriteria);\n    else\n      restrictions = this.defaultCriteriaSearch.getRestriction(filterCriteria);\n\n    let customerListAPI: CustomerListAPI = <CustomerListAPI>this.APIFactory.getAPI('getCustomerList');\n\n    console.debug('customer-service-getCustomerList', filterCriteria, restrictions, _pageInfo);\n\n    customerListAPI.restrictions = restrictions;\n    customerListAPI.pageInfo = _pageInfo;\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerListAPI).subscribe((data) => {\n\n        console.debug('customer-service-getCustomerList', data);\n\n        let returnList = new Array<CustomerItem>();\n        let header = data['Header'];\n        let customerList = data['Body'];\n\n        //set header pageInfo\n        // _pageInfo.totalPage = header.PageInfo.totalPage;\n        // _pageInfo.totalRec = header.PageInfo.totalRec;\n\n        //set body data\n        for (let i = 0; i < customerList.length; i++) {\n          let json = customerList[i];\n          let isOtherSystem = json.DataSource != 'APP';\n          let isFollow = json.IsFollow == 'Y';\n          let completeness = json.Completeness;\n          let isOverTimeAlert = json.IsOverTimeAlert;\n\n\n          let event = new CustomerItem(json.ClientID, json.FirstName, json.LastName, json.Possibility, completeness, isFollow, isOtherSystem, isOverTimeAlert);\n          returnList.push(event);\n        }\n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n\n  }\n\n  getCustomerBirthdayList(targetDate, subN, addN): Observable<Array<CustomerBirthday>> {\n    let customerBirthdayListAPI: CustomerBirthdayListAPI = <CustomerBirthdayListAPI>this.APIFactory.getAPI('getCustomerBirthdayList');\n    customerBirthdayListAPI.subN = subN;\n    customerBirthdayListAPI.addN = addN;\n    customerBirthdayListAPI.targetDate = targetDate;\n\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerBirthdayListAPI).subscribe((data) => {\n\n        console.debug('customer-service-getCustomerBirthdayList', data);\n\n        let returnList: Array<CustomerBirthday> = [];\n        // let header = data['Header'];\n        let birthdayList = data['Body'];\n\n\n        console.log(\"cusSer: \", birthdayList);\n\n        // //set body data\n        for (let i = 0; i < birthdayList.length; i++) {\n          let event = new CustomerBirthday(birthdayList[i]['ClientID'], birthdayList[i]['FirstName'], birthdayList[i]['LastName'], birthdayList[i]['BirthdayMonth'], birthdayList[i]['BirthdayDate']);\n          returnList.push(event);\n        }\n        observer.next(returnList);\n        observer.complete();\n      });\n\n\n\n\n    });\n  }\n\n  getCustomerDetail(clientID: string): Observable<any> {\n    if (StringUtils.isEmpty(clientID)) {\n      return of(undefined);\n    }\n    else {\n      let customerDetailAPI: CustomerDetailAPI = <CustomerDetailAPI>this.APIFactory.getAPI('getCustomerDetail');\n      customerDetailAPI.id = clientID;\n\n      return from(this.dispatcher.dispatch(customerDetailAPI).toPromise().then(resp => {\n        if (resp.Header.status && resp.Body.length > 0)\n          return resp[\"Body\"][0];\n        else\n          return null;\n      }));\n    }\n  }\n\n  importContact(items: Array<ContactItem>): Observable<string> {\n    let importContactAPI: ImportContactAPI = <ImportContactAPI>this.APIFactory.getAPI('importContact');\n\n    console.debug('customer-service-importContact', items);\n    importContactAPI.setItems(items);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(importContactAPI).subscribe((data) => {\n        console.debug('customer-service-importContact', data);\n        observer.next(data['Header']);\n        observer.complete();\n\n      });\n    });\n  }\n\n\n\n  validProfile(customerDetail: any): ValidationResult {\n    let validationResult = new ValidationResult();\n\n    //valid required\n    if (StringUtils.isEmpty(customerDetail.lastName))\n      validationResult.setErrorMap('lastName', 'required');\n    // if (customerProfile.firstName == '')\n    //   validationResult.setErrorMap('firstName', 'required');\n\n    //valid format      \n\n    //valid email\n    if (customerDetail.emails.length != 0) {\n      let i = 0;\n      customerDetail.emails.forEach((email) => {\n        if (!email.isEmpty()) {\n          if (!this.isEmailFormat(email.email)) {\n            validationResult.setErrorMap(('email' + i).toString(), 'format');\n          }\n        }\n        i++;\n      });\n\n    }\n\n    //valid date\n    // if(customerProfile.birthday == null) {\n    //   validationResult.setErrorMap('birthday', 'date');\n    // }\n\n    return validationResult;\n  }\n\n  private isEmailFormat(email) {\n    let regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n    return regexp.test(email);\n  }\n\n\n\n  deleteCustomerProfile(clientID: string): Observable<any> {\n    console.log(\"deleteCustomerProfile\", clientID);\n    let deleteAPI: CustomerDeleteAPI = <CustomerDeleteAPI>this.APIFactory.getAPI('deleteCustomer');\n    deleteAPI.clientID = clientID;\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(deleteAPI).subscribe((data) => {\n\n        console.debug('customer-service-deleteCustomerProfile', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n\n      })\n    })\n  }\n\n  getCustomerContactNote(clientID: string, pageInfo: PageInfo): Observable<Array<any>> {\n    let customerContactNoteAPI: CustomerContactNoteAPI = <CustomerContactNoteAPI>this.APIFactory.getAPI('getCustomerContactNote');\n\n    customerContactNoteAPI.setClientID(clientID);\n    customerContactNoteAPI.setPageInfo(pageInfo);\n\n    console.debug('customer-service-getCustomerContactNote', customerContactNoteAPI);\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerContactNoteAPI).subscribe((data) => {\n        console.debug('customer-service-getCustomerContactNote', data);\n        let customerContactNoteList = data['Body'];\n        observer.next(customerContactNoteList);\n        observer.complete();\n      })\n    })\n  }\n\n\n  deleteCustomerContact(contactClientID: string): Observable<any> {\n    console.log(\"deleteCustomerContact\");\n    let deleteCustomerContactAPI: CustomerDeleteContactNoteAPI = <CustomerDeleteContactNoteAPI>this.APIFactory.getAPI('deleteCustomerContactNote');\n    deleteCustomerContactAPI.setContactClientID(contactClientID);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(deleteCustomerContactAPI).subscribe((data) => {\n\n        console.debug('customer-service-editCustomerContact', data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getCustomerContactTel(clientID: string): Observable<Array<CustomerTel>> {\n    let customerTelAPI: CustomerTelAPI = <CustomerTelAPI>this.APIFactory.getAPI('getCustomerTel');\n\n    customerTelAPI.setClientID(clientID);\n\n    console.debug('customer-service-getCustomerContactTel', customerTelAPI);\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(customerTelAPI).subscribe((data) => {\n        console.debug('customer-service-getCustomerContactTel response', data);\n        let returnCustomerTel: Array<CustomerTel> = new Array<CustomerTel>();\n        let customerTelList = data['Body'];\n\n        customerTelList.map(tel => new CustomerTel(tel.ClientID, this.profileCodeService.convertCode2Text('Customer_TelType', tel.TelType), tel.Tel, tel.DataSource)).forEach(element => {\n          returnCustomerTel.push(element);\n        });\n\n        observer.next(returnCustomerTel);\n        observer.complete();\n      })\n    })\n  }\n\n}\n","import { ProfileCode, ProfileCodeService, SQLiteTable, StringUtils, showRuleToken } from \"@allianzSND/core\";\nimport { SelectOption, showRule} from \"@allianzSND/core\";\nimport { differenceInCalendarDays } from 'date-fns';\nimport { Injectable, Optional, Inject } from \"@angular/core\";\nimport { customerShowRuleToken } from \"../injectionToken/injection-token\";\nimport { CustomerShowRule } from \"../interface/CustomerShowRule\";\n\n\n@Injectable({ providedIn: 'root' })\nexport class CustomerUtils {\n\n    constructor(\n        private profileCodeService: ProfileCodeService,\n        @Optional() @Inject(showRuleToken) private showRule: showRule,\n        @Optional() @Inject(customerShowRuleToken) private customerShowRule: CustomerShowRule,\n\n    ) { }\n\n    setCode2Option(codeArray: Array<ProfileCode>) {\n        let options: Array<SelectOption> = new Array();\n        if (codeArray != undefined) {\n            for (let code of codeArray) {\n                options.push(new SelectOption(code.getCode(), code.displayText));\n            }\n        }\n\n\n        return options;\n    }\n\n\n    countCompleteness(customerObj: any): number {\n        console.log(\"this.customerShowRule: \",this.customerShowRule);\n        if(this.customerShowRule) {\n            return this.customerShowRule.calculateCompleteness(customerObj);\n        }\n        else {\n\n            return 0;\n        }\n    }\n\n    setCustomerDefaultValue(dataObject: SQLiteTable) {\n\n        //count age\n        if (StringUtils.isNotEmpty(dataObject.getValue('BirthdayYear')) &&\n            StringUtils.isNotEmpty(dataObject.getValue('BirthdayMonth')) &&\n            StringUtils.isNotEmpty(dataObject.getValue('BirthdayDate'))) {\n            let birthday = new Date(Number(dataObject.getValue('BirthdayYear')),\n                Number(dataObject.getValue('BirthdayMonth') - 1),\n                Number(dataObject.getValue('BirthdayDate')));\n\n            let age = this.countAge(birthday);\n            dataObject.setValue('age', age);\n\n            //check age range\n            if (StringUtils.isEmpty(dataObject.getValue('AgeRange'))) {\n                let ageRange = this.countAgeRange(age);\n                if (ageRange != undefined) {\n                    dataObject.setValue('AgeRange', ageRange);\n                }\n            }\n\n        }\n\n    }\n\n    countAgeRange(age: number) {\n        console.debug('countAgeRange', age);\n        let rangeResult;\n        let ageRange: Array<ProfileCode> = this.profileCodeService.getCodeArray('Customer_Age');\n        console.log(\"ageRange:\", ageRange);\n        ageRange.forEach(profileCode => {\n            let args = profileCode.getArguments();\n            console.debug('customer-utils countAgeRange args', args);\n\n            let obj = JSON.parse(args);\n            console.debug('customer-utils countAgeRange obj', obj);\n            if (age >= obj.start && age <= obj.end) {\n                console.debug('match age range', profileCode.getCode());\n                rangeResult = profileCode.getCode();\n            }\n        });\n\n        console.debug('rangeResult', rangeResult);\n\n        return rangeResult;\n    }\n\n    countAge(birthday: Date): number {\n        let dates = this.calCEIntervalDays(birthday, new Date());\n        console.debug('dates', dates);\n        let age = Math.floor(dates / 365);\n        console.debug('age', age);\n\n        return age;\n    }\n\n    /**\n     * javascriptå³å¥èµ·å§æ¥èçµæ\n     * æ¥ææ ¼å¼çºæ°åå¹´ææ¥(EX.1060802)\n     * å³å¥ 1060702,1060802 æåå³31å¤©\n     * å³å¥ 1060901,1061001 æåå³30å¤©\n     * @param  sDate \n     * @param  eDate \n     * @return å¤©æ¸\n     */\n    calRocIntervalDays(sDate, eDate) {\n        var msecPerMinute = 1000 * 60;\n        var msecPerHour = msecPerMinute * 60;\n        var msecPerDay = msecPerHour * 24;\n        sDate = this.leftPad(sDate, 7, '0');\n        eDate = this.leftPad(eDate, 7, '0');\n        var begDateStr = \"\" + sDate.substring(3, 5) + \"/\" + sDate.substring(5) + \"/\" + (Number(sDate.substring(0, 3)) + Number(1911));\n        var endDateStr = \"\" + eDate.substring(3, 5) + \"/\" + eDate.substring(5) + \"/\" + (Number(eDate.substring(0, 3)) + Number(1911));\n        var begDate = new Date(begDateStr);\n        var endDate = new Date(endDateStr);\n        var interval = endDate.getTime() - begDate.getTime();\n        var days = Math.floor(interval / msecPerDay);\n        return days;\n    }\n    /**\n     * javascriptå³å¥èµ·å§æ¥èçµæ\n     * æ¥ææ ¼å¼çºè¥¿åå¹´ææ¥(EX.20170801)\n     * å³å¥ 20170702,20170802 æåå³31å¤©\n     * å³å¥ 20170901,20171001 æåå³30å¤©\n     * @param  sDate \n     * @param  eDate \n     * @return å¤©æ¸\n     */\n    calCEIntervalDays(sDate, eDate) {\n        // var msecPerMinute = 1000 * 60;\n        // var msecPerHour = msecPerMinute * 60;\n        // var msecPerDay = msecPerHour * 24;\n        // var begDateStr = \"\" + sDate.substring(4, 6) + \"/\" + sDate.substring(6) + \"/\" + sDate.substring(0, 4);\n        // var endDateStr = \"\" + eDate.substring(4, 6) + \"/\" + eDate.substring(6) + \"/\" + eDate.substring(0, 4);\n        // var begDate = new Date(begDateStr);\n        // var endDate = new Date(endDateStr);\n        // var interval = endDate.getTime() - begDate.getTime();\n        // var days = Math.floor(interval / msecPerDay);\n\n        // return days;\n        return differenceInCalendarDays(eDate, sDate);\n\n    }\n    /**\n     * åå·¦è£é¶\n     * Ex:leftPad(3,3,'0')->003\n     * @param  val    [åå¼]\n     * @param  padLen [è£è¶³é·åº¦]\n     * @param  padVal [è£è¶³å¼]\n     * @return        [description]\n     */\n    leftPad(val, padLen, padVal) {\n        if (val.toString().length < padLen) {\n            for (var i = 1; i < padLen; i++) {\n                val = padVal + val;\n                if (val.toString().length >= padLen) {\n                    break;\n                }\n            }\n        }\n        return val;\n    }\n\n    convertNameToShow(firstName: string, lastName: string): string {\n        if (this.showRule) {\n          return this.showRule.convertName(firstName, lastName);\n        }\n        else {\n          let firstNameStr: string = StringUtils.isNotEmpty(firstName) ? firstName : '';\n          let lastNameStr: string = StringUtils.isNotEmpty(lastName) ? (' ' + lastName) : '';\n          return firstNameStr + lastNameStr;\n        }\n      }\n\n}","import { Component, OnInit, HostListener, ElementRef, ChangeDetectorRef, EventEmitter, Output, Input, ViewChild, AfterViewInit, ChangeDetectionStrategy, Optional, Inject } from '@angular/core';\nimport { CalendarService } from '../../service/calendar-service.service';\nimport { CalendarEventDetail } from '../../service/model/CalendarEventDetail';\nimport {\n  addDays,\n  addHours,\n  addMinutes,\n  addMonths,\n  getDate,\n  getDay,\n  getHours,\n  getMinutes,\n  getMonth,\n  getYear,\n  isSameMonth,\n  subMinutes,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  startOfDay,\n  endOfDay\n} from 'date-fns';\nimport { ProfileCodeService, PageInfo, showRuleToken, showRule, DataSyncService } from '@allianzSND/core';\nimport { ProfileCode } from '@allianzSND/core';\nimport { SettingService } from '@allianzSND/core';\nimport { Setting } from '@allianzSND/core';\nimport { UiInformationBtnComponent, ModalManager } from '@allianzSND/ui';\nimport { StringUtils, SelectOption } from '@allianzSND/core';\nimport { ViewDateChange } from '@allianzSND/core';\nimport { ChangeAction } from '@allianzSND/core';\nimport { UiInformationContentComponent } from '@allianzSND/ui';\nimport { Language } from '@allianzSND/core';\nimport { TranslateService } from '@allianzSND/core';\nimport { CustomerItem } from '../../../customer/service/model/CustomerItem';\nimport { CustomerFilterCriteria } from '../../../customer/components/bean/customer-filter-criteria';\nimport { CustomerService } from '../../../customer/service/customer-service.service';\nimport { CustomerUtils } from '../../../customer/utils/customer-utils';\n\n\n\n@Component({\n  selector: 'snd-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss']\n  , changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class CalendarComponent implements OnInit, AfterViewInit {\n\n  //two-way binding\n  private _parentHeight: number = 0;\n  @Input()\n  get parentHeight() {\n    return this._parentHeight;\n  }\n  set parentHeight(val) {\n    this._parentHeight = val;\n\n    if (this._parentHeight == 0) {\n      this._parentHeight = window.innerHeight;\n    }\n\n    this.parentHeightChange.emit(this._parentHeight);\n\n    var _this = this;\n    let titleBtnsBlock_ele = _this.titleBtnsBlock.nativeElement;\n    let titleBtnsBlock_size = titleBtnsBlock_ele.getBoundingClientRect();\n    _this.calendarHeight = _this._parentHeight\n      - titleBtnsBlock_size.height\n      - parseInt(window.getComputedStyle(titleBtnsBlock_ele).marginBottom);\n    this.changeDetector.markForCheck();\n\n    // console.warn('parentHeight', this._parentHeight);\n    // console.warn('titleBtnsBlock_ele', titleBtnsBlock_size.height, parseInt(window.getComputedStyle(titleBtnsBlock_ele).marginBottom));\n    // console.warn('calendarHeight', _this.calendarHeight);\n  } // end set parentHeight\n  @Output() parentHeightChange = new EventEmitter();\n\n  @ViewChild('titleBtnsBlock') titleBtnsBlock: ElementRef;\n\n  private YEAR: string = 'year';\n  private MONTH: string = 'month';\n  private WEEK: string = 'week';\n  private DAY: string = 'day';\n\n  //calendar-ui config setting\n  public viewTypeIndex: number = 2; // 'month'\n  public viewType: string = this.MONTH; //\n  public viewDate = new Date(); //current date\n  public weekStartsOn: number = 1; // Monday\n\n  //count content height\n  private calendarHeight: number = 0;\n\n  //click calendar id\n  public clientID: string = '';\n\n  public translateMap: Map<string, string> = new Map<string, string>();\n  public optionMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public customerItemList: Array<SelectOption> = [];\n  private storeStartDate: Date = new Date();\n  private storeEndDate: Date = new Date();\n\n  public calendarEventList: Array<CalendarEventDetail> = []; // eventList\n  public calendarEventListAfterFilter: Array<CalendarEventDetail> = []; // filterå¾ event\n  public viewDateCalendarEventList: Array<CalendarEventDetail> = [];\n  public calendarEventDetail: CalendarEventDetail;\n  public calendarEventEdit: CalendarEventDetail = null;\n  public customerClientName: string;\n  private customerClientMap: Map<string, string> = new Map<string, string>();\n  // private calendarEventMap = new CalendarEventMap();\n\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public alertTypeList: Array<ProfileCode> = [];\n  public language: Language = new Language();\n  private currentFilterOptionList: Array<string> = [];\n\n  // popup\n  public isExpandFilter: boolean = false;\n  public isExpandDetail: boolean = false;\n  public isExpandEdit: boolean = false;\n  public isDelete: boolean = false;\n  public isSave: boolean = false;\n  public isSaveClick: boolean = false;\n  public isCalendarDelete: boolean = false;\n  public isLoading: boolean = false;\n  public isCalendarEditMetaDataDone: boolean = false;\n  public isCalendarDetailMetaDataDone: boolean = false;\n\n  // translate\n  private dayTypesList: Array<string> = ['Cross_Day', 'All_Day'];\n  private weekdaysList: Array<string> = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  private monthsList: Array<string> = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  private noSchedule: string = 'No_Schedule';\n\n\n  // info config\n  //é¿åç¶å±¤å¶ä» position relative å¼é¿ info\n  public outsideSpace = {\n    top: 0,\n    left: 0\n  };\n  //info content å·¦å³æå°padding\n  public paddindData = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: window.innerWidth > 1023 ? 170 : 10\n  };\n\n\n  //check is pad or mobile\n  public windowWidth: number;\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowWidth = event.target.innerWidth;\n    this.calcuContentHeight();  // resize for android bottom show or hide \n    this.scrollToCurrentTime(); // resize for android bottom show or hide .. caculate day week height\n    console.log('calendar inside cacualte height');\n\n    this.changeDetector.markForCheck();\n  }\n\n\n  constructor(private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    private settingService: SettingService,\n    private translateService: TranslateService,\n    private calendarService: CalendarService,\n    private profileCodeService: ProfileCodeService,\n    private customerService: CustomerService,\n    private customerUtils: CustomerUtils,\n    private modalManager: ModalManager,\n    private dataSyncService: DataSyncService\n  ) { }\n\n  ngOnInit() {\n    //init calendar type\n    this.activityTypeList = this.profileCodeService.getCodeArray('Calendar_Type');\n    this.alertTypeList = this.profileCodeService.getCodeArray('Calendar_RemindTime');\n    this.optionMap.set('Calendar_Type', this.activityTypeList);\n    this.optionMap.set('Calendar_RemindTime', this.alertTypeList);\n    this.dayTypesList.forEach((dayType) => {\n      this.translateMap.set(dayType, this.translateService.translate(dayType))\n    });\n    this.weekdaysList.forEach((weekday) => {\n      this.translateMap.set(weekday, this.translateService.translate(weekday))\n    });\n    this.monthsList.forEach((month) => {\n      this.translateMap.set(month, this.translateService.translate(month))\n    });\n    this.translateMap.set(this.noSchedule, this.translateService.translate(this.noSchedule));\n\n    this.windowWidth = window.innerWidth;\n\n    //set component is detach\n    // this.changeDetector.detach();\n\n    //phone default view is day view\n    if (this.windowWidth < 1024) {\n      this.viewTypeIndex = 0;\n      this.changeDetector.markForCheck();\n    }\n\n    //load default filter setting\n    let defaultSettingVal = this.settingService.getSetting('CalendarFilterSetting').SettingVal;\n    if (StringUtils.isNotEmpty(defaultSettingVal)) {\n      let calendarSetting = JSON.parse(defaultSettingVal);\n\n      //default all checked\n      if (Object.keys(calendarSetting).length == 0) {\n        this.activityTypeList.forEach((codeItem) => {\n          codeItem.isCheck = true;\n        });\n      }\n      else {\n        this.activityTypeList.forEach((codeItem) => {\n          let code = codeItem.getCode();\n          let isCheck = calendarSetting[code] == undefined ? false : calendarSetting[code];\n          codeItem.isCheck = isCheck;\n        });\n      }\n\n    }\n\n    this.setCurrentFilterOption(undefined);\n\n\n    this.typeChange(this.viewTypeIndex);\n    this.loadCalendarData();\n    this.createCustomerList();\n\n  } // end ngOnInit\n\n  ngAfterViewInit() {\n    this.typeChange(this.viewTypeIndex);\n  }\n\n  switchPadViewMode(activeTabIndex) {\n    console.debug('switchPadViewMode:', this.viewDate);\n\n    if (activeTabIndex != this.viewTypeIndex) {\n      //count start & end\n      this.typeChange(activeTabIndex);\n\n      this.changeDetector.detectChanges();\n\n      //load data & refresh\n      this.loadCalendarData();\n    }\n\n  }\n\n  typeChange(activeTabIndex) {\n    console.debug('calendar-component-typeChange', activeTabIndex, this.viewType, this.viewDate);\n\n    let start, end;\n    this.viewTypeIndex = activeTabIndex;\n\n    switch (activeTabIndex) {\n      // YEAR\n      case 3:\n        this.viewType = this.YEAR;\n        this.calcuContentHeight();\n        break;\n      // MONTH\n      case 2:\n        this.viewType = this.MONTH;\n        this.calcuContentHeight();\n        start = startOfMonth(this.viewDate);\n        end = endOfMonth(this.viewDate);\n        //count current time is have data\n        break;\n      // WEEK\n      case 1:\n        this.viewType = this.WEEK;\n        start = startOfWeek(this.viewDate, { weekStartsOn: 1 });\n        end = endOfWeek(this.viewDate, { weekStartsOn: 1 });\n        //count current time is have data\n        this.scrollToCurrentTime();\n\n        break;\n      // DAY\n      case 0:\n        this.viewType = this.DAY;\n        start = startOfDay(this.viewDate);\n        end = endOfDay(this.viewDate);\n        //count current time is have data\n        this.scrollToCurrentTime();\n        // console.warn('view type change: day');\n        break;\n    } // end switch\n\n    if (this.viewType != this.YEAR) {\n\n      if (StringUtils.isNotEmpty(start) && StringUtils.isNotEmpty(end)) {\n        this.storeStartDate = start;\n        this.storeEndDate = end;\n      }\n    }\n\n    console.debug('calendar-component-typeChange done');\n\n\n\n  } // end typeChange\n\n  //phone header change mode\n  mobileBackViewType() {\n    console.debug('mobileBackViewType', this.viewType);\n    switch (this.viewType) {\n      case this.MONTH:\n        this.typeChange(3); // back to year\n        break;\n      case this.WEEK:\n        this.typeChange(2); // back to month\n        break;\n      case this.DAY:\n        this.typeChange(2); // back to month\n        break;\n    } // end switch\n\n\n    //because change view type , so date range is change\n    this.loadCalendarData();\n\n  } // end mobileChangeViewType\n\n  clickToday() {\n    this.viewDate = new Date();\n    console.warn('clickToday', this.viewDate);\n\n    this.changeDetector.detectChanges();\n\n\n    //calculate new start and end\n    this.typeChange(this.viewTypeIndex);\n\n    //load data & refresh\n    this.loadCalendarData();\n    this.loadViewDateCalendarEventList();\n  }\n\n  //when calendar component any click change viewDate , will check pad/phone current viewType to change mode\n  onViewDateChange(viewDateChange: ViewDateChange) {\n    let val = new Date(viewDateChange.viewDate);\n    let action = viewDateChange.action;\n\n    console.debug('calendar-component update viewDate:', val);\n\n    console.debug('calendar-component update viewDate:', val, this.viewType);\n    console.debug('this.viewDate:', this.viewDate, isSameMonth(this.viewDate, val));\n\n\n    if (this.isPad() && (isSameMonth(this.viewDate, val) && this.viewType === this.MONTH)) {\n      this.viewDate = val;\n      return;\n    }\n    else {\n      this.viewDate = val;\n      //if year change date , alwasy switch month\n      if (this.viewType == this.YEAR && action == ChangeAction.CLICK) {\n        this.typeChange(2);\n      }\n      else if (this.viewType == this.MONTH && !this.isPad() && action == ChangeAction.CLICK) {\n        //if device is phone , click day switch to week when view type is month\n        this.typeChange(0);\n      }\n      else {\n        //else calculate new start & end\n        this.typeChange(this.viewTypeIndex);\n      }\n\n      //load data & refresh\n      this.loadViewDateCalendarEventList();\n      this.loadCalendarData();\n    }\n  }\n\n  //fetch calendar between start & end range\n  loadCalendarData() {\n    console.debug('loadCalendar data');\n    if (this.viewType !== this.YEAR) { // year no need query data , only view\n\n      //If old data is larger than 20, clear first to make view change faster\n      if (this.calendarEventListAfterFilter.length > 20)\n        this.calendarEventListAfterFilter = [];\n\n      if (StringUtils.isNotEmpty(this.storeStartDate) && StringUtils.isNotEmpty(this.storeEndDate)) {\n\n        this.calendarService.getCalendarEventList(this.storeStartDate, this.storeEndDate, '').subscribe(data => {\n          this.calendarEventList = data;\n          this.refreshCalendarEventList();\n        });\n      }\n    }\n    console.debug('loadCalendar data done');\n  }\n\n  loadCalendarEventDetail(clientID: string) {\n    console.log(\"loadCalendarEventDetail:\", clientID);\n    this.calendarService.getCalendarEventDetail(clientID).subscribe(data => {\n      console.warn('getCalendarEventDetail', data);\n      this.isLoading = false;\n      this.calendarEventDetail = data;\n      this.customerClientName = this.customerClientMap.get(this.calendarEventDetail.customerClientID);\n      console.log(\"customerClientMap:\", this.customerClientMap);\n      this.calendarEventDetail.displayActivity = this.profileCodeService.convertCode2Text('Calendar_Type', this.calendarEventDetail.activity);\n      this.calendarEventDetail.displayAlert1 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert1);\n      this.calendarEventDetail.displayAlert2 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert2);\n      this.onToggleDetailModal(true);\n    });\n  }\n\n  private loadViewDateCalendarEventList() {\n    let queryDate = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), 0, 0, 0);\n    this.calendarService.getCalendarEventList(queryDate, subMinutes(addDays(this.viewDate, 1), 1), '').subscribe(data => {\n      console.warn('loadViewDateCalendarEventList', data);\n      this.viewDateCalendarEventList = data;\n    });\n  }\n\n  onClickDetail(eventItem) {\n    this.clientID = eventItem.clientID;\n    this.loadCalendarEventDetail(this.clientID);\n    this.loadViewDateCalendarEventList();\n\n    console.warn('clickDetail', this.clientID);\n  } // end clickDetail\n\n  onClickDeleteCancel() {\n  } // end clickDeleteCancel\n\n  onClickDeleteConfirm() {\n    this.modalManager.toggleLoading(true);\n\n    this.calendarService.deleteCalendarEvent(this.clientID).subscribe(async data => {\n      console.warn(\"this.calendarService.deleteCalendarEvent data: \", data);\n      await this.dataSyncService.syncFunc(['CALENDAR']);\n      if (data.status) {\n        this.isDelete = data.status;\n      }\n      this.loadCalendarData();\n      if (this.isExpandDetail) { // close pop up\n        this.onToggleDetailModal(false);\n      }\n      this.modalManager.toggleLoading(false);\n    });\n  } // end clickDeleteConfirm\n\n  onClickAppointmentSave() {\n    this.isSaveClick = true;\n  }\n\n  async onSaveCalendarEvent(resp) {\n    let type = resp.type;\n    console.log(\"onSaveCalendarEvent:\", resp);\n    if (type !== 'fail') {\n      let data = resp.data;\n      let clientID = data.ClientID;\n      console.warn('saveCalendarEvent');\n\n      console.warn('updateCalendarEvent', clientID);\n      this.modalManager.toggleLoading(true);\n      await this.dataSyncService.syncFunc(['CALENDAR']);\n      this.modalManager.toggleLoading(false);\n      this.calendarService.getCalendarEventDetail(clientID).subscribe((data) => {\n        this.calendarEventDetail = data;\n        this.onToggleAppointmentModal(false);\n        this.loadCalendarData();\n\n        if (type === 'edit') {\n          this.loadCalendarEventDetail(clientID);\n          this.isSave = true;\n          this.loadViewDateCalendarEventList();\n        }\n        else if (type === 'add') {\n          this.isSave = true;\n          console.warn('addCalendarEvent');\n        }\n      })\n    }\n    this.isSaveClick = false;\n    return;\n  }\n\n  private isPad() {\n    return this.windowWidth >= 1024;\n  }\n\n  editEvent() {\n    console.log(\"calendar EditEvent:\", this.calendarEventDetail);\n    this.calendarEventEdit = new CalendarEventDetail(this.calendarEventDetail.clientID,\n      this.calendarEventDetail.calendarID,\n      this.calendarEventDetail.customerClientID,\n      this.calendarEventDetail.title,\n      this.calendarEventDetail.location,\n      this.calendarEventDetail.activity,\n      '',\n      this.calendarEventDetail.start,\n      this.calendarEventDetail.end,\n      '',\n      this.calendarEventDetail.alert1,\n      this.calendarEventDetail.alert2,\n      this.calendarEventDetail.alert3,\n      this.calendarEventDetail.remark,\n      null);\n    this.calendarEventEdit.allDay = this.calendarEventDetail.allDay;\n    this.calendarEventEdit.isAlert = this.calendarEventDetail.isAlert;\n    this.onToggleAppointmentModal(true);\n  }\n\n  addEvent() {\n    this.clientID = '';\n    let currentTime; // adjust time to next interval\n    currentTime = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), getHours(new Date()), getMinutes(new Date()));\n    currentTime = addMinutes(currentTime, (5 - getMinutes(currentTime) % 5));  // adjust minutes to next 5 minutes\n    currentTime = addHours(currentTime, 1);\n    this.calendarEventEdit = new CalendarEventDetail('', '', null, '', '', null, 'N', currentTime, addMinutes(currentTime, 15), 'Y', '8', '', '', '', null);\n    this.loadViewDateCalendarEventList();\n    this.onToggleAppointmentModal(true);\n  }\n\n  // block which control filter\n\n  onActivityTypeListChange(alertTypeList: Array<ProfileCode>) {\n    this.alertTypeList = alertTypeList;\n    this.currentFilterOptionList = [];\n    let settingVal = {};\n    this.activityTypeList.forEach((codeItem) => {\n      console.debug('activityType codeItem', codeItem);\n      if (settingVal != undefined) settingVal[codeItem.getCode()] = codeItem.isCheck;\n\n      if (codeItem.isCheck) {\n        this.currentFilterOptionList.push(codeItem.getCode());\n      }\n    });\n\n    this.filterOptionChange(this.currentFilterOptionList);\n    this.settingValueChange(settingVal);\n  }\n\n  settingValueChange(settingValue) {\n    //update filter setting\n    let settingObj = new Setting(this.settingService.getSetting('CalendarFilterSetting').SettingID, this.settingService.getSetting('CalendarFilterSetting').SettingName, JSON.stringify(settingValue));\n    this.settingService.updateSetting(settingObj).subscribe(data => {\n      console.debug('calendar.component-update setting', data);\n    });\n  }\n\n  filterOptionChange(currentFilterOption: Array<string>) {\n    console.warn('currentFilterOption', currentFilterOption);\n    this.currentFilterOptionList = currentFilterOption;\n    this.refreshCalendarEventList();\n  }\n\n  private setCurrentFilterOption(settingVal) {\n    this.currentFilterOptionList = [];\n\n    //find checked filter\n    this.activityTypeList.forEach((codeItem) => {\n      console.debug('activityType codeItem', codeItem);\n      if (settingVal != undefined) settingVal[codeItem.getCode()] = codeItem.isCheck;\n\n      if (codeItem.isCheck) {\n        this.currentFilterOptionList.push(codeItem.getCode());\n      }\n    });\n  }\n\n  private refreshCalendarEventList() {\n\n    this.calendarEventListAfterFilter = [];\n\n    //filter event calendar type\n    console.debug('start refreshCalendarEventList', this.calendarEventList.length);\n    this.calendarEventListAfterFilter = this.calendarEventList.filter(x => this.currentFilterOptionList.indexOf(x.activity) > -1);\n    console.debug('start refreshCalendarEventList done', this.calendarEventListAfterFilter);\n    console.debug('start refreshCalendarEventList done', this.calendarEventListAfterFilter.length);\n    // this.changeDetector.detectChanges();\n\n    //count height\n    if (this.viewType == this.DAY || this.viewType == this.WEEK) {\n      this.scrollToCurrentTime();\n    }\n  }\n\n  // end block\n\n\n\n  scrollToCurrentTime() {\n    let _this = this;\n    setTimeout(() => {\n      let timeEventAll_ele = _this.elementRef.nativeElement.querySelectorAll('div.cal-time-events');\n      // console.warn('_this.timeEventAll_ele', timeEventAll_ele.length, timeEventAll_ele);\n\n      // if(timeEventAll_ele !=null){\n      for (let timeEvent_ele of timeEventAll_ele) {\n        let mobileDayHeader_ele = _this.elementRef.nativeElement.querySelector('div.cal-day-headers');\n        let allDayEvent_ele = _this.elementRef.nativeElement.querySelector('div.cal-all-day-events');\n        let allDayEvent_h = (allDayEvent_ele != null\n          ? allDayEvent_ele.getBoundingClientRect().height\n          : 0);\n\n        // console.warn('mobileDayHeader_ele', mobileDayHeader_ele);\n        if (mobileDayHeader_ele != null) {\n\n          // console.warn('if _this.calendarHeight', timeEvent_ele, _this.calendarHeight);\n          // console.warn('if mobileDayHeader_ele', mobileDayHeader_ele);\n\n          timeEvent_ele.style.maxHeight = (_this.calendarHeight\n            - mobileDayHeader_ele.getBoundingClientRect().height\n            - allDayEvent_h\n            - parseInt(window.getComputedStyle(mobileDayHeader_ele).marginBottom)) + 'px';\n\n          // scroll to time\n          let currentHour = getHours(new Date());\n          console.log('current Hour:', getHours(new Date()));\n          if (currentHour > 3)\n            timeEvent_ele.scrollTop = Math.floor((currentHour - 3) / 2) * 80\n              + (Math.floor((currentHour - 3) / 2)\n                + (currentHour - 3) % 2) * 82;\n        }\n      } // end for: timeEventAll_ele\n      this.changeDetector.markForCheck();\n\n      // }\n\n    }, 100); // ææExpressionChangedAfterItHasBeenCheckedError å setTimeOut è§£\n  } // end scrollToCurrentTime\n\n  calcuContentHeight() {\n\n    console.debug('calcuContentHeight');\n\n    let _this = this;\n    setTimeout(() => {\n      console.warn('calcuContentHeight', this.calendarHeight);\n      // calculate year view height\n      let year_ele = _this.elementRef.nativeElement.querySelector('.ui-calendar-year');\n      let yearTag_ele = _this.elementRef.nativeElement.querySelector('app-ui-calendar-year');\n\n      if (year_ele != null && yearTag_ele != null) {\n\n        if (_this.windowWidth > 1023) {\n          yearTag_ele.style.minHeight = (_this.calendarHeight\n            - parseInt(window.getComputedStyle(year_ele).marginTop)) + 'px';\n          yearTag_ele.style.height = (_this.calendarHeight\n            - parseInt(window.getComputedStyle(year_ele).marginTop)) + 'px';\n        } else {\n\n          year_ele.style.height = (_this.calendarHeight\n            - parseInt(window.getComputedStyle(year_ele).marginTop)) + 'px';\n          console.log('mobile year view: _this.calendarHeight:', _this.calendarHeight, 'window.getComputedStyle(year_ele).marginTop', window.getComputedStyle(year_ele).marginTop);\n\n        }\n      }\n\n      // calculate month view height\n      let month_ele = _this.elementRef.nativeElement.querySelector('.cal-month-view');\n\n      if (month_ele !== null && month_ele !== undefined && _this.windowWidth > 1023) {\n\n        month_ele.style.maxHeight = _this.calendarHeight + 'px';\n        month_ele.style.minHeight = _this.calendarHeight + 'px';\n      }\n      if (month_ele.style.maxHeight == '0px') {\n        console.warn('Here');\n        month_ele.style.maxHeight = 100 - 3 + 'vh';\n        month_ele.style.minHeight = 100 - 3 + 'vh';\n      }\n      this.changeDetector.markForCheck();\n\n    }, 300); // ææExpressionChangedAfterItHasBeenCheckedError å setTimeOut è§£\n  } // end calcuContentHeight\n\n  renderWeek() {\n    console.log('in integration renderWeek');\n    let mobileDayHeader_ele = this.elementRef.nativeElement.querySelector('div.cal-day-headers');\n    let allDayEvent_ele = this.elementRef.nativeElement.querySelector('div.cal-all-day-events');\n    console.log('in integration renderWeek', mobileDayHeader_ele, allDayEvent_ele);\n    this.scrollToCurrentTime();\n  }\n\n\n  // function which control popup\n\n  onToggleAppointmentModal(val) {\n    setTimeout(() => {\n      this.isExpandEdit = val;\n      if (!this.isExpandEdit) {\n        this.isCalendarEditMetaDataDone = false;\n      }\n      if (this.isExpandFilter) { this.onCloseInfo(); }\n      this.changeDetector.markForCheck();\n    }, 0); // ææExpressionChangedAfterItHasBeenCheckedError å setTimeOut è§£\n\n\n  } // end toggleAppointmentModal\n\n  onToggleDetailModal(val) {\n    this.isExpandDetail = val;\n    if (!this.isExpandDetail) {\n      this.isCalendarDetailMetaDataDone = false;\n    }\n    if (this.isExpandFilter) { this.onCloseInfo(); }\n  }\n  onToggleFilterModal(val) {\n    if (!this.isExpandFilter) {\n      this.onCloseInfo();\n    }\n  }\n\n  // end block\n\n  // è¨­ info position\n  @ViewChild(UiInformationBtnComponent) nowShowBtn: UiInformationBtnComponent;\n  @ViewChild(UiInformationContentComponent) infoContent: UiInformationContentComponent;\n  @ViewChild('filterInfo') filterInfo: UiInformationContentComponent;\n  onInfoTabClick(dom) {\n    console.warn('infoTabClick');\n    console.warn('nowShowBtn', this.nowShowBtn);\n\n    if (this.nowShowBtn !== undefined) {\n      // console.log('nowShowBtn click', this.nowShowBtn.btnContent.nativeElement);\n\n      if (dom !== undefined) {\n        console.warn('messageContent', dom.messageContent, this.nowShowBtn.messageContent);\n        if (dom.messageContent !== this.nowShowBtn.messageContent) {\n          // this.closeInfo();\n          this.nowShowBtn.closeInfo();\n          this.nowShowBtn = dom;\n        }\n        else {\n          this.resetInfoPos();\n        }\n      } // end if: dom !== undefined\n    } else {\n      this.nowShowBtn = dom;\n    }\n\n    // console.warn('messageContent filter', this.nowShowBtn.messageContent === this.filterInfo, this.filterInfo);\n    if (this.nowShowBtn.messageContent === this.filterInfo) {\n      this.isExpandFilter = true;\n    }\n  } // end infoTabClick\n  resetInfoPos() {\n    // this.isExpandFilter = true;\n    if (this.nowShowBtn !== undefined) {\n      this.nowShowBtn.countPos();\n    }\n  } // end resetInfoPos\n  onCloseInfo() {\n    this.isExpandFilter = false;\n    if (this.nowShowBtn !== undefined) {\n      this.nowShowBtn.closeInfo();\n      // this.nowShowBtn = undefined;\n\n      // console.warn('closeInfo', this.nowShowBtn, this.nowShowBtn.btnContent.nativeElement);\n    }\n  } // end closeInfo\n\n  createCustomerList() {\n    let pageInfo = new PageInfo();\n    pageInfo.pageSize = -1;\n    let filterCriteria = new CustomerFilterCriteria();\n    this.customerService.getCustomerList(filterCriteria, pageInfo).subscribe((data) => {\n      console.log('data', data);\n      let temp_array = [];\n      for (let custItem of data) {\n        this.customerClientMap.set(custItem.clientID, this.customerUtils.convertNameToShow(custItem.firstName, custItem.lastName));\n        temp_array.push(new SelectOption(custItem.clientID, this.customerUtils.convertNameToShow(custItem.firstName, custItem.lastName)));\n      }\n      this.customerItemList = temp_array;\n    });\n  }\n\n  mobileFilterClick() {\n    this.isExpandFilter = true;\n  }\n\n\n  onMetaDataDone(funcName: string) {\n    if (funcName === 'CalendarEdit') {\n      this.isCalendarEditMetaDataDone = true;\n    }\n    else if (funcName === 'CalendarDetail') {\n      this.isCalendarDetailMetaDataDone = true;\n    }\n\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, Inject, Optional } from '@angular/core';\nimport { DateUtils, Language, showRuleToken, showRule } from '@allianzSND/core';\n\n@Component({\n  selector: 'app-customer-contact-list',\n  templateUrl: './customer-contact-list.component.html',\n  styleUrls: ['./customer-contact-list.component.scss']\n})\nexport class CustomerContactListComponent implements OnInit {\n\n\n  public language: Language = new Language();\n\n  @Output()\n  private onAddNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private onDisplayNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private onEditNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private onDeleteNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private contactListRefresh: EventEmitter<any> = new EventEmitter();\n\n\n\n\n  @Input()\n  get contactList() { return this._contactList; }\n  set contactList(contactList) {\n    console.log(\"customer-contact-list set contactList:\", contactList);\n\n    this._contactList = contactList.map(x => Object.assign({}, x, { NoteTimeDisplay: this.toNoteTime(new Date(x.NoteTime)) }));\n\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n  }\n  private _contactList: Array<any>;\n\n  elementRef: ElementRef;\n  constructor(private dateUtils: DateUtils,\n    @Inject(ElementRef) elementRef: ElementRef,\n    @Optional() @Inject(showRuleToken) private showRule:showRule\n    ) {\n    this.elementRef = elementRef;\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n\n  }\n\n  // ionic sliding need to call close event when every refresh\n  async closeSlidingItems() {\n    console.debug('closeSlidingItems');\n\n\n    const item = this.elementRef.nativeElement.querySelector('ion-item-sliding');\n    if (item != null) {\n      /// console.debug('item size',item.length);\n      console.debug('item', item);\n      await item.close();\n      await item.closeOpened();\n    }\n\n  }\n\n  refreshContactNote() {\n    this.contactListRefresh.emit()\n\n\n    // need to wait ion-item-sliding create at first from no data (when skelton interface)\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n\n  }\n\n  addNote() {\n    this.onAddNote.emit();\n  }\n\n  displayNote(note: any) {\n    this.onDisplayNote.emit(Object.assign({\n      Date: this.toNoteTime(new Date(note.NoteTime))\n    }, note));\n  }\n\n  editNote(note: any) {\n    this.onEditNote.emit(note);\n  }\n\n  deleteNote(note: any) {\n    this.onDeleteNote.emit(note);\n  }\n\n\n  trackByClientID(index, item) {\n    return item.ClientID;\n  }\n\n  public toNoteTime(time: Date) {\n    console.log(\"toNoteTime:\", time);\n    let defaultStr = this.dateUtils.toDateString(time, 'yyyy-MM-dd HH:mm');\n    if (this.showRule)\n      return this.showRule.convertDate(time) + defaultStr.slice(10);\n    else\n      return defaultStr;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef, Optional, Inject, ViewChildren, QueryList } from '@angular/core';\nimport { DateUtils, StringUtils, Language, MetaService, ProfileCodeService, InputExecutor, DefaultMetaParser, MetaColumn, MetaController } from '@allianzSND/core';\nimport { showRuleToken, DisplayMetaComponent } from '@allianzSND/core';\nimport { showRule } from '@allianzSND/core';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { customerDetailMetaControllerToken } from '../../injectionToken/injection-token';\n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.scss']\n})\nexport class CustomerDetailComponent extends DisplayMetaComponent implements OnInit {\n\n  @Output()\n  private onEditDetail: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onCallPhone: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onDeleteDetail: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onAddAppointment: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private followChange: EventEmitter<{ 'isFollow': boolean, 'clientID': string }> = new EventEmitter();\n\n\n\n\n  public DisplayData = null;\n  public readonly dash: string = '- -';\n\n  @Input()\n  get data() {\n    return this._data;\n  }\n  set data(value) {\n    this._data = value;\n    console.log(\"detail Set Data:\", value);\n    if (value && value.ClientID) {\n      this.waitUntilMetaLoaded().then(() => {\n        this.onDataUpdated();\n      })\n    }\n    else {\n      this._data = null;\n    }\n  }\n\n  protected getMetaID() {\n    return 'customerDetail';\n  }\n\n  protected getMetaParams() {\n    return null;\n  }\n\n  get rowMetaWithoutGroup(): Array<Array<MetaColumn>> {\n    return this.metaConfig.Rows.filter(x => x.map(y => y.type !== 'Group').reduce((acc, cur) => acc && cur, true));\n  };\n\n  get rowMetaGroup(): Array<MetaColumn> {\n    return this.metaConfig.Columns.filter(x => x.type === 'Group');\n  }\n\n  get followStatus() {\n    return this._data[\"IsFollow\"] === 'Y'\n  }\n\n\n  public language: Language = new Language();\n\n  // empty status\n  public isEmptyAppointment: boolean = false;\n  public isEmptyEdit: boolean = false;\n  public isEmptyDel: boolean = false;\n  public isEmptyDetailInfo: boolean = false;\n  public isEmptyGroupDetailInfo: boolean = false;\n  public isEmptyContactNote: boolean = false;\n  public isCollapseBtnShow: boolean = true;\n\n  // card2 extend template is null or not\n  public isCardExtendTemplateNull = true;\n  @ViewChildren('detailPostTemp') detailPostTemp: QueryList<any>;\n  //card2 collapse isOpen or not\n  public isCollapseOpen = false;\n\n  public get isHasAgeRange() {\n    return this._data && !!this._data[\"AgeRange\"];\n  }\n\n  public get isHasContactFrequancy() {\n    return this._data && !!this._data[\"ContactFrequancy\"];\n  }\n\n\n\n\n\n  constructor(\n    private dateUtils: DateUtils,\n    protected profileCodeService: ProfileCodeService,\n    private changeDetctor: ChangeDetectorRef,\n    protected metaService: MetaService,\n    private customerUtils: CustomerUtils,\n    inputExecutor: InputExecutor,\n    metaParser: DefaultMetaParser,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n    @Optional() @Inject(customerDetailMetaControllerToken) private customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, inputExecutor);\n  }\n  ngOnInit() {\n    console.log(\"customerDetail ngOninit!\");\n    super.ngOnInit();\n  }\n\n\n  onDataUpdated() {\n    console.log(\"customerDetail onDataUpdated!\", this._data);\n    super.onDataUpdated();\n\n    //check datasource is from OPUS\n    this.isEmptyDel = this._data.DataSource == 'OPUS';\n\n    this.convertEmptyValToDisplayText(this._data);\n    this.checkInfoIsEmpty();\n    this.changeCollateButton();\n\n    this.DisplayData = Object.assign({}, this._data);\n    if (this.customMetaController)\n      this.customMetaController.onDataUpdated(this._data);\n    this.changeDetctor.detectChanges();\n    console.log(\"after customerDetail onDataUpdated!\", this.DisplayData);\n  }\n\n\n\n\n  private changeCollateButton() {\n    console.log(\"changeCollateButton Meta:\", this.metaConfig);\n    this.isCollapseBtnShow = this.metaConfig.Columns.filter(x => x.type === \"Group\")\n      .map(x => this._data[x.id].length > (12 / x.grid.pc))\n      .reduce((acc, cur) => acc || cur, false);\n\n    console.debug('isCollapseBtnShow', this.isCollapseBtnShow);\n  }\n\n\n\n  private checkInfoIsEmpty() {\n    //if detail info is empty , display no data status    \n    this.isEmptyDetailInfo =\n      this.metaConfig.Columns.filter(x => x.type !== \"Group\")\n        .map(x => this._data[x.id] === null || this._data[x.id] === undefined || StringUtils.isEmpty(this._data[x.id]) || this._data[x.id] === this.dash)\n        .reduce((acc, cur) => acc && cur, true);\n\n    this.isEmptyGroupDetailInfo = this.metaConfig.Columns.filter(x => x.type === \"Group\")\n      .map(x => this._data[x.id].length === 0)\n      .reduce((acc, cur) => acc && cur, true);\n\n    console.log(\"isEmptyDetailInfo:\", this.isEmptyDetailInfo);\n    console.log(\"isEmptyGroupDetailInfo:\", this.isEmptyGroupDetailInfo);\n  }\n\n  private convertEmptyValToDisplayText(customerDetail: any) {\n    //if not data set default value(?? or -- --)\n    console.log(\"convertEmptyValToDisplayText: \", customerDetail);\n    customerDetail.AgeRange = this.profileCodeService.convertCode2Text(\"Customer_Age\", customerDetail.AgeRange);\n    customerDetail.ContactFrequancy = this.profileCodeService.convertCode2Text(\"Customer_ContactFrequancy\", customerDetail.ContactFrequancy);\n    customerDetail.showName = this.convertNameToShow(customerDetail.FirstName, customerDetail.LastName);\n    customerDetail.address.forEach(addr => {\n      addr[\"AddressDisplay\"] = this.toFullAddress(Object.assign({}, addr));\n    });\n    this.metaConfig.Columns.filter(x => x.type !== \"Group\").forEach(col => {\n      if (col.id === 'BirthdayDisplay')\n        customerDetail.BirthdayDisplay = StringUtils.isNotEmpty(customerDetail.Birthday) ? this.toBirthdayStr() : this.dash;\n      else\n        customerDetail[col.id] = StringUtils.isEmpty(customerDetail[col.id]) ? this.dash : customerDetail[col.id];\n    });\n  }\n\n  private toBirthdayStr() {\n\n    if (this._data.Birthday !== undefined) {\n      if (this.showRule) {\n        return this.showRule.convertDate(new Date(this._data.Birthday));\n      }\n      else {\n        return this.dateUtils.toDateString(new Date(this._data.Birthday), 'yyyy-MM-dd');\n      }\n    }\n  }\n\n  private toFullAddress(addressObj: any): string {\n    if (this.showRule)\n      return this.showRule.convertAddress(addressObj);\n    else {\n      let array = [];\n      if (StringUtils.isNotEmpty(addressObj.Country)) array.push(addressObj.Country);\n      if (StringUtils.isNotEmpty(addressObj.City)) array.push(addressObj.City);\n      if (StringUtils.isNotEmpty(addressObj.Area)) array.push(addressObj.Area);\n      if (StringUtils.isNotEmpty(addressObj.Zipcode)) array.push(addressObj.Zipcode);\n      if (StringUtils.isNotEmpty(addressObj.Address)) array.push(addressObj.Address);\n      return array.join(', ');\n    }\n  }\n\n  edit() {\n    this.onEditDetail.emit(this._data.ClientID);\n  }\n\n  delete() {\n    this.onDeleteDetail.emit(this._data.ClientID);\n  }\n\n  callPhone() {\n    this.onCallPhone.emit(this._data.ClientID);\n  }\n\n  addAppointment() {\n    this.onAddAppointment.emit(this._data.ClientID);\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n\n  isFollowChange(isFollow: boolean) {\n    console.debug('isFollowChange', isFollow);\n    // display new follow state first\n    this._data[\"IsFollow\"] = isFollow ? \"Y\" : \"N\";\n    this.changeDetctor.detectChanges();\n\n    //ouput follow detail change status\n    this.followChange.emit({ 'isFollow': isFollow, \"clientID\": this._data.ClientID });\n\n\n  }\n\n  private convertNameToShow(firstName: string, lastName: string): string {\n    return this.customerUtils.convertNameToShow(firstName, lastName);\n  }\n\n}\n","import { Observable, BehaviorSubject, Subject } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { CustomerItem } from \"../model/CustomerItem\";\nimport { CustomerFilterCriteria } from \"../../components/bean/customer-filter-criteria\";\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CustomerStoreService {\n\n    private _stateBehaviorSubject: Subject<any>;\n    private _detailBehaviorSubject: Subject<any>;\n    private _listBehaviorSubject: Subject<any>;\n    private _criteriaBehaviorSubject: Subject<any>;\n    private _detailIDSubject: Subject<any>;\n\n    private _customerState: CUSTOMER_STATE;\n    private _customerDetail: any;\n    private _customerList: Array<CustomerItem>;\n    private _customerCriteria: CustomerFilterCriteria\n\n    constructor(\n    ) {\n        this._customerState = CUSTOMER_STATE.DISPLAY;\n        this._customerDetail = {\n            ClientID: \"\"\n        };\n        this._customerList = [];\n        this._customerCriteria = new CustomerFilterCriteria();\n        this._stateBehaviorSubject = new BehaviorSubject(this._customerState);\n        this._detailBehaviorSubject = new BehaviorSubject(this._customerDetail);\n        this._listBehaviorSubject = new BehaviorSubject(this._customerList);\n        this._criteriaBehaviorSubject = new BehaviorSubject(this._customerCriteria);\n        this._detailIDSubject = new BehaviorSubject(this._customerDetail.ClientID);\n\n    }\n\n    setState(state: CUSTOMER_STATE): void {\n        this._customerState = state;\n        this._stateBehaviorSubject.next(this._customerState);\n\n    };\n\n    getState(): Observable<CUSTOMER_STATE> {\n        return this._stateBehaviorSubject;\n    };\n\n    setCurrentCustomerDetail(detail: any): void {\n        this._customerDetail = detail;\n        this._detailBehaviorSubject.next(this._customerDetail);\n        this._detailIDSubject.next(this._customerDetail.ClientID);\n    };\n\n    getCurrentCustomerDetail(): Observable<any> {\n        return this._detailBehaviorSubject;\n    };\n\n    setCustomerList(list: Array<CustomerItem>): void {\n        this._customerList = list;\n        this._listBehaviorSubject.next(this._customerList);\n    };\n\n    getCustomerList(): Observable<Array<CustomerItem>> {\n        return this._listBehaviorSubject;\n    };\n\n    setCriteria(criteria: CustomerFilterCriteria): void {\n        this._customerCriteria = criteria;\n        this._criteriaBehaviorSubject.next(this._customerCriteria);\n    };\n\n    getCriteria(): Observable<CustomerFilterCriteria> {\n        return this._criteriaBehaviorSubject;\n    };\n\n    getCustomerDetailID(): Observable<string> {\n        return this._detailIDSubject;\n    }\n}\n\nexport enum CUSTOMER_STATE {\n    IMPORT = 'import',\n    DISPLAY = 'display',\n    EDIT = 'edit',\n    ADD_SAVED = 'add saved',\n    EDIT_SAVED = 'edit saved',\n    FIRST = 'first'\n}","import { MetaController, ValidationResult } from \"@allianzSND/core\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DefaultCustomerEditMetaController implements MetaController {\n\n    onDataUpdated(data: any) {\n        if (data['tel']) {\n            data['notOPUSTel'] = data['tel'].filter(x => x.DataSource && x.DataSource !== 'OPUS');\n        }\n        console.log(\"Default controller onDataUpdated:\", data);\n    }\n\n    onValueChange(column: string, value: any, groupId: string, index: number, data: any, validationResult: ValidationResult) {\n        // if (column === 'Email') {\n        //     let isEmail = this.isEmailFormat(value);\n        //     if (!isEmail)\n        //         validationResult.setErrorMap(column + index.toString(), 'Wrong_Email');\n        //     else\n        //         validationResult.deleteError(column + index.toString());\n        // }\n    }\n\n    onValidateAll(data: any, validationResult: ValidationResult) {\n        data['tel'] = data['tel'].filter(x => x.dataSource && x.dataSource === 'OPUS').concat(data['notOPUSTel']);\n        if (data['email'] && data['email'].length > 0) {\n            data['email'].forEach((ele, index) => {\n                let isEmail = this.isEmailFormat(ele.Email);\n                if (!isEmail)\n                    validationResult.setErrorMap('Email' + index.toString(), 'Wrong_Email');\n                else\n                    validationResult.deleteError('Email' + index.toString());\n            });\n        }\n        return validationResult.isTrue();\n    }\n\n    btnClick(type: string, id: string, data: any) { }\n\n\n    private isEmailFormat(email) {\n        let regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n        return regexp.test(email);\n    }\n\n\n}","import { Component, OnInit, ElementRef, Output, AfterViewInit, ViewChild, EventEmitter, Optional, Inject, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { MetaService, showRuleToken, showRule, MetaController, AppRouter, FormMetaComponent, ProfileCodeService, DefaultMetaParser, APIExecutor, MetaColumn, TranslateService } from '@allianzSND/core';\nimport { Language, StringUtils } from '@allianzSND/core';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { CUSTOMER_STATE, CustomerStoreService } from '../../service/customerStore/customerStore-service';\nimport { customerEditMetaControllerToken, addProgressPointToken } from '../../injectionToken/injection-token';\nimport { DefaultCustomerEditMetaController } from './DefaultCustomerEditMetaController';\nimport { AddProgressPoint } from '../../interface/AddProgressPoint';\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: ['./customer-edit.component.scss']\n})\nexport class CustomerEditComponent extends FormMetaComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @Output() sendContentHeight = new EventEmitter();\n  public contentHeight;\n\n  @ViewChild('inpageMain') content: ElementRef;\n\n\n  private customerDetailSubscribe = null;\n  public customerDetail;\n  public pageTitle = 'Add_Profile';\n  public today = new Date();\n\n  public language: Language = new Language();\n\n  public disableAge: boolean = false;\n  public isDisplaySavePopup: boolean = false;\n  public isShow: boolean = false;\n\n  get data() {\n    return this._data;\n  }\n\n  get rowConfig(): Array<Array<MetaColumn>> {\n    return this.metaConfig.Rows;\n  }\n  get columnConfig(): Array<MetaColumn> {\n    return this.metaConfig.Columns;\n  }\n\n  get footerConfig(): Array<MetaColumn> {\n    return this.metaConfig.Footer;\n  }\n\n\n  private edit_type = \"add\";\n  private customerID = '';\n  private _metaController: MetaController;\n\n\n\n  constructor(\n    private customerUtils: CustomerUtils,\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    private router: AppRouter,\n    private translateService: TranslateService,\n    defaultMetaController: DefaultCustomerEditMetaController,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: APIExecutor,\n    @Optional() @Inject(customerEditMetaControllerToken) customMetaController: MetaController,\n    private customerStoreService: CustomerStoreService,\n    protected metaService: MetaService,\n    @Optional() @Inject(addProgressPointToken) private addProgressPoint: AddProgressPoint\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n    this._metaController = customMetaController ? customMetaController : defaultMetaController;\n  }\n\n  ngOnInit() {\n    this.customerDetailSubscribe = this.customerStoreService.getCustomerDetailID().subscribe((customerID: string) => {\n      console.log(\"customerID:\", customerID);\n      this.customerID = customerID;\n      super.ngOnInit();\n      if (StringUtils.isEmpty(customerID)) {\n        //ADD\n        this.edit_type = \"add\";\n      }\n      else {\n        //Edit\n        this.edit_type = \"edit\";\n      }\n    })\n\n  }\n\n  ngOnDestroy() {\n    if (this.customerDetailSubscribe)\n      this.customerDetailSubscribe.unsubscribe();\n  }\n\n  public btnClick(type: string, id: string) {\n    console.log(\"BTN CLICK!\", type, id);\n    if (type === 'submit') {\n      if (this.validationResult.isTrue()) {\n        this.customerStoreService.setCurrentCustomerDetail(this._data);\n        let state = this.edit_type == \"add\" ? CUSTOMER_STATE.ADD_SAVED : CUSTOMER_STATE.EDIT_SAVED;\n        this.customerStoreService.setState(state);\n        //offline add progress point\n        console.log(\"customer addProgressPoint\", this.addProgressPoint);\n        if (this.addProgressPoint && this.edit_type == \"add\") {\n          this.addProgressPoint.addCustomerPoint(1);\n        }\n        this.router.navigate(\"Customers\");\n      }\n    }\n    this._metaController.btnClick(type, id, this._data);\n  }\n\n  public getMetaID() {\n    return 'customerEdit';\n  }\n\n  public getMetaParams() {\n    return {\n      id: this.customerID\n    }\n  }\n\n  public onValueChange(column: string, value: any, groupId: string, index: number) {\n    //Trigger other column values\n    if (column === 'Birthday') {\n      this.countAgeRange(value);\n    }\n    this._metaController.onValueChange(column, value, groupId, index, this._data, this.validationResult);\n  }\n\n  public onDataUpdated() {\n    super.onDataUpdated();\n    console.log(\"onDataUpdated!\");\n    console.log(\"data:\", this._data);\n    console.log(\"stringify:\", JSON.stringify(this._data));\n    if (this.edit_type === 'add') {\n      this.pageTitle = this.translateService.translate(this.language.addProfile);\n      this.disableAge = false;\n    }\n    else if (this.edit_type === 'edit') {\n      this.pageTitle = this.convertNameToShow(this._data.FirstName, this._data.LastName);\n      this.disableAge = StringUtils.isNotEmpty(this._data.Birthday);\n      // this.Data.AgeRange = this.disableAge ? this.Data.AgeRange : undefined;\n    }\n    this.isShow = true;\n    this._metaController.onDataUpdated(this._data);\n  }\n\n  public onValidateAll(): boolean {\n    let completeness = this.customerUtils.countCompleteness(this._data);\n    this._data.Completeness = Math.round(completeness * 100) / 100;\n    console.log(\"Calculate Completeness:\", this._data.Completeness);\n    // if (!this.validationResult.isTrue()) {\n    //   //If basic validation has error.\n    //   setTimeout(() => {\n    //     this.scrollToError();\n    //   }, 200);\n    //   return false;\n    // }\n    // else {\n    //   //Do custom validation.\n    //   let result = true;\n    //   result = result && this._metaController.onValidateAll(this._data, this.validationResult);\n    //   return result;\n    // }\n\n    let result = this._metaController.onValidateAll(this._data, this.validationResult) && this.validationResult.isTrue();\n    if (!result) {\n      setTimeout(() => {\n        this.scrollToError();\n      }, 200);\n    }\n\n    return result;\n  }\n\n  ngAfterViewInit() {\n    //ç²å¾å§å®¹é«\n    setTimeout(() => {\n      this.contentHeight = this.content.nativeElement.offsetHeight;\n      console.log('ele Height:', this.contentHeight)\n    }, 600);\n\n    this.sendContentHeight.emit(this.contentHeight);\n\n  }\n\n  private countAgeRange(birthday) {\n\n    if (StringUtils.isEmpty(birthday)) {\n      this._data.AgeRange = undefined;\n      this.disableAge = false;\n    }\n    else {\n      let age = this.customerUtils.countAge(birthday);\n      let ageRange = this.customerUtils.countAgeRange(age);\n      console.debug('ageRange', ageRange);\n\n      if (ageRange != undefined) {\n        this._data.AgeRange = ageRange;\n        this.disableAge = true;\n      }\n    }\n    console.log(\"this.data in countAgeRange:\", this._data);\n    this.changeDetector.detectChanges();\n  }\n\n  private scrollToError() {\n    console.log('scrollToError');\n    let errorBlock = this.elementRef.nativeElement.querySelector('.error-msg');\n    let scrollContent = this.elementRef.nativeElement.querySelector('.form-scroll-content');\n    console.log('scroll error:', scrollContent, 'errorBlock', errorBlock);\n    if (errorBlock && scrollContent) {\n\n      let move = errorBlock.offsetTop;\n      // let move = 50;\n      console.log('scrollToError errorBlock.offsetTop', errorBlock.offsetTop, 'move', move)\n      scrollContent.scrollTo({ top: move, behavior: \"smooth\" });\n    }\n  }\n\n  private convertNameToShow(firstName: string, lastName: string): string {\n    return this.customerUtils.convertNameToShow(firstName, lastName);\n  }\n\n}\n","import { Component, OnInit, Output, Input, EventEmitter, Optional, Inject, OnDestroy } from '@angular/core';\nimport { MetaService, Language, MetaController, FormMetaComponent, ProfileCodeService, DefaultMetaParser, InputExecutor, MetaColumn } from '@allianzSND/core';\nimport { CustomerFilterCriteria } from '../bean/customer-filter-criteria';\nimport { Subject } from 'rxjs';\nimport { customerFilterMetaControllerToken } from '../../injectionToken/injection-token';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-customer-filter',\n  templateUrl: './customer-filter.component.html',\n  styleUrls: ['./customer-filter.component.scss']\n})\nexport class CustomerFilterComponent extends FormMetaComponent implements OnInit, OnDestroy {\n\n\n\n\n  //subject to subscribe for open & save & clear\n  @Input()\n  public clear: Subject<any>;\n\n  @Input()\n  public save: Subject<any>;\n\n  @Input()\n  public open: Subject<any>;\n\n\n\n  //Input criteria\n  private _criteria = new CustomerFilterCriteria();\n  @Input()\n  get criteria() {\n    return this._criteria;\n  }\n\n  set criteria(criteria: CustomerFilterCriteria) {\n    console.log(\"set criteria:\", criteria);\n    console.log(\"PresetJson:\", criteria.toMetaJSON());\n    this._data = this.convertCriteriaToObject(criteria);\n    this.waitUntilMetaLoaded().then(() => {\n      console.log(\"this.metaConfig:\", this.metaConfig);\n      this.onDataUpdated();\n    })\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get columnConfig(): Array<MetaColumn> {\n    return this.metaConfig.Columns;\n  }\n\n  get footerConfig(): Array<MetaColumn> {\n    return this.metaConfig.Footer;\n  }\n\n\n  @Output()\n  private doneCriteria: EventEmitter<CustomerFilterCriteria> = new EventEmitter();\n\n\n\n\n  constructor(\n    protected metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: InputExecutor,\n    @Optional() @Inject(customerFilterMetaControllerToken) private customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n  }\n\n  public language: Language = new Language();\n  private unsubscribe$: Subject<void> = new Subject();\n\n  getMetaParams() {\n    return null;\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.clear) {\n      this.clear\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(() => {\n          this.clearCriteria();\n        })\n    }\n\n    if (this.save) {\n      this.save\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(() => {\n          this.saveCriteria();\n        })\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  btnClick(type: string, id: string) {\n    if (this.customMetaController) {\n      this.customMetaController.btnClick(type, id, this._data);\n    }\n  }\n\n\n  onValidateAll() {\n    if (this.customMetaController)\n      return this.customMetaController.onValidateAll(this._data, this.validationResult);\n    else\n      return true;\n  }\n\n  onValueChange(column: string, value: any, groupId = null, index = -1) {\n    if (this.customMetaController) {\n      this.customMetaController.onValueChange(column, value, groupId, index, this._data, this.validationResult);\n    }\n    else {\n      if (Array.isArray(this._data[column])) {\n        if (this._data[column].indexOf(value) > -1) {\n          this._data[column] = this._data[column].filter(x => x !== value);\n        }\n        else {\n          this._data[column] = [...this._data[column], value];\n        }\n\n        this._data[\"AsPreset\"] = false;\n      }\n      else {\n        this._data[column] = value;\n      }\n    }\n    console.log(\"this.Data:\", this._data);\n  }\n\n  getMetaID() {\n    return 'customerFilter'\n  }\n\n  onDataUpdated() {\n    super.onDataUpdated();\n    this.fillDefaultVal();\n    console.log(\"Filter Data Updated:\", this._data);\n    if (this.customMetaController) {\n      this.customMetaController.onDataUpdated(this._data);\n    }\n  }\n\n  getCheckboxValue(column: string, value: string): boolean {\n    return this._data[column] && this._data[column].indexOf(value) > -1;\n  }\n\n\n  private fillDefaultVal() {\n    this._data = Object.assign(this.getDefaultData(), this._data);\n  }\n\n  private getDefaultData() {\n    let defaultObj = this.metaConfig.Columns.map(x => x.id).reduce((acc, cur) => {\n      acc[cur] = [];\n      return acc;\n    }, {});\n    let footerObj = this.metaConfig.Footer.filter(x => x.type === 'Checkbox').map(x => x.id).reduce((acc, cur) => {\n      acc[cur] = false;\n      return acc;\n    }, {});\n    return Object.assign(defaultObj, footerObj);\n  }\n\n  private clearCriteria() {\n    this._data = Object.assign(this._data, this.getDefaultData());\n  }\n\n\n  private saveCriteria() {\n    this.doneCriteria.emit(this.convertToCriteria());\n  }\n\n\n  private convertCriteriaToObject(criteria: CustomerFilterCriteria): any {\n    return Object.assign({}, criteria.toMetaJSON());\n  }\n\n  private convertToCriteria() {\n    let criteria = new CustomerFilterCriteria();\n    this.metaConfig.Columns.map(x => x.id).forEach(colID => {\n      if (this._data[colID].length > 0)\n        criteria.addCriteriaCols(colID, this._data[colID]);\n    });\n    this.metaConfig.Footer.map(x => x.id).forEach(colID => {\n      criteria.setOption(colID, this._data[colID]);\n    });\n\n    return criteria;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, Optional, Inject } from '@angular/core';\nimport { ContactItem, Language, showRuleToken, showRule } from '@allianzSND/core';\nimport { CustomerImportGroup } from '../bean/customer-import-group';\n\n@Component({\n  selector: 'app-customer-import',\n  templateUrl: './customer-import.component.html',\n  styleUrls: ['./customer-import.component.scss']\n})\nexport class CustomerImportComponent implements OnInit {\n\n  @Input()\n  public importContractMap = new Map<string, CustomerImportGroup>();\n\n  @Output()\n  private importCustomer: EventEmitter<Array<ContactItem>> = new EventEmitter();\n\n\n  public language: Language = new Language();\n\n  constructor(\n    @Optional() @Inject(showRuleToken) private showRule: showRule\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n\n  doImport() {\n\n    let importItems: Array<ContactItem> = new Array<ContactItem>();\n\n    this.importContractMap.forEach((group: CustomerImportGroup, groupName: string) => {\n      group.getItems.forEach((item: ContactItem) => {\n        console.debug(item);\n        if (item.isCheck) {\n          importItems.push(item);\n        }\n      })\n    });\n\n    this.importCustomer.emit(importItems);\n  }\n\n  toDisplayName(firstname: string, lastname: string) {\n    if (this.showRule)\n      return this.showRule.convertName(firstname, lastname);\n    else\n      return `${lastname} ${firstname}`;\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectorRef, ElementRef, Inject, Optional, Injectable, ViewChild, AfterViewInit } from '@angular/core';\nimport { StringUtils, Language } from '@allianzSND/core';\nimport { CustomerItem } from '../../service/model/CustomerItem';\nimport { CustomerUtils } from '../../utils/customer-utils';\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\nexport class CustomerListComponent implements OnInit, AfterViewInit {\n\n\n  public loadingFinish: boolean = true;\n  public refreshFinish: boolean = true;\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private customerUtils: CustomerUtils\n  ) { }\n\n  @Output()\n  public customerClick: EventEmitter<CustomerItem> = new EventEmitter();\n\n  @Output()\n  public customerLoad: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public customerRefresh: EventEmitter<any> = new EventEmitter();\n\n  @Input()\n  get customerList() { return this._customerList; }\n  set customerList(customerList: Array<CustomerItem>) {\n\n    this._customerList = customerList;\n    this.loadingFinish = true;\n    this.refreshFinish = true;\n  }\n  private _customerList: Array<CustomerItem> = [];\n\n  @Input()\n  get filterType() { return this._filterType; }\n  set filterType(filterType) {\n    this._filterType = filterType;\n  }\n  private _filterType;\n\n  public language: Language = new Language();\n\n  private _onClickCustomerID;\n  @Input()\n  get onClickCustomerID() {\n    return this._onClickCustomerID;\n  }\n  set onClickCustomerID(onClickCustomerID) {\n    this._onClickCustomerID = onClickCustomerID;\n  }\n\n  //Is Default Data(No Search Status)\n  public get isDefaultData() {\n    return this.customerList.length == 0 && StringUtils.isNotEmpty(this.filterType) && this.filterType == 'NONE';\n  }\n\n  public get showSearchNoData() {\n    return this.customerList.length == 0 && StringUtils.isNotEmpty(this.filterType) && this.filterType == 'SEARCH';\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n  }\n\n\n  trackByClientID(index, item) {\n    return item.clientID;\n  }\n\n\n\n  async closeSlidingItems() {\n    console.debug('list closeSlidingItems');\n\n    const item = this.elementRef.nativeElement.querySelector('ion-item-sliding');\n    if (item != null) {\n      /// console.debug('item size',item.length);\n      console.debug('item', item);\n      await item.close();\n      await item.closeOpened();\n    }\n\n  }\n\n  onClickCustomer(clientID: string) {\n\n    this._onClickCustomerID = clientID;\n\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 300);\n\n    let item = this.customerList.filter(item => item.clientID == clientID);\n\n    this.customerClick.emit(item[0]);\n  }\n\n\n  loadCustomer(e) {\n    console.log('lazy load customer:', e);\n    //Settimeout to animate loader\n    setTimeout(() => {\n      this.customerLoad.emit();\n    }, 800);\n\n  }\n\n  refreshCustomer() {\n    //set timeout for refresh animation\n    setTimeout(() => {\n      this.customerRefresh.emit();\n    }, 800);\n  }\n\n  convertNameToShow(customerItem: CustomerItem): string {\n    return this.customerUtils.convertNameToShow(customerItem.firstName, customerItem.lastName);\n  }\n}\n","import { ContactItem } from \"@allianzSND/core\";\n\nexport class CustomerImportGroup {\n    private _groupName : string;\n    private _isShow : boolean = true;\n    private _items : Array<ContactItem> = new Array<ContactItem>();\n\n    constructor(groupName : string) {\n        this._groupName = groupName;\n    }\n\n    public addItem(item : ContactItem) {\n        this._items.push(item);\n    }\n\n    public get getItems() {\n        return this._items;\n    }\n\n    public get groupName() {\n        return this._groupName;\n    }\n\n    public set groupName(groupName : string) {\n        this._groupName = groupName;\n    }\n\n    public get isShow() {\n        return this._isShow;\n    }\n\n    public set isShow(isShow : boolean) {\n        this._isShow = isShow;\n    }\n\n}","import { Injectable, Optional, Inject } from '@angular/core';\nimport { CustomerImportDisplay } from '../../interface/CustomerImportDisplay';\nimport { customerImportDisplayToken } from '../../injectionToken/injection-token';\nimport { StringUtils } from '@allianzSND/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DefaultCustomerImportDisplay implements CustomerImportDisplay {\n\n    constructor(\n        @Optional() @Inject(customerImportDisplayToken) private customImportDisplay: CustomerImportDisplay\n    ) { }\n\n    convert(customer: any) {\n        if (this.customImportDisplay)\n            return this.customImportDisplay.convert(customer);\n        else {\n            if (StringUtils.isEmpty(customer.LastName)) {\n                customer.LastName = customer.FirstName;\n                customer.FirstName = '';\n            }\n            return customer;\n        }\n    }\n}","import { Component, OnInit, ViewChild, Optional, Inject, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { trigger, state, style, animate, transition, } from '@angular/animations';\nimport { Language, StringUtils, DateUtils, PageInfo, DeviceService, ProfileCode, ProfileCodeService, TranslateService, ContactItem, ExtDataProcess, DataSyncService, showRuleToken, showRule, NotificationMgr, NotificationObject, ConfigToken, AppRouter, NotificationType } from '@allianzSND/core';\nimport { CalendarService } from '../../../calendar/service/calendar-service.service';\nimport { CalendarEventDetail } from '../../../calendar/service/model/CalendarEventDetail';\nimport { CalendarEditComponent } from '../../../calendar/components/calendar-edit/calendar-edit.component';\nimport { CustomerService } from '../../service/customer-service.service';\nimport { CustomerTel } from '../../service/model/CustomerTel';\nimport { CustomerFilterCriteria } from '../bean/customer-filter-criteria';\nimport { CustomerAlertItem } from '../../service/model/CustomerAlertItem';\nimport { CustomerItem } from '../../service/model/CustomerItem';\nimport { CustomerImportGroup } from '../bean/customer-import-group';\nimport { addDays, addHours, addMinutes, getDate, getHours, getMinutes, getMonth, getYear, subMinutes } from 'date-fns';\nimport { CUSTOMER_STATE } from '../../service/customerStore/customerStore-service';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { Subject, Observable } from 'rxjs';\nimport { CustomerStoreService } from '../../service/customerStore/customerStore-service';\nimport { DefaultCustomerImportDisplay } from './DefaultCustomerImportDisplay';\nimport { addProgressPointToken, customerShowRuleToken } from '../../injectionToken/injection-token';\nimport { AddProgressPoint } from '../../interface/AddProgressPoint';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { CustomerShowRule } from '../../interface/CustomerShowRule';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n  animations: [\n    trigger('searchBlockAni', [\n      state('*', style({\n        width: '0',\n        opacity: 0\n      })),\n      state('open', style({\n        width: '100%',\n        opacity: 1\n      })),\n      state('closed', style({\n        width: '0',\n        opacity: 0\n      })),\n      transition('open => closed', animate('300ms ease-in')),\n      transition('closed => open', animate('300ms ease-in'))\n    ]),\n  ]\n})\nexport class CustomersComponent implements OnInit, OnDestroy {\n\n  //intergration Calendar Module\n  @ViewChild(CalendarEditComponent) calendarEditComponent;\n  public viewTypeIndex = 2; // 'month'\n  public viewType: string;\n  public viewDate = new Date();\n  public weekStartsOn = 1; // Monday \n  public isShowDetailScroll: boolean = true;\n\n\n\n  // control mobile show\n  public isShow = false;\n\n  //use to force refresh customerList\n  public showCustomerList = true;\n\n  // popup\n  public isExpandDetail = false;\n  public isRefreshDetail = false;\n  public isSaveClick = false;\n\n  public language: Language = new Language();\n\n  //å®¢æ¶æ¸å®çsearch block animate\n  public isOpen: boolean = false;\n  public classSearch: string = '';\n\n  //popup control\n  public isDisplayImportSavePopup = false; //import popup\n  public isDisplaySavePopup = false; //save popup\n  public isDisplayDelCustomerPopup = false; //delete customer popup\n  public isDisplayConfirmAlertPopup = false; //confirm alert popup\n  public isDisplayInfoAlertPopup = false; //info alert popup\n  public isDisplayUpdateRemind = false; //alert customer over 6 month popup\n  public isDisplayDeleteRemind = false; //alert customer over 6 month & 7day popup\n  public isPopupImport = false; //import popup\n  public isPopupFilter = false; //filter popup\n  public isExpandEdit = false; // appointment popup\n  public isPopupCallPhone = false; //call customer phone popup\n  public isPopupNoteDetail = false; //contact detail popup\n  public isPopupEditNote = false; //add/edit contact note popup\n  public isPopupDeleteNote = false; //delete contact note popup\n  public isPopupConfirmDisable = true; // confirmPopup btn is disable default\n  public isDisplayDeletePopup = false; //delete success popup\n  public isCalendarEditMetaDataDone: boolean = false;\n\n  //control overtime customer list\n  public alertOverTimeList = new Array<CustomerAlertItem>();\n\n  //control auto delete customer list\n  public alertAutoDeleteCustomer = new Array<CustomerAlertItem>();\n\n  //control refresh  content\n  public isLoadingFinishContent: boolean = false;\n  public isRefreshFinishContent: boolean = true;\n\n  //control\n  public isLazyLoading: boolean = true;\n\n  //intergration customer-detail used\n  //call phone obj\n  public callPhoneTelArray: Array<CustomerTel>;\n\n  //intergration customer-contact-list used\n  //customer contact detail obj\n  public customerContactDetail: any = null;\n  public customerContactList: Array<any> = [];\n  public contactListPageInfo = new PageInfo();\n\n  public calendarEventDetail: CalendarEventDetail;\n  public viewDateCalendarEventList: Array<CalendarEventDetail> = [];\n\n  get customerClientID() {\n    if (this.customerDetail && this.customerDetail.ClientID)\n      return this.customerDetail.ClientID;\n    else\n      return '';\n  }\n\n  //intergration customer-list\n  public customerList = new Array<CustomerItem>();\n  public clickItem: CustomerItem;\n  public customerListPageInfo = new PageInfo();\n  private _filterCriteria = new CustomerFilterCriteria();\n\n  public get filterCriteria() {\n    return this._filterCriteria;\n  }\n  public set filterCriteria(value) {\n    this._filterCriteria = value;\n  }\n  public filterType = 'NONE';\n\n  public optionMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public translateMap: Map<string, string> = new Map<string, string>();\n\n  private dayTypesList: Array<string> = ['Cross_Day', 'All_Day'];\n  private noSchedule: string = 'No_Schedule';\n\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public alertTypeList: Array<ProfileCode> = [];\n\n\n  //intergration customer-import\n  public importContractMap = new Map<string, CustomerImportGroup>();\n  public mobileResultSize: number = 0;\n  public importData: boolean = false;\n  public importContactList: Array<ContactItem> = [];\n  public importSearchKeyword: string = '';\n\n  //filter customer attribute\n  public isLoadCriteria: boolean = false;\n  public isClearCriteria: boolean = false;\n\n  //import result(success | fail);\n  public _onImportResult: boolean = false;\n\n\n  //intergration customer-edit used\n  //add/edit contact note attribute\n  public currentEditNote: any = null;\n  public isRefreshContactList: boolean = false;\n  public loadContactList: boolean = false;\n\n\n\n  // search animate in filter\n  public classBarMove: string = '';\n\n  //intergration customer-detail used\n  public customerDetail: any = null;\n\n  private emptyCustomer: any = {\n    ClientID: ''\n  };\n\n  //current edit customer Id\n  public currentCustomer: any = this.emptyCustomer;\n\n\n\n  public get needConfirmPopup() {\n    let env = this.APP_CONFIG[\"ENV\"];\n    return this.APP_CONFIG && !!this.APP_CONFIG[env][\"CUSTOMER_ADD_ANNOUNCE\"];\n  }\n\n  private confirmAction = null;\n\n\n  // current customer state\n  private customerState: CUSTOMER_STATE = CUSTOMER_STATE.FIRST;\n\n  //pre saved criteria\n  private pre_criteria: CustomerFilterCriteria = new CustomerFilterCriteria();\n\n  //pre saved customerlist\n  private pre_customerList: Array<CustomerItem>;\n\n  //subscribe of store\n  private unsubscribe$: Subject<void> = new Subject();\n\n  //subject of clear & save filter\n  public clearSubject = new Subject();\n  public saveFilterSubject = new Subject();\n  public contactSaveSubject = new Subject();\n\n\n  //for extension used\n\n  constructor(private customerService: CustomerService,\n    private calendarService: CalendarService,\n    private translateService: TranslateService,\n    private deviceService: DeviceService,\n    private dateUtils: DateUtils,\n    private profileCodeService: ProfileCodeService,\n    private customerUtils: CustomerUtils,\n    private router: AppRouter,\n    private customerStoreService: CustomerStoreService,\n    private customerImportDisplay: DefaultCustomerImportDisplay,\n    private notificationMgr: NotificationMgr,\n    private changeDetector: ChangeDetectorRef,\n    @Optional() @Inject(ConfigToken) private APP_CONFIG: any,\n    @Optional() @Inject(showRuleToken) private showRule: showRule,\n    @Optional() @Inject(customerShowRuleToken) private customerShowRule: CustomerShowRule,\n    @Optional() @Inject(addProgressPointToken) private addProgressPoint: AddProgressPoint\n\n  ) {\n\n  }\n\n  ngOnDestroy() {\n    console.log(\"customer ngOnDestroy!\");\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n\n  ngOnInit() {\n    console.log(\"customer ngOninit!\");\n    this.contactListPageInfo.pageSize = 5;\n    this.activityTypeList = this.profileCodeService.getCodeArray('Calendar_Type');\n    this.alertTypeList = this.profileCodeService.getCodeArray('Calendar_RemindTime');\n    this.optionMap.set('Calendar_Type', this.activityTypeList);\n    this.optionMap.set('Calendar_RemindTime', this.alertTypeList);\n\n    this.dayTypesList.forEach((dayType) => {\n      this.translateMap.set(dayType, this.translateService.translate(dayType))\n    });\n    this.translateMap.set(this.noSchedule, this.translateService.translate(this.noSchedule));\n\n\n    this.customerStoreService.getCriteria()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((criteria) => {\n        this.pre_criteria = criteria;\n      })\n\n    this.customerStoreService.getCurrentCustomerDetail()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(detail => {\n        console.log(\"customer onsubscribe currentCustomerDetail:\", detail);\n        this.currentCustomer = detail;\n      });\n\n    this.customerStoreService.getCustomerList()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(list => {\n        this.pre_customerList = list;\n      })\n\n    this.customerStoreService.getState()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(async (state) => {\n\n        console.log(\"main state: \", state);\n        if (state == CUSTOMER_STATE.EDIT_SAVED && this.customerState != CUSTOMER_STATE.EDIT_SAVED) {\n\n          //after saved, check if current ID in criteria\n          console.log(\"state == CUSTOMER_STATE.EDIT_SAVED\");\n          console.log(\"currentCustomer: \", this.currentCustomer);\n          this.isDisplaySavePopup = true;\n          this.customerList = this.pre_customerList;\n          this.filterCriteria = this.pre_criteria;\n          let hasCriteria = this.pre_criteria.hasCriteria();\n          let inCriteria = false;\n          if (hasCriteria)\n            inCriteria = await this.customerService.checkInFilterCriteria(this.currentCustomer.ClientID, this.pre_criteria).toPromise();\n\n          this.customerList.forEach(item => {\n            if (item.clientID == this.currentCustomer.ClientID) {\n              item.firstName = this.currentCustomer.FirstName;\n              item.lastName = this.currentCustomer.LastName;\n              item.tag = this.currentCustomer.Possibility;\n              item.complementPercent = this.currentCustomer.Completeness;\n              if (hasCriteria)\n                item.isHighLight = !inCriteria;\n            }\n          });\n          this.customerList = [...this.sortCustomerList(this.customerList)];\n          if (hasCriteria)\n            this.customerStoreService.setCustomerList(this.customerList);\n\n\n          await this.onGetCustomerDetailByID(this.currentCustomer.ClientID);\n          this.refreshContactNote(false);\n        }\n        else if (state == CUSTOMER_STATE.EDIT && this.customerState != CUSTOMER_STATE.EDIT && this.customerState == CUSTOMER_STATE.FIRST) {\n          // edit/click page click last page\n\n          this.customerList = this.pre_customerList;\n          this.filterCriteria = this.pre_criteria;\n          if (!StringUtils.isEmpty(this.currentCustomer.ClientID)) {\n            await this.onGetCustomerDetailByID(this.currentCustomer.ClientID);\n          }\n          this.refreshCustomerList(false);\n        }\n        else if (this.customerState == CUSTOMER_STATE.FIRST && state == CUSTOMER_STATE.DISPLAY) {\n          //firt in, fetch preset filter\n          console.log(\"this.customerState == CUSTOMER_STATE.FIRST && state == CUSTOMER_STATE.DISPLAY\");\n          await this.loadPresetCriteria();\n          this.refreshCustomerList(false);\n        }\n        else if (state == CUSTOMER_STATE.ADD_SAVED) {\n\n          //after add , get pre_criteria && refresh customerlist\n          console.log(\"state == CUSTOMER_STATE.ADD_SAVED\", this.currentCustomer);\n          this.isDisplaySavePopup = true;\n          this.filterCriteria = this.pre_criteria;\n          this.refreshCustomerList(false, this.currentCustomer.ClientID);\n        }\n        else if (state == CUSTOMER_STATE.IMPORT) {\n          this.importPopup();\n        }\n\n        if (this.customerState != state) {\n          this.customerState = state;\n          this.customerStoreService.setState(CUSTOMER_STATE.DISPLAY);\n        }\n      })\n    this.customerStoreService.setState(CUSTOMER_STATE.DISPLAY);\n\n    this.refreshContactNote(false);\n\n\n    this.notificationMgr.showCategoryMessage(\"Customer\");\n  }\n\n\n  async refreshCustomerList(isAppend: boolean, clientID = '') {\n    console.debug('refreshCustomerList append', isAppend, clientID);\n    console.debug(this.filterCriteria);\n    console.debug(this.customerListPageInfo);\n\n    //fetch customer-list data\n    if (!isAppend) this.customerListPageInfo.resetPage();\n\n    let data = await this.customerService.getCustomerList(this.filterCriteria, this.customerListPageInfo).pipe(take(1)).toPromise();\n    console.log(\"data in criteria: \", data);\n    if (!isAppend) this.customerList = [...data];\n    else this.customerList = [...this.customerList, ...data];\n\n    if ((!this.filterCriteria.hasCriteria())) {\n      this.filterType = 'NONE';\n    }\n    else {\n      this.filterType = StringUtils.isNotEmpty(this.filterCriteria.keyword) ? 'SEARCH' : 'FILTER';\n    }\n    console.log(\"refreshCustomerList filterType:\", this.filterType);\n\n    this.customerList = [...this.sortCustomerList(this.customerList)];\n    this.customerStoreService.setCustomerList(this.customerList);\n\n\n\n    if (this.customerList.length > 0) {\n      let clickItemFilter = this.customerList.filter(x => x.clientID === clientID);\n      let targetClientID = clickItemFilter.length > 0 ? clientID : this.customerList[0].clientID;\n      await this.onGetCustomerDetailByID(targetClientID);\n      this.refreshContactNote(false);\n    }\n    else {\n      this.customerDetail = this.emptyCustomer;\n      this.customerStoreService.setCurrentCustomerDetail(this.customerDetail);\n    }\n\n\n  }\n\n  /* integration contact-list */\n  private async refreshContactNote(isAppend: boolean) {\n\n    if (this.customerClientID) {\n      //if append data will next page\n      if (!isAppend) this.contactListPageInfo.resetPage();\n\n      let data = await this.customerService.getCustomerContactNote(this.customerDetail.ClientID, this.contactListPageInfo).toPromise();\n      if (isAppend)\n        this.customerContactList = this.customerContactList.concat(data);\n      else\n        this.customerContactList = data;\n\n      console.debug('refreshContactNote success isRefreshContactList status');\n    }\n\n  }\n\n  private sortCustomerList(list: Array<CustomerItem>): Array<CustomerItem> {\n\n    if (this.customerShowRule) {\n      return this.customerShowRule.sortCustomerList(list);\n    }\n\n    else {\n      return list.map(x => x.clone()).sort((n1, n2) => {\n        let n1_name = StringUtils.isEmpty(n1.lastName) ? '' : n1.lastName;\n        let n2_name = StringUtils.isEmpty(n2.lastName) ? '' : n2.lastName;\n        return n1_name.localeCompare(n2_name);\n      });\n    }\n  }\n\n\n\n  onGetCustomerContactListByID(clientID) {\n    this.customerService.getCustomerContactNote(clientID, this.contactListPageInfo)\n      .subscribe(data => {\n        this.customerContactList = data;\n      });\n  }\n\n  async onGetCustomerDetailByID(clientID) {\n    console.log(\"onGetCustomerDetailByID clientID:\", clientID);\n    let data = await this.customerService.getCustomerDetail(clientID).toPromise();\n    console.log(\"onGetCustomerDetailByID data:\", data);\n    this.customerDetail = data;\n    this.customerStoreService.setCurrentCustomerDetail(data);\n  }\n\n  toggleSearch() {\n    this.isOpen = !this.isOpen;\n    this.classSearch = this.isOpen ? ' active' : ''\n    if (!this.isOpen) {\n      // this.filterCriteria = new CustomerFilterCriteria();\n      this.filterCriteria.keyword = '';\n      this.customerStoreService.setCriteria(this.filterCriteria);\n\n      this.refreshCustomerList(false);\n    }\n\n  }\n\n  // search keypress\n  searchCustomerName(name) {\n    console.debug('searchCustomerName', name);\n\n    this.filterCriteria.keyword = name;\n    this.customerStoreService.setCriteria(this.filterCriteria);\n    this.refreshCustomerList(false);\n\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n\n  //when customer-list click get click Item\n  async onChangeCustomer(customerItem: CustomerItem) {\n\n    this.clickItem = customerItem;\n\n\n\n    //get CustomerDetail\n    await this.onGetCustomerDetailByID(customerItem.clientID);\n    this.refreshContactNote(false);\n    this.isShow = true;\n\n  }\n\n  //when customer-list fetch next record\n  onCustomerLoad() {\n    this.customerListPageInfo.nextPage();\n\n    this.refreshCustomerList(true);\n  }\n\n  //when customer-list sync data to backend\n  onCustomerRefresh() {\n    this.refreshCustomerList(false, this.customerClientID);\n  }\n\n  deleteCustomer(customerClientID: string) {\n    this.isDisplayDelCustomerPopup = true;\n  }\n\n  async doDeleteCustomer() {\n    let _clientID = this.customerDetail.ClientID;\n    this.customerList = this.customerList.filter(x => x.clientID != this.customerDetail.ClientID);\n    if (this.customerList.length === 0) {\n      this.customerDetail = this.emptyCustomer;\n      this.customerStoreService.setCurrentCustomerDetail(this.customerDetail);\n    }\n    else {\n      await this.onGetCustomerDetailByID(this.customerList[0].clientID)\n      this.refreshContactNote(false);\n    }\n\n    let data = await this.customerService.deleteCustomerProfile(_clientID).toPromise();\n    console.log(\"customerService.doDeleteCustomer()\", data);\n\n    if (data.status) {\n\n      this.customerStoreService.setCustomerList(this.customerList);\n\n      this.isShow = false;\n      this.isDisplayDeletePopup = true;\n    }\n  }\n\n  addAppointment(customerClientID: string) {\n    let currentTime; // adjust time to next interval\n    currentTime = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), getHours(new Date()), getMinutes(new Date()));\n    currentTime = addMinutes(currentTime, (5 - getMinutes(currentTime) % 5));  // adjust minutes to next 5 minutes\n    currentTime = addHours(currentTime, 1);\n    this.calendarEventDetail = new CalendarEventDetail('', '', customerClientID, '', '', null, 'N', currentTime, addMinutes(currentTime, 15), 'Y', '8', null, '', '', null);\n    let queryDate = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), 0, 0, 0);\n    this.calendarService.getCalendarEventList(queryDate, subMinutes(addDays(this.viewDate, 1), 1), '')\n      .subscribe(data => {\n        this.viewDateCalendarEventList = data;\n        this.onToggleAppointmentModal(true);\n      });\n  }\n\n  onClickAppointmentSave() {\n    this.isSaveClick = true;\n  }\n\n  onToggleAppointmentModal(val) {\n    if (!val) {\n      this.isCalendarEditMetaDataDone = false;\n    }\n    this.isExpandEdit = val;\n  }\n\n  onSaveCalendarEvent(resp) {\n    let type = resp.type;\n    let data = resp.data;\n    console.log(\"calendarEventDetail: \", data);\n    if (type !== 'fail') {\n      this.isDisplaySavePopup = true;\n      this.onToggleAppointmentModal(false);\n      this.calendarService.getCalendarEventDetail(data.ClientID).subscribe(data => {\n        this.calendarEventDetail = data;\n      })\n    }\n    this.isSaveClick = false;\n  }\n\n  addCustomer() {\n\n    let detail = {};\n    this.customerStoreService.setCurrentCustomerDetail(detail);\n    this.customerStoreService.setState(CUSTOMER_STATE.EDIT);\n\n    this.router.navigate(\"CustomerEdit\");\n  }\n\n  editCustomer(customerClientID: string) {\n    this.customerStoreService.setState(CUSTOMER_STATE.EDIT);\n    this.customerService.getCustomerDetail(customerClientID).subscribe((detail: any) => {\n      console.log(\"editCustomer:\", detail);\n      console.log(\"Stringify:\", JSON.stringify(detail));\n      this.customerStoreService.setCurrentCustomerDetail(detail);\n\n      //romove body fixed\n      setTimeout(() => {\n        document.body.classList.remove(\"fixed-body-full-page\");\n      }, 200);\n      this.router.navigate(\"CustomerEdit\")\n    })\n\n  }\n\n\n  followChange(detail) {\n    this.customerService.updateCustomerFollowStatus(detail.clientID, detail.isFollow).subscribe((data) => {\n      if (this.filterCriteria) {\n        this.customerService.checkInFilterCriteria(detail.clientID, this.filterCriteria).subscribe(result => {\n\n          this.customerList.forEach(item => {\n            if (item.clientID == detail.clientID) {\n              //console.debug('change isHighLight status in follow');\n              if (result) {\n                item.isHighLight = false;\n              }\n              else {\n                item.isHighLight = true;\n              }\n            }\n          });\n        })\n      }\n\n      this.customerList.filter(x => x.clientID == detail.clientID).forEach((value) => {\n        value.isFollow = detail.isFollow;\n      });\n    });\n\n  }\n\n  addNote() {\n    console.debug('addNote');\n    this.currentEditNote = {\n      ClientID: '',\n      CustomerClientID: this.customerDetail.ClientID,\n      NoteTime: Date.now(),\n      DisplayDate: this.toNoteTime(new Date())\n    };\n    this.isPopupEditNote = true;\n  }\n\n  editNote(note: any) {\n    console.debug('editNote', note);\n\n    this.currentEditNote = Object.assign({}, note, {\n      CustomerClientID: this.customerDetail.ClientID,\n      NoteTime: Date.now(),\n      DisplayDate: this.toNoteTime(new Date())\n    })\n    console.log(\"this.currentEditNote:\", this.currentEditNote)\n    this.isPopupEditNote = true;\n\n  }\n\n  displayNote(note: any) {\n    console.debug('displayNote', note);\n    this.customerContactDetail = note;\n\n    // add click customer name\n    this.customerContactDetail.Name = this.convertNameToShow(this.customerDetail.FirstName, this.customerDetail.LastName);\n\n    this.isPopupNoteDetail = true;\n  }\n\n\n  deleteNote(note: any) {\n    console.debug('deleteNote', note);\n    this.currentEditNote = note;\n\n    this.isPopupDeleteNote = true;\n  }\n\n  doDeleteContact() {\n    this.customerService.deleteCustomerContact(this.currentEditNote.ClientID).subscribe(data => {\n\n      console.log(\"customerService.deleteNote()\", data);\n\n      if (data.status) {\n        this.customerContactList = this.customerContactList.filter(x => x.ClientID != this.currentEditNote.ClientID);\n        this.currentEditNote = null;\n        this.isDisplayDeletePopup = true;\n      }\n    });\n  }\n\n  onSaveNote(event) {\n    this.contactSaveSubject.next();\n  }\n\n  onSaveNoteFinish(note) {\n    this.isPopupEditNote = false;\n    this.isDisplaySavePopup = true;\n\n    this.isShowDetailScroll = false;\n    setTimeout(() => {\n      this.isShowDetailScroll = true;\n      this.refreshContactNote(false);\n    }, 200);\n  }\n\n  doAction(action) {\n\n    console.log(\"doaction: \", action);\n    if (this.needConfirmPopup) {\n      this.isDisplayConfirmAlertPopup = true;\n      this.isPopupConfirmDisable = true;\n      this.confirmAction = action;\n    }\n    else {\n      if (action == 'add') {\n        this.addCustomer();\n      }\n\n      else if (action == 'import') {\n        this.import();\n      }\n    }\n  }\n\n  confirmPopup() {\n    this.isPopupConfirmDisable = true;\n    this.isDisplayConfirmAlertPopup = false;\n    this.changeDetector.detectChanges();\n    if (this.confirmAction === 'add')\n      this.addCustomer();\n    else if (this.confirmAction == 'import') {\n      this.import();\n    }\n    this.confirmAction = null;\n  }\n\n\n  // detect confirm popup to content bottm and the btn can click\n  detectScroll(isBtm) {\n    console.log('in detect scroll===', isBtm);\n    if (isBtm) {\n      this.isPopupConfirmDisable = false\n    }\n  }\n\n\n\n  private async importPopup() {\n    let importList;\n    try {\n      importList = await this.deviceService.searchContactsByName(\"\");\n      console.debug('import result ', importList);\n      this.importContractMap.clear();\n      //regroup\n      importList.forEach(element => {\n        console.debug(element.LastName);\n        element = this.customerImportDisplay.convert(element);\n        let name = this.convertNameToShow(element.FirstName, element.LastName).trim();\n        if (name != null && name.length > 0) {\n          let firstWord = name.substring(0, 1);\n          firstWord = firstWord.toLowerCase();\n          console.debug('firstWord =' + firstWord);\n          let group: CustomerImportGroup = this.importContractMap.get(firstWord);\n          if (group == undefined) group = new CustomerImportGroup(firstWord);\n          group.addItem(element);\n          this.importContractMap.set(firstWord, group);\n        }\n      });\n      console.debug('importContractMap', this.importContractMap);\n      this.isPopupImport = true;\n    } catch (error) {\n      console.warn('catch error', error);\n      this.notificationMgr.pushNotification(NotificationType.ContactPermissionError, null);\n      if (this.deviceService.getDevicePlatform() == 'iOS') {\n        this.deviceService.grantContactPermission();\n      }\n    }\n\n  }\n\n  import() {\n    this.customerStoreService.setState(CUSTOMER_STATE.IMPORT);\n  }\n\n  //control import popup is display\n  displayImportPopup(isShow: boolean) {\n    this.isPopupImport = isShow;\n  }\n\n  //when keypress keyword refresh contract list\n  refreshImport(keyword: string) {\n    this.importSearchKeyword = keyword;\n    let lowerCaseKeyword = this.importSearchKeyword.toLowerCase();\n    this.importContractMap.forEach((group: CustomerImportGroup, groupName: string) => {\n      // console.log(groupName, group);\n\n      group.isShow = false;\n      group.getItems.forEach((item: ContactItem) => {\n        // console.debug('item',item);\n        let name: string = item.LastName + item.FirstName;\n        name = name.toLowerCase();\n        // console.debug(name);\n        if (name.indexOf(lowerCaseKeyword) === -1) {\n          item.isShow = false;\n        }\n        else {\n          item.isShow = true;\n          group.isShow = true;\n        }\n      })\n    });\n  }\n\n  onCloseImportPopup() {\n    this.customerStoreService.setState(CUSTOMER_STATE.DISPLAY);\n    this.importSearchKeyword = '';\n  }\n\n  doImport() {\n    this.showCustomerList = false;\n    this.customerService.importContact(this.importContactList).subscribe(data => {\n      //alert(\"1\"+JSON.parse(JSON.stringify(data)).status);\n      //å é»æ¸\n      if (this.addProgressPoint && this.importContactList.length > 0) {\n        this.addProgressPoint.addCustomerPoint(this.importContactList.length);\n      }\n      this.customerStoreService.setState(CUSTOMER_STATE.DISPLAY);\n      let status = (JSON.parse(JSON.stringify(data))).status;\n\n      if (status) {\n        //clear list first, prevent lazyloading cache\n        this.customerList = [];\n        this.showCustomerList = true;\n        this.isPopupImport = false;\n        this.isDisplayImportSavePopup = true;\n        this.mobileResultSize = 0;\n        this.importSearchKeyword = '';\n\n        //refresh customer list\n        this.refreshCustomerList(false);\n      }\n    });\n  }\n\n\n\n\n  /* customer-import*/\n  onImportCustomer(importItems) {\n    console.debug('importItems', importItems);\n\n    this.importContactList = importItems;\n    this.mobileResultSize = importItems.length;\n  }\n\n  //call customer function\n  callCustomer(customerClientID: string) {\n    console.debug('callCustomer = ' + customerClientID);\n    this.customerService.getCustomerContactTel(customerClientID).subscribe(data => {\n      this.callPhoneTelArray = data;\n\n      //check number array is single\n      if (this.callPhoneTelArray.length != 0) {\n\n        //only one number just to call out\n        if (this.callPhoneTelArray.length == 1) {\n          this.callPhone(this.callPhoneTelArray[0].tel);\n        }\n        else {\n          this.isPopupCallPhone = true;\n        }\n      }\n\n    });\n\n  }\n\n  //cancel callphone popup\n  cancelCallPhone() {\n    this.isPopupCallPhone = !this.isPopupCallPhone;\n  }\n\n  //call number from phone\n  callPhone(telNumber: string) {\n    console.debug('callPhone', telNumber);\n\n\n    //call phone close popup\n    if (this.isPopupCallPhone) this.isPopupCallPhone = !this.isPopupCallPhone;\n\n\n    window.open('tel:' + telNumber, '_system');\n\n    //popup contact note\n    setTimeout((fun) => {\n      this.addNote();\n    }, 1000);\n  }\n\n\n  //open filter popup\n  filter() {\n    this.isPopupFilter = true;\n  }\n\n  //clear filter item\n  clearFilter() {\n    this.clearSubject.next();\n  }\n\n\n  //filter customer list and close popup\n  doFilter() {\n    this.saveFilterSubject.next();\n  }\n\n  doneCriteria(criteria: CustomerFilterCriteria) {\n    console.debug('doneCriteria', criteria);\n    this.filterCriteria = criteria;\n    this.isPopupFilter = false;\n    this.customerStoreService.setCriteria(criteria);\n    if (criteria.getOption(\"AsPreset\")) {\n      this.customerService.saveFilterCriteria(criteria).subscribe(data => {\n        console.debug('doneCriteria saveFilterCriteria', data);\n      });\n    }\n    this.refreshCustomerList(false);\n  }\n\n  loadPresetCriteria() {\n    //check has preset\n    let criteria = new CustomerFilterCriteria();\n\n    return this.customerService.getFilterCriteriaPreset().toPromise().then(data => {\n      console.debug('getfilterCriteriaPreset', data);\n\n      if (data != undefined) {\n\n        let count = 0;\n        for (let column in data) {\n          let values = data[column];\n          console.debug('column', column, 'arrays', values);\n          criteria.addCriteriaCols(column, values);\n          count++;\n        }\n\n        if (count != 0) {\n          criteria.setOption(\"AsPreset\", true);\n        }\n        else {\n          criteria.setOption(\"AsPreset\", false);\n        }\n        this.filterCriteria = criteria;\n\n      }\n    });\n\n\n  }\n\n\n  cancelDelete() {\n    console.log('cancelDelete');\n  }\n\n  // refreash content\n  refreshContent() {\n    //set timeout for refresh animation\n    setTimeout(() => {\n      this.isRefreshFinishContent = true;\n    }, 800);\n\n  }\n\n\n  // loading contact note \n  async loadContent(event) {\n    console.log('content loading this.customerList.length: ', this.customerList.length);\n    if (this.customerList.length > 0) {\n      this.contactListPageInfo.nextPage();\n      await this.refreshContactNote(true);\n      this.isLoadingFinishContent = true;\n    }\n    else {\n      setTimeout(() => {\n        this.isLoadingFinishContent = true;\n      }, 0);\n    }\n\n  }\n\n\n\n  //isShowChange\n  isShowChange(val) {\n    if (this.isShow !== val) {\n      this.isShow = val;\n      // this.changeDetector.detectChanges();\n    }\n  }\n\n  convertNameToShow(firstName: string, lastName: string): string {\n    return this.customerUtils.convertNameToShow(firstName, lastName);\n  }\n\n  public toNoteTime(time: Date) {\n    if (this.showRule) {\n      return this.showRule.convertDateAndTime(time);\n    }\n    else {\n      return this.dateUtils.toDateString(time, 'MM/dd/yyyy HH:mm');\n    }\n  }\n\n  onCalendarEditMetaDataDone() {\n    this.isCalendarEditMetaDataDone = true;\n  }\n\n\n  filterCriteriaPopupChange(event) {\n    console.warn('filterCriteriaPopupChange event: ', event);\n    this.isPopupFilter = event;\n    if (this.isPopupFilter) {\n      this.filterCriteria = this.filterCriteria.clone();\n    }\n  }\n\n\n}\n","import { Component, OnInit, Input, Optional, Inject } from '@angular/core';\nimport { MetaService, DisplayMetaComponent, ProfileCodeService, DefaultMetaParser, InputExecutor, MetaColumn, MetaController } from '@allianzSND/core';\nimport { customerContactDetailMetaControllerToken } from '../../injectionToken/injection-token';\n\n@Component({\n  selector: 'app-customer-contact-detail',\n  templateUrl: './customer-contact-detail.component.html',\n  styleUrls: ['./customer-contact-detail.component.scss']\n})\nexport class CustomerContactDetailComponent extends DisplayMetaComponent implements OnInit {\n  @Input()\n  public set data(value) {\n    this._data = value;\n    console.log(\"set contact detail data:\", value);\n  }\n\n  public get data() {\n    return this._data;\n  }\n\n  get columnConfig(): Array<MetaColumn> {\n    return this.metaConfig.Columns;\n  }\n\n  constructor(\n    metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: InputExecutor,\n    @Optional() @Inject(customerContactDetailMetaControllerToken) private customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  getMetaID() {\n    return 'customerContactDetail';\n  }\n\n  getMetaParams() {\n    return null;\n  }\n  onDataUpdated() {\n    super.onDataUpdated();\n    if (this.customMetaController)\n      this.customMetaController.onDataUpdated(this._data);\n  }\n}\n","import { Component, OnInit, Input, Inject, Optional, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { MetaService, MetaController, FormMetaComponent, ProfileCodeService, DefaultMetaParser, InputExecutor, MetaColumn } from '@allianzSND/core';\nimport { customerContactEditMetaControllerToken } from '../../injectionToken/injection-token';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-customer-contact-edit',\n  templateUrl: './customer-contact-edit.component.html',\n  styleUrls: ['./customer-contact-edit.component.scss']\n})\nexport class CustomerContactEditComponent extends FormMetaComponent implements OnInit, OnDestroy {\n\n\n  @Input()\n  public set data(value) {\n    let defaultObj = {};\n    if (this.metaConfig)\n      defaultObj = this.metaConfig.Columns.map(x => x.id).reduce((acc, current) => {\n        acc[current] = '';\n        return acc;\n      }, {});\n    if (value != null)\n      this._data = Object.assign(defaultObj, value);\n    else\n      this._data = defaultObj;\n    console.log(\"set contact edit data:\", this._data);\n    if (this.customMetaController)\n      this.customMetaController.onDataUpdated(this._data);\n    this.customerClientID = this._data.CustomerClientID;\n  }\n\n  public get data() {\n    return this._data;\n  }\n\n  get columnConfig(): Array<MetaColumn> {\n    return this.metaConfig.Columns;\n  }\n\n  private customerClientID = '';\n  private unsubscribe$: Subject<void> = new Subject<void>();\n\n  @Input() saveSubject: Subject<any>;\n  @Output() save: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    metaService: MetaService,\n    profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: InputExecutor,\n    @Optional() @Inject(customerContactEditMetaControllerToken) private customMetaController: MetaController\n  ) {\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.saveSubject) {\n      this.saveSubject\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(() => {\n          this.onBtnClick('submit', 'save');\n        })\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  getMetaParams() {\n    return {\n      CustomerClientID: this.customerClientID\n    }\n  }\n\n  btnClick(type: string, id: string) {\n    if (type === 'submit') {\n      this.save.emit(this._data);\n    }\n    if (this.customMetaController)\n      this.customMetaController.btnClick(type, id, this._data);\n\n  }\n  getMetaID() {\n    return 'customerContactEdit';\n  }\n  onValidateAll() {\n    if (!this.validationResult.isTrue()) {\n      //If basic validation has error.\n      if (this.validationResult.isError('Note'))\n        alert(\"Note \" + this.validationResult.getErrorMsg(\"Note\"));\n      return false;\n    }\n    else {\n      //Do custom validation.\n      let result = true;\n      if (this.customMetaController)\n        result = result && this.customMetaController.onValidateAll(this._data, this.validationResult);\n      return result;\n    }\n  }\n  onValueChange(column: string, value: any, groupId: string, index: number) {\n    //Trigger other column values\n    if (this.customMetaController)\n      this.customMetaController.onValueChange(column, value, groupId, index, this._data, this.validationResult);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { UIModule } from '@allianzSND/ui';\nimport {CommonModule, DatePipe} from '@angular/common';\nimport { CoreModule } from '@allianzSND/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NxAccordionModule, NxButtonModule, NxDropdownModule, NxMessageModule, NxModalModule, NxRadioModule} from '@allianz/ngx-ndbx';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { CalendarEditComponent } from './calendar/components/calendar-edit/calendar-edit.component';\nimport {CalendarDetailComponent} from './calendar/components/calendar-detail/calendar-detail.component';\nimport {CalendarFilterComponent} from  './calendar/components/calendar-filter/calendar-filter.component';\nimport {CalendarComponent} from './calendar/components/calendar/calendar.component';\nimport { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';\nimport { NxDatefieldModule, NxNativeDateModule } from '@allianz/ngx-ndbx/datefield';\nimport { CustomerContactListComponent } from './customer/components/customer-contact-list/customer-contact-list.component';\nimport { CustomerDetailComponent } from './customer/components/customer-detail/customer-detail.component';\nimport { CustomerEditComponent } from './customer/components/customer-edit/customer-edit.component';\nimport { CustomerFilterComponent } from './customer/components/customer-filter/customer-filter.component';\nimport { CustomerImportComponent } from './customer/components/customer-import/customer-import.component';\nimport { CustomerListComponent } from './customer/components/customer-list/customer-list.component';\nimport { CustomersComponent } from './customer/components/customers/customers.component'\nimport {NxInputModule} from '@allianz/ngx-ndbx/input';\nimport {NxProgressbarModule} from '@allianz/ngx-ndbx/progressbar';\nimport {NxGridModule} from '@allianz/ngx-ndbx/grid';\nimport { CustomerContactDetailComponent } from './customer/components/customer-contact-detail/customer-contact-detail.component';\nimport { CustomerContactEditComponent } from './customer/components/customer-contact-edit/customer-contact-edit.component';\n\n@NgModule({\n  declarations: [CalendarComponent, CalendarEditComponent, CalendarDetailComponent, CalendarFilterComponent,\n    CustomersComponent, CustomerEditComponent, CustomerListComponent ,\n    CustomerDetailComponent, CustomerContactListComponent , CustomerFilterComponent, CustomerImportComponent, CustomerContactDetailComponent, CustomerContactEditComponent],\n  imports: [\n    NxIconModule,\n    NxButtonModule,\n    NxFormfieldModule,\n    NxDatefieldModule,\n    NxNativeDateModule,\n    UIModule,\n    CoreModule,\n    CommonModule,\n    FormsModule,\n    NxDropdownModule,\n    NxRadioModule,\n    NxInputModule,\n    NxMessageModule,\n    NxProgressbarModule,\n    NxModalModule,\n    NxAccordionModule,\n    NxGridModule,\n    ReactiveFormsModule,\n  ],\n  providers:[DatePipe],\n  exports: [\n    CalendarEditComponent,CalendarComponent, CalendarDetailComponent,\n    CustomersComponent,CustomerEditComponent\n  ]\n})\nexport class IntegrationCalendarCustomerModule { }\n","export class CustomerConfirmAction {\n    private _action : string;\n    private _optionObj : Array<string>;\n\n    constructor() {\n        \n    }\n\n    set action(action) {this._action = action}\n    set option(option) {this._optionObj = option}\n\n    get action() {return this._action}\n    get option() {return this._optionObj}\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerAddress {\n\n    public clientID: string;\n    public addressType: string;\n    public country: string;\n    public city: string;\n    public area: string;\n    public zipcode: string;\n    public address: string;\n    public dataSource: string;\n\n    constructor(clientID: string, addressType: string, country: string, city: string, area: string, zipcode: string, address: string, dataSorce: string) {\n        this.clientID = clientID;\n        this.addressType = addressType;\n        this.country = country;\n        this.city = city;\n        this.area = area;\n        this.zipcode = zipcode;\n        this.address = address;\n        this.dataSource = dataSorce;\n\n    }\n\n    toFullAddress() {\n\n        let array = [];\n        if (StringUtils.isNotEmpty(this.country)) array.push(this.country);\n        if (StringUtils.isNotEmpty(this.city)) array.push(this.city);\n        if (StringUtils.isNotEmpty(this.area)) array.push(this.area);\n        if (StringUtils.isNotEmpty(this.zipcode)) array.push(this.zipcode);\n        if (StringUtils.isNotEmpty(this.address)) array.push(this.address);\n\n        return array.join(', ');\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.country)\n            && StringUtils.isEmpty(this.city) && StringUtils.isEmpty(this.area)\n            && StringUtils.isEmpty(this.zipcode) && StringUtils.isEmpty(this.address);\n    }\n}\n","export class CustomerContactNote{\n\n    private clientID : string;\n    public name : string;\n    public date : Date;\n    public noteMessage : string;\n\n    constructor(clientID:string,date : Date , noteMessage : string) {\n        this.clientID = clientID;\n        this.date = date;\n        this.noteMessage = noteMessage;\n    }\n\n    public getClientID() : string {\n        return this.clientID;\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerEmail {\n\n    public clientID: string;\n    public emailType: string;\n    public email: string;\n    public dataSource: string;\n\n    constructor(_clientID: string, _emailType: string, _email: string, _dataSource: string) {\n        this.clientID = _clientID;\n        this.emailType = _emailType;\n        this.email = _email;\n        this.dataSource = _dataSource;\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.email);\n    }\n\n}","import { CustomerItem } from './CustomerItem';\nexport class CustomerList {\n\n    private _customerList : Array<CustomerItem> = [];\n    \n    get length(){\n        return this._customerList.length;\n    }\n\n    constructor() {\n    }\n\n    get customerList(){\n        return this._customerList;\n    }\n\n    set customerList(customerList : Array<CustomerItem>){\n        this._customerList = customerList;\n    }\n    \n    addCustomerItem(customerEvent: CustomerItem) {\n        this._customerList.push(customerEvent);\n    }\n    \n    \n}","export class MobileCustomerItem{\n\n    private lastName : string;\n    private firstName : string;\n    private phoneNumber : Array<{id:number,text:string}>;\n    private email : Array<string>;\n    private address : Array<{id:number,city:string,area:string,code:number,address:string}>;\n    private birthday : string;\n\n    constructor(lastName : string,firstName : string,phoneNumber : Array<{id:number,text:string}>,email : Array<string>,address : Array<{id:number,city:string,area:string,code:number,address:string}>,birthday : string){\n        \n        this.lastName = lastName;\n        this.firstName = firstName;\n        this.phoneNumber = phoneNumber;\n        this.email = email;\n        this.address = address;\n        this.birthday = birthday;\n    }\n\n}","import { MobileCustomerItem } from \"./MobileCustomerItem\";\nexport class MobileCustomerList{\n\n    private mobileCustomerList : Array<MobileCustomerItem>;\n\n    constructor(mobileCustomerList : Array<MobileCustomerItem>){\n        this.mobileCustomerList = mobileCustomerList;\n    }\n\n}","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, TableUtils, SQLiteResponse } from \"@allianzSND/core\";\nimport { Observable, of } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\n\nexport class CustomerAddContactNoteAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  public Data: any;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n\n  getAPIName(): string {\n    return 'addCustomerContactNote';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    console.debug(\"addCustomerContactNote API Data:\", this.Data);\n    // If empty, don't save \n    if (!this.Data.Note) {\n      return of(new SQLiteResponse({\n        status: true\n      }, []));\n    }\n    else {\n      return Observable.create((observer) => {\n        let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n        let contactExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact_Extension\");\n        let dao = this.daoFactory.getDefaultDao();\n        if (contactObj != undefined && dao != undefined) {\n\n          dao = new ClientCustomDao(dao);\n\n          contactObj.setValue('CustomerClientID', this.Data.CustomerClientID);\n          contactObj.setValue('Note', this.Data.Note);\n          contactObj.setValue('NoteTime', this.Data.NoteTime);\n\n          contactExtObj = TableUtils.fillTableColumn(contactExtObj, this.Data);\n          contactExtObj.setValue('CustomerClientID', this.Data.CustomerClientID);\n\n          if (this.Data.ClientID != undefined && this.Data.ClientID != '') {\n            contactObj.addRestriction(new EqualRestriction('ClientID', [this.Data.ClientID]));\n            contactExtObj.addRestriction(new EqualRestriction('ClientID', [this.Data.ClientID]));\n\n            dao.transactionUpdate(contactObj);\n            dao.transactionUpdate(contactExtObj);\n          }\n          else {\n            let clientID = uuid();\n            contactObj.setValue('ClientID', clientID);\n            contactExtObj.setValue('ClientID', clientID);\n\n            dao.transactionInsert(contactObj);\n            dao.transactionInsert(contactExtObj);\n          }\n\n          dao.runTransaction().subscribe(resp => {\n            observer.next(resp);\n            observer.complete();\n          })\n\n\n        } else {\n          observer.next(false);\n          observer.complete();\n        }\n      });\n    }\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, SQLiteTable, SQLCommand, InRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable, from, of } from 'rxjs';\n\nexport class CustomerAutoDeleteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n    \n  private _clientID: string;\n  private _status: string;\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  \n  setClientID(id) {\n    this._clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerAutoDelete';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerAutoDelete.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (messageObj != undefined && dao != undefined) {\n          \n          dao = new ClientCustomDao(dao);\n          \n          if(StringUtils.isNotEmpty(this._clientID)) {\n            messageObj.addRestriction(new EqualRestriction(\"ClientID\", [this._clientID]));\n          }\n          else {\n            messageObj.addRestriction(new EqualRestriction(\"Status\", ['UnRead']));\n          }\n\n          messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", ['Customer']));\n          messageObj.addRestriction(new EqualRestriction(\"MessageType\",['AutoDelete']));\n\n          dao.queryByTable(messageObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n\n      }\n\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n\n    });\n      //   return from(dao.queryByTable(messageObj).toPromise().then( resp => {\n\n\n      //     let messageArgument = JSON.parse(resp['Body'][0]['customers']);\n      //     let customerIDList = messageArgument['ids'];\n\n      //     let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      //     console.log(\"customerIDListInAPI: \", customerIDList);\n      //     customerObj.addRestriction(new InRestriction(\"ClientID\", customerIDList));\n      //     return dao.queryByTable(customerObj).toPromise().then(resp => {\n          \n      //       return resp;\n      //     })\n        \n      \n          \n      // }));\n      \n  } \n\n    \n  \n    \n}\n","import { PageInfo, IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, OrderByRestriction, LimitRestriction, OffsetRestriction } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\n\nexport class CustomerContactNoteAPI implements IAPI , IMockAPI , ISQLiteAPI {\n\n  private customerClientID:  string;\n  private pageInfo : PageInfo;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id : string) {\n      this.customerClientID = id;\n  }\n\n  setPageInfo(pageInfo : PageInfo) {\n    this.pageInfo = pageInfo;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerContactNote';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerContactNote.json';\n  }\n  \n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('CustomerClientID',[this.customerClientID]));\n        contactObj.addRestriction(new OrderByRestriction([{ column: 'NoteTime', order: 'DESC' }]))\n\n        //add page limit\n        contactObj.addRestriction(new LimitRestriction([this.pageInfo.pageSize]));\n        contactObj.addRestriction(new OffsetRestriction([(this.pageInfo.page - 1) * 5]));\n\n        console.debug(contactObj);\n        dao.queryByTable(contactObj).subscribe((resp) => {\n          console.debug(\"getCustomerContactNote:\",resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerDeleteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n  \n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName() : string {\n    return 'deleteCustomer';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (customerObj != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n        customerObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n        dao.deleteByTable(customerObj).subscribe((resp) => {    \n          observer.next(resp);\n          observer.complete();\n        });\n\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerDeleteContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private contactClientID:  string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setContactClientID(contactClientID : string) {\n    this.contactClientID = contactClientID;\n  }\n\n  getAPIName() : string {\n    return 'deleteCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('ClientID',[this.contactClientID]));\n      \n        dao.deleteByTable(contactObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, SQLiteTable, EqualRestriction, SQLiteResponse } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, of, from } from \"rxjs\";\n\nexport class CustomerDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private _id = '';\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n    public get id() {\n        return this._id;\n    }\n    public set id(value) {\n        this._id = value;\n    }\n    getAPIName(): string {\n        return 'getCustomerDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getCustomerDetail.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let defaultObj = {\n            \"ClientID\": \"\",\n            \"LastName\": \"\",\n            \"FirstName\": \"\",\n            \"Occupation\": \"\",\n            \"Company\": \"\",\n            \"BirthdayYear\": \"\",\n            \"BirthdayMonth\": \"\",\n            \"BirthdayDate\": \"\",\n            \"Birthday\": null,\n            \"AgeRange\": null,\n            \"Gender\": null,\n            \"Income\": null,\n            \"Source\": null,\n            \"Marriage\": null,\n            \"Children\": null,\n            \"Familiarity\": null,\n            \"RecentStatus\": null,\n            \"MANPA\": null,\n            \"ContactFrequancy\": null,\n            \"Possibility\": null,\n            \"IsFollow\": \"N\",\n            \"DataSource\": \"APP\",\n            \"tel\": [],\n            \"email\": [],\n            \"address\": []\n        }\n        if (!this._id || (this._id.length == 0)) {\n            //Add\n            let resp = new SQLiteResponse({\n                \"isSuccess\": true\n            }, [defaultObj]);\n            return of(resp);\n        }\n        else {\n            let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n            let defaultDao = this.daoFactory.getDefaultDao();\n            if (customerObj != undefined && defaultDao != undefined) {\n                let dao = new ClientCustomDao(defaultDao);\n                customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n                return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                }).then(({ customer, clientID }) => {\n                    let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                    if (customerEmailObj) {\n                        customerEmailObj = (<SQLiteTable>customerEmailObj);\n                        customerEmailObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['email'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n\n                }).then(({ customer, clientID }) => {\n                    let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                    if (customerAddrObj) {\n                        customerAddrObj = (<SQLiteTable>customerAddrObj);\n                        customerAddrObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['address'] = telList;\n                            return customer;\n                        });\n                    }\n                    else\n                        return customer;\n                }).then(customer => {\n                    //change birthDay to Date Object\n                    if (!!customer['Body'][0]['BirthdayYear'] && !!customer['Body'][0]['BirthdayMonth'] && customer['Body'][0]['BirthdayDate'])\n                        customer['Body'][0]['Birthday'] = new Date(parseInt(customer['Body'][0]['BirthdayYear']), parseInt(customer['Body'][0]['BirthdayMonth']) - 1, customer['Body'][0]['BirthdayDate']);\n                    else\n                        customer['Body'][0]['Birthday'] = null;\n                    console.log(\"CustomerDetailAPI convert BirthDay: \", customer['Body'][0]['Birthday']);\n                    return customer;\n                }))\n            }\n            else {\n                return of(false);\n            }\n        }\n    }\n\n\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerEditContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private contactClientID:  string;\n  private note : string;\n  private noteTime : Date;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setContactClientID(contactClientID : string) {\n    this.contactClientID = contactClientID;\n  }\n\n  setNote(note : string) {\n    this.note = note;\n  }\n\n  setNoteTime(noteTime : Date) {\n    this.noteTime = noteTime;\n  }\n\n  getAPIName() : string {\n    return 'editCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('ClientID',[this.contactClientID]));\n        contactObj.setValue('Note', this.note);\n        contactObj.setValue('NoteTime', this.noteTime.getTime());\n      \n        dao.updateByTable(contactObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, InRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable, of, from } from 'rxjs';\n\nexport class CustomerEditOvertimeAPI implements IAPI , IMockAPI, ISQLiteAPI {\n    \n  private _clientID: string;\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id) {\n    this._clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerOverTime';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerOverTime.json';\n  }\n\n  executeSQL(): Observable<any> {\n    \n    return Observable.create((observer) => {\n      let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (messageObj != undefined && dao != undefined) {\n          \n          dao = new ClientCustomDao(dao);\n          \n          if(StringUtils.isNotEmpty(this._clientID)) {\n            messageObj.addRestriction(new EqualRestriction(\"ClientID\", [this._clientID]));\n          }\n          else {\n            messageObj.addRestriction(new EqualRestriction(\"Status\", ['UnRead']));\n          }\n\n          messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", ['Customer']));\n          messageObj.addRestriction(new EqualRestriction(\"MessageType\",['Overtime']));\n\n          \n          dao.queryByTable(messageObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n\n      }\n\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n\n    });\n    \n  }\n    \n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nexport class CustomerGetPresetAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName(): string {\n        return 'getCustomerFilterPreset';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getCustomerFilterPreset.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let setting = this.daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n                if (setting) {\n                    dao = new ClientCustomDao(dao);\n\n                    setting = (<SQLiteTable>setting);\n\n                    setting.addRestriction(new EqualRestriction('SettingID',['CustomerFilterSetting']));\n\n                    dao.queryByTable(setting).subscribe((resp) => {\n                        console.debug(resp);\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, InRestriction, LikeRestriction, ORCompoundRestriction, EqualRestriction, IRestriction, LimitRestriction, OffsetRestriction, AndCompoundRestriction, PageInfo, OrderByRestriction, ProfileCodeService, LessOrEqualRestriction, GreaterOrEqualRestriction, NotEqualRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport class CustomerListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _restrictions: Array<IRestriction>;\n  private _pageInfo: PageInfo = new PageInfo();\n\n  private _queryClientID: string;\n\n  constructor(private daoFactory: DaoFactory, private profileCodeService: ProfileCodeService) {\n\n  }\n  set clientID(clientID: string) {\n    this._queryClientID = clientID;\n  }\n\n  set restrictions(restrictions: Array<IRestriction>) {\n    this._restrictions = restrictions;\n  }\n\n  set pageInfo(pageInfo: PageInfo) {\n    this._pageInfo = pageInfo;\n  }\n\n  getAPIName(): string {\n    return 'getCustomerList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCustomerList.json';\n  }\n\n  executeSQL(): Observable<any> {\n\n    return Observable.create((observer) => {\n      let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (customerObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n\n        if (this._restrictions.length > 0) {\n          this._restrictions.forEach((condition: IRestriction) => {\n            customerObj.addRestriction(condition);\n          })\n        }\n\n\n        //add order by\n        customerObj.addRestriction(new OrderByRestriction([{ column: 'LastName', order: 'ASC' }]))\n\n        //add page limit\n        if (this._pageInfo.pageSize > 0) {\n          customerObj.addRestriction(new LimitRestriction([this._pageInfo.pageSize]));\n          customerObj.addRestriction(new OffsetRestriction([(this._pageInfo.page - 1) * 10]));\n        }\n\n        //if has edit profile will has clientID\n        if (StringUtils.isNotEmpty(this._queryClientID)) {\n          customerObj.addRestriction(new EqualRestriction('ClientID', [this._queryClientID]));\n        }\n\n        dao.queryByTable(customerObj).subscribe((resp) => {\n\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction, SQLCommand, TableUtils } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerUtils } from \"../utils/customer-utils\";\nimport { v4 as uuid } from 'uuid';\n\n\nexport class CustomerSaveDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n    private Data = null;\n\n    constructor(private daoFactory: DaoFactory, private customerUtils: CustomerUtils) {\n\n    }\n\n    setDetail(detail: any) {\n        this.Data = detail;\n    }\n\n    get customerDetail() {\n        return this.Data;\n    }\n\n    getAPIName(): string {\n        return 'saveCustomerDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        // let returnObj = {\n        //     \"status\": true,\n        //     \"msg\": ''\n        // };\n        return Observable.create((observer) => {\n            let dao;\n            let base_dao = this.daoFactory.getDefaultDao();\n            if (base_dao != undefined) {\n                dao = new ClientCustomDao(base_dao);\n                console.log(\"base_dao:\", base_dao);\n                console.log(\"dao:\", dao);\n                //save customer data\n                let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                let customerExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Extension\");\n                if (customerObj && customerExtObj) {\n\n                    let birthday = this.customerDetail.Birthday;\n                    if (birthday != null && birthday != undefined) {\n                        customerObj.setValue(\"BirthdayYear\", birthday.getFullYear().toString());\n                        let month = (birthday.getMonth() + 1).toString();\n                        if (month.length < 2) {\n                            month = '0' + month.toString();\n                        }\n                        customerObj.setValue(\"BirthdayMonth\", month);\n\n                        let date = (birthday.getDate()).toString();\n                        if (date.length < 2) {\n                            date = '0' + date.toString();\n                        }\n                        customerObj.setValue(\"BirthdayDate\", date);\n                    }\n                    else {\n                        customerObj.setValue(\"BirthdayYear\", null);\n                        customerObj.setValue(\"BirthdayMonth\", null);\n                        customerObj.setValue(\"BirthdayDate\", null);\n                    }\n                    customerObj.setValue(\"AgeRange\", this.customerDetail.AgeRange);\n                    customerObj.setValue('ClientID', this.customerDetail.ClientID);\n                    customerObj.setValue(\"LastName\", this.customerDetail.LastName);\n                    customerObj.setValue(\"FirstName\", this.customerDetail.FirstName);\n                    customerObj.setValue(\"Occupation\", this.customerDetail.Occupation);\n                    customerObj.setValue(\"Company\", this.customerDetail.Company);\n                    customerObj.setValue(\"Gender\", this.customerDetail.Gender);\n                    customerObj.setValue(\"Income\", this.customerDetail.Income);\n                    customerObj.setValue(\"Source\", this.customerDetail.Source);\n                    customerObj.setValue(\"Marriage\", this.customerDetail.Marriage);\n                    customerObj.setValue(\"Children\", this.customerDetail.Children);\n                    customerObj.setValue(\"Familiarity\", this.customerDetail.Familiarity);\n                    customerObj.setValue(\"ContactFrequancy\", this.customerDetail.ContactFrequancy);\n                    customerObj.setValue(\"Possibility\", this.customerDetail.Possibility);\n                    customerObj.setValue(\"IsFollow\", this.customerDetail.IsFollow);\n\n                    customerExtObj.setValue('ClientID', this.customerDetail.ClientID);\n                    // customerExtObj.setValue(\"RecentStatus\", this.customerDetail.RecentStatus);\n                    // customerExtObj.setValue(\"MANPA\", this.customerDetail.MANPA);\n                    console.log(\"save cusomer stringify:\", JSON.stringify(this.customerDetail));\n                    customerExtObj = TableUtils.fillTableColumn(customerExtObj, this.customerDetail);\n                    console.log(\"save cusomer extObj:\", JSON.stringify(customerExtObj));\n\n                    //set customer default column & value\n                    this.customerUtils.setCustomerDefaultValue(customerObj);\n                    this.customerDetail.AgeRange = customerObj.getValue(\"AgeRange\");\n\n                    customerObj.setValue('Completeness', this.customerDetail.Completeness);\n\n                    console.debug('insertCustomer', customerObj);\n                    // console.log('clientID:', customerObj.getValue('ClientID'));\n                    if (customerObj.getValue('ClientID') == '') {\n                        let _clientID = uuid();\n                        customerObj.setValue('ClientID', _clientID);\n                        customerExtObj.setValue('ClientID', _clientID);\n                        dao.transactionInsert(customerObj);\n                        dao.transactionInsert(customerExtObj);\n                    }\n                    else {\n                        let _deletedClientID = customerObj.getValue('ClientID');\n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        let phoneInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel_Extension\");\n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        let emailInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email_Extension\");\n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        let addressInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address_Extension\");\n                        customerObj.addRestriction(new EqualRestriction('ClientID', [_deletedClientID]));\n                        customerExtObj.addRestriction(new EqualRestriction('ClientID', [_deletedClientID]));\n                        phoneInsertObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        phoneInsertExtObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        emailInsertObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        emailInsertExtObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        addressInsertObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n                        addressInsertExtObj.addRestriction(new EqualRestriction('CustomerClientID', [_deletedClientID]));\n\n                        dao.transactionUpdate(customerObj);\n                        dao.transactionUpdate(customerExtObj);\n                        base_dao.transactionDelete(phoneInsertObj);\n                        base_dao.transactionDelete(phoneInsertExtObj);\n                        base_dao.transactionDelete(emailInsertObj);\n                        base_dao.transactionDelete(emailInsertExtObj);\n                        base_dao.transactionDelete(addressInsertObj);\n                        base_dao.transactionDelete(addressInsertExtObj);\n                    }\n\n                    //save phone data              \n                    for (let phone of this.customerDetail.tel) {\n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        let phoneInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel_Extension\");\n                        if (phoneInsertObj && phone.Tel) {\n\n                            if (phone.TelType == '') phone.TelType = 'TelHome';\n                            let clientID = uuid();\n                            phoneInsertObj = (<SQLiteTable>phoneInsertObj);\n                            phoneInsertObj.setValue(\"ClientID\", clientID);\n                            phoneInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            phoneInsertObj.setValue('TelType', phone.TelType);\n                            phoneInsertObj.setValue('Tel', phone.Tel);\n\n                            phoneInsertExtObj.setValue(\"ClientID\", clientID);\n                            phoneInsertExtObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            phoneInsertExtObj = TableUtils.fillTableColumn(phoneInsertExtObj, phone);\n\n                            //insert\n                            dao.transactionInsert(phoneInsertObj);\n                            dao.transactionInsert(phoneInsertExtObj);\n                        }\n                    }\n\n                    //save email data\n                    for (let email of this.customerDetail.email) {\n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        let emailInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email_Extension\");\n                        if (emailInsertObj && email.Email) {\n                            if (email.EmailType == '') email.EmailType = 'MailHome';\n                            let clientID = uuid();\n                            emailInsertObj = (<SQLiteTable>emailInsertObj);\n                            emailInsertObj.setValue(\"ClientID\", clientID);\n                            emailInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertObj.setValue('EmailType', email.EmailType);\n                            emailInsertObj.setValue('Email', email.Email);\n\n\n                            emailInsertExtObj.setValue(\"ClientID\", clientID);\n                            emailInsertExtObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertExtObj = TableUtils.fillTableColumn(emailInsertExtObj, email);\n                            //insert\n                            dao.transactionInsert(emailInsertObj);\n                            dao.transactionInsert(emailInsertExtObj);\n                        }\n                    }\n\n                    //save address data\n                    for (let address of this.customerDetail.address) {\n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        let addressInsertExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address_Extension\");\n                        if (addressInsertObj) {\n\n                            if (!this._judgeIsAddressEmpty(address)) {\n                                // if (address.AddressType == '') address.AddressType = 'AddressTypeHome';\n\n                                let clientID = uuid();\n                                addressInsertObj.setValue(\"ClientID\", clientID);\n                                addressInsertObj = (<SQLiteTable>addressInsertObj);\n                                addressInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                                addressInsertObj.setValue('AddressType', address.AddressType);\n                                addressInsertObj.setValue('Country', address.Country);\n                                addressInsertObj.setValue('City', address.City);\n                                addressInsertObj.setValue('Area', address.Area);\n                                addressInsertObj.setValue('Zipcode', address.Zipcode);\n                                addressInsertObj.setValue('Address', address.Address);\n\n                                addressInsertExtObj.setValue(\"ClientID\", clientID);\n                                addressInsertExtObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                                addressInsertExtObj = TableUtils.fillTableColumn(addressInsertExtObj, address);\n\n                                //insert\n                                dao.transactionInsert(addressInsertObj);\n                                dao.transactionInsert(addressInsertExtObj);\n                            }\n                        }\n                    }\n                    dao.runTransaction().subscribe((resp) => {\n                        // let header = resp['Header'];\n                        // if (!header.status) {\n                        //     returnObj['status'] = false;\n                        //     returnObj['msg'] = header.msg;\n                        // }\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n\n\n    private _judgeIsAddressEmpty(customerObj: any): boolean {\n        let requiredCol: Array<string> = ['Country', 'City', 'Area', 'Zipcode', 'Address'];\n        return requiredCol.reduce((total, each) => total && customerObj[each] == '', true);\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport class CustomerSavePresetAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _criteria: CustomerFilterCriteria;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    setFilterCriteria(criteria: CustomerFilterCriteria) {\n        this._criteria = criteria;\n    }\n\n    getAPIName(): string {\n        return 'saveCustomerFilterPreset';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let setting = this.daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n                if (setting) {\n                    dao = new ClientCustomDao(dao);\n\n                    setting = (<SQLiteTable>setting);\n\n                    setting.addRestriction(new EqualRestriction('SettingID',['CustomerFilterSetting']));\n                    setting.setValue(\"SettingVal\",JSON.stringify(this._criteria.toPresetJSON()));\n\n                    dao.updateByTable(setting).subscribe((resp) => {\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\n\nexport class CustomerTelAPI implements IAPI , IMockAPI , ISQLiteAPI {\n\n  private clientID : string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id : string) {\n      this.clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerTel';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerTel.json';\n  }\n  \n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let telObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (telObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        telObj.addRestriction(new EqualRestriction('CustomerClientID',[this.clientID]));\n      \n        dao.queryByTable(telObj).subscribe((resp) => {\n          console.debug(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerUpdateFollowAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID : string;\n    private _isFollow : boolean;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    setClient(clientID : string) {\n        this._clientID = clientID;\n    }\n\n    setIsFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    getAPIName(): string {\n        return 'updateCustomerFollowStatus';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let customer = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                if (customer) {\n                    dao = new ClientCustomDao(dao);\n\n                    customer = (<SQLiteTable>customer);\n\n                    customer.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n                    customer.setValue(\"IsFollow\",this._isFollow ? 'Y' : 'N');\n\n                    dao.updateByTable(customer).subscribe((resp) => {\n                        \n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { ContactItem, IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\nimport { CustomerUtils } from \"../utils/customer-utils\";\nimport { v4 as uuid } from 'uuid';\n\n\nexport class ImportContactAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private items: Array<ContactItem>;\n\n    public setItems(items: Array<ContactItem>) {\n        this.items = items;\n    }\n\n    constructor(private daoFactory: DaoFactory, private customerUtils: CustomerUtils) {\n\n    }\n\n    getAPIName(): string {\n        return 'importContact';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n\n\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                dao = new ClientCustomDao(dao);\n\n                for (let item of this.items) {\n\n                    let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                    let customerExt = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Extension\");\n\n                    let ClientID = uuid();\n                    customerObj.setValue(\"ClientID\", ClientID);\n                    customerObj.setValue(\"LastName\", item.LastName);\n                    customerObj.setValue(\"FirstName\", item.FirstName);\n                    customerObj.setValue(\"IsFollow\", \"N\");\n\n                    customerExt.setValue(\"ClientID\", ClientID);\n\n                    let birthday = item.Birthday;\n                    if (birthday != null) {\n                        customerObj.setValue(\"BirthdayYear\", birthday.getFullYear);\n                        customerObj.setValue(\"BirthdayMonth\", birthday.getMonth);\n                        customerObj.setValue(\"BirthdayDate\", birthday.getDate);\n                    }\n\n                    //set customer default column & value\n                    this.customerUtils.setCustomerDefaultValue(customerObj);\n\n                    //count Completeness\n                    let completeness = this.customerUtils.countCompleteness(item);\n                    customerObj.setValue('Completeness', completeness);\n\n                    //insert customer data\n                    dao.transactionInsert(customerObj);\n                    dao.transactionInsert(customerExt);\n                    //save phone data\n                    for (let phone of item.tel) {\n                        let telType = 'TelHome';\n                        if (phone.type == 'work') {\n                            telType = 'TelWork';\n                        }\n                        else if (phone.type == 'mobile') {\n                            telType = 'TelMobile';\n                        }\n\n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        let phoneInsertObj_Ext = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel_Extension\");\n                        if (phoneInsertObj) {\n                            let clientID = uuid();\n\n                            phoneInsertObj = (<SQLiteTable>phoneInsertObj);\n                            phoneInsertObj.setValue('ClientID', clientID);\n                            phoneInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            phoneInsertObj.setValue('TelType', telType);\n                            phoneInsertObj.setValue('Tel', phone.number);\n                            phoneInsertObj.setValue('DataSource', 'APP');\n\n                            phoneInsertObj_Ext.setValue('ClientID', clientID);\n                            phoneInsertObj_Ext.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            //insert\n                            dao.transactionInsert(phoneInsertObj);\n                            dao.transactionInsert(phoneInsertObj_Ext);\n                        }\n                    }\n\n                    //save email data\n                    let maxEmailCount = 3;\n                    let importEmailCount = maxEmailCount;\n                    if (item.email.length < 3) importEmailCount = item.email.length;\n                    for (let i = 0; i < importEmailCount; i++) {\n                        let email = item.email[i];\n\n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        let emailInsertObj_Ext = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email_Extension\");\n                        if (emailInsertObj) {\n                            let clientID = uuid();\n\n                            emailInsertObj = (<SQLiteTable>emailInsertObj);\n                            emailInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertObj.setValue('EmailType', 'MailHome');\n                            emailInsertObj.setValue('Email', email);\n                            emailInsertObj.setValue('ClientID', clientID);\n                            emailInsertObj.setValue('DataSource', 'APP');\n\n                            emailInsertObj_Ext.setValue('ClientID', clientID);\n                            emailInsertObj_Ext.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            //insert\n                            dao.transactionInsert(emailInsertObj);\n                            dao.transactionInsert(emailInsertObj_Ext);\n                        }\n                    }\n\n                    //save address data\n                    for (let address of item.address) {\n\n                        let addressType = 'AddressTypeHome';\n                        if (address.type == 'work') {\n                            addressType = 'AddressTypeWork';\n                        }\n\n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        let addressInsertObj_Ext = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address_Extension\");\n                        if (addressInsertObj) {\n\n                            let clientID = uuid();\n\n                            addressInsertObj = (<SQLiteTable>addressInsertObj);\n                            addressInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            addressInsertObj.setValue('ClientID', clientID);\n\n                            addressInsertObj.setValue('AddressType', addressType);\n                            addressInsertObj.setValue('Zipcode', address.code);\n                            addressInsertObj.setValue('Address', address.address);\n                            addressInsertObj.setValue('DataSource', 'APP');\n\n\n                            addressInsertObj_Ext.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            addressInsertObj_Ext.setValue('ClientID', clientID);\n                            //insert\n                            dao.transactionInsert(addressInsertObj);\n                            dao.transactionInsert(addressInsertObj_Ext);\n                        }\n                    }\n\n\n                }\n\n                dao.runTransaction().subscribe((resp) => {\n\n                    observer.next(resp);\n                    observer.complete();\n                });\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n\n    }\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { GreaterOrEqualRestriction, LessOrEqualRestriction,  OrderByRestriction, EqualRestriction, ORCompoundRestriction } from '@allianzSND/core';\nimport { getYear, getMonth, getDate, subDays, addDays, setYear } from 'date-fns';\n\nexport class CustomerBirthdayListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _targetDate: Date;\n\n  public isRangeCrossYear: boolean;\n  private _subN : number;\n  private _subNDayTimeStamp: number;\n\n  private _addN : number;\n  private _addNDayTimeStamp: number;\n\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n  set targetDate(targetDate: Date) {\n    this._targetDate = setYear(targetDate, 2000);\n    this._subNDayTimeStamp = subDays(this._targetDate, this._subN).getTime();\n    this._addNDayTimeStamp = addDays(this._targetDate, this._addN).getTime();\n\n\n    if((getYear(this._targetDate) == getYear(this._subNDayTimeStamp)) && (getYear(this._targetDate) == getYear(this._addNDayTimeStamp))) {\n      this.isRangeCrossYear = false;\n    }\n\n    else {\n      this._subNDayTimeStamp = (setYear(this._subNDayTimeStamp, 2000)).getTime();\n      this._addNDayTimeStamp = (setYear(this._addNDayTimeStamp, 2000)).getTime();\n      this.isRangeCrossYear = true;\n    }\n\n    console.warn(this._subN, \"  subDate:  \", this._subNDayTimeStamp);\n    console.warn(this._addN, \"  addDate:  \", this._addNDayTimeStamp);\n  }\n\n  set subN(subN: number) {\n    this._subN = subN;\n  }\n\n  set addN(addN: number) {\n    this._addN = addN;\n  }\n\n\n\n  getAPIName(): string {\n    return 'getCustomerBirthdayList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCustomerBirthday.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let customerObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (customerObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n\n        // if(this.isRangeCrossYear) {\n        //   customerObj.addRestriction(new ORCompoundRestriction([new GreaterOrEqualRestriction('BirthDayTimeStamp', [this._subNDayTimeStamp]), new LessOrEqualRestriction('BirthDayTimeStamp', [this._addNDayTimeStamp])]));\n        // }\n\n        // else {\n        //   customerObj.addRestriction(new GreaterOrEqualRestriction('BirthDayTimeStamp', [this._subNDayTimeStamp]));\n        //   customerObj.addRestriction(new LessOrEqualRestriction('BirthDayTimeStamp', [this._addNDayTimeStamp]));\n        // }\n\n        customerObj.addRestriction(new OrderByRestriction([{ column: 'LastName', order: 'ASC' }]))\n\n        //customerObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' }]));\n        // calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' },{ column: 'EndTime', order: 'DESC' }]));\n        dao.queryByTable(customerObj).subscribe((resp) => {\n          console.warn(\"resp.Body in CustomerBirthdayListAPI: \",resp);\n          resp.Body = resp.Body.filter(birthday => this._judgeCustomrtIsInRange(birthday));\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n  private _judgeCustomrtIsInRange(item): boolean {\n    let birthDayTimeStamp = new Date('2000/' + item.BirthdayMonth + '/' + item.BirthdayDate).getTime();\n    if(this.isRangeCrossYear) {\n      return birthDayTimeStamp >= this._subNDayTimeStamp || birthDayTimeStamp <= this._addNDayTimeStamp ;\n    }\n\n    else {\n      return birthDayTimeStamp >= this._subNDayTimeStamp && birthDayTimeStamp <= this._addNDayTimeStamp ;\n    }\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class DashboardUpdateToReadAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _messageType : string;\n    private _messageDataCategory : string;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    public setMessageType(type) {\n        this._messageType = type;\n    }\n\n    public setMessageDataCategory(dataCategory) {\n        this._messageDataCategory = dataCategory;\n    }\n\n\n\n    getAPIName(): string {\n        return 'updateDashboardToRead';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n                if (messageObj) {\n                    dao = new ClientCustomDao(dao);\n\n                    messageObj = (<SQLiteTable>messageObj);\n\n                    messageObj.addRestriction(new EqualRestriction('MessageCategory',[this._messageDataCategory]));\n                    messageObj.addRestriction(new EqualRestriction('MessageType',[this._messageType]));\n                    messageObj.setValue(\"Status\", 'Reading');\n\n                    dao.updateByTable(messageObj).subscribe((resp) => {\n                        \n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {Observable} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {CalendarEventDetail} from '../service/model/CalendarEventDetail';\n\nexport class CalendarEventAddAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _calendarEvent:  CalendarEventDetail;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  setCalendarEvent(value: CalendarEventDetail) {\n    this._calendarEvent = value;\n  }\n\n  getAPIName() : string {\n    return 'addCalendarEvent';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/addCalendarEvent.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        calendarObj.setValue('CustomerClientID', this._calendarEvent.customerClientID);\n        calendarObj.setValue('Title', this._calendarEvent.title);\n        calendarObj.setValue('Location', this._calendarEvent.location);\n        calendarObj.setValue('CalendarType', this._calendarEvent.activity);\n        if(this._calendarEvent.allDay == true) {\n          calendarObj.setValue('IsAllDay', 'Y');\n        } else {\n          calendarObj.setValue('IsAllDay', 'N');\n        }\n        calendarObj.setValue('StartTime', this._calendarEvent.start.getTime());\n        calendarObj.setValue('EndTime', this._calendarEvent.end.getTime());\n        if(this._calendarEvent.isAlert == true) {\n          calendarObj.setValue('IsAlert', 'Y');\n        } else {\n          calendarObj.setValue('IsAlert', 'N');\n        }\n        calendarObj.setValue('Alert1', this._calendarEvent.alert1);\n        calendarObj.setValue('Alert2', this._calendarEvent.alert2);\n        calendarObj.setValue('Alert3', null);\n        calendarObj.setValue('Remark', this._calendarEvent.remark);\n        dao.insertByTable(calendarObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { EqualRestriction } from '@allianzSND/core';\n\nexport class CalendarEventDeleteAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName(): string {\n    return 'deleteCalendarEvent';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/deleteCalendarEvent.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let calendarExtObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar_Extension\");\n\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new EqualRestriction('ClientID', [this._clientID]));\n        calendarExtObj.addRestriction(new EqualRestriction('ClientID', [this._clientID]));\n        dao.deleteByTable(calendarObj).toPromise().then((resp) => {\n            observer.next(resp);\n            observer.complete();    \n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, SQLiteResponse } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, of } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { EqualRestriction } from '@allianzSND/core';\n\nexport class CalendarEventDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  set ClientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName(): string {\n    return 'getCalendarEventDetail';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCalendarEventDetail.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n\n      console.log(\"CalendarEventDetail ClientID:\", this._clientID);\n\n      let defaultObj = {\n        ClientID: null,\n        CalendarID: null,\n        CustomerClientID: null,\n        Title: '',\n        Location: '',\n        CalendarType: null,\n        IsAllDay: 'N',\n        StartTime: null,\n        EndTime: null,\n        IsAlert: 'Y',\n        Alert1: '8',\n        Alert2: '',\n        Alert3: null,\n        Remark: '',\n        DataSource: 'APP'\n      };\n      if (!this._clientID) {\n        //Add\n        let resp = new SQLiteResponse({\n          \"isSuccess\": true\n        }, [defaultObj]);\n        observer.next(resp);\n        observer.complete();\n      }\n      else {\n        let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_VW_Calendar\");\n        let dao = this._DaoFactory.getDefaultDao();\n        if (calendarObj != undefined && dao != undefined) {\n\n          dao = new ClientCustomDao(dao);\n          calendarObj.addRestriction(new EqualRestriction('ClientID', [this._clientID]));\n          dao.queryByTable(calendarObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n        } else {\n          observer.next(false);\n          observer.complete();\n        }\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { GreaterOrEqualRestriction } from '@allianzSND/core';\nimport { LessOrEqualRestriction } from '@allianzSND/core';\nimport { OrderByRestriction } from \"@allianzSND/core\";\n\nexport class CalendarEventListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _startTime: Date;\n  private _endTime: Date;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  set startTime(startTime: Date) {\n    this._startTime = startTime;\n  }\n\n  set endTime(endTime: Date) {\n    this._endTime = endTime;\n  }\n\n  getAPIName(): string {\n    return 'getCalendarEventList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCalendarEventList.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_VW_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new GreaterOrEqualRestriction('EndTime', [this._startTime.getTime()]));\n        calendarObj.addRestriction(new LessOrEqualRestriction('StartTime', [this._endTime.getTime()]));\n        calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' }]));\n        // calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' },{ column: 'EndTime', order: 'DESC' }]));\n        dao.queryByTable(calendarObj).subscribe((resp) => {\n          console.log(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\nimport {CalendarEventDetail} from '../service/model/CalendarEventDetail';\n\nexport class CalendarEventUpdateAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n  private _calendarEvent: CalendarEventDetail;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n\n  set ClientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  setCalendarEvent(value: CalendarEventDetail) {\n    this._calendarEvent = value;\n  }\n\n  getAPIName() : string {\n    return 'updateCalendarEvent';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/updateCalendarEvent.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n        calendarObj.setValue('CalendarID', this._calendarEvent.calendarID);\n        calendarObj.setValue('Title', this._calendarEvent.title);\n        calendarObj.setValue('Location', this._calendarEvent.location);\n        calendarObj.setValue('CustomerClientID', this._calendarEvent.customerClientID);\n        calendarObj.setValue('CalendarType', this._calendarEvent.activity);\n        if(this._calendarEvent.allDay == true) {\n          calendarObj.setValue('IsAllDay', 'Y');\n        } else {\n          calendarObj.setValue('IsAllDay', 'N');\n        }\n        calendarObj.setValue('StartTime', this._calendarEvent.start.getTime());\n        calendarObj.setValue('EndTime', this._calendarEvent.end.getTime());\n        if(this._calendarEvent.isAlert == true) {\n          calendarObj.setValue('IsAlert', 'Y');\n        } else {\n          calendarObj.setValue('IsAlert', 'N');\n        }\n        calendarObj.setValue('Alert1', this._calendarEvent.alert1);\n        calendarObj.setValue('Alert2', this._calendarEvent.alert2);\n        calendarObj.setValue('Alert3', this._calendarEvent.alert3);\n        calendarObj.setValue('Remark', this._calendarEvent.remark);\n        dao.updateByTable(calendarObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, EqualRestriction, TableUtils } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { CalendarEventDetail } from '../service/model/CalendarEventDetail';\n\nexport class CalendarEventSaveAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private Data: any;\n    private _DaoFactory: DaoFactory;\n    constructor(DaoFactory) {\n        this._DaoFactory = DaoFactory;\n    }\n\n\n\n\n    getAPIName(): string {\n        return 'saveCalendarEvent';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.log(\"CalendarEventSaveAPI executeSQL:\", this.Data);\n        let Alerts = [this.Data.Alert1, this.Data.Alert2];\n        if (this.Data.IsAlert === 'Y') {\n            Alerts.sort((a, b) => parseInt(a) - parseInt(b))\n            this.Data.Alert1 = Alerts[0];\n            this.Data.Alert2 = Alerts[1];\n        }\n\n        return Observable.create((observer) => {\n            let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n            let calendarExtObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar_Extension\");\n            let dao = this._DaoFactory.getDefaultDao();\n            if (calendarObj != undefined) {\n\n                dao = new ClientCustomDao(dao);\n                if (this.Data.ClientID) {\n                    calendarObj.setValue('ClientID', this.Data.ClientID);\n                    calendarExtObj.setValue('ClientID', this.Data.ClientID);\n                }\n                calendarObj.setValue('CustomerClientID', this.Data.CustomerClientID);\n                calendarObj.setValue('Title', this.Data.Title);\n                calendarObj.setValue('Location', this.Data.Location);\n                calendarObj.setValue('CalendarType', this.Data.CalendarType);\n                calendarObj.setValue('IsAllDay', this.Data.IsAllDay);\n                calendarObj.setValue('StartTime', this.Data.StartDateTime.getTime());\n                calendarObj.setValue('EndTime', this.Data.EndDateTime.getTime());\n                calendarObj.setValue('IsAlert', this.Data.IsAlert);\n                if (this.Data.IsAlert === 'Y') {\n                    calendarObj.setValue('Alert1', this.Data.Alert1);\n                    calendarObj.setValue('Alert2', this.Data.Alert2);\n                }\n                else {\n                    calendarObj.setValue('Alert1', null);\n                    calendarObj.setValue('Alert2', null);\n                }\n                calendarObj.setValue('Alert3', null);\n                calendarObj.setValue('Remark', this.Data.Remark);\n                console.log(\"save calendarObj:\", calendarObj);\n\n\n                // fill extension\n                calendarExtObj = TableUtils.fillTableColumn(calendarExtObj, this.Data);\n                \n                if (this.Data[\"EditType\"] === \"edit\") {\n                    calendarObj.addRestriction(new EqualRestriction(\"ClientID\", [this.Data.ClientID]));\n                    calendarExtObj.addRestriction(new EqualRestriction(\"ClientID\", [this.Data.ClientID]));\n                    dao.transactionUpdate(calendarObj);\n                    dao.transactionUpdate(calendarExtObj);\n                }\n                else {\n                    dao.transactionInsert(calendarObj);\n                    dao.transactionInsert(calendarExtObj);\n                }\n\n                dao.runTransaction().subscribe(resp => {\n                    observer.next(resp);\n                    observer.complete();\n                })\n            } else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n"],"names":["InjectionToken","startOfDay","addHours","uuid","getMinutes","addMinutes","getMonth","getYear","getDate","getHours","isSameDay","isAfter","isBefore","SelectOption","Injectable","ProfileCodeService","tslib_1.__extends","EventEmitter","Language","format","Component","ElementRef","MetaService","DefaultMetaParser","APIExecutor","Optional","Inject","showRuleToken","Output","Input","HostListener","FormMetaComponent","StringUtils","DatePipe","DisplayMetaComponent","Observable","ValidationResult","differenceInMinutes","APIDispatch","APIFactory","ORCompoundRestriction","LikeRestriction","tslib_1.__values","AndCompoundRestriction","EqualRestriction","InRestriction","NotEqualRestriction","GreaterOrEqualRestriction","LessOrEqualRestriction","of","from","differenceInCalendarDays","startOfMonth","endOfMonth","startOfWeek","endOfWeek","endOfDay","isSameMonth","ChangeAction","subMinutes","addDays","Setting","PageInfo","ChangeDetectionStrategy","ChangeDetectorRef","SettingService","TranslateService","ModalManager","DataSyncService","ViewChild","UiInformationBtnComponent","UiInformationContentComponent","DateUtils","InputExecutor","ViewChildren","BehaviorSubject","AppRouter","Subject","takeUntil","take","NotificationType","trigger","state","style","transition","animate","DeviceService","NotificationMgr","ConfigToken","NgModule","NxIconModule","NxButtonModule","NxFormfieldModule","NxDatefieldModule","NxNativeDateModule","UIModule","CoreModule","CommonModule","FormsModule","NxDropdownModule","NxRadioModule","NxInputModule","NxMessageModule","NxProgressbarModule","NxModalModule","NxAccordionModule","NxGridModule","ReactiveFormsModule","SQLiteResponse","ClientCustomDao","TableUtils","OrderByRestriction","LimitRestriction","OffsetRestriction","setYear","subDays"],"mappings":"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"}
