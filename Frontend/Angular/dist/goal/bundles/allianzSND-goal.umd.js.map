{"version":3,"file":"allianzSND-goal.umd.js.map","sources":["ng://@allianzSND/goal/lib/injectionToken/injection-token.ts","ng://@allianzSND/goal/lib/goal.module.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetGoalSettingAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetYearConfigAPI.ts","ng://@allianzSND/goal/lib/api/AgencyPlanGetMainAPI.ts","ng://@allianzSND/goal/lib/api/AgencyPlanGetDetailAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetExpectedAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetValue.ts","node_modules/tslib/tslib.es6.js","ng://@allianzSND/goal/lib/api/GoalSettingSetExpectedAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetPlanAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetActualAPI.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingCommon.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep1.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep2.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep3.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep4.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep5.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingYearConfig.ts","ng://@allianzSND/goal/lib/service/model/ActivityValue.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingGoalStatus.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStepData.ts","ng://@allianzSND/goal/lib/service/model/IsApproveInfo.ts","ng://@allianzSND/goal/lib/service/model/MonthlyPlanFYFCData.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanAgentInfo.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanDetail.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanGoalExpected.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingPlanPopup.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanDirectUnitDetail.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanMainData.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanDataForOverview.ts","ng://@allianzSND/goal/lib/service/model/SettingChangeEvent.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingTranslate.ts","ng://@allianzSND/goal/lib/service/model/CombineStep5AndAgecyPlanData.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep3ForTabChange.ts","ng://@allianzSND/goal/lib/service/model/VaildError.ts","ng://@allianzSND/goal/lib/service/model/ApproveInfo.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStepDataParams.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanStatus.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanMainInfo.ts","ng://@allianzSND/goal/lib/service/goal-store.service.ts","ng://@allianzSND/goal/lib/service/goal-setting.service.ts","ng://@allianzSND/goal/lib/service/goal-valid.service.ts","ng://@allianzSND/goal/lib/service/agencyPlanStore-service.ts","ng://@allianzSND/goal/lib/components/goal-ui-title-list/goa-ui-title-list-item.ts","ng://@allianzSND/goal/lib/utils/goal-setting-util.service.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\nimport { goalSettingStep } from \"../interface/goalSettingStep\";\nimport { goalSettingShowRule } from '../interface/goalSettingShowRule';\nimport { GoalSubmitExtension } from '../interface/GoalSubmitExtension';\nimport { GoalValidExtension } from \"../interface/goalValidExtension\";\n\nexport const goalSettingStepToken = new InjectionToken<goalSettingStep>('goalSettingStep');\nexport const goalValidToken = new InjectionToken<GoalValidExtension>('GoalValidExtension');\nexport const goalSettingShowRuleToken = new InjectionToken<goalSettingShowRule>('goalSettingShowRule');\nexport const GoalSubmitExtensionToken = new InjectionToken<GoalSubmitExtension>(\"GoalSubmitExtension\");\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@allianzSND/core';\nimport { UIModule } from '@allianzSND/ui';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    UIModule\n  ],\n  declarations: [\n  ],\n  exports: [\n  ]\n})\nexport class GoalModule { }\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ISQLiteAPI, EqualRestriction, StringUtils, ClientCustomDao, PageInfo, LimitRestriction, OffsetRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class GoalSettingGetGoalSettingAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    private _dataYear: number = -1\n    setDataYear(dataYear: number) {\n        this._dataYear = dataYear;\n    }\n\n    getAPIName(): string {\n        return 'getGoalSettingGoalSetting';\n    }\n\n    getMockPath(): string {\n      \n        if(this._dataYear == 2019) {\n            return './assets/mock/getGoalSettingGoalSetting_2019.json';\n        }\n\n        else if(this._dataYear == 2020) {\n            return './assets/mock/getGoalSettingGoalSetting_2020.json';\n        }\n\n        else if(this._dataYear == -1) {\n            return './assets/mock/getGoalSettingGoalSetting_all.json';\n        }\n\n        else {\n            //todo throw error\n            console.warn(\"yearStatus dataYear not match\");\n            return ''\n        }\n    }\n\n    executeSQL(): Observable<any> {\n        console.log(\"queryByTable: getGoalSettingGoalSetting this._dataYear:\", this._dataYear);\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n\n                let goalSettingObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Goal_Setting\");\n                if (goalSettingObj) {\n\n                    if(this._dataYear != -1) {\n                        goalSettingObj.addRestriction(new EqualRestriction('DataYear',[this._dataYear]));\n                    }\n\n                    dao = new ClientCustomDao(dao);\n\n\n                    dao.queryByTable(goalSettingObj).subscribe((resp) => {\n                        console.log(\"queryByTable overviewYearStatus: \", JSON.stringify(resp));\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ISQLiteAPI, EqualRestriction, StringUtils, ClientCustomDao, PageInfo, LimitRestriction, OffsetRestriction, OrderByRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class GoalSettingGetYearConfigAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    private _dataYear: number = -1\n    setDataYear(dataYear: number) {\n        this._dataYear = dataYear;\n    }\n\n    getAPIName(): string {\n        return 'getGoalSettingYearConfig';\n    }\n\n    getMockPath(): string {\n        if(this._dataYear == 2019) {\n            return './assets/mock/getGoalSettingYearConfig_2019.json';\n        }\n\n        else if(this._dataYear == 2020) {\n            return './assets/mock/getGoalSettingYearConfig_2020.json';\n        }\n\n        else if(this._dataYear == -1) {\n            return './assets/mock/getGoalSettingYearConfig_all.json';\n        }\n\n        else {\n            console.warn(\"yearConfig dataYear not match\");\n            return ''\n        }\n    }\n\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                let yearConfigObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Year_Config\");\n                if (yearConfigObj) {\n\n                    if(this._dataYear != -1) {\n                        yearConfigObj.addRestriction(new EqualRestriction('DataYear',[this._dataYear]));\n                    }\n\n                    yearConfigObj.addRestriction(new OrderByRestriction([{ column: 'DataYear', order: 'ASC' }]));\n\n                    dao = new ClientCustomDao(dao);           \n                    \n                    \n                    dao.queryByTable(yearConfigObj).subscribe((resp) => {\n                        console.warn(\"queryByTable yearConfig: \", JSON.stringify(resp));\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IMockAPI, IAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, EqualRestriction } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\n\nexport class AgencyPlanGetMainAPI implements IMockAPI, IAPI, ISQLiteAPI {\n  private _dataYear: number;\n\n  setDataYear(dataYear: number) {\n    this._dataYear = dataYear\n  }\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  getAPIName(): string {\n    return \"getAgencyPlanMain\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/getAgencyPlanMainMock.json\";\n  }\n\n  executeSQL(): Observable<any> {\n    console.log(\"dataYear\", this._dataYear);\n    return Observable.create((observer) => {\n      let agencyMainObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Agency_Plan_Main\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (agencyMainObj != undefined && dao != undefined) {\n        dao = new ClientCustomDao(dao);\n        agencyMainObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n        dao.queryByTable(agencyMainObj).subscribe((resp) => {\n          console.log(\"resp\", resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IMockAPI, IAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, EqualRestriction} from '@allianzSND/core';\nimport { Observable } from 'rxjs';\n\nexport class AgencyPlanGetDetailAPI implements IMockAPI, IAPI, ISQLiteAPI{\n  private _dataYear: number;\n\n  setDataYear(dataYear: number) {\n    this._dataYear = dataYear;\n  }\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  getAPIName(): string {\n    return \"getAgencyPlanDetail\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/getAgencyPlanDetail.json\";\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let agencyDetailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Agency_Detail_Data\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (agencyDetailObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        agencyDetailObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n        dao.queryByTable(agencyDetailObj).subscribe((resp) => {\n          console.log(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IMockAPI, IAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, EqualRestriction} from '@allianzSND/core';\nimport { Observable } from 'rxjs';\n\nexport class GoalSettingGetExpectedAPI implements IMockAPI, IAPI, ISQLiteAPI{\n  private _dataYear: number;\n\n  setDataYear(dataYear: number) {\n    this._dataYear = dataYear\n  }\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  getAPIName(): string {\n    return \"getGoalSettingExpected\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/getGoalSettingExpected.json\";\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let goalExpectedObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Goal_Setting_Expected\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (goalExpectedObj != undefined && dao != undefined) {\n        dao = new ClientCustomDao(dao);\n        goalExpectedObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n        dao.queryByTable(goalExpectedObj).subscribe((resp) => {\n          console.log(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ISQLiteAPI, EqualRestriction, ClientCustomDao } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class GoalSettingGetValueAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    private _dataYear: number = -1;\n    setDataYear(dataYear: number) {\n        this._dataYear = dataYear;\n    }\n\n    getAPIName(): string {\n        return 'getGoalSettingValue';\n    }\n\n    getMockPath(): string {\n        if (this._dataYear == 2019) {\n            return './assets/mock/getGoalSettingValue_2019.json';\n        }\n        else if (this._dataYear == 2020) {\n            return './assets/mock/getGoalSettingValue_2020.json';\n        }\n        else {\n            console.warn(\"GoalSettingGetValueAPI mock path not found\");\n            return '';\n        }\n\n    }\n\n    executeSQL(): Observable<any> {\n        /*\n            \"FYFC\": 200,\n            \"FYFC_Actual\": 30,\n            \"FYFC_Now_To_Year_End\": 170,\n            \"Manpower\": 70,\n            \"Recruitment\": 40\n         */\n        return Observable.create((observer) => {\n            console.log(\"queryByTable: goalSettingValue this._dataYear:\", this._dataYear);\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n\n                let goalSettingValue = this.daoFactory.getDefaultTable(\"TW_LH_SD_Goal_Setting_Value\");\n                if (goalSettingValue) {\n\n\n                    dao = new ClientCustomDao(dao);\n                    if (this._dataYear != -1) {\n                        goalSettingValue.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n                    }\n\n\n                    //todo!\n                    dao.queryByTable(goalSettingValue).subscribe((resp) => {\n                        console.log(\"queryByTable: goalSettingValue\", resp);\n\n\n\n\n\n\n                        // console.warn(\"goalSettingValue========: \",data);\n                        observer.next(resp);\n                        observer.complete();\n\n                    });\n\n                }\n\n\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { IMockAPI, IAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, EqualRestriction, SQLiteResponse } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\nexport class GoalSettingSetExpectedAPI implements IMockAPI, IAPI, ISQLiteAPI {\n  private _expectedRecruitment: object = {};\n  private _indirectRecruitment: number = 0;\n\n  setExpectedRecruitment(expectedRecruitment: object) {\n    this._expectedRecruitment = expectedRecruitment;\n  }\n\n  setIndirectRecruitment(indirectRecruitment: number) {\n    this._indirectRecruitment = indirectRecruitment;\n  }\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  getAPIName(): string {\n    return \"setGoalSettingExpected\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/saveSuccess.json\";\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create(async (observer) => {\n      let goalExpectedObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Goal_Setting_Expected\");\n      let goalExpectedExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Goal_Setting_Expected_Extension\");\n      let agencyMainObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Agency_Plan_Main\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (goalExpectedObj != undefined && agencyMainObj != undefined && dao != undefined) {\n        dao = new ClientCustomDao(dao);\n\n        agencyMainObj.addRestriction(new EqualRestriction('DataYear', [this._expectedRecruitment['DataYear']]));\n        agencyMainObj.addRestriction(new EqualRestriction('DataType', ['Recruitment']));\n        agencyMainObj.setValue('MonthPlan', [this._expectedRecruitment['RecruitmentTotal'] + this._indirectRecruitment]);\n\n\n        goalExpectedObj.setValue('Q1', this._expectedRecruitment['Q1']);\n        goalExpectedObj.setValue('Q2', this._expectedRecruitment['Q2']);\n        goalExpectedObj.setValue('Q3', this._expectedRecruitment['Q3']);\n        goalExpectedObj.setValue('Q4', this._expectedRecruitment['Q4']);\n        goalExpectedObj.setValue('FYFC', this._expectedRecruitment['FYFC']);\n        goalExpectedObj.setValue('ANP', this._expectedRecruitment['ANP']);\n        goalExpectedObj.setValue('DataYear', this._expectedRecruitment['DataYear']);\n\n        goalExpectedObj.addRestriction(new EqualRestriction('DataYear', [this._expectedRecruitment['DataYear']]));\n        let goalExpectedResp = await dao.queryByTable(goalExpectedObj).toPromise();\n        console.log('dataYear: ', this._expectedRecruitment['DataYear'], ' goalExpectedResp:', goalExpectedResp);\n        if (goalExpectedResp.Body.length > 0) {\n          //sqlite has data;\n          dao.transactionUpdate(goalExpectedObj);\n        }\n        else {\n          //sqlite not has data;\n          let clientID = uuid();\n          goalExpectedObj.setValue('ClientID', clientID);\n          goalExpectedExtObj.setValue('ClientID', clientID);\n          dao.transactionInsert(goalExpectedObj);\n          dao.transactionInsert(goalExpectedExtObj);\n        }\n\n\n        // dao.transactionUpdate(goalExpectedObj);\n        dao.transactionUpdate(agencyMainObj);\n        dao.runTransaction().subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, DaoFactory, ClientCustomDao, EqualRestriction } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, from } from 'rxjs';\n\n\n\nexport class GoalSettingGetPlanAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _dataYear: number = -1;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n\n  setDataYear(year: number) {\n    this._dataYear = year;\n  }\n\n\n  getAPIName(): string {\n    return 'getGoalSettingPlan';\n  }\n\n  getMockPath(): string {\n    //alert(\"personal progress mock data\");\n    if (this._dataYear == 2019) {\n      return './assets/mock/getGoalSettingPlan_2019.json';\n    }\n    else if (this._dataYear == 2020) {\n      return './assets/mock/getGoalSettingPlan_2020.json';\n    }\n    else {\n      console.warn(\"datYear not match mock path\");\n      return '';\n    }\n  }\n\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let dao = this.daoFactory.getDefaultDao();\n      if (dao != undefined) {\n\n\n        let goalSettingObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Goal_Setting_Plan_Value\");\n        if (goalSettingObj) {\n\n          if (this._dataYear != -1) {\n            goalSettingObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n          }\n\n          dao = new ClientCustomDao(dao);\n\n\n          dao.queryByTable(goalSettingObj).subscribe((resp) => {\n            console.warn(\"queryByTable Goal_Setting_Plan_Value: \", JSON.stringify(resp));\n            observer.next(resp);\n            observer.complete();\n          });\n        }\n        else {\n          observer.next(false);\n          observer.complete();\n        }\n\n      }\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n\n\n}","import { IAPI, EqualRestriction, ClientCustomDao } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, from } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\n\n\n\nexport class GoalSettingGetActualAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n  private _dataYear: number = -1;\n\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n  setDataYear(year: number) {\n    this._dataYear = year;\n  }\n\n\n\n  getAPIName(): string {\n    return 'getGoalSettingActualValue';\n  }\n\n  getMockPath(): string {\n    //alert(\"personal progress mock data\");\n    if (this._dataYear == 2019) {\n      return './assets/mock/getGoalSettingActualValue_2019.json';\n    }\n    else if (this._dataYear == 2020) {\n      return './assets/mock/getGoalSettingActualValue_2020.json';\n    }\n    else {\n      //todo throw error\n      console.warn('dataYear not match mock path');\n      return '';\n    }\n  }\n\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let dao = this.daoFactory.getDefaultDao();\n      if (dao != undefined) {\n\n\n        let goalSettingObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Actual_Value\");\n        if (goalSettingObj) {\n\n          if (this._dataYear != -1) {\n            goalSettingObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n          }\n\n          dao = new ClientCustomDao(dao);\n\n\n          dao.queryByTable(goalSettingObj).subscribe((resp) => {\n            console.warn(\"queryByTable Goal_Setting_Actual_Value: \", resp);\n            observer.next(resp);\n            observer.complete();\n          });\n        }\n        else {\n          observer.next(false);\n          observer.complete();\n        }\n\n      }\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n}","import { GoalSettingStep4 } from \"./GoalSettingStep4\";\nimport { GoalSettingPlanPopup } from \"./GoalSettingPlanPopup\";\nimport { GoalSettingStepData } from \"./GoalSettingStepData\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\nexport enum DWM_DATETYPE {\n    DAILY = 'Daily',\n    WEEKLY = 'Weekly',\n    MONTHLY = 'Monthly'\n}\n\nexport enum GOALSETTINGSTEP {\n    STEP1 = 1,\n    STEP2 = 2,\n    STEP3 = 3,\n    STEP4 = 4,\n    STEP5 = 5\n}\n\nexport enum GOALSETTINGSETMODE {\n    SET_NEXT_YESR,\n    ADGUST_GOAL\n}\n\nexport enum ROLE {\n    // FEMALEAGENT = '01',\n    // FEMALEAGENTLEADER = '02',\n    // MALEAGENT = '03',\n    // MALEAGENTLEADER = '04',\n\n    // AGENT = 'AG',\n    // AGENTLEADER = 'AL',\n    // CAO = 'Manager',\n    // ZONEHEAD = 'Supervisor'\n    AGENT = 'AG',\n    AGENTLEADER = 'AL',\n    ZONEHEAD = 'Manager',\n    CAO = 'Supervisor'\n}\n\nexport enum APPROVESTATUS {\n    PENDING = 'P',\n    WAINTING = 'W',\n    NONE = 'N',\n    APPROVE = 'A',\n}\n\nexport enum APITYPE {\n    SQLITE = 'SQLITE',\n    RESTFUL = 'RESTFUL',\n    MOCK = 'MOCK'\n}\n\n@Bean('ValidationState')\nexport class ValidationState {\n\n    @Required\n    private _step: number;\n\n    @Required\n    private _isDataLegal: boolean;\n    \n    constructor() {\n    }\n\n    set step(step: number) {\n        this._step = step;\n    }\n\n    set isDataLegal(isDataLegal: boolean) {\n        this._isDataLegal = isDataLegal;\n    }\n\n    get step() {\n        return this._step;\n    }\n\n    get isDataLegal() {\n        return this._isDataLegal;\n    }\n}\n\nexport class PlanFYFCPopupInfo {\n    private _state: number;\n    private _data: GoalSettingStepData;\n\n    constructor(state: number, data: GoalSettingStepData) {\n        this._state = state;\n        this._data = data;\n    }\n\n    public set state(state: number) {\n        this._state = state;\n    }\n\n    public set data(data: GoalSettingStepData) {\n        this._data = data;\n    }\n\n    public get state(): number {\n        return this._state;\n    }\n\n    public get data(): GoalSettingStepData {\n        return this._data;\n    }\n}\n\n\n\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep1')\nexport class GoalSettingStep1 {\n\n    @Required\n    private _FYFC: string;\n\n    @Required\n    private _AnnualConvention: string;\n\n    @Required\n    private _MDRT: string;\n\n    @Required\n    private _PromotionPlan: string;\n\n    @Required\n    private _Actual: string;\n\n    @Required\n    private _FYFCNowToYearEnd: string;\n\n    private _ActivityFYFC: string;\n\n    private _ActivityDays: string;\n\n    constructor() {\n\n    }\n\n    public get FYFC(): string {\n        return this._FYFC;\n    }\n    public set FYFC(value: string) {\n        this._FYFC = value;\n    }\n    public get AnnualConvention(): string {\n        return this._AnnualConvention;\n    }\n    public set AnnualConvention(value: string) {\n        this._AnnualConvention = value;\n    }\n    public get MDRT(): string {\n        return this._MDRT;\n    }\n    public set MDRT(value: string) {\n        this._MDRT = value;\n    }\n    public get PromotionPlan(): string {\n        return this._PromotionPlan;\n    }\n    public set PromotionPlan(value: string) {\n        this._PromotionPlan = value;\n    }\n    public get Actual(): string {\n        return this._Actual;\n    }\n    public set Actual(value: string) {\n        this._Actual = value;\n    }\n    public get FYFCNowToYearEnd(): string {\n        return this._FYFCNowToYearEnd;\n    }\n    public set FYFCNowToYearEnd(value: string) {\n        this._FYFCNowToYearEnd = value;\n    }\n    public get ActivityFYFC(): string {\n        return this._ActivityFYFC;\n    }\n    public set ActivityFYFC(value: string) {\n        this._ActivityFYFC = value;\n    }\n    public get ActivityDays(): string {\n        return this._ActivityDays;\n    }\n    public set ActivityDays(value: string) {\n        this._ActivityDays = value;\n    }\n\n}\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep2')\nexport class GoalSettingStep2 {\n\n    @Required\n    private _PerCase: string;\n\n    constructor() {\n    }\n\n    public get PerCase(): string {\n        return this._PerCase;\n    }\n    public set PerCase(value: string) {\n        this._PerCase = value;\n    }\n\n}\n","import { ActivityValue } from \"./ActivityValue\";\nimport { TIMEBASE, Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep3')\nexport class GoalSettingStep3 {\n\n    @Required\n    private _ActivityValues: Array<ActivityValue> = [];\n\n    @Required\n    private _Activity: TIMEBASE;\n\n    constructor() {\n    }\n\n    public get Activity(): TIMEBASE {\n        return this._Activity;\n    }\n    public set Activity(value: TIMEBASE) {\n        this._Activity = value;\n    }\n    public get ActivityValues(): Array<ActivityValue> {\n        return this._ActivityValues;\n    }\n    public set ActivityValues(value: Array<ActivityValue>) {\n        this._ActivityValues = value;\n    }\n\n\n}\n","import { MonthlyPlanFYFCData } from \"./MonthlyPlanFYFCData\";\nimport { Required, Bean } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep4')\nexport class GoalSettingStep4 {\n\n    @Required\n    private _Forecast: string;\n\n    @Required\n    private _Shortfall: string;\n\n    @Required\n    private _Actual: string;\n\n    @Required\n    private _MonthList: Array<MonthlyPlanFYFCData> = [];\n\n    constructor() {\n    }\n\n    public get Forecast(): string {\n        return this._Forecast;\n    }\n    public set Forecast(value: string) {\n        this._Forecast = value;\n    }\n    public get Shortfall(): string {\n        return this._Shortfall;\n    }\n    public set Shortfall(value: string) {\n        this._Shortfall = value;\n    }\n    public get Actual(): string {\n        return this._Actual;\n    }\n    public set Actual(value: string) {\n        this._Actual = value;\n    }\n    public get MonthList(): Array<MonthlyPlanFYFCData> {\n        return this._MonthList;\n    }\n    public set MonthList(value: Array<MonthlyPlanFYFCData>) {\n        this._MonthList = value;\n    }\n\n    public clone() {\n        const cloneGoalSettingStep4 = new GoalSettingStep4();\n        cloneGoalSettingStep4.Forecast = this._Forecast;\n        cloneGoalSettingStep4.Shortfall = this._Shortfall;\n        cloneGoalSettingStep4.MonthList = this._MonthList.map(x => x.clone());\n        cloneGoalSettingStep4.Actual = this._Actual;\n        return cloneGoalSettingStep4;\n    }\n}\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep5')\nexport class GoalSettingStep5 {\n\n    @Required\n    private _TeamFYFC: string;\n\n    @Required\n    private _TeamANP: string;\n\n    @Required\n    private _Manpower: string;\n\n    @Required\n    private _Recruitment: string;\n\n    @Required\n    private _TeamFYFCActual: string;\n\n    @Required\n    private _TeamANPActual: string;\n\n    @Required\n    private _TeamFYFCNowToYearEnd: string;\n\n    @Required\n    private _TeamANPNowToYearEnd: string;\n\n\n    constructor() {\n    }\n\n    public get TeamFYFC(): string {\n        return this._TeamFYFC;\n    }\n    public set TeamFYFC(value: string) {\n        this._TeamFYFC = value;\n    }\n    public get TeamANP(): string {\n        return this._TeamANP;\n    }\n    public set TeamANP(value: string) {\n        this._TeamANP = value;\n    }\n    public get Manpower(): string {\n        return this._Manpower;\n    }\n    public set Manpower(value: string) {\n        this._Manpower = value;\n    }\n    public get Recruitment(): string {\n        return this._Recruitment;\n    }\n    public set Recruitment(value: string) {\n        this._Recruitment = value;\n    }\n    public get TeamFYFCActual(): string {\n        return this._TeamFYFCActual;\n    }\n    public set TeamFYFCActual(value: string) {\n        this._TeamFYFCActual = value;\n    }\n    public get TeamANPActual(): string {\n        return this._TeamANPActual;\n    }\n    public set TeamANPActual(value: string) {\n        this._TeamANPActual = value;\n    }\n    public get TeamFYFCNowToYearEnd(): string {\n        return this._TeamFYFCNowToYearEnd;\n    }\n    public set TeamFYFCNowToYearEnd(value: string) {\n        this._TeamFYFCNowToYearEnd = value;\n    }\n    public get TeamANPNowToYearEnd(): string {\n        return this._TeamANPNowToYearEnd;\n    }\n    public set TeamANPNowToYearEnd(value: string) {\n        this._TeamANPNowToYearEnd = value;\n    }\n\n\n}\n","import { ExtensionData, Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingYearConfig')\nexport class GoalSettingYearConfig {\n\n    private _IsCurrent: string;\n\n    @Required\n    private _DataYear: number;\n\n    private _QuarterStartMonth: number;\n\n    private _QuarterEndMonth: number;\n\n    private _GoalSettingActivityProcMode: string;\n\n    @Required\n    private _GoalAndPlanDifferenceLimit: number;\n\n    @Required\n    private _PerformanceSettlementMonth: number;\n\n    @Required\n    private _WorkingMonth: number;\n\n    private _WorkingQuarter: number;\n\n    @Required\n    private _MonthQuantityOfYear: number;\n\n    private _FyfcCovertAnpRate: number;\n\n    @Required\n    private _InforceConvertSubmitRate: number;\n\n    @Required\n    private _InforceConvertMeetRate: number;\n\n    @Required\n    private _InforceConvertScheduleRate: number;\n\n    @Required\n    private _InforceConvertFindRate: number;\n\n    @Required\n    private _NowToYearEndDays: number;\n\n    private _Extension: ExtensionData;\n\n    // constructor(IsCurrent: string, DataYear: number,  QuarterStartMonth: number, QuarterEndMonth: number, GoalSettingActivityProcMode: string, GoalAndPlanDifferenceLimit: number, PerformanceSettlementMonth: number, WorkingMonth: number, MonthQuantityOfYear: number, FyfcCovertAnpRate: number, InforceConvertSubmitRate: number, InforceConvertMeetRate: number, InforceConvertScheduleRate: number, InforceConvertFindRate: number, NowToYearEndDays: number) {\n    //     this._IsCurrent = IsCurrent;\n    //     this._DataYear = DataYear;\n    //     this._QuarterStartMonth = QuarterStartMonth;\n    //     this._QuarterEndMonth = QuarterEndMonth;\n    //     this._GoalSettingActivityProcMode = GoalSettingActivityProcMode;\n    //     this._GoalAndPlanDifferenceLimit = GoalAndPlanDifferenceLimit;\n    //     this._PerformanceSettlementMonth = PerformanceSettlementMonth;\n    //     this._WorkingMonth = WorkingMonth;\n    //     this._MonthQuantityOfYear = MonthQuantityOfYear;\n    //     this._FyfcCovertAnpRate = FyfcCovertAnpRate;\n    //     this._InforceConvertSubmitRate = InforceConvertSubmitRate;\n    //     this._InforceConvertMeetRate = InforceConvertMeetRate;\n    //     this._InforceConvertScheduleRate = InforceConvertScheduleRate;\n    //     this._InforceConvertFindRate = InforceConvertFindRate;\n    //     this._NowToYearEndDays = NowToYearEndDays;\n \n    // }\n\n    constructor() {\n\n    }\n\n    public getExtension(){\n        return this._Extension;\n    }\n    public setExtension(extension){\n        this._Extension = extension;\n    }\n    \n    public get IsCurrent(): string {\n        return this._IsCurrent;\n    }\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public get QuarterStartMonth(): number {\n        return this._QuarterStartMonth;\n    }\n    public get QuarterEndMonth(): number {\n        return this._QuarterEndMonth;\n    }\n    public get GoalSettingActivityProcMode(): string {\n        return this._GoalSettingActivityProcMode;\n    }\n    public get GoalAndPlanDifferenceLimit(): number {\n        return this._GoalAndPlanDifferenceLimit;\n    }\n    public get PerformanceSettlementMonth(): number {\n        return this._PerformanceSettlementMonth;\n    }\n    public get WorkingMonth(): number {\n        return this._WorkingMonth;\n    }\n    public get WorkingQuarter(): number {\n        return this._WorkingQuarter;\n    }\n    public get MonthQuantityOfYear(): number {\n        return this._MonthQuantityOfYear;\n    }\n    public get FyfcCovertAnpRate(): number {\n        return this._FyfcCovertAnpRate;\n    }\n    public get InforceConvertSubmitRate(): number {\n        return this._InforceConvertSubmitRate;\n    }\n    public get InforceConvertMeetRate(): number {\n        return this._InforceConvertMeetRate;\n    }\n    public get InforceConvertScheduleRate(): number {\n        return this._InforceConvertScheduleRate;\n    }\n    public get InforceConvertFindRate(): number {\n        return this._InforceConvertFindRate;\n    }\n    public get NowToYearEndDays(): number {\n        return this._NowToYearEndDays;\n    }\n\n\n    public set IsCurrent(value: string) {\n        this._IsCurrent = value;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n    public set QuarterStartMonth(value: number) {\n        this._QuarterStartMonth = value;\n    }\n    public set QuarterEndMonth(value: number) {\n        this._QuarterEndMonth = value;\n    }\n    public set GoalSettingActivityProcMode(value: string) {\n        this._GoalSettingActivityProcMode = value;\n    }\n    public set GoalAndPlanDifferenceLimit(value: number) {\n        this._GoalAndPlanDifferenceLimit = value;\n    }\n    public set PerformanceSettlementMonth(value: number) {\n        this._PerformanceSettlementMonth = value;\n    }\n    public set WorkingMonth(value: number) {\n        this._WorkingMonth = value;\n    }\n    public set WorkingQuarter(value: number) {\n        this._WorkingQuarter = value;\n    }\n    public set MonthQuantityOfYear(value: number) {\n        this._MonthQuantityOfYear = value;\n    }\n    public set FyfcCovertAnpRate(value: number) {\n        this._FyfcCovertAnpRate = value;\n    }\n    public set InforceConvertSubmitRate(value: number) {\n        this._InforceConvertSubmitRate = value;\n    }\n    public set InforceConvertMeetRate(value: number) {\n        this._InforceConvertMeetRate = value;\n    }\n    public set InforceConvertScheduleRate(value: number) {\n        this._InforceConvertScheduleRate = value;\n    }\n    public set InforceConvertFindRate(value: number) {\n        this._InforceConvertFindRate = value;\n    }\n    public set NowToYearEndDays(value: number) {\n        this._NowToYearEndDays = value;\n    }\n\n  \n\n}\n","import { TIMEBASE, Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ActivityValue')\nexport class ActivityValue{\n\n    @Required\n    private _TimeBase: TIMEBASE;\n\n    @Required\n    private _Find: string;\n\n    @Required\n    private _Schedule: string;\n\n    @Required\n    private _Meet: string;\n\n    @Required\n    private _Submit: string;\n    \n    @Required\n    private _Inforce: string;\n    \n    constructor(TimeBase, Find, Schedule, Meet, Submit, Inforce) {\n        this._TimeBase = TimeBase;\n        this._Schedule = Schedule;\n        this._Find = Find;\n        this._Meet = Meet;\n        this._Submit = Submit;\n        this._Inforce = Inforce;\n    }\n\n    public get TimeBase(): TIMEBASE {\n        return this._TimeBase;\n    }\n    public get Find(): string {\n        return this._Find;\n    }\n    public get Schedule(): string {\n        return this._Schedule;\n    }\n    public get Meet(): string {\n        return this._Meet;\n    }\n    public get Submit(): string {\n        return this._Submit;\n    }\n    public get Inforce(): string {\n        return this._Inforce;\n    }\n\n}","import { APPROVESTATUS } from \"./GoalSettingCommon\";\nimport { ExtensionData, Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingGoalStatus')\nexport class GoalSettingGoalStatus {\n\n    @Required\n    private _DataYear: number;\n\n    private _IsCurrent: string;\n\n    @Required\n    private _PersonnelGoalApplicableYM: number;\n\n    @Required\n    private _TeamGoalApplicableYM: number;\n\n    @Required\n    private _GoalSetMonth: number;\n\n    @Required\n    private _ApproveStatus: APPROVESTATUS;\n\n    private _IsFirstTime: boolean;\n\n    private _IsNeedSetting: boolean;\n\n    private _RemainingDays: number;\n\n    private _SupervisorComment: string;\n\n    private _Extension: ExtensionData;\n\n    constructor() {\n\n    }\n\n    public getExtension() {\n        return this._Extension;\n    }\n    public setExtension(extension) {\n        this._Extension = extension;\n    }\n\n    public get PersonnelGoalApplicableYM(): number {\n        return this._PersonnelGoalApplicableYM;\n    }\n    public get TeamGoalApplicableYM(): number {\n        return this._TeamGoalApplicableYM;\n    }\n    public get GoalSetMonth(): number {\n        return this._GoalSetMonth;\n    }\n    public get ApproveStatus(): APPROVESTATUS {\n        return this._ApproveStatus;\n    }\n    public get IsFirstTime(): boolean {\n        return this._IsFirstTime;\n    }\n    public get IsNeedSetting(): boolean {\n        return this._IsNeedSetting;\n    }\n    public get RemainingDays(): number {\n        return this._RemainingDays;\n    }\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public get IsCurrent(): string {\n        return this._IsCurrent;\n    }\n    public get SupervisorComment(): string {\n        return this._SupervisorComment;\n    }\n\n\n\n    public set IsCurrent(value: string) {\n        this._IsCurrent = value;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n    public set PersonnelGoalApplicableYM(value: number) {\n        this._PersonnelGoalApplicableYM = value;\n    }\n    public set TeamGoalApplicableYM(value: number) {\n        this._TeamGoalApplicableYM = value;\n    }\n    public set GoalSetMonth(value: number) {\n        this._GoalSetMonth = value;\n    }\n    public set ApproveStatus(value: APPROVESTATUS) {\n        this._ApproveStatus = value;\n    }\n    public set IsFirstTime(value: boolean) {\n        this._IsFirstTime = value;\n    }\n    public set IsNeedSetting(value: boolean) {\n        this._IsNeedSetting = value;\n    }\n    public set RemainingDays(value: number) {\n        this._RemainingDays = value;\n    }\n    public set SupervisorComment(value: string) {\n        this._SupervisorComment = value;\n    }\n\n}","import { GoalSettingYearConfig } from \"./GoalSettingYearConfig\";\nimport { GoalSettingGoalStatus } from \"./GoalSettingGoalStatus\";\nimport { GoalSettingStep1 } from \"./GoalSettingStep1\";\nimport { GoalSettingStep2 } from \"./GoalSettingStep2\";\nimport { GoalSettingStep3 } from \"./GoalSettingStep3\";\nimport { GoalSettingStep4 } from \"./GoalSettingStep4\";\nimport { GoalSettingStep5 } from \"./GoalSettingStep5\";\nimport { AgencyPlanDetail } from \"./AgencyPlanDetail\";\nimport { AgencyPlanDataForOverview } from \"./AgencyPlanDataForOverview\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStepData')\nexport class GoalSettingStepData{\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _YearConfig: GoalSettingYearConfig;\n\n    @Required\n    private _GoalStatus: GoalSettingGoalStatus;\n\n    private _Step1: GoalSettingStep1;\n\n    private _Step2: GoalSettingStep2;\n\n    private _Step3: GoalSettingStep3;\n\n    @Required\n    private _Step4: GoalSettingStep4;\n\n    private _Step5: GoalSettingStep5;\n\n    private _AgencyPlan: AgencyPlanDataForOverview;\n\n    private _ActualList: Array<string> = [];\n\n    constructor(DataYear) {\n        this._DataYear = DataYear;\n    }\n    \n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public get YearConfig(): GoalSettingYearConfig {\n        return this._YearConfig;\n    }\n    public set YearConfig(value: GoalSettingYearConfig) {\n        this._YearConfig = value;\n    }\n    public get GoalStatus(): GoalSettingGoalStatus {\n        return this._GoalStatus;\n    }\n    public set GoalStatus(value: GoalSettingGoalStatus) {\n        this._GoalStatus = value;\n    }\n    public get Step1(): GoalSettingStep1 {\n        return this._Step1;\n    }\n    public set Step1(value: GoalSettingStep1) {\n        this._Step1 = value;\n    }\n    public get Step2(): GoalSettingStep2 {\n        return this._Step2;\n    }\n    public set Step2(value: GoalSettingStep2) {\n        this._Step2 = value;\n    }\n    public get Step3(): GoalSettingStep3 {\n        return this._Step3;\n    }\n    public set Step3(value: GoalSettingStep3) {\n        this._Step3 = value;\n    }\n    public get Step4(): GoalSettingStep4 {\n        return this._Step4;\n    }\n    public set Step4(value: GoalSettingStep4) {\n        this._Step4 = value;\n    }\n    public get Step5(): GoalSettingStep5 {\n        return this._Step5;\n    }\n    public set Step5(value: GoalSettingStep5) {\n        this._Step5 = value;\n    }\n    public get AgencyPlan(): AgencyPlanDataForOverview {\n        return this._AgencyPlan;\n    }\n    public set AgencyPlan(value: AgencyPlanDataForOverview) {\n        this._AgencyPlan = value;\n    }\n    public get ActualList(): Array<string> {\n        return this._ActualList;\n    }\n    public set ActualList(value: Array<string>) {\n        this._ActualList = value;\n    }\n\n\n\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('IsApproveInfo')\nexport class IsApproveInfo{\n    \n    @Required\n    private _IsNeedApprove: boolean;\n\n    @Required\n    private _IsPopup: boolean;\n\n    private _PopupType: string;\n\n\n    constructor(IsNeedApprove, IsPopup){\n        this._IsNeedApprove = IsNeedApprove;\n        this._IsPopup = IsPopup;\n    }\n\n    public get IsNeedApprove(): boolean {\n        return this._IsNeedApprove;\n    }\n    public set IsNeedApprove(value: boolean) {\n        this._IsNeedApprove = value;\n    }\n    public get IsPopup(): boolean {\n        return this._IsPopup;\n    }\n    public set IsPopup(value: boolean) {\n        this._IsPopup = value;\n    }\n    public get PopupType(): string {\n        return this._PopupType;\n    }\n    public set PopupType(value: string) {\n        this._PopupType = value;\n    }\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('MonthlyPlanFYFCData')\nexport class MonthlyPlanFYFCData {\n\n    @Required\n    private _Month: number;\n\n    @Required\n    private _Plan: string;\n\n    @Required\n    private _Actual: string;\n\n    constructor(Month:number, Plan:string, Actual:string){\n        this._Month = Month;\n        this._Plan = Plan;\n        this._Actual = Actual;\n    }\n\n    public get Month(): number {\n        return this._Month;\n    }\n\n    public get Actual(): string {\n        return this._Actual;\n    }\n\n    public get Plan(): string {\n        return this._Plan;\n    }\n    \n    public set Plan(value: string) {\n        this._Plan = value;\n    }\n\n    public clone(): MonthlyPlanFYFCData{\n        return new MonthlyPlanFYFCData(this._Month, this._Plan, this._Actual);\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanAgentInfo')\nexport class AgencyPlanAgentInfo {\n\n    @Required\n    private _AgentID: string;\n\n    @Required\n    private _AgentName: string;\n\n    @Required\n    private _DataYear: number;\n    \n    @Required\n    private _AppUseMode: string;\n\n    constructor(AgentID: string, AgentName: string, DataYear: number, AppUseMode: string) {\n        this._AgentID = AgentID;\n        this._AgentName = AgentName;\n        this._DataYear = DataYear;\n        this._AppUseMode = AppUseMode;\n    }\n\n    public get AgentID(): string {\n        return this._AgentID;\n    }\n\n    public get AgentName(): string {\n        return this._AgentName;\n    }\n    \n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    \n    public get AppUseMode(): string {\n        return this._AppUseMode;\n    }\n\n}\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanDetail')\nexport class AgencyPlanDetail {\n\n    @Required\n    private _AgentID: string;\n\n    @Required\n    private _AgentName: string;\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _AppUseMode: string;\n\n    @Required\n    private _JobGrade: string;\n\n    @Required\n    private _Actual: string;\n\n    @Required\n    private _CaseCount: string;\n\n    @Required\n    private _ClientID: string;\n\n    @Required\n    private _DataType: string;\n\n    @Required\n    private _DirectUnitType: string;\n    \n    @Required\n    private _Drilldown: string;\n\n    @Required\n    private _Forecast: string;\n\n    @Required\n    private _Goal: string;\n\n    @Required\n    private _IsApprove: string;\n\n    @Required\n    private _Manpower: number;\n\n    @Required\n    private _MonthPlan: string;\n\n    @Required\n    private _Orders: number;\n\n    @Required\n    private _PerCase: string;\n\n    @Required\n    private _Recruitment: number;\n\n    @Required\n    private _IsHasDot: boolean;\n    \n    @Required\n    private _TextColor: string;\n\n    constructor(){\n\n    }\n\n    public get AgentID(): string {\n        return this._AgentID;\n    }\n    public set AgentID(value: string) {\n        this._AgentID = value;\n    }\n  \n    public get AgentName(): string {\n        return this._AgentName;\n    }\n    public set AgentName(value: string) {\n        this._AgentName = value;\n    }\n    \n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n   \n    public get AppUseMode(): string {\n        return this._AppUseMode;\n    }\n    public set AppUseMode(value: string) {\n        this._AppUseMode = value;\n    }\n\n    public get JobGrade(): string {\n        return this._JobGrade;\n    }\n    public set JobGrade(value: string) {\n        this._JobGrade = value;\n    }\n\n    public get Actual(): string {\n        return this._Actual;\n    }\n    public set Actual(value: string) {\n        this._Actual = value;\n    }\n    \n    public get CaseCount(): string {\n        return this._CaseCount;\n    }\n    public set CaseCount(value: string) {\n        this._CaseCount = value;\n    }\n    \n    public get ClientID(): string {\n        return this._ClientID;\n    }\n    public set ClientID(value: string) {\n        this._ClientID = value;\n    }\n    \n    public get DataType(): string {\n        return this._DataType;\n    }\n    public set DataType(value: string) {\n        this._DataType = value;\n    }\n    \n    public get DirectUnitType(): string {\n        return this._DirectUnitType;\n    }\n    public set DirectUnitType(value: string) {\n        this._DirectUnitType = value;\n    }\n   \n    public get Drilldown(): string {\n        return this._Drilldown;\n    }\n    public set Drilldown(value: string) {\n        this._Drilldown = value;\n    }\n    \n    public get Forecast(): string {\n        return this._Forecast;\n    }\n    public set Forecast(value: string) {\n        this._Forecast = value;\n    }\n    \n    public get Goal(): string {\n        return this._Goal;\n    }\n    public set Goal(value: string) {\n        this._Goal = value;\n    }\n    \n    public get IsApprove(): string {\n        return this._IsApprove;\n    }\n    public set IsApprove(value: string) {\n        this._IsApprove = value;\n    }\n    \n    public get Manpower(): number {\n        return this._Manpower;\n    }\n    public set Manpower(value: number) {\n        this._Manpower = value;\n    }\n  \n    public get MonthPlan(): string {\n        return this._MonthPlan;\n    }\n    public set MonthPlan(value: string) {\n        this._MonthPlan = value;\n    }\n    \n    public get Orders(): number {\n        return this._Orders;\n    }\n    public set Orders(value: number) {\n        this._Orders = value;\n    }\n  \n    public get PerCase(): string {\n        return this._PerCase;\n    }\n    public set PerCase(value: string) {\n        this._PerCase = value;\n    }\n    \n    public get Recruitment(): number {\n        return this._Recruitment;\n    }\n    public set Recruitment(value: number) {\n        this._Recruitment = value;\n    }\n\n    public get IsHasDot(): boolean {\n        return this._IsHasDot;\n    }\n    public set IsHasDot(value: boolean) {\n        this._IsHasDot = value;\n    }\n\n    public get TextColor(): string {\n        return this._TextColor;\n    }\n    public set TextColor(value: string) {\n        this._TextColor = value;\n    }\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanGoalExpected')\nexport class AgencyPlanGoalExpected {\n\n    @Required\n    private _ANP: string = '0';\n\n    @Required\n    private _DataYear: number = 0;\n\n    @Required\n    private _WorkingQuarter: number = 0;\n\n    @Required\n    private _FYFC: string = '0';\n\n    @Required\n    private _Q1: string = '0';\n\n    @Required\n    private _Q2: string = '0';\n\n    @Required\n    private _Q3: string = '0';\n\n    @Required\n    private _Q4: string = '0';\n\n    @Required\n    private _RecruitmentTotal: number = 0;\n    \n    @Required\n    private _FYFCConvertANPRate: number;\n\n    constructor(dataYear: number) {\n        this._DataYear = dataYear;\n    }\n\n    public get ANP(): string {\n        return this._ANP;\n    }\n    public set ANP(value: string) {\n        this._ANP = value;\n    }\n\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n\n    public get WorkingQuarter(): number {\n        return this._WorkingQuarter;\n    }\n    public set WorkingQuarter(value: number) {\n        this._WorkingQuarter = value;\n    }\n\n    public get FYFC(): string {\n        return this._FYFC;\n    }\n    public set FYFC(value: string) {\n        this._FYFC = value;\n    }\n   \n    public get Q1(): string {\n        return this._Q1;\n    }\n    public set Q1(value: string) {\n        this._Q1 = value;\n    }\n    \n    public get Q2(): string {\n        return this._Q2;\n    }\n    public set Q2(value: string) {\n        this._Q2 = value;\n    }\n    \n    public get Q3(): string {\n        return this._Q3;\n    }\n    public set Q3(value: string) {\n        this._Q3 = value;\n    }\n  \n    public get Q4(): string {\n        return this._Q4;\n    }\n    public set Q4(value: string) {\n        this._Q4 = value;\n    }\n   \n    public get RecruitmentTotal(): number {\n        return this._RecruitmentTotal;\n    }\n    public set RecruitmentTotal(value: number) {\n        this._RecruitmentTotal = value;\n    }\n\n    public get FYFCConvertANPRate(): number {\n        return this._FYFCConvertANPRate;\n    }\n    public set FYFCConvertANPRate(value: number) {\n        this._FYFCConvertANPRate = value;\n    }\n\n    public clone(): AgencyPlanGoalExpected {\n        let cloneAgencyPlanGoalExpected: AgencyPlanGoalExpected = new AgencyPlanGoalExpected(this._DataYear);\n        cloneAgencyPlanGoalExpected.WorkingQuarter = this._WorkingQuarter;\n        cloneAgencyPlanGoalExpected.ANP = this._ANP;\n        cloneAgencyPlanGoalExpected.FYFC = this._FYFC;\n        cloneAgencyPlanGoalExpected.Q1 = this._Q1;\n        cloneAgencyPlanGoalExpected.Q2 = this._Q2;\n        cloneAgencyPlanGoalExpected.Q3 = this._Q3;\n        cloneAgencyPlanGoalExpected.Q4 = this._Q4;\n        cloneAgencyPlanGoalExpected.RecruitmentTotal = this._RecruitmentTotal;\n        cloneAgencyPlanGoalExpected.FYFCConvertANPRate = this._FYFCConvertANPRate;\n       \n        return cloneAgencyPlanGoalExpected;\n\n    }\n\n    \n\n}","import { MonthlyPlanFYFCData } from \"./MonthlyPlanFYFCData\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingPlanPopup')\nexport class GoalSettingPlanPopup {\n\n    @Required\n    private _FYFCGoal: number;\n\n    @Required\n    private _actual: number;\n\n    @Required\n    private _performanceMonthStart: number;\n\n    @Required\n    private _performanceMonthEnd: number;\n\n    @Required\n    private _monthPlanList: Array<MonthlyPlanFYFCData>;\n\n    @Required\n    private _approveThreshold: number;\n    \n    @Required\n    private _eachMonthPlan: Array<string> =[];\n\n    constructor(FYFCgoal, actual, performanceMonthStart, performanceMonthEnd, monthPlanList) {\n        this._FYFCGoal = FYFCgoal;\n        this._actual = actual;\n        this._performanceMonthStart = performanceMonthStart;\n        this._performanceMonthEnd = performanceMonthEnd;\n        this._monthPlanList = monthPlanList;\n    }\n\n\n    set FYFCGoal(FYFCgoal: number) {\n        this._FYFCGoal = FYFCgoal;\n    }\n\n    set actual(value: number) {\n        this._actual = value;\n    }\n\n    set performanceMonthStart(performanceMonthStart: number) {\n        this._performanceMonthStart = performanceMonthStart;\n    }\n\n    set performanceMonthEnd(performanceMonthEnd: number) {\n        this._performanceMonthEnd = performanceMonthEnd;\n    }\n\n    set monthPlanList(monthPlanList: Array<MonthlyPlanFYFCData>) {\n        this._monthPlanList = monthPlanList;\n    }\n\n    set approveThreshold(approveThreshold: number) {\n        this._approveThreshold = approveThreshold;\n    }\n\n    set eachMonthPlan(eachMonthPlan: Array<string>) {\n        this._eachMonthPlan = eachMonthPlan;\n    }\n\n    get FYFCGoal() {\n        return this._FYFCGoal;\n    }\n\n    get actual(): number {\n        return this._actual;\n    }\n\n    get performanceMonthStart() {\n        return this._performanceMonthStart;\n    }\n\n    get performanceMonthEnd() {\n        return this._performanceMonthEnd;\n    }\n\n    get monthPlanList() {\n        return this._monthPlanList;\n    }\n\n    get approveThreshold() {\n        return this._approveThreshold;\n    }\n\n    get eachMonthPlan() {\n        return this._eachMonthPlan;\n    }\n\n    public clone() {\n        const cloneGoalSettingStep4 = new GoalSettingPlanPopup(this._FYFCGoal, this._actual, this._performanceMonthStart, this._performanceMonthEnd, this.monthPlanList.map(x => x.clone()));\n        cloneGoalSettingStep4._eachMonthPlan = this.eachMonthPlan.map(x => x);\n        cloneGoalSettingStep4._approveThreshold = this._approveThreshold;\n\n        return cloneGoalSettingStep4;\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanDirectUnitDetail')\nexport class AgencyPlanDirectUnitDetail {\n\n    @Required\n    private _Manpower: string = '';\n    \n    @Required\n    private _Recruitment: number = 0;\n    \n    constructor() {\n    }\n\n    public get Manpower(): string {\n        return this._Manpower;\n    }\n    public set Manpower(value: string) {\n        this._Manpower = value;\n    }\n\n    public get Recruitment(): number {\n        return this._Recruitment;\n    }\n    public set Recruitment(value: number) {\n        this._Recruitment = value;\n    }\n\n    \n}\n\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanMainData')\nexport class AgencyPlanMainData {\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _DataType: string;\n\n    @Required\n    private _Forecast: string;\n\n    @Required\n    private _Actual: string;\n    \n    @Required\n    private _MonthPlan: string;\n\n    constructor() {\n    }\n\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n\n    public get DataType(): string {\n        return this._DataType;\n    }\n    public set DataType(value: string) {\n        this._DataType = value;\n    }\n\n    public get Forecast(): string {\n        return this._Forecast;\n    }\n    public set Forecast(value: string) {\n        this._Forecast = value;\n    }\n\n    public get Actual(): string {\n        return this._Actual;\n    }\n    public set Actual(value: string) {\n        this._Actual = value;\n    }\n\n    public get MonthPlan(): string {\n        return this._MonthPlan;\n    }\n    public set MonthPlan(value: string) {\n        this._MonthPlan = value;\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanDataForOverview')\nexport class AgencyPlanDataForOverview {\n\n    @Required\n    private _FYFCForecast: string;\n\n    @Required\n    private _ANPForecast: string;\n\n    @Required\n    private _ManpowerPlan: string;\n\n    @Required\n    private _RecruitmentPlan: string;\n    \n    @Required\n    private _CompletionRate: string;\n\n    constructor() {       \n    }\n\n    public get FYFCForecast(): string {\n        return this._FYFCForecast;\n    }\n    public set FYFCForecast(value: string) {\n        this._FYFCForecast = value;\n    }\n\n    public get ANPForecast(): string {\n        return this._ANPForecast;\n    }\n    public set ANPForecast(value: string) {\n        this._ANPForecast = value;\n    }\n   \n    public get ManpowerPlan(): string {\n        return this._ManpowerPlan;\n    }\n    public set ManpowerPlan(value: string) {\n        this._ManpowerPlan = value;\n    }\n   \n    public get RecruitmentPlan(): string {\n        return this._RecruitmentPlan;\n    }\n    public set RecruitmentPlan(value: string) {\n        this._RecruitmentPlan = value;\n    }\n\n    public get CompletionRate(): string {\n        return this._CompletionRate;\n    }\n    public set CompletionRate(CompletionRate: string) {\n        this._CompletionRate = CompletionRate;\n    }\n    \n    \n\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('SettingChangeEvent')\nexport class SettingChangeEvent {\n\n    @Required\n    private _step: number;\n\n    @Required\n    private _column: string;\n\n    @Required\n    private _value: any;\n\n    constructor(step: number, column: string, value: any) {\n        this._step = step;\n        this._column = column;\n        this._value = value;\n    }\n\n\n    public get step(): number {\n        return this._step;\n    }\n    public set step(value: number) {\n        this._step = value;\n    }\n\n    public get column(): string {\n        return this._column;\n    }\n    public set column(value: string) {\n        this._column = value;\n    }\n\n    public get value(): any {\n        return this._value;\n    }\n    public set value(value: any) {\n        this._value = value;\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingTranslate')\nexport class GoalSettingTranslate {\n\n    @Required\n    private _TeamGoalEffectiveMonthTitle: string = '';\n\n    @Required\n    private _PersonalGoalEffectiveMonthTitle: string = '';\n\n    @Required\n    private _NowToYearEndTitle: string = '';\n\n    @Required\n    private _FYFCNowToYearEndTitle: string = '';\n\n    @Required\n    private _ANPNowToYearEndTitle: string = '';\n\n    @Required\n    private _PersonalFYFCActualVariableTitle: string = '';\n\n    @Required\n    private _TeamFYFCActualVariableTitle: string = '';\n\n    @Required\n    private _TeamANPActualVariableTitle: string = '';\n\n    @Required\n    private _FYFCActualDashTitle: string = '';\n    \n    constructor() {       \n    }\n\n    public get TeamGoalEffectiveMonthTitle(): string {\n        return this._TeamGoalEffectiveMonthTitle;\n    }\n    public set TeamGoalEffectiveMonthTitle(value: string) {\n        this._TeamGoalEffectiveMonthTitle = value;\n    }\n   \n    public get PersonalGoalEffectiveMonthTitle(): string {\n        return this._PersonalGoalEffectiveMonthTitle;\n    }\n    public set PersonalGoalEffectiveMonthTitle(value: string) {\n        this._PersonalGoalEffectiveMonthTitle = value;\n    }\n   \n    public get NowToYearEndTitle(): string {\n        return this._NowToYearEndTitle;\n    }\n    public set NowToYearEndTitle(value: string) {\n        this._NowToYearEndTitle = value;\n    }\n    \n    public get FYFCNowToYearEndTitle(): string {\n        return this._FYFCNowToYearEndTitle;\n    }\n    public set FYFCNowToYearEndTitle(value: string) {\n        this._FYFCNowToYearEndTitle = value;\n    }\n    \n    public get ANPNowToYearEndTitle(): string {\n        return this._ANPNowToYearEndTitle;\n    }\n    public set ANPNowToYearEndTitle(value: string) {\n        this._ANPNowToYearEndTitle = value;\n    }\n  \n    public get PersonalFYFCActualVariableTitle(): string {\n        return this._PersonalFYFCActualVariableTitle;\n    }\n    public set PersonalFYFCActualVariableTitle(value: string) {\n        this._PersonalFYFCActualVariableTitle = value;\n    }\n    \n    public get TeamFYFCActualVariableTitle(): string {\n        return this._TeamFYFCActualVariableTitle;\n    }\n    public set TeamFYFCActualVariableTitle(value: string) {\n        this._TeamFYFCActualVariableTitle = value;\n    }\n  \n    public get TeamANPActualVariableTitle(): string {\n        return this._TeamANPActualVariableTitle;\n    }\n    public set TeamANPActualVariableTitle(value: string) {\n        this._TeamANPActualVariableTitle = value;\n    }\n    \n    public get FYFCActualDashTitle(): string {\n        return this._FYFCActualDashTitle;\n    }\n    public set FYFCActualDashTitle(value: string) {\n        this._FYFCActualDashTitle = value;\n    }\n}","import { GoalTitleListItem } from \"../../components/goal-ui-title-list/goa-ui-title-list-item\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('CombineStep5AndAgecyPlanData')\nexport class CombineStep5AndAgecyPlanData {\n\n    @Required\n    private _Step5ItemList: Array<GoalTitleListItem> = [];\n\n    @Required\n    private _AgencyPlanItemList: Array<GoalTitleListItem> = [];\n    \n    @Required\n    private _ItemTextIsRedList: Array<boolean> = [];\n\n    constructor(Step5ItemList: Array<GoalTitleListItem>, AgencyPlanItemList: Array<GoalTitleListItem>, ItemTextIsRedList: Array<boolean>) {\n        this._Step5ItemList = Step5ItemList;\n        this._AgencyPlanItemList = AgencyPlanItemList;\n        this._ItemTextIsRedList = ItemTextIsRedList;\n    }\n\n    public get Step5ItemList() {\n        return this._Step5ItemList;\n    }\n\n    public get AgencyPlanItemList() {\n        return this._AgencyPlanItemList;\n    }\n\n    public get ItemTextIsRedList() {\n        return this._ItemTextIsRedList;\n    }\n\n\n}","import { ActivityValue } from \"./ActivityValue\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep3ForTabChange')\nexport class GoalSettingStep3ForTabChange {\n\n    @Required\n    private _ActivityValue: ActivityValue = null;\n\n    @Required\n    private _Unit: string = '';\n    \n    constructor(ActivityValue: ActivityValue, Unit: string) {\n        this._ActivityValue = ActivityValue;\n        this._Unit = Unit;\n    }\n\n    public get ActivityValue() {\n        return this._ActivityValue;\n    }\n\n    public get Unit() {\n        return this._Unit;\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ValidError')\nexport class ValidError{\n\n    @Required\n    private _Step: number;\n\n    @Required\n    private _ColId: string;\n\n    @Required\n    private _Msg: string;\n\n    constructor(Step: number, ColId: string, Msg:string){\n        this._Step = Step;\n        this._ColId = ColId;\n        this._Msg = Msg;\n    }\n\n    public get Step(): number {\n        return this._Step;\n    }\n    public get ColId(): string {\n        return this._ColId;\n    }\n    public get Msg(): string {\n        return this._Msg;\n    }\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ApproveInfo')\nexport class ApproveInfo{\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _AgentID: string;\n\n    @Required\n    private _IsApprove: boolean;\n    \n    @Required\n    private _Comment: string;\n\n\n    constructor(DataYear:number, AgentID: string, IsApprove:boolean, Comment:string){\n        this._DataYear = DataYear;\n        this._AgentID = AgentID;\n        this._IsApprove = IsApprove;\n        this._Comment = Comment;\n    }\n\n    public get Comment(): string {\n        return this._Comment;\n    }\n    public get IsApprove(): boolean {\n        return this._IsApprove;\n    }\n    public get AgentID(): string {\n        return this._AgentID;\n    }\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStepDataParams')\nexport class GoalSettingStepDataParams{\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _isAdjust: boolean;\n\n    constructor(DataYear: number, isAdjust: boolean){\n        this._DataYear = DataYear;\n        this._isAdjust = isAdjust;\n    }\n\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n    public get isAdjust(): boolean {\n        return this._isAdjust;\n    }\n    public set isAdjust(value: boolean) {\n        this._isAdjust = value;\n    }\n\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\nexport enum AGENCY_STATE {\n    DISPLAY = 'display',\n    ACCEPT = 'accept',\n    REJECT = 'reject',\n    FIRST = 'first'\n}\n\n@Bean('AgencyPlanStatus')\nexport class AgencyPlanStatus {\n\n    @Required\n    private _state: AGENCY_STATE;\n\n    @Required\n    private _agentID: string;\n\n    constructor(state, agentID) {\n        this.state = state;\n        this.agentID = agentID;\n    }\n\n   \n    public get state(): AGENCY_STATE {\n        return this._state;\n    }\n    public set state(value: AGENCY_STATE) {\n        this._state = value;\n    }\n    \n    public get agentID(): string {\n        return this._agentID;\n    }\n    public set agentID(value: string) {\n        this._agentID = value;\n    }\n}","import { AgencyPlanMainData } from \"./AgencyPlanMainData\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanMainInfo')\nexport class AgencyPlanMainInfo {\n\n    @Required\n    private _CompletionRate: string;\n    \n    @Required\n    private _AgencyMainDataList: Array<AgencyPlanMainData>;\n\n    constructor(){\n\n    }\n    \n    public get CompletionRate(): string {\n        return this._CompletionRate;\n    }\n    public set CompletionRate(value: string) {\n        this._CompletionRate = value;\n    }\n    public get AgencyMainDataList(): Array<AgencyPlanMainData> {\n        return this._AgencyMainDataList;\n    }\n    public set AgencyMainDataList(value: Array<AgencyPlanMainData>) {\n        this._AgencyMainDataList = value;\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { PlanFYFCPopupInfo } from './model/GoalSettingCommon';\nimport { DefaultLoginMgr, NotificationType } from '@allianzSND/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GoalStoreService {\n\n    constructor(\n        private loginMgr: DefaultLoginMgr\n    ) {\n        this.loginMgr.subscribeLogout().subscribe(() => {\n            //reset to init\n            this.setSyncGoalDatas(null);\n            this.setGoalLandingStatus(GOAL_LANDING_STATUS.FIRST_INIT);\n            this.setSettingYear(null);\n            this.setIsPromo(false);\n            this.setCanSkip(true);\n            this.setPlanFYFCPopupInfo(new PlanFYFCPopupInfo(PLAN_FYFC_POPUP_STATE.CLOSE, null));\n        })\n    }\n\n    private syncGoalDatas: SYNC_STATUS = null;\n    private settingYear: number = null;\n    private isPromo = false;\n    private canSkip = true;\n    private planFYFCPopupInfo: PlanFYFCPopupInfo = new PlanFYFCPopupInfo(PLAN_FYFC_POPUP_STATE.CLOSE, null);\n    private landingStatus: GOAL_LANDING_STATUS = GOAL_LANDING_STATUS.FIRST_INIT;\n    private yearSubject: BehaviorSubject<number> = new BehaviorSubject(this.settingYear);\n    private statusSubject: BehaviorSubject<GOAL_LANDING_STATUS> = new BehaviorSubject(this.landingStatus);\n    private isPromoSubject: BehaviorSubject<boolean> = new BehaviorSubject(this.isPromo);\n    private canSkipSubject: BehaviorSubject<boolean> = new BehaviorSubject(this.canSkip);\n    private planFYFCPopupInfoSubject: BehaviorSubject<PlanFYFCPopupInfo> = new BehaviorSubject(this.planFYFCPopupInfo);\n    private syncGoalDatasSubject: BehaviorSubject<SYNC_STATUS> = new BehaviorSubject(this.syncGoalDatas);\n    private goalPopupResponseSubject: Subject<GoalPopupResponse> = new Subject();\n\n\n    public getSyncGoalDatas(): Observable<SYNC_STATUS> {\n        return this.syncGoalDatasSubject.asObservable();\n    }\n\n    public setSyncGoalDatas(status: SYNC_STATUS): void {\n        this.syncGoalDatas = status;\n        this.syncGoalDatasSubject.next(this.syncGoalDatas);\n    }\n\n    public getGoalLandingStatus(): Observable<GOAL_LANDING_STATUS> {\n        return this.statusSubject.asObservable();\n    }\n\n    public setGoalLandingStatus(status: GOAL_LANDING_STATUS): void {\n        this.landingStatus = status;\n        this.statusSubject.next(this.landingStatus);\n    }\n\n    public getSettingYear(): Observable<number> {\n        return this.yearSubject.asObservable();\n    }\n\n    public setSettingYear(year: number): void {\n        this.settingYear = year;\n        this.yearSubject.next(this.settingYear);\n    }\n\n    public getIsPromo(): Observable<boolean> {\n        return this.isPromoSubject.asObservable();\n    }\n\n    public setIsPromo(val: boolean): void {\n        this.isPromo = val;\n        this.isPromoSubject.next(this.isPromo);\n    }\n\n    public getCanSkip(): Observable<boolean> {\n        return this.canSkipSubject.asObservable();\n    }\n\n    public setCanSkip(val: boolean): void {\n        this.canSkip = val;\n        this.canSkipSubject.next(this.canSkip);\n    }\n\n    public setPopupResp(resp: GoalPopupResponse): void {\n        this.goalPopupResponseSubject.next(resp);\n    }\n\n    public getPopupResp(): Observable<GoalPopupResponse> {\n        return this.goalPopupResponseSubject.asObservable();\n    }\n\n    // for edit personal popup\n\n    public setPlanFYFCPopupInfo(info: PlanFYFCPopupInfo) {\n        console.log(\"Set info\");\n        this.planFYFCPopupInfo = info;\n        if (info.data) {\n            this.planFYFCPopupInfo.data.Step4 = this.planFYFCPopupInfo.data.Step4.clone();\n        }\n        this.planFYFCPopupInfoSubject.next(this.planFYFCPopupInfo);\n    }\n\n    public getPlanFYFCPopupInfo() {\n        return this.planFYFCPopupInfoSubject.asObservable();\n    }\n\n    // end of for edit personal popup\n\n}\n\nexport class GoalPopupResponse {\n    public response: boolean;\n    public type: NotificationType;\n}\n\nexport enum GOAL_LANDING_STATUS {\n    SETTING_SUBMITTED,\n    FIRST_INIT, // from landing\n    FIRST_SET, // from overview and isn't adjsut\n    ADJUST_GOAL // from overview and is adjust\n}\n\nexport enum PLAN_FYFC_POPUP_STATE {\n    DISPLAY,\n    NEEDAPPROVESUBMIT,\n    NOTNEEDAPPROVESUBMIT,\n    CLOSE\n}\n\nexport enum SYNC_STATUS {\n    SYNC,\n    FINISH\n}\n\n\n\n","import { Injectable, Optional, Inject, ErrorHandler } from \"@angular/core\";\nimport { Observable, of, from } from \"rxjs\";\nimport { APIDispatch, APIFactory, pushApproveGoalAPI, StringUtils, getAgencyPlanAPI, getGoalAPI, getActualAPI, getYearConfigAPI, APPError, NumberUtils, DataSyncService, SubmitGoalSettingValue, SubmitGoalInfo, SubmitGoalPlanInfo, GetDeviceInfoAPI, SuccessStatus, YESNO, TIMEBASE, SUBMITGOALTYPE, SubmitGoalPlan, PERFORMANCETYPE, SubmitGoalData, ExtensionData, yearConfigExtensionDataToken, goalSettingExtensionDataToken, ExtensionFactory, pushGoalSettingDataAPI, ProfileCodeService, ProfileCode, Valid } from \"@allianzSND/core\";\nimport { goalSettingStepToken } from '../injectionToken';\nimport { goalSettingStep } from '../interface/goalSettingStep';\nimport { AgencyPlanGetMainAPI } from '../api/AgencyPlanGetMainAPI';\nimport { AgencyPlanGetDetailAPI } from '../api/AgencyPlanGetDetailAPI';\nimport { GoalSettingSetExpectedAPI } from '../api/GoalSettingSetExpectedAPI';\nimport { GoalSettingGetExpectedAPI } from '../api/GoalSettingGetExpectedAPI';\nimport { GoalSettingGetValueAPI } from '../api/GoalSettingGetValue';\nimport { GoalSettingGetActualAPI } from '../api/GoalSettingGetActualAPI';\nimport { GoalSettingGetPlanAPI } from '../api/GoalSettingGetPlanAPI';\nimport { GoalSettingGetYearConfigAPI } from '../api/GoalSettingGetYearConfigAPI'\nimport { GoalSettingStep4 } from './model/GoalSettingStep4';\nimport { GoalStoreService, SYNC_STATUS } from './goal-store.service';\nimport { AgencyPlanDetail } from './model/AgencyPlanDetail';\nimport { AgencyPlanGoalExpected } from './model/AgencyPlanGoalExpected';\nimport { AgencyPlanMainData } from './model/AgencyPlanMainData';\nimport { AgencyPlanDataForOverview } from './model/AgencyPlanDataForOverview';\nimport { GoalSettingYearConfig } from './model/GoalSettingYearConfig';\nimport { GoalSettingStep2 } from './model/GoalSettingStep2';\nimport { MonthlyPlanFYFCData } from './model/MonthlyPlanFYFCData';\nimport { GoalSettingStepData } from './model/GoalSettingStepData';\nimport { GoalSettingStep5 } from './model/GoalSettingStep5';\nimport { GoalSettingStep3 } from './model/GoalSettingStep3';\nimport { GoalSettingStep1 } from './model/GoalSettingStep1';\nimport { GoalSettingGoalStatus } from './model/GoalSettingGoalStatus';\nimport { IsApproveInfo } from './model/IsApproveInfo';\nimport { ActivityValue } from './model/ActivityValue';\nimport { ValidError } from './model/VaildError';\nimport { ApproveInfo } from './model/ApproveInfo';\nimport { GetOtherParameterAPI } from \"@allianzSND/core\";\nimport { AgencyPlanMainInfo } from \"./model/AgencyPlanMainInfo\";\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class GoalSettingService {\n  private TextConvertStep1Map = new Map<string, string>();\n  private TextConvertStep2Map = new Map<string, string>();\n  private TextConvertStep5Map = new Map<string, string>();\n  private StepTextConvertMap = new Map<string, Map<string, string>>();\n\n  private ColMapToProfile: Map<string, string> = new Map<string, string>();\n  private ColMapToProfileCodeMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n\n  public readonly DASH = '--';\n\n  constructor(\n    private dispatcher: APIDispatch,\n    private APIFactory: APIFactory,\n    private goalStore: GoalStoreService,\n    private errorHandler: ErrorHandler,\n    @Optional()\n    @Inject(goalSettingStepToken)\n    private goalSettingStep: goalSettingStep,\n    @Optional()\n    @Inject(yearConfigExtensionDataToken)\n    private yearConfigExtension: ExtensionFactory,\n    @Optional()\n    @Inject(goalSettingExtensionDataToken)\n    private goalSettingExtension: ExtensionFactory,\n    private dataSyncService: DataSyncService,\n    private profileCodeService: ProfileCodeService\n  ) {\n    this.TextConvertStep1Map.set(\"FYFC\", \"PERSON_FYFC\");\n    // this.TextConvertStep1Map.set(\"ANP\", \"PERSON_ANP\");\n    this.TextConvertStep1Map.set(\"AnnualConvention\", \"ANNUAL_CONVENTION\");\n    this.TextConvertStep1Map.set(\"MDRT\", \"MDRT\");\n    this.TextConvertStep1Map.set(\"PromotionPlan\", \"PROMOTION_PLAN\");\n    this.TextConvertStep1Map.set(\"ActivityFYFC\", \"ACTIVITY_FYFC\");\n    this.TextConvertStep1Map.set(\"ActivityDays\", \"ACTIVITY_DAYS\");\n    this.TextConvertStep2Map.set(\"PerCase\", \"PER_CASE_FYFC\");\n    this.TextConvertStep5Map.set(\"TeamFYFC\", \"TEAM_FYFC\");\n    this.TextConvertStep5Map.set(\"TeamANP\", \"TEAM_ANP\");\n    this.TextConvertStep5Map.set(\"Manpower\", \"TEAM_MANPOWER\");\n    this.TextConvertStep5Map.set(\"Recruitment\", \"TEAM_RECRUITMENT\");\n    this.StepTextConvertMap.set(\"Step1\", this.TextConvertStep1Map);\n    this.StepTextConvertMap.set(\"Step2\", this.TextConvertStep2Map);\n    this.StepTextConvertMap.set(\"Step5\", this.TextConvertStep5Map);\n\n    this.ColMapToProfile.set(\"AnnualConvention\", \"GoalSetting_AnnualConvention\");\n    this.ColMapToProfile.set(\"MDRT\", \"GoalSetting_MDRT\");\n    this.ColMapToProfile.set(\"PromotionPlan\", \"Promotion_Plan\");\n    this.ColMapToProfile.forEach((code, col) => {\n      this.ColMapToProfileCodeMap.set(col, this.profileCodeService.getCodeArray(code));\n    });\n  }\n\n  //-----------\n\n  //#region  goalStepDatas\n\n  // GoalSettingService\n  @Valid('GoalSettingStepData')\n  public getGoalSettingStep1_5Data(year: number, isAdjust: boolean): Observable<GoalSettingStepData> {\n    return from(this._getGoalSettingStep1_5Data(year, isAdjust));\n  }\n\n  private async _getGoalSettingStep1_5Data(year: number, isAdjust: boolean): Promise<GoalSettingStepData> {\n    console.log('into _getGoalSettingStep1_5Data year:', year, 'isAdjust', isAdjust);\n\n    let returnData: GoalSettingStepData = new GoalSettingStepData(year);\n    try {\n      let yearConfigResp: any;\n      let goalSettingResp: any;\n      let goalSettingValueResp: any;\n      let actualResp: any;\n\n      let yearConfig = this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n      let goalSetting = this.APIFactory.getAPI(\"getGoalSettingGoalSetting\");\n      let goalSettingValue = this.APIFactory.getAPI(\"getGoalSettingValue\");\n      let actual = this.APIFactory.getAPI(\"getGoalSettingActualValue\");\n\n      (<GoalSettingGetValueAPI>goalSettingValue).setDataYear(year);\n      (<GoalSettingGetActualAPI>actual).setDataYear(year);\n\n      [yearConfigResp, goalSettingResp, goalSettingValueResp, actualResp] = await Promise.all([\n        this.dispatcher.dispatch(yearConfig).toPromise(),\n        this.dispatcher.dispatch(goalSetting).toPromise(),\n        this.dispatcher.dispatch(goalSettingValue).toPromise(),\n        this.dispatcher.dispatch(actual).toPromise()\n      ]);\n      console.log(\"yearConfigResp\", yearConfigResp);\n      console.log(\"goalSettingResp\", goalSettingResp);\n      console.log(\"goalSettingValueResp\", goalSettingValueResp);\n      console.log(\"actualResp\", actualResp);\n      //call GetYearConfigAPI\n\n\n      if (yearConfigResp.Header[\"status\"]\n        && goalSettingResp.Header[\"status\"]\n        && goalSettingValueResp.Header[\"status\"]\n        && actualResp.Header[\"status\"]) {\n\n        let yearConfigMap = this.yearJsonToMap(yearConfigResp[\"Body\"]);\n        let goalSettingMap = this.yearJsonToMap(goalSettingResp[\"Body\"]);\n\n        let yearConfigObj = yearConfigMap.get(year);\n        let goalSettingObj = goalSettingMap.get(year);\n        console.log(\"yearConfigObj\", yearConfigObj);\n        console.log(\"goalSettingObj\", goalSettingObj);\n\n        if (yearConfigObj != undefined && goalSettingObj != undefined) {\n\n          // call GetGoalSettingValue\n          let goalSettingValueObj: any = {};\n          goalSettingValueResp[\"Body\"].forEach(data => {\n            goalSettingValueObj[data.DataType] = data.Value;\n          });\n          console.log(\"goalSettingValueObj\", goalSettingValueObj);\n\n          // call GetActualValue\n          let teamFYFCActual = -1;\n          let teamANPActual = -1;\n          let allYearActual = -1;\n          let monthOfYear = yearConfigObj.MonthQuantityOfYear;\n          let actuallist: Array<string> = Array(monthOfYear).fill(this.DASH, 0);\n\n          let actualBody = actualResp[\"Body\"];\n          let FYFCActuals = actualBody.filter(x => x.DataYear == year && x.PerformanceType == PERFORMANCETYPE.PERSONAL && x.DataType == \"FYFC\");\n          if (FYFCActuals.length > 0) {\n            allYearActual = 0;\n            FYFCActuals.forEach(x => {\n              if (x.Month <= yearConfigObj.PerformanceSettlementMonth) {\n                actuallist[x.Month - 1] = x.Value;\n                allYearActual += x.Value;\n              }\n            });\n          }\n\n          let TeamFYFCActuals = actualBody.filter(x => x.DataYear == year && x.PerformanceType == PERFORMANCETYPE.TEAM && x.DataType == \"FYFC\");\n          if (TeamFYFCActuals.length) {\n            teamFYFCActual = 0;\n            teamANPActual = 0;\n            TeamFYFCActuals.forEach(x => {\n              teamFYFCActual += (x.Month <= yearConfigObj.PerformanceSettlementMonth) ? x.Value : 0;\n            });\n            teamANPActual = this.numberToFix(teamFYFCActual * yearConfigObj.FyfcCovertAnpRate, 0);\n          }\n          console.log(\"actuallist\", actuallist);\n\n          let YearConfig: GoalSettingYearConfig = new GoalSettingYearConfig();\n          let GoalStatus: GoalSettingGoalStatus = new GoalSettingGoalStatus();\n          let Step1: GoalSettingStep1 = new GoalSettingStep1();\n          let Step2: GoalSettingStep2 = new GoalSettingStep2();\n          let Step3: GoalSettingStep3 = new GoalSettingStep3();\n          let Step4: GoalSettingStep4 = new GoalSettingStep4();\n          let Step5: GoalSettingStep5 = new GoalSettingStep5();\n\n          YearConfig.DataYear = yearConfigObj.DataYear;\n          YearConfig.IsCurrent = yearConfigObj.IsCurrent;\n          YearConfig.QuarterStartMonth = yearConfigObj.QuarterStartMonth;\n          YearConfig.QuarterEndMonth = yearConfigObj.QuarterEndMonth;\n          YearConfig.GoalSettingActivityProcMode = yearConfigObj.GoalSettingActivityProcMode;\n          YearConfig.GoalAndPlanDifferenceLimit = yearConfigObj.GoalAndPlanDifferenceLimit;\n          YearConfig.FyfcCovertAnpRate = yearConfigObj.FyfcCovertAnpRate;\n          YearConfig.InforceConvertSubmitRate = yearConfigObj.InforceConvertSubmitRate;\n          YearConfig.InforceConvertMeetRate = yearConfigObj.InforceConvertMeetRate;\n          YearConfig.InforceConvertScheduleRate = yearConfigObj.InforceConvertScheduleRate;\n          YearConfig.InforceConvertFindRate = yearConfigObj.InforceConvertFindRate;\n          YearConfig.NowToYearEndDays = yearConfigObj.NowToYearEndDays;\n          YearConfig.PerformanceSettlementMonth = yearConfigObj.PerformanceSettlementMonth;\n          YearConfig.MonthQuantityOfYear = yearConfigObj.MonthQuantityOfYear;\n          YearConfig.WorkingMonth = yearConfigObj.WorkingMonth;\n          if (this.yearConfigExtension) {\n            let yearConfigExtData: ExtensionData = this.yearConfigExtension.getExtensionData(yearConfigObj, { source: \"SQL\" });\n            YearConfig.setExtension(yearConfigExtData);\n          }\n\n          GoalStatus.DataYear = year;\n          GoalStatus.PersonnelGoalApplicableYM = goalSettingObj.PersonnelGoalApplicableYM;\n          GoalStatus.TeamGoalApplicableYM = goalSettingObj.TeamGoalApplicableYM;\n          GoalStatus.GoalSetMonth = goalSettingObj.GoalSetMonth;\n          GoalStatus.ApproveStatus = goalSettingObj.ApproveStatus;\n          GoalStatus.IsFirstTime = goalSettingObj.IsFirstTime == \"Y\";\n          GoalStatus.IsNeedSetting = goalSettingObj.IsNeedSetting == \"Y\";\n          GoalStatus.SupervisorComment = goalSettingObj.SupervisorComment;\n          if (this.goalSettingExtension) {\n            let goalSettingExtData: ExtensionData = this.goalSettingExtension.getExtensionData(goalSettingObj, { source: \"SQL\" });\n            GoalStatus.setExtension(goalSettingExtData);\n          }\n\n          Step1.FYFC = goalSettingValueObj.PERSON_FYFC;\n          Step1.AnnualConvention = goalSettingValueObj.ANNUAL_CONVENTION;\n          Step1.MDRT = goalSettingValueObj.MDRT;\n          Step1.PromotionPlan = goalSettingValueObj.PROMOTION_PLAN;\n          Step1.Actual = this.changeToDash(allYearActual);\n          Step1.FYFCNowToYearEnd = this.calculateNowToYearEndGoal(goalSettingValueObj.PERSON_FYFC, Step1.Actual);\n          Step1.ActivityFYFC = goalSettingValueObj.ACTIVITY_FYFC;\n          Step1.ActivityDays = goalSettingValueObj.ACTIVITY_DAYS;\n\n          Step2.PerCase = goalSettingValueObj.PER_CASE_FYFC;\n\n          let ActivityFYFC = isAdjust ? Step1.FYFCNowToYearEnd : Step1.FYFC;\n          Step3 = this.calculateActivityData(ActivityFYFC, Step2.PerCase, YearConfig);\n\n          if (isAdjust) {\n            Step4 = await this._getMonthActualPlanBySQL(PERFORMANCETYPE.PERSONAL, year, YearConfig.MonthQuantityOfYear, YearConfig.PerformanceSettlementMonth);\n            Step4.Shortfall = this.calculateShortfall(Step1.FYFC, Step4.Forecast);\n          } else {\n            Step4 = this.calculateMonthActualPlan(YearConfig, Step1.FYFC, actuallist);\n            Step4.Shortfall = this.calculateShortfall(Step1.FYFC, Step4.Forecast);\n          }\n\n          Step5.TeamFYFC = goalSettingValueObj.TEAM_FYFC;\n          Step5.TeamANP = goalSettingValueObj.TEAM_ANP;\n          Step5.Manpower = goalSettingValueObj.TEAM_MANPOWER;\n          Step5.Recruitment = goalSettingValueObj.TEAM_RECRUITMENT;\n          Step5.TeamFYFCActual = this.changeToDash(teamFYFCActual);\n          Step5.TeamANPActual = this.changeToDash(teamANPActual);\n          Step5.TeamFYFCNowToYearEnd = this.calculateNowToYearEndGoal(goalSettingValueObj.TEAM_FYFC, Step5.TeamFYFCActual);\n          Step5.TeamANPNowToYearEnd = this.calculateANPFromFYFC(Step5.TeamFYFCNowToYearEnd, YearConfig.FyfcCovertAnpRate);\n\n          returnData.YearConfig = YearConfig;\n          returnData.GoalStatus = GoalStatus;\n          returnData.Step1 = Step1;\n          returnData.Step2 = Step2;\n          returnData.Step3 = Step3;\n          returnData.Step4 = Step4;\n          returnData.Step5 = Step5;\n          returnData.ActualList = actuallist;\n        }\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00400', 'getGoalSettingStep1_5Data fail!' + error.message));\n    }\n\n    console.log(\"getGoalSettingStep1_5Data returnData\", returnData);\n    return returnData;\n  }\n\n  @Valid('GoalSettingStep3')\n  public calculateActivityData(goal: string, perCase: string, yearConfig: GoalSettingYearConfig, activityDays: string = ''): GoalSettingStep3 {\n    console.log(\"calculateActivityData:\", goal, perCase, yearConfig, activityDays);\n\n    let returnObj: GoalSettingStep3 = new GoalSettingStep3();\n    let activityValues: Array<ActivityValue> = [];\n    try {\n\n      let numGoal = Number(goal);\n      let numPerCase = Number(perCase)\n      if (NumberUtils.isNumber(goal) && NumberUtils.isNumber(perCase) && numPerCase > 0) {\n        console.warn(\"calculateActivityData on service: \", goal, perCase, yearConfig);\n        let days: number = (StringUtils.isEmpty(activityDays)) ? Number(yearConfig.NowToYearEndDays) : Number(activityDays);\n\n        let daysInweek: number = 7;\n        let daysInMonth: number = 365 / Number(yearConfig.MonthQuantityOfYear);\n\n        let dayInforce: number = numGoal / numPerCase / days;\n        let weekInforce: number = dayInforce * daysInweek;\n        let monthInforce: number = dayInforce * daysInMonth;\n        dayInforce = dayInforce;\n\n        let tabs = [{ name: TIMEBASE.DAY, inforce: dayInforce }, { name: TIMEBASE.WEEK, inforce: weekInforce }, { name: TIMEBASE.MONTH, inforce: monthInforce }];\n\n        if (this.goalSettingStep) {\n          activityValues = this.goalSettingStep.calculateOtherRuleActivityInforce(tabs, yearConfig);\n        }\n\n        let activity: TIMEBASE = activityValues[0].TimeBase;\n\n        returnObj.Activity = activity;\n        returnObj.ActivityValues = activityValues;\n\n      } else {\n        let tabNum = [TIMEBASE.DAY, TIMEBASE.WEEK, TIMEBASE.MONTH];\n        returnObj.Activity = TIMEBASE.DAY;\n        tabNum.forEach(time => {\n          let activity: ActivityValue = new ActivityValue(time, this.DASH, this.DASH, this.DASH, this.DASH, this.DASH);\n          activityValues.push(activity);\n        });\n        returnObj.ActivityValues = activityValues;\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00401', 'calculateActivityData fail!' + error.message));\n    }\n\n    console.log(\"calculateActivityData return obj: \", JSON.stringify(returnObj));\n    return returnObj;\n  }\n\n  // step 4 function\n  @Valid('GoalSettingStep4')\n  public calculateMonthActualPlan(yearConfig: GoalSettingYearConfig, goal: string, actualList: Array<string>): GoalSettingStep4 {\n\n    //actualList example : [100,100,200,0,100,1]\n    console.log(\"calculateMonthActualPlan goal:\", goal);\n    let Step4Datas: GoalSettingStep4 = new GoalSettingStep4();\n    let MonthActualPlanList: Array<MonthlyPlanFYFCData> = [];\n    try {\n      if (NumberUtils.isNumber(goal)) {\n        if (this.goalSettingStep) {\n          MonthActualPlanList = this.goalSettingStep.calculateMonthActualPlan(yearConfig, Number(goal), actualList);\n        }\n        let forecast = this.calculateForecast(yearConfig.PerformanceSettlementMonth, MonthActualPlanList);\n        let shortfall = this.calculateShortfall(goal, forecast);\n        let actual = this.calulateSumByArray(actualList);\n        Step4Datas.MonthList = MonthActualPlanList;\n        Step4Datas.Forecast = forecast;\n        Step4Datas.Shortfall = shortfall;\n        Step4Datas.Actual = actual;\n      } else {\n        //å¨é¨é½dash\n        for (let i = 0; i < yearConfig.MonthQuantityOfYear; i++) {\n          let data: MonthlyPlanFYFCData = new MonthlyPlanFYFCData(i, this.DASH, this.DASH);\n          MonthActualPlanList.push(data);\n        }\n        Step4Datas.Actual = this.DASH;\n        Step4Datas.Forecast = this.DASH;\n        Step4Datas.Shortfall = this.DASH;\n        Step4Datas.MonthList = MonthActualPlanList;\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00402', 'calculateMonthActualPlan fail!' + error.message));\n    }\n\n    console.log(\"calculateMonthActualPlan:\", MonthActualPlanList);\n\n    return Step4Datas;\n\n  }\n  public calculateActual(PerformanceSettlementMonth: number, MonthActualPlanList: Array<MonthlyPlanFYFCData>): string {\n    if (PerformanceSettlementMonth > 0) {\n      return MonthActualPlanList.map(x => (Number(x.Actual) < 0 || x.Actual == this.DASH || x.Month > PerformanceSettlementMonth) ? 0 : Number(x.Actual)).reduce((pre, cur) => pre + Number(cur), 0).toString();\n    } else {\n      return this.DASH;\n    }\n  }\n  public calculateForecast(PerformanceSettlementMonth: number, MonthActualPlanList: Array<MonthlyPlanFYFCData>): string {\n    return this.calulateSumByArray(this.getActualPlanFromMonthList(MonthActualPlanList, PerformanceSettlementMonth));\n  }\n\n  public calulateSumByArray(monthList: Array<any>): string {\n    let isDash = true;\n    monthList.forEach(data => {\n      if (data != this.DASH) {\n        isDash = false;\n      }\n    });\n    let returnNum = this.DASH;\n    if (!isDash) {\n      returnNum = monthList.map(x => (Number(x) < 0 || x == this.DASH || StringUtils.isEmpty(x)) ? 0 : x).reduce((pre, cur) => pre + Number(cur), 0).toString();\n    }\n    return returnNum;\n  }\n\n  public calculateShortfall(goal, forecast): string {\n    let result = this.DASH;\n    if (NumberUtils.isNumber(goal) && NumberUtils.isNumber(forecast)) {\n      if (this.goalSettingStep) {\n        result = this.goalSettingStep.getShortfall(goal, forecast).toString();\n      } else {\n        let tempresult = (Number(goal) - Number(forecast));\n        result = (tempresult < 0) ? \"0\" : tempresult.toString();\n      }\n    }\n    return result;\n  }\n\n  //#endregion  goalStepDatas\n\n\n  //#region Submit & Approve function\n  @Valid('IsApproveInfo')\n  public isNeedApprove(SubmitType: SUBMITGOALTYPE, DataYear: number, adjustDatas: GoalSettingStepData): Observable<IsApproveInfo> {\n    return from(this._isNeedApprove(SubmitType, DataYear, adjustDatas));\n  }\n\n  private async _isNeedApprove(SubmitType: SUBMITGOALTYPE, DataYear: number, adjustDatas: GoalSettingStepData): Promise<IsApproveInfo> {\n    console.log(\"_isNeedApprove adjustDatas\", adjustDatas, SubmitType, DataYear);\n\n    let isApproveInfo: IsApproveInfo;\n    try {\n      if (this.goalSettingStep) {\n        //taiwan\n        let originDatas: GoalSettingStepData = await this._getGoalSettingStep1_5Data(DataYear, true);\n        isApproveInfo = this.goalSettingStep.isNeedApprove(adjustDatas, originDatas);\n      } else {\n        isApproveInfo = new IsApproveInfo(true, false);\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00403', 'isNeedApprove fail!' + error.message));\n    }\n\n    console.log(\"isNeedApprove\", isApproveInfo);\n    return isApproveInfo;\n  }\n\n  @Valid('IsApproveInfo')\n  public isNeedApprove_plan(FYFC: string, Forecast: string, GoalAndPlanDifferenceLimit: number): Observable<IsApproveInfo> {\n    console.log('isNeedApprove_plan FYFC', FYFC, 'Forecast', Forecast, 'GoalAndPlanDifferenceLimit', GoalAndPlanDifferenceLimit)\n\n    let isApproveInfo: IsApproveInfo;\n\n    try {\n      if (this.goalSettingStep) {\n        isApproveInfo = this.goalSettingStep.isNeedApprove_plan(Number(FYFC), Number(Forecast), GoalAndPlanDifferenceLimit);\n      } else {\n        isApproveInfo = new IsApproveInfo(true, false);\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00404', 'isNeedApprove_plan fail!' + error.message));\n    }\n\n    console.log(\"isNeedApprove_plan isApproveInfo:\", isApproveInfo);\n    return of(isApproveInfo);\n  }\n\n  @Valid('SuccessStatus')\n  public submitGoal(submitType: SUBMITGOALTYPE, IsNeedApprove: boolean, submitData: GoalSettingStepData): Observable<SuccessStatus> {\n    return from(this._submitGoal(submitType, IsNeedApprove, submitData));\n  }\n\n  private async _submitGoal(submitType: SUBMITGOALTYPE, IsNeedApprove: boolean, submitData: GoalSettingStepData): Promise<SuccessStatus> {\n    console.log(\"[_submitGoal] submitData\", submitData);\n\n    let Activity: TIMEBASE;\n    let GoalSettingValue: Array<SubmitGoalSettingValue> = [];\n    let GoalPlan: SubmitGoalPlan = new SubmitGoalPlan();\n    let SubmitInfo: SubmitGoalInfo = new SubmitGoalInfo();\n    let SubmitDatas: SubmitGoalData;\n    let returnResp: SuccessStatus = new SuccessStatus(false);\n    try {\n      if (submitType == SUBMITGOALTYPE.ALL) {\n        let GoalSettingType = [\"Step1\", \"Step2\", \"Step5\"];\n\n        GoalSettingType.forEach(step => {\n          let stepMap = this.StepTextConvertMap.get(step);\n          stepMap.forEach((val, key) => {\n            if (submitData[step][key]) {\n              GoalSettingValue.push(new SubmitGoalSettingValue(val, submitData[step][key], []));\n            }\n          });\n        });\n        Activity = submitData.Step3.Activity;\n      }\n\n      console.log(\"GoalSettingValue\", GoalSettingValue);\n      GoalPlan.TimeBase = TIMEBASE.MONTH;\n      GoalPlan.Values = submitData.Step4.MonthList.filter(x => x.Plan != this.DASH).map(x => {\n        return new SubmitGoalPlanInfo(PERFORMANCETYPE.PERSONAL, x.Month, Number(x.Plan), []);\n      });\n      console.log(\"GoalPlan\", GoalPlan);\n\n      SubmitInfo.DataYear = submitData.DataYear;\n      SubmitInfo.SubmitType = submitType;\n      SubmitInfo.ActivityGoalBase = Activity;\n      SubmitInfo.IsNeedApprove = IsNeedApprove ? YESNO.YES : YESNO.NO;\n      SubmitInfo.Extensions = [];\n\n      console.log(\"SubmitInfo\", SubmitInfo);\n\n      SubmitDatas = new SubmitGoalData(SubmitInfo, GoalSettingValue, GoalPlan);\n      let Resp = await this._pushGoalSetting(SubmitDatas);\n      if (Resp.isSuccess) {\n        await this.syncGoalDatas();\n        returnResp.isSuccess = true;\n      } else {\n        throw \"submit goal fail! \";\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00405', 'submitGoal fail!' + error.message));\n      returnResp.isSuccess = false;\n    }\n\n    console.log(\"_submitGoal resp2\", returnResp);\n\n    return returnResp;\n  }\n\n  //#endregion Submit & Approve\n\n  //#region LANDING status\n  public getIsFirstUse(): Observable<boolean> {\n    // get DeviceInfo table\n\n    return Observable.create(observer => {\n      let DeviceInfo = this.APIFactory.getAPI(\"getDeviceInfo\");\n      (<GetDeviceInfoAPI>DeviceInfo).setDataType(\"FirstUseAPP\");\n      try {\n        this.dispatcher.dispatch(DeviceInfo).toPromise().then(Datas => {\n          console.log(\"getIsFirstUse\", Datas[\"Body\"][0].CategoryVal == \"Y\" ? true : false)\n          observer.next(Datas[\"Body\"][0].CategoryVal == \"Y\" ? true : false);\n          observer.complete();\n        });\n      } catch (error) {\n        this.errorHandler.handleError(new APPError('F00408', 'getIsFirstUse fail!' + error.message));\n      }\n    });\n  }\n\n\n  // @Valid('GoalSettingGoalStatus')\n  public getSettingStatus(): Observable<Array<GoalSettingGoalStatus>> {\n    return from(this._getSettingStatus());\n  }\n\n  private async _getSettingStatus(): Promise<Array<GoalSettingGoalStatus>> {\n    let GoalSettingResp: any;\n    let yearConfigResp: any;\n    let returnDatas: Array<GoalSettingGoalStatus> = [];\n\n    try {\n\n      let goalSetting = this.APIFactory.getAPI(\"getGoalSettingGoalSetting\");\n      let yearConfig = this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n\n      [GoalSettingResp, yearConfigResp] = await Promise.all([\n        this.dispatcher.dispatch(goalSetting).toPromise(),\n        this.dispatcher.dispatch(yearConfig).toPromise()\n      ]);\n\n      //getGoalSetting\n      let goalSettingMap = new Map<number, any>();\n      let yearConfigMap = new Map<number, any>();\n      if (GoalSettingResp.Header[\"status\"] && yearConfigResp.Header[\"status\"]) {\n        goalSettingMap = this.yearJsonToMap(GoalSettingResp[\"Body\"]);\n        yearConfigMap = this.yearJsonToMap(yearConfigResp[\"Body\"]);\n\n        returnDatas = [];\n        goalSettingMap.forEach((data, key) => {\n          let goalStatus = new GoalSettingGoalStatus();\n          goalStatus.DataYear = key;\n          goalStatus.IsCurrent = yearConfigMap.get(key).IsCurrent;\n          goalStatus.IsNeedSetting = data.IsNeedSetting == YESNO.YES;\n          goalStatus.IsFirstTime = data.IsFirstTime == YESNO.YES;\n          goalStatus.ApproveStatus = data.ApproveStatus;\n          goalStatus.RemainingDays = data.Remainingdays;\n          returnDatas.push(goalStatus);\n        });\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00409', 'getSettingStatus fail!' + error.message));\n    }\n\n    console.log(\"getSettingStatus returnDatas\", returnDatas);\n    return returnDatas;\n  }\n\n  private yearJsonToMap(yearJson): Map<number, any> {\n    console.log(\"yearJson\", yearJson);\n    let map = new Map<number, any>();\n    if (yearJson != null) {\n      yearJson.forEach(data => {\n        if (data.DataYear != undefined) {\n          map.set(data.DataYear, data);\n        }\n      });\n    }\n    return map;\n  }\n\n  //#endregion LANDING status\n\n\n  //#region GoalSetting overview\n  @Valid('GoalSettingStepData')\n  public getOverviewData(performanceType: PERFORMANCETYPE, DataYear: number = -1, AgentID: string = \"\"): Observable<GoalSettingStepData> {\n    if (StringUtils.isEmpty(AgentID)) {\n      return from(this._getOverviewDataBySQL(performanceType, DataYear));\n    } else {\n      return from(this._getOverviewDataByRestful(performanceType, DataYear, AgentID));\n    }\n  }\n\n  private async _getOverviewDataBySQL(performanceType: PERFORMANCETYPE, year: number = -1) {\n\n    let goalStepDatas: GoalSettingStepData = new GoalSettingStepData(year);\n    try {\n      goalStepDatas = await this._getGoalSettingStep1_5Data(year, true);\n      console.log(\"_getOverviewDataBySQL goalStepDatas\", JSON.stringify(goalStepDatas));\n      if (goalStepDatas != null) {\n        let actualPlanData = await this._getMonthActualPlanBySQL(performanceType, year, goalStepDatas[\"YearConfig\"][\"MonthQuantityOfYear\"], goalStepDatas[\"YearConfig\"][\"PerformanceSettlementMonth\"]);\n        if (actualPlanData != null) {\n          goalStepDatas.Step4 = actualPlanData;\n          goalStepDatas.Step4.Shortfall = this.calculateShortfall(goalStepDatas.Step1.FYFC, goalStepDatas.Step4.Forecast).toString();\n        } else {\n          throw \"get MonthActualPlan data fail.\";\n        }\n        let agencyPlanObj: AgencyPlanDataForOverview = new AgencyPlanDataForOverview();\n        if (performanceType == PERFORMANCETYPE.PERSONAL) {\n          let perCase: string = goalStepDatas.Step2.PerCase ? goalStepDatas.Step2.PerCase : '1';\n          let activityGoal: string = goalStepDatas.Step1.ActivityFYFC ? goalStepDatas.Step1.ActivityFYFC : goalStepDatas.Step1.FYFC;\n          let activityDays: string = goalStepDatas.Step1.ActivityDays ? goalStepDatas.Step1.ActivityDays : goalStepDatas.YearConfig.NowToYearEndDays.toString();\n          goalStepDatas.Step3 = this.calculateActivityData(activityGoal, perCase, goalStepDatas.YearConfig, activityDays);\n        } else if (performanceType == PERFORMANCETYPE.TEAM) {\n          let agencyPlanMainInfo: AgencyPlanMainInfo = await this.getAgencyPlanMainData(year).toPromise();\n\n          if (agencyPlanMainInfo && agencyPlanMainInfo.AgencyMainDataList.length) {\n            let agencyPlanMainList = agencyPlanMainInfo.AgencyMainDataList;\n            console.warn(\"agencyPlanMainList: \", JSON.stringify(agencyPlanMainList));\n            console.log(agencyPlanMainList.filter(x => x.DataType == \"FYFC\")[0].Forecast);\n\n            console.log(\"agencyPlanObj\", agencyPlanObj);\n            agencyPlanObj.FYFCForecast = agencyPlanMainList.filter(x => x.DataType == \"FYFC\")[0].Forecast;\n            agencyPlanObj.ANPForecast = agencyPlanMainList.filter(x => x.DataType == \"ANP\")[0].Forecast;\n            agencyPlanObj.ManpowerPlan = this.changeToDash(agencyPlanMainList.filter(x => x.DataType == \"Manpower\")[0].MonthPlan);\n            agencyPlanObj.RecruitmentPlan = agencyPlanMainList.filter(x => x.DataType == \"Recruitment\")[0].MonthPlan;\n            agencyPlanObj.CompletionRate = agencyPlanMainInfo.CompletionRate;\n          } else {\n            throw \"get agencyPlan data fail.\";\n          }\n          goalStepDatas.AgencyPlan = agencyPlanObj;\n        }\n      } else {\n        throw \"get 1_5Data Fail. goalStepDatas:\" + goalStepDatas\n      }\n\n      goalStepDatas = this._converSelectCode(goalStepDatas);\n      if (this.goalSettingStep) {\n        goalStepDatas = this.goalSettingStep.changeEmptyToDash(goalStepDatas);\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00504', 'getOverviewDataBySQL fail!' + error));\n    }\n\n    console.log(\"_getOverviewDataBySQL goalStepDatas\", goalStepDatas, JSON.stringify(goalStepDatas));\n    return goalStepDatas;\n  }\n\n  private async _getOverviewDataByRestful(performanceType: PERFORMANCETYPE, DataYear: number = -1, AgentID: string = \"\"): Promise<GoalSettingStepData> {\n\n    console.warn(\"performanceType: \", performanceType, \" DataYear: \", DataYear, \" AgentID: \", AgentID);\n\n    let GetGoalResp: any;\n    let GetYearConfigResp: any;\n\n    let goalSettingObj: any;\n    let GoalValues: any;\n    let goalSettingValueObj: any = {};\n\n    let YearConfig: GoalSettingYearConfig = new GoalSettingYearConfig();\n    let GoalStatus: GoalSettingGoalStatus = new GoalSettingGoalStatus();\n    let Step1: GoalSettingStep1 = new GoalSettingStep1();\n    let Step2: GoalSettingStep2 = new GoalSettingStep2();\n    let Step3: GoalSettingStep3 = new GoalSettingStep3();\n    let Step4: GoalSettingStep4 = new GoalSettingStep4();\n    let Step5: GoalSettingStep5 = new GoalSettingStep5();\n    let AgencyPlan: AgencyPlanDataForOverview = new AgencyPlanDataForOverview();\n\n    YearConfig.DataYear = DataYear;\n    GoalStatus.DataYear = DataYear;\n    let returnDatas: GoalSettingStepData = new GoalSettingStepData(DataYear);\n\n    try {\n      let getGoalapi = this.APIFactory.getAPI(\"getGoal\");\n      (<getGoalAPI>getGoalapi).setAgentID(AgentID);\n      let getYearConfigapi = this.APIFactory.getAPI(\"getYearConfig\");\n      (<getYearConfigAPI>getYearConfigapi).setAgentID(AgentID);\n\n      [GetGoalResp, GetYearConfigResp] = await Promise.all([\n        this.dispatcher.dispatch(getGoalapi).toPromise(),\n        this.dispatcher.dispatch(getYearConfigapi).toPromise()\n      ]);\n\n      console.log(\"_getOverviewDataByRestful GetGoalResp\", GetGoalResp);\n      console.log(\"_getOverviewDataByRestful GetYearConfigResp\", GetYearConfigResp);\n\n      let GoalMap = this.yearJsonToMap(GetGoalResp.Goals);\n      let YearConfigMap = this.yearJsonToMap(GetYearConfigResp.Configurations);\n\n      let GoalObj = GoalMap.get(DataYear);\n      let yearConfigObj = YearConfigMap.get(DataYear);\n      if (GoalObj != undefined && yearConfigObj != undefined) {\n        goalSettingObj = GoalMap.get(DataYear).GoalSetting;\n        GoalValues = GoalMap.get(DataYear).GoalValue;\n\n        console.log(\"_getOverviewDataByRestful goalSettingObj\", goalSettingObj);\n        console.log(\"_getOverviewDataByRestful GoalValues\", GoalValues);\n\n        GoalValues.forEach(GoalValue => {\n          goalSettingValueObj[GoalValue.DataType] = GoalValue.Value;\n        });\n\n        let monthQuantityOfYear = yearConfigObj.MonthQuantityOfYear;\n        let PerformanceSettlementMonth = yearConfigObj.PerformanceSettlementMonth;\n        Step4 = await this._getMonthActualPlanByRestful(performanceType, DataYear, monthQuantityOfYear, PerformanceSettlementMonth, AgentID);\n        Step4.Shortfall = this.calculateShortfall(Step1.FYFC, Step4.Forecast);\n        let allYearActual: string = this.calculateActual(yearConfigObj.PerformanceSettlementMonth, Step4.MonthList);\n\n        YearConfig.InforceConvertSubmitRate = yearConfigObj.InforceConvertSubmitRate;\n        YearConfig.InforceConvertMeetRate = yearConfigObj.InforceConvertMeetRate;\n        YearConfig.InforceConvertScheduleRate = yearConfigObj.InforceConvertScheduleRate;\n        YearConfig.InforceConvertFindRate = yearConfigObj.InforceConvertFindRate;\n        YearConfig.NowToYearEndDays = yearConfigObj.NowToYearEndDays;\n        YearConfig.PerformanceSettlementMonth = yearConfigObj.PerformanceSettlementMonth;\n        YearConfig.MonthQuantityOfYear = yearConfigObj.MonthQuantityOfYear;\n        YearConfig.WorkingMonth = yearConfigObj.WorkingMonth;\n        YearConfig.GoalAndPlanDifferenceLimit = yearConfigObj.GoalAndPlanDifferenceLimit;\n        if (this.yearConfigExtension) {\n          let yearConfigExtData: ExtensionData = this.yearConfigExtension.getExtensionData(yearConfigObj, { source: \"Restful\" });\n          YearConfig.setExtension(yearConfigExtData);\n        }\n\n\n        GoalStatus.PersonnelGoalApplicableYM = goalSettingObj.PersonnelGoalApplicableYM;\n        GoalStatus.TeamGoalApplicableYM = goalSettingObj.TeamGoalApplicableYM;\n        GoalStatus.GoalSetMonth = goalSettingObj.GoalSetMonth;\n        GoalStatus.ApproveStatus = goalSettingObj.Status;\n        if (this.goalSettingExtension) {\n          let goalSettingExtData: ExtensionData = this.goalSettingExtension.getExtensionData(goalSettingObj, { source: \"Restful\" });\n          GoalStatus.setExtension(goalSettingExtData);\n        }\n\n        if (performanceType == PERFORMANCETYPE.PERSONAL) {\n          Step1.FYFC = goalSettingValueObj.PERSON_FYFC;\n          Step1.AnnualConvention = goalSettingValueObj.ANNUAL_CONVENTION;\n          Step1.MDRT = goalSettingValueObj.MDRT;\n          Step1.PromotionPlan = goalSettingValueObj.PROMOTION_PLAN;\n          Step1.Actual = allYearActual;\n          Step1.FYFCNowToYearEnd = this.calculateNowToYearEndGoal(goalSettingValueObj.PERSON_FYFC, allYearActual);\n\n          Step2.PerCase = goalSettingValueObj.PER_CASE_FYFC;\n\n          let perCase = goalSettingValueObj.PER_CASE_FYFC;\n          let activityGoal = goalSettingValueObj.ACTIVITY_FYFC ? goalSettingValueObj.ACTIVITY_FYFC : goalSettingValueObj.PERSON_FYFC;\n          let activityDays = goalSettingValueObj.ACTIVITY_DAYS ? goalSettingValueObj.ACTIVITY_DAYS : yearConfigObj.NowToYearEndDays;\n          Step3 = this.calculateActivityData(activityGoal, perCase, YearConfig, activityDays);\n\n          returnDatas.YearConfig = YearConfig;\n          returnDatas.GoalStatus = GoalStatus;\n          returnDatas.Step1 = Step1;\n          returnDatas.Step2 = Step2;\n          returnDatas.Step3 = Step3;\n          returnDatas.Step4 = Step4;\n\n        } else {\n          Step5.TeamFYFC = goalSettingValueObj.TEAM_FYFC;\n          Step5.TeamANP = goalSettingValueObj.TEAM_ANP;\n          Step5.Manpower = goalSettingValueObj.TEAM_MANPOWER;\n          Step5.Recruitment = goalSettingValueObj.TEAM_RECRUITMENT;\n\n          let agencyPlanObj = await this.getAgencyPlanMainDataByRestful(DataYear, AgentID);\n\n          if (agencyPlanObj != null) {\n            let mainDataList = agencyPlanObj.AgencyMainDataList;\n            AgencyPlan.FYFCForecast = mainDataList.filter(x => x.DataType == \"FYFC\")[0].Forecast;\n            AgencyPlan.ANPForecast = mainDataList.filter(x => x.DataType == \"ANP\")[0].Forecast\n            AgencyPlan.ManpowerPlan = this.changeToDash(mainDataList.filter(x => x.DataType == \"Manpower\")[0].MonthPlan);\n            AgencyPlan.RecruitmentPlan = mainDataList.filter(x => x.DataType == \"Recruitment\")[0].MonthPlan;\n            AgencyPlan.CompletionRate = agencyPlanObj.CompletionRate;\n          } else {\n            throw \"get agencyPlan fail.\"\n          }\n          returnDatas.YearConfig = YearConfig;\n          returnDatas.GoalStatus = GoalStatus;\n          returnDatas.Step4 = Step4;\n          returnDatas.Step5 = Step5;\n\n          //todo get completionRate \n          // AgencyPlan.CompletionRate = ? ;\n          returnDatas.AgencyPlan = AgencyPlan;\n        }\n      }\n      returnDatas = this._converSelectCode(returnDatas);\n      if (this.goalSettingStep) {\n        returnDatas = this.goalSettingStep.changeEmptyToDash(returnDatas);\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00505', 'getOverviewDataByRestful fail!' + error.message));\n    }\n\n    console.log(\"_getOverviewDataByRestful returnDatas\", returnDatas, JSON.parse(JSON.stringify(returnDatas)));\n    return returnDatas;\n  }\n\n  //#endregion GoalSetting overview\n\n\n  //#region get month actual & plan\n  @Valid('GoalSettingStep4')\n  public getMonthActualPlan(performanceType: PERFORMANCETYPE, DataYear: number, monthQuantityOfYear: number = 12, PerformanceSettlementMonth: number = 99, AgentID: string = \"\"): Observable<GoalSettingStep4> {\n    if (StringUtils.isEmpty(AgentID)) {\n      return from(this._getMonthActualPlanBySQL(performanceType, DataYear, monthQuantityOfYear, PerformanceSettlementMonth));\n    } else {\n      return from(this._getMonthActualPlanByRestful(performanceType, DataYear, monthQuantityOfYear, PerformanceSettlementMonth, AgentID));\n    }\n  }\n\n  private async _getMonthActualPlanByRestful(performanceType: string, DataYear: number, monthQuantityOfYear: number, PerformanceSettlementMonth: number, AgentID: string): Promise<GoalSettingStep4> {\n    // call GetGoalAPI (Restful set AgentID)\n    let GoalResp: any;\n    let ActualResp: any;\n    let returnDatas: GoalSettingStep4 = new GoalSettingStep4();\n    let MonthActualPlanList: Array<MonthlyPlanFYFCData> = [];\n\n    try {\n      let getGoalapi = this.APIFactory.getAPI(\"getGoal\");\n      let getActualapi = this.APIFactory.getAPI(\"getActual\");\n      (<getGoalAPI>getGoalapi).setAgentID(AgentID);\n      (<getActualAPI>getActualapi).setAgentID(AgentID);\n\n      [GoalResp, ActualResp] = await Promise.all([\n        this.dispatcher.dispatch(getGoalapi).toPromise(),\n        this.dispatcher.dispatch(getActualapi).toPromise()\n      ]);\n\n      console.log(\"GoalResp\", GoalResp);\n      console.log(\"ActualResp\", ActualResp);\n\n      let GoalPlanMap = new Map<number, string>();\n      let ActuallMap = new Map<number, string>();\n      let thisActual: Array<any> = [];\n\n      if (GoalResp.Goals != null && ActualResp.Actual != null) {\n        GoalResp.Goals.forEach(Goal => {\n          if (Goal.DataYear == DataYear && Goal.GoalPlan.Values != null) {\n            Goal.GoalPlan.Values.forEach(plan => {\n              if (plan.PerformanceType == performanceType) {\n                GoalPlanMap.set(plan.Month, plan.Value.toString());\n              }\n            });\n          }\n        });\n\n        thisActual = ActualResp.Actual.filter(Actual => Actual.DataYear == DataYear).map(x => x.Values);\n        console.log(\"thisActual\", thisActual);\n        thisActual.forEach(Actual => {\n          Actual.forEach(value => {\n            if (value.DataType == \"FYFC\" && value.PerformanceType == performanceType) {\n              ActuallMap.set(value.Month, value.Value.toString());\n            }\n          });\n        });\n      } else {\n        throw \"get Goal fail. GoalResp:\" + GoalResp;\n      }\n\n      for (let i = 1; i <= monthQuantityOfYear; i++) {\n        MonthActualPlanList.push(new MonthlyPlanFYFCData(\n          i,\n          this.changeToDash(GoalPlanMap.get(i)),\n          ActuallMap.get(i) == null || i > PerformanceSettlementMonth ? this.DASH : ActuallMap.get(i)));\n      }\n      returnDatas.MonthList = MonthActualPlanList;\n      returnDatas.Actual = this.calculateActual(PerformanceSettlementMonth, MonthActualPlanList).toString();\n      returnDatas.Forecast = this.calculateForecast(PerformanceSettlementMonth, MonthActualPlanList).toString();\n      returnDatas.Shortfall = null;\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00410', 'getMonthActualPlanByRestful fail!' + error.message));\n    }\n\n    console.log(\"_getMonthActualPlanByRestful Datas\", returnDatas);\n    return returnDatas;\n  }\n\n  private async _getMonthActualPlanBySQL(performanceType: string, DataYear: number, monthQuantityOfYear: number, PerformanceSettlementMonth: number): Promise<GoalSettingStep4> {\n\n    console.log('_getMonthActualPlanBySQL performanceType', performanceType, 'DataYear', DataYear, 'monthQuantityOfYear', monthQuantityOfYear, 'PerformanceSettlementMonth', PerformanceSettlementMonth)\n    let returnData: GoalSettingStep4 = new GoalSettingStep4();\n    let MonthActualPlanList: Array<MonthlyPlanFYFCData> = [];\n    try {\n      let actualResp, goalPlanResp;\n      // call GetGoalSettingValue       // call GetActualValue\n      let goalPlanList: string[] = Array(monthQuantityOfYear).fill(this.DASH, 0);\n      let actualList: string[] = Array(monthQuantityOfYear).fill(this.DASH, 0);\n      let goalPlan = this.APIFactory.getAPI(\"getGoalSettingPlan\");\n      let actual = this.APIFactory.getAPI(\"getGoalSettingActualValue\");\n      (<GoalSettingGetPlanAPI>goalPlan).setDataYear(DataYear);\n      (<GoalSettingGetActualAPI>actual).setDataYear(DataYear);\n\n      [goalPlanResp, actualResp] = await Promise.all([\n        this.dispatcher.dispatch(goalPlan).toPromise(),\n        this.dispatcher.dispatch(actual).toPromise()\n      ]);\n      console.log(\"goalPlanResp\", goalPlanResp);\n      console.log(\"actualResp\", actualResp);\n\n      if (goalPlanResp.Header[\"status\"] && actualResp.Header[\"status\"]) {\n        goalPlanResp[\"Body\"].filter(x => x.PerformanceType == performanceType).map(x => {\n          goalPlanList[x.Month - 1] = x.Value.toString();\n        });\n        actualResp[\"Body\"].filter(x => x.PerformanceType == performanceType && x.DataType == \"FYFC\" && x.Month <= PerformanceSettlementMonth).map(x => {\n          actualList[x.Month - 1] = x.Value.toString();\n        });\n      } else {\n        throw \"get GoalSetting fail. goalPlanResp\" + goalPlanResp.Header.msg + 'actualResp:' + actualResp.Header.msg;\n      }\n      console.log(\"goalPlanList\", goalPlanList);\n      console.log(\"actuallist\", actualList);\n\n      for (let i = 1; i <= monthQuantityOfYear; i++) {\n        MonthActualPlanList.push(new MonthlyPlanFYFCData(\n          i,\n          goalPlanList[i - 1],\n          actualList[i - 1]));\n      }\n      returnData.MonthList = MonthActualPlanList;\n      returnData.Actual = this.calculateActual(PerformanceSettlementMonth, MonthActualPlanList).toString();\n      returnData.Forecast = this.calculateForecast(PerformanceSettlementMonth, MonthActualPlanList).toString();\n      returnData.Shortfall = null;\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00411', 'getMonthActualPlanBySQL fail!' + error.message));\n    }\n    console.log(\"_getMonthActualPlanBySQL returnData\", returnData);\n    return returnData;\n  }\n\n  //#endregion get month actual & plan\n\n\n  //#region AgencyPlan Datas\n  public getAgencyPlanMainData(dataYear: number, AgentID: string = \"\"): Observable<AgencyPlanMainInfo> {\n    if (AgentID == \"\") {\n      return from(this.getAgencyPlanMainDataBySQL(dataYear));\n    } else if (AgentID != \"\") {\n      return from(this.getAgencyPlanMainDataByRestful(dataYear, AgentID));\n    }\n  }\n\n  private async getAgencyPlanMainDataBySQL(dataYear: number): Promise<AgencyPlanMainInfo> {\n    console.log('getAgencyPlanMainDataBySQL DataYear', dataYear);\n\n    let returnData: AgencyPlanMainInfo = new AgencyPlanMainInfo();\n\n    let otherParaResp;\n    let agencyPlanResp;\n\n    try {\n      //get completionRate \n      let getOtherParameterAPI: GetOtherParameterAPI = <GetOtherParameterAPI>this.APIFactory.getAPI('getOtherParameter');\n      let agencyPlanGetMainAPI: AgencyPlanGetMainAPI = <AgencyPlanGetMainAPI>(this.APIFactory.getAPI(\"getAgencyPlanMain\"));\n      getOtherParameterAPI.SetYear(dataYear);\n      agencyPlanGetMainAPI.setDataYear(dataYear);\n\n      [otherParaResp, agencyPlanResp] = await Promise.all(\n        [getOtherParameterAPI, agencyPlanGetMainAPI].map(api => this.dispatcher.dispatch(api).toPromise()));\n      console.log('otherParaResp: ', otherParaResp, \"agencyPlanResp\", agencyPlanResp);\n\n      if (otherParaResp.Header[\"status\"] && agencyPlanResp.Header[\"status\"]) {\n        let respFilterCompletionRate = otherParaResp['Body'].filter(x => x.MappingID === \"CompletionRate\");\n        let completionRate: string = respFilterCompletionRate.length > 0 ? respFilterCompletionRate[0].SetValue : '';\n\n        let returnList: Array<AgencyPlanMainData> = [];\n        let AgencyPlanMainList = agencyPlanResp[\"Body\"];\n        console.log(\"getAgencyPlanMainDataBySQL AgencyPlanMainList\", AgencyPlanMainList);\n        if (AgencyPlanMainList) {\n          returnList = (<Array<any>>AgencyPlanMainList).map(main => this._agencyPlanMainDataObjToBean(main));\n        } else {\n          throw \"get AgencyPlanMainList fail.\"\n        }\n        console.log('getAgencyPlanMainDataBySQL returnList:', returnList);\n\n        console.log('completionRate:', completionRate);\n        returnData.CompletionRate = completionRate;\n        returnData.AgencyMainDataList = returnList;\n\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00300', 'getAgencyPlanMainDataBySQL fail!' + error));\n    }\n\n    console.log(\"getAgencyPlanMainDataBySQL returnData\", returnData);\n    return returnData;\n  }\n\n  private _agencyPlanMainDataObjToBean(object: any): AgencyPlanMainData {\n    let agencyPlanMainData: AgencyPlanMainData = new AgencyPlanMainData();\n    agencyPlanMainData.Actual = object.Actual;\n    agencyPlanMainData.DataType = object.DataType;\n    agencyPlanMainData.DataYear = object.DataYear;\n    agencyPlanMainData.Forecast = object.Forecast;\n    agencyPlanMainData.MonthPlan = this.changeToDash(object.MonthPlan);\n    return agencyPlanMainData;\n  }\n\n  private async getAgencyPlanMainDataByRestful(dataYear: number, AgentID: string): Promise<AgencyPlanMainInfo> {\n\n    console.log('getAgencyPlanMainDataByRestful dataYear', dataYear, 'AgentID', AgentID);\n    let returnData: AgencyPlanMainInfo = new AgencyPlanMainInfo();\n    let MainList: Array<AgencyPlanMainData> = [];\n\n    try {\n      let getAgencyPlanAPI: getAgencyPlanAPI = <getAgencyPlanAPI>(this.APIFactory.getAPI(\"getAgencyPlan\"));\n      getAgencyPlanAPI.setAgentID(AgentID);\n      let agencyPlanResp = await this.dispatcher.dispatch(getAgencyPlanAPI).toPromise();\n\n      console.log(\"getAgencyPlanMainDataByRestful agencyPlanResp \", agencyPlanResp);\n      if (agencyPlanResp.AgencyPlans != null) {\n        let agencyPlanMap = this.yearJsonToMap(agencyPlanResp.AgencyPlans);\n        let completionRate = agencyPlanMap.get(dataYear).CompletionRate;\n        let tempAgencyPlanList = agencyPlanMap.get(dataYear).Values;\n        (<Array<any>>tempAgencyPlanList).forEach(plan => {\n          plan['MonthPlan'] = plan['Plan'];\n          plan['DataYear'] = dataYear;\n        });\n\n        MainList = (<Array<any>>tempAgencyPlanList).map(plan => this._agencyPlanMainDataObjToBean(plan));\n        returnData.AgencyMainDataList = MainList;\n        returnData.CompletionRate = completionRate;\n      } else {\n        throw \"get AgencyPlan fail. agencyPlanResp:\" + agencyPlanResp;\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00301', 'getAgencyPlanMainDataByRestful fail!' + error.message));\n    }\n\n    console.log(\"getAgencyPlanMainDataByRestful returnData \", returnData);\n    return returnData;\n\n  }\n\n  @Valid('AgencyPlanDetail')\n  public getAgencyPlanDetailData(dataYear: number): Observable<Array<AgencyPlanDetail>> {\n\n    let agencyPlanGetDetailAPI: AgencyPlanGetDetailAPI = <AgencyPlanGetDetailAPI>this.APIFactory.getAPI(\"getAgencyPlanDetail\");\n    agencyPlanGetDetailAPI.setDataYear(dataYear);\n    return Observable.create(observer => {\n      try {\n        this.dispatcher.dispatch(agencyPlanGetDetailAPI).subscribe(resp => {\n          if (resp[\"Body\"]) {\n            let returnList: Array<AgencyPlanDetail> = [];\n            // let AgencyPlanDetailList: Array<AgencyPlanDetail> = resp[\"Body\"];\n            returnList = (<Array<any>>resp[\"Body\"]).map(item => this._agencyPlanDetailObjToBean(item));\n            console.log(\"returnList in service: \", returnList);\n            observer.next(returnList);\n            observer.complete();\n          }\n          else {\n            throw \"get agencyPlanGetDetail fail. resp:\" + resp;\n          }\n        });\n      } catch (error) {\n        this.errorHandler.handleError(new APPError('F00302', 'getAgencyPlanDetailData fail!' + error.message));\n      }\n    });\n  }\n\n  private _agencyPlanDetailObjToBean(object: any): AgencyPlanDetail {\n    let agencyPlanDetail = new AgencyPlanDetail();\n\n    agencyPlanDetail.AgentID = object.AgentID;\n    agencyPlanDetail.AgentName = object.AgentName;\n    agencyPlanDetail.DataYear = object.DataYear;\n    agencyPlanDetail.AppUseMode = object.AppUseMode;\n    agencyPlanDetail.JobGrade = object.JobGrade;\n    agencyPlanDetail.Actual = this.changeToDash(object.Actual);\n    agencyPlanDetail.CaseCount = this.changeToDash(object.CaseCount);\n    agencyPlanDetail.ClientID = object.ClientID;\n    agencyPlanDetail.DataType = object.DataType;\n    agencyPlanDetail.DirectUnitType = object.DirectUnitType;\n    agencyPlanDetail.Drilldown = object.Drilldown;\n    agencyPlanDetail.TextColor = agencyPlanDetail.Drilldown == 'Y' ? 'blue' : 'default';\n    agencyPlanDetail.Forecast = this.changeToDash(object.Forecast);\n    agencyPlanDetail.Goal = this.changeToDash(object.Goal);\n    agencyPlanDetail.IsApprove = object.IsApprove;\n    agencyPlanDetail.IsHasDot = agencyPlanDetail.IsApprove === 'Y';\n    agencyPlanDetail.Manpower = object.Manpower;\n    agencyPlanDetail.MonthPlan = this.changeToDash(object.MonthPlan);\n    agencyPlanDetail.Orders = object.Orders;\n    agencyPlanDetail.PerCase = this.changeToDash(object.PerCase);\n    agencyPlanDetail.Recruitment = object.Recruitment;\n\n    return agencyPlanDetail;\n\n  }\n\n  @Valid('AgencyPlanGoalExpected')\n  public async getGoalExpected(dataYear: number): Promise<AgencyPlanGoalExpected> {\n\n    let returnAgencyPlanGoalExpected: AgencyPlanGoalExpected;\n    let goalSettingYearConfigAPI: GoalSettingGetYearConfigAPI = <GoalSettingGetYearConfigAPI>this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n    goalSettingYearConfigAPI.setDataYear(dataYear);\n    let goalSettingGetExpectedAPI: GoalSettingGetExpectedAPI = <GoalSettingGetExpectedAPI>this.APIFactory.getAPI(\"getGoalSettingExpected\");\n    goalSettingGetExpectedAPI.setDataYear(dataYear);\n    try {\n      let yearConfigResp;\n      let goalExpectedResp;\n\n      [yearConfigResp, goalExpectedResp] = await Promise.all([\n        this.dispatcher.dispatch(goalSettingYearConfigAPI).toPromise(),\n        this.dispatcher.dispatch(goalSettingGetExpectedAPI).toPromise()\n      ])\n\n      if (goalExpectedResp && yearConfigResp) {\n        let expectedRespBody: Array<any> = goalExpectedResp[\"Body\"];\n        let yearConfigRespBody: Array<any> = yearConfigResp[\"Body\"];\n\n        returnAgencyPlanGoalExpected = expectedRespBody.length > 0 ? this._agencyPlanGoalExpectedObjToBean(expectedRespBody[0]) : new AgencyPlanGoalExpected(dataYear);\n        returnAgencyPlanGoalExpected.FYFCConvertANPRate = yearConfigRespBody[0]['FyfcCovertAnpRate'];\n        returnAgencyPlanGoalExpected.WorkingQuarter = yearConfigRespBody[0]['WorkingQuarter'];\n\n        console.log(\"getGoalExpected trans\", returnAgencyPlanGoalExpected);\n      } else {\n        throw \"get goal expected and yearConfigfail.\";\n      }\n\n      return returnAgencyPlanGoalExpected;\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00303', 'getGoalExpected fail!' + error.message));\n    }\n\n  }\n\n  private _agencyPlanGoalExpectedObjToBean(object: any): AgencyPlanGoalExpected {\n\n    let goalExpected: AgencyPlanGoalExpected = new AgencyPlanGoalExpected(object.DataYear);\n\n    goalExpected.ANP = object.ANP.toString();\n    goalExpected.FYFC = object.FYFC.toString();\n    goalExpected.Q1 = object.Q1.toString();\n    goalExpected.Q2 = object.Q2.toString();\n    goalExpected.Q3 = object.Q3.toString();\n    goalExpected.Q4 = object.Q4.toString();\n    let numberRecruitmentTotal = NumberUtils.isNumber(object.RecruitmentTotal) ? Number(object.RecruitmentTotal) : 0;\n    goalExpected.RecruitmentTotal = numberRecruitmentTotal;\n    return goalExpected;\n  }\n\n  public calculaRecruitmentSum(goalExpected: AgencyPlanGoalExpected): number {\n    return [goalExpected.Q1, goalExpected.Q2, goalExpected.Q3, goalExpected.Q4].reduce((total, each) => {\n      let numberQ = NumberUtils.isNumber(each) ? Number(each) : 0;\n      return total + numberQ;\n    }, 0);\n  }\n\n  public saveGoalExpected(expectedRecruitment: object, indirectRecruitment: number): Observable<any> {\n\n    let goalSettingSetExpectedAPI: GoalSettingSetExpectedAPI = <GoalSettingSetExpectedAPI>this.APIFactory.getAPI(\"setGoalSettingExpected\");\n    goalSettingSetExpectedAPI.setExpectedRecruitment(expectedRecruitment);\n    goalSettingSetExpectedAPI.setIndirectRecruitment(indirectRecruitment);\n    return Observable.create(observer => {\n      try {\n        this.dispatcher.dispatch(goalSettingSetExpectedAPI).subscribe(resp => {\n          observer.next(resp[\"Header\"]);\n          observer.complete();\n        });\n      } catch (error) {\n        this.errorHandler.handleError(new APPError('F00304', 'saveGoalExpected fail!' + error.message));\n      }\n    });\n  }\n\n  //#endregion AgencyPlan Datas\n\n\n  //#region other function\n  public numberToFix(n: number, toFix: number): number {\n    let fix10 = Math.pow(10, toFix);\n    let returnData = Math.round(this.strip(n) * fix10) / fix10;\n    return returnData;\n  }\n\n  public strip(num, precision = 12) {\n    return Number(num.toPrecision(precision));\n  }\n\n  public calculateNowToYearEndGoal(FYFC: any, actual: any): string {\n    console.log(\"calculateNowToYearEndGoal FYFC:\", FYFC, \"actual:\", actual);\n    let caculeteActual = NumberUtils.isNumber(actual) ? Number(actual) : 0;\n    if (!NumberUtils.isNumber(FYFC)) {\n      return this.DASH;\n    } else {\n      let result = Number(FYFC) - caculeteActual < 0 ? 0 : Number(FYFC) - caculeteActual;\n      return result.toString();\n    }\n  }\n\n  public calculateAllYearGoal(NowToYearEnd: any, actual: any): string {\n    console.log(\"calculateNowToYearEndGoal NowToYearEnd:\", NowToYearEnd, \"actual:\", actual);\n    let caculeteActual = NumberUtils.isNumber(actual) ? Number(actual) : 0;\n    if (!NumberUtils.isNumber(NowToYearEnd)) {\n      return this.DASH;\n    } else {\n      return (Number(NowToYearEnd) + caculeteActual).toString();\n    }\n  }\n\n\n  private _isPopup: boolean = false;\n\n  public get saveFeedbackState() {\n    return this._isPopup;\n  }\n\n  public set saveFeedbackState(isPopup: boolean) {\n    this._isPopup = isPopup;\n  }\n\n  public getActualPlanFromMonthList(list: Array<MonthlyPlanFYFCData>, actualMonth: number) {\n    console.log(\"getActualPlanFromMonthList:\", list, actualMonth);\n    return list.map((x, index) => (index + 1 < actualMonth || index + 1 === actualMonth ? x.Actual : x.Plan));\n  }\n\n  public calculateANPFromFYFC(FYFC, rate): string {\n    if (StringUtils.isEmpty(FYFC) || FYFC == this.DASH) {\n      return this.DASH;\n    } else {\n      return this.numberToFix(Number(FYFC) * Number(rate), 0).toString();\n    }\n  }\n\n  public calculateFYFCFromANP(ANP, rate): string {\n    if (StringUtils.isEmpty(ANP) || ANP == this.DASH) {\n      return this.DASH;\n    } else {\n      return this.numberToFix(Number(ANP) / Number(rate), 0).toString();\n    }\n  }\n\n  //#endregion other function\n\n\n  //#region Sync Datas \n  public async syncGoalDatas() {\n    this.goalStore.setSyncGoalDatas(SYNC_STATUS.SYNC);\n    await this.dataSyncService.syncFunc([\"GOAL\", \"PROGRESS\"], true);\n    this.goalStore.setSyncGoalDatas(SYNC_STATUS.FINISH);\n  }\n\n  public async syncAgencyPlan() {\n    return this.dataSyncService.syncFunc([\"AGENCY_PLAN\"], true);\n  }\n\n  public async syncYearConfig() {\n    return this.dataSyncService.syncFunc([\"YEAR_CONFIG\"], true);\n  }\n\n  @Valid('SuccessStatus')\n  public async pushApproveGoal(approveInfo: ApproveInfo): Promise<SuccessStatus> {\n    return this._pushApproveGoal(approveInfo);\n  }\n\n  public changeToDash(param: any): string {\n    return (param === -1 || param === null || param === \"\") ? this.DASH : param.toString();\n  }\n  //#endregion Sync Datas \n\n  private async _pushApproveGoal(approveInfo: ApproveInfo): Promise<SuccessStatus> {\n    let returnResp: SuccessStatus = new SuccessStatus(false);\n    let approveInfoData = {\n      \"AgentID\": approveInfo.AgentID,\n      \"DataYear\": approveInfo.DataYear,\n      \"isApprove\": approveInfo.IsApprove,\n      \"comment\": approveInfo.Comment\n    }\n    try {\n      let mainData = approveInfoData;\n      let pushApproveData = this.APIFactory.getAPI(\"pushApproveGoal\");\n      (<pushApproveGoalAPI>pushApproveData).mainData = mainData;\n      console.log('pushApproveGoal mainData', mainData);\n      let getResp = await this.dispatcher.dispatch(pushApproveData).toPromise();\n      console.log('getResp', getResp);\n      if (getResp.success) {\n        await this.dataSyncService.syncFunc([\"DASHBOARD\", \"GOAL\", \"PROGRESS\"]);\n        returnResp.isSuccess = true;\n      } else {\n        throw \"Approve Goal fail.\";\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00100', 'pushApproveGoal fail!' + error.message));\n    }\n    console.log(\"[_pushApproveGoal] returnResp:\", returnResp);\n    return returnResp;\n\n  }\n\n  private async _pushGoalSetting(submitDatas: SubmitGoalData): Promise<SuccessStatus> {\n\n    let returnResp: SuccessStatus = new SuccessStatus(false);\n    try {\n\n      console.log('pushGoalSettingDataAPI mainData', submitDatas);\n      let pushGoalSettingData = this.APIFactory.getAPI(\"pushGoalSettingData\");\n      (<pushGoalSettingDataAPI>pushGoalSettingData).mainData = submitDatas;\n      let getResp = await this.dispatcher.dispatch(pushGoalSettingData).toPromise();\n\n      if (getResp.success) {\n        returnResp.isSuccess = true;\n      } else {\n        throw \"push Goal failed,\" + getResp.Header.msg;\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00101', error));\n    }\n    return returnResp;\n  }\n\n  private _converSelectCode(StepData: GoalSettingStepData): GoalSettingStepData {\n    this.ColMapToProfile.forEach((code, col) => {\n      let profileCodes: Array<ProfileCode> = this.ColMapToProfileCodeMap.get(col);\n      if (profileCodes.length && StepData.Step1 && StepData.Step1[col]) {\n        let colVal = StepData.Step1[col];\n        profileCodes = profileCodes.filter(x => x.getCode() == colVal);\n        StepData.Step1[col] = profileCodes.length ? profileCodes[0].getMappingID() : this.DASH;\n      }\n    });\n    return StepData;\n  }\n\n}","import { Injectable, ErrorHandler, Optional, Inject } from \"@angular/core\";\nimport { StringUtils, NumberUtils, APPError } from \"@allianzSND/core\";\nimport { GoalSettingStepData, ValidError, GoalSettingStep4 } from \"./model\";\nimport { GoalSettingService } from \"./goal-setting.service\";\nimport { goalSettingStep, GoalValidExtension } from \"../interface\";\nimport { goalSettingStepToken, goalValidToken } from \"../injectionToken\";\n\n\n@Injectable({\n    providedIn: \"root\"\n  })\n  \n  export class GoalValidService {\n\n    private numberValid: Array<string> = [];\n    private requiredValid: Array<string> = [];\n\n    constructor(\n        private errorHandler: ErrorHandler,\n        private goalSettingService: GoalSettingService,\n        @Optional()\n        @Inject(goalSettingStepToken)\n        private goalSettingStep: goalSettingStep,\n        @Optional()\n        @Inject(goalValidToken)\n        private goalValid: GoalValidExtension,\n    ){\n        if(this.goalValid){\n            this.numberValid = this.goalValid.getNumberArray();\n            this.requiredValid = this.goalValid.getRequiredArray();\n        }else{\n            this.numberValid = [\"FYFC\", \"FYFCNowToYearEnd\", \"PerCase\", \"TeamFYFC\", \"TeamFYFCNowToYearEnd\", \"Recruitment\", \"Manpower\"];\n            this.requiredValid = [\"FYFC\", \"FYFCNowToYearEnd\", \"AnnualConvention\", \"MDRT\", \"PerCase\", \"TeamFYFC\", \"TeamFYFCNowToYearEnd\", \"Manpower\", \"Recruitment\"];    \n        }\n    }\n\n   //#region Vaild function\n   public onChangeValid(step: number, colId: string, val: string, validDatas: GoalSettingStepData, isAdjust: boolean, errorResult: Array<ValidError>, isPageValid: boolean = false): Array<ValidError> {\n\n    console.log(\"onChangeValid colId\", colId, \"val\", val, 'validDatas', validDatas, errorResult, 'isPageValid', isPageValid);\n    try {\n      let isDecimalResult: boolean;\n      let PlanEmpty = colId.indexOf(\"Plan_\") != -1 && StringUtils.isEmpty(val);\n      let RequiredEmpty: boolean = this.requiredValid.indexOf(colId) != -1 && StringUtils.isEmpty(val);\n      let numberPositive: boolean = this.numberValid.indexOf(colId) != -1 && !NumberUtils.isPositive(val);\n      let vaildEmptyResult: boolean = RequiredEmpty || numberPositive || PlanEmpty; //è² æ¸çerror msg ä¹æ¯_required\n\n      let requiredErrorMsg = (colId.indexOf(\"Plan_\") != -1) ? \"Plan_required\" : colId + \"_required\";\n      errorResult = this._setError(step, colId, \"_required\", vaildEmptyResult, errorResult, requiredErrorMsg); //å¤æ·æ¯å¦æ¯è² æ¸ææ¯ç©ºå¼\n\n      if (!vaildEmptyResult && (this.numberValid.indexOf(colId) != -1 || colId.indexOf(\"Plan_\") != -1)) { //å¤æ·ä¸æ¯ç©ºå¼æè² æ¸æç¹¼çºå¾ä¸é©è­\n        isDecimalResult = NumberUtils.isDecimal(val);\n        errorResult = this._setError(step, colId, \"_point\", isDecimalResult, errorResult);\n      }\n\n      console.log(\"isDecimalResult\", isDecimalResult, \"vaildEmptyResult\", vaildEmptyResult, \"isPageValid\", isPageValid);\n      if (!isDecimalResult && !vaildEmptyResult && !isPageValid) { //é©è­é½æ²æé¯ææ¹å¼\n        console.log(\"onChangeValid no error\");\n        if (colId.indexOf(\"Plan_\") != -1) {\n          validDatas.Step4.Forecast = this.goalSettingService.calculateForecast(validDatas.YearConfig.PerformanceSettlementMonth, validDatas.Step4.MonthList);\n          validDatas.Step4.Shortfall = this.goalSettingService.calculateShortfall(validDatas.Step1.FYFC, validDatas.Step4.Forecast);\n          errorResult = this._validShortfall(validDatas.Step4, errorResult);\n        }\n\n        if (!isAdjust) { // ç¬¬ä¸æ¬¡è¨­å®goal\n          switch (colId) {\n            case \"TeamFYFC\":\n              validDatas.Step5.TeamANP = this.goalSettingService.calculateANPFromFYFC(val, validDatas.YearConfig.FyfcCovertAnpRate);\n              break;\n            case \"TeamFYFCNowToYearEnd\":\n              validDatas.Step5.TeamANPNowToYearEnd = this.goalSettingService.calculateANPFromFYFC(val, validDatas.YearConfig.FyfcCovertAnpRate);\n              break;\n            case \"FYFC\":\n              validDatas.Step3 = this.goalSettingService.calculateActivityData(val, validDatas.Step2.PerCase, validDatas.YearConfig);\n              validDatas.Step4 = this.goalSettingService.calculateMonthActualPlan(validDatas.YearConfig, val, validDatas.ActualList);\n              validDatas.Step4.Shortfall = this.goalSettingService.calculateShortfall(Number(val), validDatas.Step4.Forecast);\n              errorResult = this.unitPageValid(4, validDatas, false, errorResult);\n              break;\n            case \"PerCase\":\n              validDatas.Step3 = this.goalSettingService.calculateActivityData(validDatas.Step1.FYFC, val, validDatas.YearConfig);\n              break;\n          }\n        } else {\n          let FYFCSmallValid = Number(validDatas.Step1.Actual) > Number(validDatas.Step1.FYFC);\n          let FYFCNowToYearEndIsPositive = NumberUtils.isPositive(validDatas.Step1.FYFCNowToYearEnd);\n          switch (colId) {\n            case \"FYFC\":\n              validDatas.Step1.FYFCNowToYearEnd = this.goalSettingService.calculateNowToYearEndGoal(val, validDatas.Step1.Actual);\n              errorResult = this._setError(1, colId, \"_small\", FYFCSmallValid, errorResult);\n              errorResult = this._setError(1, \"FYFCNowToYearEnd\", \"_required\", !FYFCNowToYearEndIsPositive, errorResult);\n              if (!FYFCSmallValid && FYFCNowToYearEndIsPositive) {\n                validDatas.Step3 = this.goalSettingService.calculateActivityData(validDatas.Step1.FYFCNowToYearEnd, validDatas.Step2.PerCase, validDatas.YearConfig);\n                validDatas.Step4.Forecast = this.goalSettingService.calculateForecast(validDatas.YearConfig.PerformanceSettlementMonth, validDatas.Step4.MonthList);\n                validDatas.Step4.Shortfall = this.goalSettingService.calculateShortfall(Number(val), validDatas.Step4.Forecast);\n                errorResult = this._validShortfall(validDatas.Step4, errorResult);\n              }\n              break;\n            case \"FYFCNowToYearEnd\":\n              validDatas.Step1.FYFC = this.goalSettingService.calculateAllYearGoal(val, validDatas.Step1.Actual);\n              errorResult = this.onChangeValid(1, \"FYFC\", validDatas.Step1.FYFC, validDatas, true, errorResult);\n              break;\n            case \"PerCase\":\n              if (!FYFCSmallValid && FYFCNowToYearEndIsPositive) {\n                validDatas.Step3 = this.goalSettingService.calculateActivityData(validDatas.Step1.FYFCNowToYearEnd, val, validDatas.YearConfig);\n              }\n              break;\n            case \"TeamFYFC\":\n              validDatas.Step5.TeamFYFCNowToYearEnd = this.goalSettingService.calculateNowToYearEndGoal(val, validDatas.Step5.TeamFYFCActual);\n              let TeamFYFCSmallValid = Number(validDatas.Step5.TeamFYFCActual) > Number(validDatas.Step5.TeamFYFC);\n              let TeamFYFCNowToYearEndIsPositive = NumberUtils.isPositive(validDatas.Step5.TeamFYFCNowToYearEnd);\n              validDatas.Step5.TeamANP = this.goalSettingService.calculateANPFromFYFC(validDatas.Step5.TeamFYFC, validDatas.YearConfig.FyfcCovertAnpRate);\n              validDatas.Step5.TeamANPNowToYearEnd = this.goalSettingService.calculateANPFromFYFC(validDatas.Step5.TeamFYFCNowToYearEnd, validDatas.YearConfig.FyfcCovertAnpRate);\n              errorResult = this._setError(5, \"TeamFYFC\", \"_small\", TeamFYFCSmallValid, errorResult);\n              errorResult = this._setError(5, \"TeamFYFCNowToYearEnd\", \"_required\", !TeamFYFCNowToYearEndIsPositive, errorResult);\n              break;\n            case \"TeamFYFCNowToYearEnd\":\n              validDatas.Step5.TeamFYFC = this.goalSettingService.calculateAllYearGoal(val, validDatas.Step5.TeamFYFCActual);\n              errorResult = this.onChangeValid(1, \"TeamFYFC\", validDatas.Step5.TeamFYFC, validDatas, true, errorResult);\n              break;\n          }\n        }\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00406', 'onChangeValid fail!' + error.message));\n    }\n\n    console.log('onChangeValid errorResult', errorResult);\n    return errorResult;\n  }\n\n  public pageValid(step: number, validDatas: GoalSettingStepData, isAdjust: boolean): Array<ValidError> {\n\n    console.log('pageValid step', step, 'validDatas', JSON.stringify(validDatas), isAdjust);\n\n    let errorResult = [];\n    let steplist = [5, 4, 2, 1];\n    try {\n      steplist.forEach(stepNum => {\n        //å¤æ·å³é²ä¾çæ­¥é©å¤§æ¼æç­æ¼é©è­æ­¥é©æé©è­\n        if (step >= stepNum && validDatas[\"Step\" + stepNum] != null && validDatas[\"Step\" + stepNum] != undefined) {\n          errorResult = this.unitPageValid(stepNum, validDatas, isAdjust, errorResult);\n        }\n      });\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00407', 'pageValid fail!' + error.message));\n    }\n    return errorResult;\n  }\n\n  public unitPageValid(step: number, validDatas: GoalSettingStepData, isAdjust: boolean, errorResult: ValidError[]): ValidError[] {\n\n    let stepColMap = new Map<number, Array<string>>();\n\n    let step1Cols = [\"FYFC\", \"AnnualConvention\", \"MDRT\", \"PromotionPlan\"];\n    let step2Cols = [\"PerCase\"];\n    let step5Cols = [\"TeamFYFC\", \"TeamANP\", \"Manpower\", \"Recruitment\"];\n    stepColMap.set(1, step1Cols);\n    stepColMap.set(2, step2Cols);\n    stepColMap.set(5, step5Cols);\n\n    if (step == 4) {\n      //é©è­ç¬¬4æ­¥\n      let monthList = validDatas.Step4.MonthList;\n      let performanceSettlementMonth = validDatas.YearConfig.PerformanceSettlementMonth;\n      monthList.filter(obj => obj.Month > performanceSettlementMonth).forEach(x => {\n        errorResult = this.onChangeValid(4, \"Plan_\" + x.Month, x.Plan, validDatas, false, errorResult, true);\n      });\n      errorResult = this._validShortfall(validDatas.Step4, errorResult);\n    } else {\n      //å¶ä»æ­¥é©é©è­\n      if (isAdjust) {\n        step5Cols.push(\"TeamFYFCNowToYearEnd\");\n        step1Cols.push(\"FYFCNowToYearEnd\");\n      }\n      let stepCols = stepColMap.get(step);\n      stepCols.forEach(col => {\n        errorResult = this.onChangeValid(step, col, validDatas[\"Step\" + step][col], validDatas, isAdjust, errorResult, true);\n      });\n    }\n\n    return errorResult;\n  }\n\n  private _setError(step: number, colId: string, errorType: string, validresult: boolean, errorResult: Array<ValidError>, errorMsg: string = ''): Array<ValidError> {\n    console.log('step', step, 'colId', colId, 'errorType', errorType, 'validresult', validresult, 'errorResult', errorResult);\n    errorMsg = StringUtils.isEmpty(errorMsg) ? colId + errorType : errorMsg;\n    errorResult = errorResult.filter(x => (x.ColId != colId || (x.ColId == colId && x.Msg.indexOf(errorMsg)))); //ç­æ¼colId && ç­æ¼errortype çåæ¿æ\n    if (validresult) {\n      errorResult.push(new ValidError(step, colId, errorMsg));\n    }\n    console.log('errorResult', errorResult);\n    return errorResult;\n  }\n\n  private _validShortfall(setp4Obj: GoalSettingStep4, errorResult: Array<ValidError>): Array<ValidError> {\n\n    //é©è­Shortfall\n    if (this.goalSettingStep) {\n      let validresult = this.goalSettingStep.validateGoal_Forecast(Number(setp4Obj.Shortfall));\n      errorResult = this._setError(4, \"Shortfall\", \"value\", validresult, errorResult, \"Shortfall_nonZero\");\n    }\n    else {\n      let validresult = Number(setp4Obj.Shortfall) != 0;\n      errorResult = this._setError(4, \"Shortfall\", \"value\", validresult, errorResult, \"Shortfall_nonZero\");\n    }\n\n    return errorResult;\n  }\n\n  //#endregion Vaild\n  }\n","import { Observable, BehaviorSubject, Subject } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { AgencyPlanAgentInfo } from \"./model\";\nimport { AgencyPlanStatus, AGENCY_STATE } from \"./model/AgencyPlanStatus\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AgencyPlanStoreService {\n\n  private _stateBehaviorSubject: Subject<AgencyPlanStatus>;\n  private _detailBehaviorSubject: Subject<AgencyPlanAgentInfo>;\n\n  private _agencyState: AgencyPlanStatus;\n  private _agencyDetail: AgencyPlanAgentInfo;\n\n  constructor(\n  ) {\n    this._agencyState = new AgencyPlanStatus(AGENCY_STATE.DISPLAY, null);\n    this._stateBehaviorSubject = new BehaviorSubject(this._agencyState);\n    this._detailBehaviorSubject = new BehaviorSubject(this._agencyDetail);\n\n  }\n\n  setState(state: AgencyPlanStatus): void {\n    this._agencyState = state;\n    this._stateBehaviorSubject.next(this._agencyState);\n\n  };\n\n  getState(): Observable<AgencyPlanStatus> {\n    return this._stateBehaviorSubject;\n  };\n\n  // setCurrentAgencyDetail(detail: any): void {\n  //   console.log(\"setCurrentAgencyDetail detail:\",detail);\n  //   this._agencyDetail = detail;\n  //   this._detailBehaviorSubject.next(this._agencyDetail);\n  // };\n\n  setCurrentAgencyDetail(agentInfo: AgencyPlanAgentInfo): void {\n    console.log(\"setCurrentAgencyDetail agentInfo:\", agentInfo);\n    this._agencyDetail = agentInfo;\n    this._detailBehaviorSubject.next(this._agencyDetail);\n  };\n\n  getCurrentAgencyDetail(): Observable<AgencyPlanAgentInfo> {\n    return this._detailBehaviorSubject;\n  };\n\n}\n","\nexport class GoalTitleListItem {\n\n    constructor(private title: string, private desc: string) { }\n\n    public getTitle(): string {\n      return this.title;\n    }\n\n    public setTitle(title: string): void {\n        this.title = title;\n    }\n\n    public getDesc(): string {\n      return this.desc;\n    }\n\n    public setDesc(desc: string): void {\n        this.desc = desc;\n    }\n} // end class GoalTitleListItem\n","import { Injectable } from '@angular/core';\nimport { TranslateService, TIMEBASE, StringUtils } from '@allianzSND/core';\nimport { GoalSettingStep5 } from '../service/model/GoalSettingStep5';\nimport { AgencyPlanDataForOverview } from '../service/model/AgencyPlanDataForOverview';\nimport { GoalTitleListItem } from '../components/goal-ui-title-list/goa-ui-title-list-item';\nimport { GoalSettingStep3 } from '../service/model/GoalSettingStep3';\nimport { ActivityValue } from '../service/model/ActivityValue';\nimport { DWM_DATETYPE } from '../service/model/GoalSettingCommon';\nimport { GoalSettingStepData } from '../service/model/GoalSettingStepData';\nimport { GoalSettingYearConfig } from '../service/model/GoalSettingYearConfig';\nimport { GoalSettingGoalStatus } from '../service/model/GoalSettingGoalStatus';\nimport { GoalSettingTranslate } from '../service/model/GoalSettingTranslate';\nimport { CombineStep5AndAgecyPlanData } from '../service/model/CombineStep5AndAgecyPlanData';\nimport { GoalSettingStep3ForTabChange } from '../service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoalSettingUtilService {\n\n  constructor(\n    private translateService: TranslateService\n  ) {\n  }\n\n  public getStep3TabOptionList(activity: string): Array<string> {\n\n    let daily = DWM_DATETYPE.DAILY;\n    let weekly = DWM_DATETYPE.WEEKLY;\n    let monthly = DWM_DATETYPE.MONTHLY;\n    let tabOptionList = [];\n    switch (activity) {\n      case 'Day':\n        tabOptionList = [daily, weekly, monthly];\n        break;\n      case 'Week':\n        tabOptionList = [weekly, monthly];\n        break;\n      case 'Month':\n        tabOptionList = [monthly];\n        break;\n      default:\n        break;\n    }\n\n    return tabOptionList;\n  }\n\n\n  public transformTeamStep5Data(step5Data: GoalSettingStep5, agencyPlanData: AgencyPlanDataForOverview): CombineStep5AndAgecyPlanData {\n\n    let step5ItemList = [\n      new GoalTitleListItem(this.translateService.translate('FYFC_Goal'), step5Data.TeamFYFC),\n      new GoalTitleListItem(this.translateService.translate('ANP_Goal'), step5Data.TeamANP),\n      new GoalTitleListItem(this.translateService.translate('Manpower_Goal'), step5Data.Manpower),\n      new GoalTitleListItem(this.translateService.translate('Recruitment_Goal'), step5Data.Recruitment)\n    ];\n\n    let agencyPlanItemList = [\n      new GoalTitleListItem(this.translateService.translate('FYFC_Forecast'), agencyPlanData.FYFCForecast.toString()),\n      new GoalTitleListItem(this.translateService.translate('ANP_Forecast'), agencyPlanData.ANPForecast.toString()),\n      new GoalTitleListItem(this.translateService.translate('Manpower_Plan'), agencyPlanData.ManpowerPlan.toString()),\n      new GoalTitleListItem(this.translateService.translate('Recruitment_Plan'), agencyPlanData.RecruitmentPlan.toString())\n    ];\n\n    let itemTextIsRedList = Array(step5ItemList.length).fill(false).map((value, index) => {\n      if(isNaN(Number(agencyPlanItemList[index].getDesc()))) {\n        return false;\n      }\n      else {\n        return (Number(step5ItemList[index].getDesc()) > Number(agencyPlanItemList[index].getDesc()));\n      }\n    });\n    \n    return new CombineStep5AndAgecyPlanData(step5ItemList, agencyPlanItemList, itemTextIsRedList);\n  }\n\n  public getTabChangeStep3(currentType: string, goalSettingStep3: GoalSettingStep3): GoalSettingStep3ForTabChange {\n\n    let activityValue: ActivityValue;\n    let unit: string;\n\n    if (currentType == DWM_DATETYPE.DAILY) {\n      activityValue = goalSettingStep3.ActivityValues.filter(x => x.TimeBase == TIMEBASE.DAY)[0];\n      unit = 'Goal_Setting_Day';\n    }\n\n    else if (currentType == DWM_DATETYPE.WEEKLY) {\n      activityValue = goalSettingStep3.ActivityValues.filter(x => x.TimeBase == TIMEBASE.WEEK)[0];\n      unit = 'Goal_Setting_Week';\n    }\n\n    else if (currentType == DWM_DATETYPE.MONTHLY) {\n      activityValue = goalSettingStep3.ActivityValues.filter(x => x.TimeBase == TIMEBASE.MONTH)[0];\n      unit = 'Goal_Setting_Month';\n    }\n\n    \n    return new GoalSettingStep3ForTabChange(activityValue, unit);\n  }\n\n\n\n\n  public translateByStepData(stepData: GoalSettingStepData) {\n    return this.translateByYearConfigAndGoaslStatus(stepData.YearConfig, stepData.GoalStatus);\n  }\n\n  public translateByYearConfigAndGoaslStatus(yearConfig: GoalSettingYearConfig, goalStatus: GoalSettingGoalStatus): GoalSettingTranslate {\n    let variable = this._getTranslateVariable(yearConfig, goalStatus);\n    let translateOnject = new GoalSettingTranslate();\n    translateOnject.TeamGoalEffectiveMonthTitle = this.translateService.translateWithVariable('Goal_Effective_Month', { \"effectiveMonthWithUnit\": this.translateService.translate('Month_' + goalStatus.TeamGoalApplicableYM) });\n    translateOnject.PersonalGoalEffectiveMonthTitle = this.translateService.translateWithVariable('Goal_Effective_Month', variable);\n    translateOnject.NowToYearEndTitle = this.translateService.translateWithVariable('Now_To_Year_End', variable);\n    translateOnject.FYFCNowToYearEndTitle = this.translateService.translateWithVariable('FYFC_Now_To_Year_End', variable);\n    translateOnject.ANPNowToYearEndTitle = this.translateService.translateWithVariable('ANP_Now_To_Year_End', variable);\n\n    if(this._isHasEffectiveMonthAndSettlementMonth(variable.effectiveMonth, variable.settlementMonth)) {\n      translateOnject.PersonalFYFCActualVariableTitle = this.translateService.translateWithVariable('FYFC_Actual_Variable', variable);\n    }\n    else {\n      translateOnject.PersonalFYFCActualVariableTitle = this.translateService.translate('FYFC_Actual_Dash');\n    }\n\n    if(this._isHasEffectiveMonthAndSettlementMonth(goalStatus.TeamGoalApplicableYM, yearConfig.PerformanceSettlementMonth)) {\n      translateOnject.TeamFYFCActualVariableTitle = this.translateService.translateWithVariable('FYFC_Actual_Variable', { \"effectiveMonth\": goalStatus.TeamGoalApplicableYM, \"settlementMonth\": yearConfig.PerformanceSettlementMonth });\n      translateOnject.TeamANPActualVariableTitle = this.translateService.translateWithVariable('ANP_Actual_Variable', { \"effectiveMonth\": goalStatus.TeamGoalApplicableYM, \"settlementMonth\": yearConfig.PerformanceSettlementMonth });\n    }\n    else {\n      translateOnject.TeamFYFCActualVariableTitle = this.translateService.translate('FYFC_Actual_Dash');\n      translateOnject.TeamANPActualVariableTitle = this.translateService.translate('ANP_Actual_Dash');\n    }\n\n\n    return translateOnject;\n  }\n\n  private _getTranslateVariable(yearConfig: GoalSettingYearConfig, goalStatus: GoalSettingGoalStatus) {\n    return {\n      //Goal_Effective_Month\n      \"effectiveMonthWithUnit\": this.translateService.translate('Month_' + goalStatus.PersonnelGoalApplicableYM),\n      //end of Goal_Effective_Month\n\n      //Now_To_Year_End\n      \n      \"workingMonth\": yearConfig.WorkingMonth == 0 ? 1 : yearConfig.WorkingMonth,\n      \"theLastMonth\": yearConfig.MonthQuantityOfYear,\n      //end of Now_To_Year_End\n\n      //FYFC_Actual_Variable\n      \"effectiveMonth\": goalStatus.PersonnelGoalApplicableYM,\n      \"settlementMonth\": yearConfig.PerformanceSettlementMonth,\n      //end of  FYFC_Actual_Variable\n    }\n  }\n\n  private _isHasEffectiveMonthAndSettlementMonth(effectiveMonth: number, settlementMonth: number): boolean {\n    let _isNotEmpty = StringUtils.isNotEmpty(effectiveMonth) && StringUtils.isNotEmpty(settlementMonth);\n    let _isNumber = !isNaN(Number(effectiveMonth)) && !isNaN(Number(settlementMonth));\n    let _isGreaterThanZero = Number(effectiveMonth) > 0 && Number(settlementMonth) > 0;\n\n    return _isNotEmpty && _isNumber && _isGreaterThanZero;\n  }\n}\n"],"names":["InjectionToken","NgModule","CommonModule","CoreModule","UIModule","Observable","EqualRestriction","ClientCustomDao","OrderByRestriction","uuid","tslib_1.__decorate","Required","Bean","ActivityValue","BehaviorSubject","Subject","Injectable","DefaultLoginMgr","from","PERFORMANCETYPE","APPError","NumberUtils","StringUtils","TIMEBASE","of","SubmitGoalPlan","SubmitGoalInfo","SuccessStatus","SUBMITGOALTYPE","SubmitGoalSettingValue","SubmitGoalPlanInfo","YESNO","SubmitGoalData","APIDispatch","APIFactory","ErrorHandler","Optional","Inject","yearConfigExtensionDataToken","goalSettingExtensionDataToken","DataSyncService","ProfileCodeService","Valid","TranslateService"],"mappings":";;;;;;;;;;AAAA;AAMA,QAAa,oBAAoB,GAAG,IAAIA,iBAAc,CAAkB,iBAAiB,CAAC;;AAC1F,QAAa,cAAc,GAAG,IAAIA,iBAAc,CAAqB,oBAAoB,CAAC;;AAC1F,QAAa,wBAAwB,GAAG,IAAIA,iBAAc,CAAsB,qBAAqB,CAAC;;AACtG,QAAa,wBAAwB,GAAG,IAAIA,iBAAc,CAAsB,qBAAqB,CAAC;;;;;;;;;;;ACTtG;QAKA;SAW2B;;oBAX1BC,WAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZC,aAAU;4BACVC,WAAQ;yBACT;wBACD,YAAY,EAAE,EACb;wBACD,OAAO,EAAE,EACR;qBACF;;QACyB,iBAAC;KAX3B;;;;;;ACLA;QAMI,sCAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;YAIlC,cAAS,GAAW,CAAC,CAAC,CAAA;SAF7B;;;;;QAGD,kDAAW;;;;YAAX,UAAY,QAAgB;gBACxB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;aAC7B;;;;QAED,iDAAU;;;YAAV;gBACI,OAAO,2BAA2B,CAAC;aACtC;;;;QAED,kDAAW;;;YAAX;gBAEI,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBACvB,OAAO,mDAAmD,CAAC;iBAC9D;qBAEI,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBAC5B,OAAO,mDAAmD,CAAC;iBAC9D;qBAEI,IAAG,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;oBAC1B,OAAO,kDAAkD,CAAC;iBAC7D;qBAEI;;oBAED,OAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;oBAC9C,OAAO,EAAE,CAAA;iBACZ;aACJ;;;;QAED,iDAAU;;;YAAV;gBAAA,iBAkCC;gBAjCG,OAAO,CAAC,GAAG,CAAC,yDAAyD,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBACvF,OAAOC,eAAU,CAAC,MAAM;;;mBAAC,UAAC,QAAQ;;wBAC1B,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE;oBACzC,IAAI,GAAG,IAAI,SAAS,EAAE;;4BAGd,cAAc,GAAG,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,0BAA0B,CAAC;wBAChF,IAAI,cAAc,EAAE;4BAEhB,IAAG,KAAI,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;gCACrB,cAAc,CAAC,cAAc,CAAC,IAAIC,mBAAgB,CAAC,UAAU,EAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;6BACpF;4BAED,GAAG,GAAG,IAAIC,kBAAe,CAAC,GAAG,CAAC,CAAC;4BAG/B,GAAG,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,SAAS;;;+BAAC,UAAC,IAAI;gCAC5C,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gCACvE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;6BACvB,EAAC,CAAC;yBACN;6BACI;4BACD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACvB;qBAEJ;yBACI;wBACD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB;iBACJ,EAAC,CAAC;aACN;QACL,mCAAC;IAAD,CAAC;;;;;;AC3ED;QAMI,qCAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;YAIlC,cAAS,GAAW,CAAC,CAAC,CAAA;SAF7B;;;;;QAGD,iDAAW;;;;YAAX,UAAY,QAAgB;gBACxB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;aAC7B;;;;QAED,gDAAU;;;YAAV;gBACI,OAAO,0BAA0B,CAAC;aACrC;;;;QAED,iDAAW;;;YAAX;gBACI,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBACvB,OAAO,kDAAkD,CAAC;iBAC7D;qBAEI,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBAC5B,OAAO,kDAAkD,CAAC;iBAC7D;qBAEI,IAAG,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;oBAC1B,OAAO,iDAAiD,CAAC;iBAC5D;qBAEI;oBACD,OAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;oBAC9C,OAAO,EAAE,CAAA;iBACZ;aACJ;;;;QAED,gDAAU;;;YAAV;gBAAA,iBAkCC;gBAjCG,OAAOF,eAAU,CAAC,MAAM;;;mBAAC,UAAC,QAAQ;;wBAC1B,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE;oBACzC,IAAI,GAAG,IAAI,SAAS,EAAE;;4BAEd,aAAa,GAAG,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,yBAAyB,CAAC;wBAC9E,IAAI,aAAa,EAAE;4BAEf,IAAG,KAAI,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;gCACrB,aAAa,CAAC,cAAc,CAAC,IAAIC,mBAAgB,CAAC,UAAU,EAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;6BACnF;4BAED,aAAa,CAAC,cAAc,CAAC,IAAIE,qBAAkB,CAAC,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;4BAE7F,GAAG,GAAG,IAAID,kBAAe,CAAC,GAAG,CAAC,CAAC;4BAG/B,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,SAAS;;;+BAAC,UAAC,IAAI;gCAC3C,OAAO,CAAC,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gCAChE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;6BACvB,EAAC,CAAC;yBACN;6BACI;4BACD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACvB;qBAEJ;yBACI;wBACD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB;iBACJ,EAAC,CAAC;aACN;QACL,kCAAC;IAAD,CAAC;;;;;;ACzED;QAUE,8BAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;SAEzC;;;;;QAND,0CAAW;;;;YAAX,UAAY,QAAgB;gBAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;aAC1B;;;;QAMD,yCAAU;;;YAAV;gBACE,OAAO,mBAAmB,CAAC;aAC5B;;;;QAED,0CAAW;;;YAAX;gBACE,OAAO,0CAA0C,CAAC;aACnD;;;;QAED,yCAAU;;;YAAV;gBAAA,iBAkBC;gBAjBC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBACxC,OAAOF,eAAU,CAAC,MAAM;;;mBAAC,UAAC,QAAQ;;wBAC5B,aAAa,GAAG,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,8BAA8B,CAAC;;wBAC/E,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE;oBACzC,IAAI,aAAa,IAAI,SAAS,IAAI,GAAG,IAAI,SAAS,EAAE;wBAClD,GAAG,GAAG,IAAIE,kBAAe,CAAC,GAAG,CAAC,CAAC;wBAC/B,aAAa,CAAC,cAAc,CAAC,IAAID,mBAAgB,CAAC,UAAU,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBACjF,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,SAAS;;;2BAAC,UAAC,IAAI;4BAC7C,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;4BAC1B,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACrB,EAAC,CAAC;qBACJ;yBAAM;wBACL,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB;iBACF,EAAC,CAAC;aACJ;QACH,2BAAC;IAAD,CAAC;;;;;;ACzCD;QAUE,gCAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;SAEzC;;;;;QAND,4CAAW;;;;YAAX,UAAY,QAAgB;gBAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;aAC3B;;;;QAMD,2CAAU;;;YAAV;gBACE,OAAO,qBAAqB,CAAC;aAC9B;;;;QAED,4CAAW;;;YAAX;gBACE,OAAO,wCAAwC,CAAC;aACjD;;;;QAED,2CAAU;;;YAAV;gBAAA,iBAkBC;gBAjBC,OAAOD,eAAU,CAAC,MAAM;;;mBAAC,UAAC,QAAQ;;wBAC5B,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,gCAAgC,CAAC;;wBACnF,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE;oBACzC,IAAI,eAAe,IAAI,SAAS,IAAI,GAAG,IAAI,SAAS,EAAE;wBAEpD,GAAG,GAAG,IAAIE,kBAAe,CAAC,GAAG,CAAC,CAAC;wBAC/B,eAAe,CAAC,cAAc,CAAC,IAAID,mBAAgB,CAAC,UAAU,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBACnF,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,SAAS;;;2BAAC,UAAC,IAAI;4BAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BAClB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACrB,EAAC,CAAC;qBACJ;yBAAM;wBACL,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB;iBACF,EAAC,CAAC;aACJ;QACH,6BAAC;IAAD,CAAC;;;;;;ACzCD;QAUE,mCAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;SAEzC;;;;;QAND,+CAAW;;;;YAAX,UAAY,QAAgB;gBAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;aAC1B;;;;QAMD,8CAAU;;;YAAV;gBACE,OAAO,wBAAwB,CAAC;aACjC;;;;QAED,+CAAW;;;YAAX;gBACE,OAAO,2CAA2C,CAAC;aACpD;;;;QAED,8CAAU;;;YAAV;gBAAA,iBAiBC;gBAhBC,OAAOD,eAAU,CAAC,MAAM;;;mBAAC,UAAC,QAAQ;;wBAC5B,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,mCAAmC,CAAC;;wBACtF,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE;oBACzC,IAAI,eAAe,IAAI,SAAS,IAAI,GAAG,IAAI,SAAS,EAAE;wBACpD,GAAG,GAAG,IAAIE,kBAAe,CAAC,GAAG,CAAC,CAAC;wBAC/B,eAAe,CAAC,cAAc,CAAC,IAAID,mBAAgB,CAAC,UAAU,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBACnF,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,SAAS;;;2BAAC,UAAC,IAAI;4BAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BAClB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACrB,EAAC,CAAC;qBACJ;yBAAM;wBACL,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB;iBACF,EAAC,CAAC;aACJ;QACH,gCAAC;IAAD,CAAC;;;;;;ACxCD;QAMI,gCAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;YAIlC,cAAS,GAAW,CAAC,CAAC,CAAC;SAF9B;;;;;QAGD,4CAAW;;;;YAAX,UAAY,QAAgB;gBACxB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;aAC7B;;;;QAED,2CAAU;;;YAAV;gBACI,OAAO,qBAAqB,CAAC;aAChC;;;;QAED,4CAAW;;;YAAX;gBACI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBACxB,OAAO,6CAA6C,CAAC;iBACxD;qBACI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBAC7B,OAAO,6CAA6C,CAAC;iBACxD;qBACI;oBACD,OAAO,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;oBAC3D,OAAO,EAAE,CAAC;iBACb;aAEJ;;;;QAED,2CAAU;;;YAAV;gBAAA,iBAqDC;;;;;;;;gBA7CG,OAAOD,eAAU,CAAC,MAAM;;;mBAAC,UAAC,QAAQ;oBAC9B,OAAO,CAAC,GAAG,CAAC,gDAAgD,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;;wBAC1E,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE;oBACzC,IAAI,GAAG,IAAI,SAAS,EAAE;;4BAGd,gBAAgB,GAAG,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,6BAA6B,CAAC;wBACrF,IAAI,gBAAgB,EAAE;4BAGlB,GAAG,GAAG,IAAIE,kBAAe,CAAC,GAAG,CAAC,CAAC;4BAC/B,IAAI,KAAI,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;gCACtB,gBAAgB,CAAC,cAAc,CAAC,IAAID,mBAAgB,CAAC,UAAU,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;6BACvF;;4BAID,GAAG,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,SAAS;;;+BAAC,UAAC,IAAI;gCAC9C,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;;gCAQpD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;6BAEvB,EAAC,CAAC;yBAEN;6BAGI;4BACD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACvB;qBAEJ;yBACI;wBACD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB;iBACJ,EAAC,CAAC;aACN;QACL,6BAAC;IAAD,CAAC;;ICvFD;;;;;;;;;;;;;;AAcA,wBAsC2B,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;QACpD,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;YAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;oBAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;QAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;AAED,wBAI2B,WAAW,EAAE,aAAa;QACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;AAED,uBAA0B,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;QACvD,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;YACrD,mBAAmB,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC3F,kBAAkB,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC9F,cAAc,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;YAC/I,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;SACzE,CAAC,CAAC;IACP,CAAC;AAED,yBAA4B,OAAO,EAAE,IAAI;QACrC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,cAAc,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,cAAc,EAAE;YACZ,IAAI,CAAC;gBAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;YAC9D,OAAO,CAAC;gBAAE,IAAI;oBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;wBAAE,OAAO,CAAC,CAAC;oBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;oBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACT,KAAK,CAAC,CAAC;wBAAC,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;wBAC9B,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wBACxD,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;4BAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;wBACjD,KAAK,CAAC;4BAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;wBACjD;4BACI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;6BAAE;4BAC5G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;6BAAE;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;gCAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;qBAC9B;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC9B;gBAAC,OAAO,CAAC,EAAE;oBAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;iBAAE;wBAAS;oBAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;AAED,oBAeuB,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;;;;;;;QCtHC,mCAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;YAXlC,yBAAoB,GAAW,EAAE,CAAC;YAClC,yBAAoB,GAAW,CAAC,CAAC;SAYxC;;;;;QAVD,0DAAsB;;;;YAAtB,UAAuB,mBAA2B;gBAChD,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;aACjD;;;;;QAED,0DAAsB;;;;YAAtB,UAAuB,mBAA2B;gBAChD,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;aACjD;;;;QAMD,8CAAU;;;YAAV;gBACE,OAAO,wBAAwB,CAAC;aACjC;;;;QAED,+CAAW;;;YAAX;gBACE,OAAO,gCAAgC,CAAC;aACzC;;;;QAED,8CAAU;;;YAAV;gBAAA,iBAmDC;gBAlDC,OAAOD,eAAU,CAAC,MAAM;;;mBAAC,UAAO,QAAQ;;;;;;oCAClC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,gCAAgC,CAAC;oCACnF,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,0CAA0C,CAAC;oCAChG,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,2BAA2B,CAAC;oCAC5E,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;0CACrC,eAAe,IAAI,SAAS,IAAI,aAAa,IAAI,SAAS,IAAI,GAAG,IAAI,SAAS,CAAA;wCAA9E,wBAA8E;oCAChF,GAAG,GAAG,IAAIE,kBAAe,CAAC,GAAG,CAAC,CAAC;oCAE/B,aAAa,CAAC,cAAc,CAAC,IAAID,mBAAgB,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oCACxG,aAAa,CAAC,cAAc,CAAC,IAAIA,mBAAgB,CAAC,UAAU,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oCAChF,aAAa,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;oCAGjH,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;oCAChE,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;oCAChE,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;oCAChE,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;oCAChE,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;oCACpE,eAAe,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;oCAClE,eAAe,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC;oCAE5E,eAAe,CAAC,cAAc,CAAC,IAAIA,mBAAgB,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oCACnF,qBAAM,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,SAAS,EAAE,EAAA;;oCAAtE,gBAAgB,GAAG,SAAmD;oCAC1E,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE,oBAAoB,EAAE,gBAAgB,CAAC,CAAC;oCACzG,IAAI,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;;wCAEpC,GAAG,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;qCACxC;yCACI;;wCAEC,QAAQ,GAAGG,OAAI,EAAE;wCACrB,eAAe,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;wCAC/C,kBAAkB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;wCAClD,GAAG,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;wCACvC,GAAG,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;qCAC3C;;oCAID,GAAG,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;oCACrC,GAAG,CAAC,cAAc,EAAE,CAAC,SAAS;;;uCAAC,UAAC,IAAI;wCAClC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wCACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qCACrB,EAAC,CAAC;;;oCAGH,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oCACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;;;;;;iBAEvB,EAAC,CAAC;aACJ;QACH,gCAAC;IAAD,CAAC;;;;;;AChFD;QAWE,+BAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;YAFlC,cAAS,GAAW,CAAC,CAAC,CAAC;SAI9B;;;;;QAGD,2CAAW;;;;YAAX,UAAY,IAAY;gBACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;;;;QAGD,0CAAU;;;YAAV;gBACE,OAAO,oBAAoB,CAAC;aAC7B;;;;QAED,2CAAW;;;YAAX;;gBAEE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBAC1B,OAAO,4CAA4C,CAAC;iBACrD;qBACI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBAC/B,OAAO,4CAA4C,CAAC;iBACrD;qBACI;oBACH,OAAO,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;oBAC5C,OAAO,EAAE,CAAC;iBACX;aACF;;;;QAGD,0CAAU;;;YAAV;gBAAA,iBAiCC;gBAhCC,OAAOJ,eAAU,CAAC,MAAM;;;mBAAC,UAAC,QAAQ;;wBAC5B,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE;oBACzC,IAAI,GAAG,IAAI,SAAS,EAAE;;4BAGhB,cAAc,GAAG,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,qCAAqC,CAAC;wBAC3F,IAAI,cAAc,EAAE;4BAElB,IAAI,KAAI,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;gCACxB,cAAc,CAAC,cAAc,CAAC,IAAIC,mBAAgB,CAAC,UAAU,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;6BACnF;4BAED,GAAG,GAAG,IAAIC,kBAAe,CAAC,GAAG,CAAC,CAAC;4BAG/B,GAAG,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,SAAS;;;+BAAC,UAAC,IAAI;gCAC9C,OAAO,CAAC,IAAI,CAAC,wCAAwC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gCAC7E,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;6BACrB,EAAC,CAAC;yBACJ;6BACI;4BACH,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACrB;qBAEF;yBACI;wBACH,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB;iBACF,EAAC,CAAC;aACJ;QAIH,4BAAC;IAAD,CAAC;;;;;;AC7ED;QAcE,iCAAoB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;YAHlC,cAAS,GAAW,CAAC,CAAC,CAAC;SAK9B;;;;;QACD,6CAAW;;;;YAAX,UAAY,IAAY;gBACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;;;;QAID,4CAAU;;;YAAV;gBACE,OAAO,2BAA2B,CAAC;aACpC;;;;QAED,6CAAW;;;YAAX;;gBAEE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBAC1B,OAAO,mDAAmD,CAAC;iBAC5D;qBACI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;oBAC/B,OAAO,mDAAmD,CAAC;iBAC5D;qBACI;;oBAEH,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;oBAC7C,OAAO,EAAE,CAAC;iBACX;aACF;;;;QAGD,4CAAU;;;YAAV;gBAAA,iBAiCC;gBAhCC,OAAOF,eAAU,CAAC,MAAM;;;mBAAC,UAAC,QAAQ;;wBAC5B,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE;oBACzC,IAAI,GAAG,IAAI,SAAS,EAAE;;4BAGhB,cAAc,GAAG,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,0BAA0B,CAAC;wBAChF,IAAI,cAAc,EAAE;4BAElB,IAAI,KAAI,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;gCACxB,cAAc,CAAC,cAAc,CAAC,IAAIC,mBAAgB,CAAC,UAAU,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;6BACnF;4BAED,GAAG,GAAG,IAAIC,kBAAe,CAAC,GAAG,CAAC,CAAC;4BAG/B,GAAG,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,SAAS;;;+BAAC,UAAC,IAAI;gCAC9C,OAAO,CAAC,IAAI,CAAC,0CAA0C,EAAE,IAAI,CAAC,CAAC;gCAC/D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;6BACrB,EAAC,CAAC;yBACJ;6BACI;4BACH,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACrB;qBAEF;yBACI;wBACH,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB;iBACF,EAAC,CAAC;aACJ;QAEH,8BAAC;IAAD,CAAC;;;;;;;;;;;;;QCxEG,OAAQ,OAAO;QACf,QAAS,QAAQ;QACjB,SAAU,SAAS;;;;QAInB,QAAS;QACT,QAAS;QACT,QAAS;QACT,QAAS;QACT,QAAS;;;;;;;;;QAIT,gBAAa;QACb,cAAW;;;;;;;;;;;;;;QAaX,OAAQ,IAAI;QACZ,aAAc,IAAI;QAClB,UAAW,SAAS;QACpB,KAAM,YAAY;;;;QAIlB,SAAU,GAAG;QACb,UAAW,GAAG;QACd,MAAO,GAAG;QACV,SAAU,GAAG;;;;QAIb,QAAS,QAAQ;QACjB,SAAU,SAAS;QACnB,MAAO,MAAM;;;QAYb;SACC;QAED,sBAAI,iCAAI;;;gBAQR;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;;gBAVD,UAAS,IAAY;gBACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aACrB;;;WAAA;QAED,sBAAI,wCAAW;;;gBAQf;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;;gBAVD,UAAgB,WAAoB;gBAChC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;aACnC;;;WAAA;QAdDG;YADCC,WAAQ;;sDACa;QAGtBD;YADCC,WAAQ;;6DACqB;QANrB,eAAe;YAD3BC,OAAI,CAAC,iBAAiB,CAAC;;WACX,eAAe,CA0B3B;QAAD,sBAAC;KAAA,IAAA;;QAMG,2BAAY,KAAa,EAAE,IAAyB;YAChD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACrB;QAED,sBAAW,oCAAK;;;gBAQhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;;gBAVD,UAAiB,KAAa;gBAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;;;WAAA;QAED,sBAAW,mCAAI;;;gBAQf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;;gBAVD,UAAgB,IAAyB;gBACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aACrB;;;WAAA;QASL,wBAAC;IAAD,CAAC;;;;;;;QC/EG;SAEC;QAED,sBAAW,kCAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;;gBACD,UAAgB,KAAa;gBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;;;WAHA;QAID,sBAAW,8CAAgB;;;gBAA3B;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;aACjC;;;;gBACD,UAA4B,KAAa;gBACrC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAClC;;;WAHA;QAID,sBAAW,kCAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;;gBACD,UAAgB,KAAa;gBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;;;WAHA;QAID,sBAAW,2CAAa;;;gBAAxB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;;gBACD,UAAyB,KAAa;gBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC/B;;;WAHA;QAID,sBAAW,oCAAM;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;gBACD,UAAkB,KAAa;gBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;;;WAHA;QAID,sBAAW,8CAAgB;;;gBAA3B;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;aACjC;;;;gBACD,UAA4B,KAAa;gBACrC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAClC;;;WAHA;QAID,sBAAW,0CAAY;;;gBAAvB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;;;;gBACD,UAAwB,KAAa;gBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;;;WAHA;QAID,sBAAW,0CAAY;;;gBAAvB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;;;;gBACD,UAAwB,KAAa;gBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;;;WAHA;QArEDF;YADCC,WAAQ;;uDACa;QAGtBD;YADCC,WAAQ;;mEACyB;QAGlCD;YADCC,WAAQ;;uDACa;QAGtBD;YADCC,WAAQ;;gEACsB;QAG/BD;YADCC,WAAQ;;yDACe;QAGxBD;YADCC,WAAQ;;mEACyB;QAlBzB,gBAAgB;YAD5BC,OAAI,CAAC,kBAAkB,CAAC;;WACZ,gBAAgB,CA6E5B;QAAD,uBAAC;KAAA;;;;;;;QCxEG;SACC;QAED,sBAAW,qCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;;gBACD,UAAmB,KAAa;gBAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACzB;;;WAHA;QAPDF;YADCC,WAAQ;;0DACgB;QAHhB,gBAAgB;YAD5BC,OAAI,CAAC,kBAAkB,CAAC;;WACZ,gBAAgB,CAe5B;QAAD,uBAAC;KAAA;;;;;;;QCNG;YALQ,oBAAe,GAAyB,EAAE,CAAC;SAMlD;QAED,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAe;gBAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAID,sBAAW,4CAAc;;;gBAAzB;gBACI,OAAO,IAAI,CAAC,eAAe,CAAC;aAC/B;;;;gBACD,UAA0B,KAA2B;gBACjD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAChC;;;WAHA;QAhBDF;YADCC,WAAQ;sCACgB,KAAK;iEAAqB;QAGnDD;YADCC,WAAQ;;2DACmB;QANnB,gBAAgB;YAD5BC,OAAI,CAAC,kBAAkB,CAAC;;WACZ,gBAAgB,CAyB5B;QAAD,uBAAC;KAAA;;;;;;;QCXG;YAFQ,eAAU,GAA+B,EAAE,CAAC;SAGnD;6BAfQ,gBAAgB;QAiBzB,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAID,sBAAW,uCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;QAID,sBAAW,oCAAM;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;gBACD,UAAkB,KAAa;gBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;;;WAHA;QAID,sBAAW,uCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAiC;gBAClD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;;;;QAKM,gCAAK;;;YAAZ;;oBACU,qBAAqB,GAAG,IAAI,kBAAgB,EAAE;gBACpD,qBAAqB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;gBAChD,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;gBAClD,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG;;;mBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAE,GAAA,EAAC,CAAC;gBACtE,qBAAqB,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5C,OAAO,qBAAqB,CAAC;aAChC;;QA9CDF;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;4DACkB;QAG3BD;YADCC,WAAQ;;yDACe;QAGxBD;YADCC,WAAQ;sCACW,KAAK;4DAA2B;QAZ3C,gBAAgB;YAD5BC,OAAI,CAAC,kBAAkB,CAAC;;WACZ,gBAAgB,CAkD5B;QAAD,uBAAC;KAAA;;;;;;;QCxBG;SACC;QAED,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAID,sBAAW,qCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;;gBACD,UAAmB,KAAa;gBAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACzB;;;WAHA;QAID,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAID,sBAAW,yCAAW;;;gBAAtB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;;gBACD,UAAuB,KAAa;gBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;;;WAHA;QAID,sBAAW,4CAAc;;;gBAAzB;gBACI,OAAO,IAAI,CAAC,eAAe,CAAC;aAC/B;;;;gBACD,UAA0B,KAAa;gBACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAChC;;;WAHA;QAID,sBAAW,2CAAa;;;gBAAxB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;;gBACD,UAAyB,KAAa;gBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC/B;;;WAHA;QAID,sBAAW,kDAAoB;;;gBAA/B;gBACI,OAAO,IAAI,CAAC,qBAAqB,CAAC;aACrC;;;;gBACD,UAAgC,KAAa;gBACzC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;aACtC;;;WAHA;QAID,sBAAW,iDAAmB;;;gBAA9B;gBACI,OAAO,IAAI,CAAC,oBAAoB,CAAC;aACpC;;;;gBACD,UAA+B,KAAa;gBACxC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACrC;;;WAHA;QAvEDF;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;0DACgB;QAGzBD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;8DACoB;QAG7BD;YADCC,WAAQ;;iEACuB;QAGhCD;YADCC,WAAQ;;gEACsB;QAG/BD;YADCC,WAAQ;;uEAC6B;QAGtCD;YADCC,WAAQ;;sEAC4B;QAxB5B,gBAAgB;YAD5BC,OAAI,CAAC,kBAAkB,CAAC;;WACZ,gBAAgB,CAgF5B;QAAD,uBAAC;KAAA;;;;;;;;;;;;;;;;;;;;;;;;QCfG;SAEC;;;;QAEM,4CAAY;;;YAAnB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;;QACM,4CAAY;;;;YAAnB,UAAoB,SAAS;gBACzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aAC/B;QAED,sBAAW,4CAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBAgDD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAlDA;QACD,sBAAW,2CAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBAgDD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAlDA;QACD,sBAAW,oDAAiB;;;gBAA5B;gBACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;;;;gBAgDD,UAA6B,KAAa;gBACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACnC;;;WAlDA;QACD,sBAAW,kDAAe;;;gBAA1B;gBACI,OAAO,IAAI,CAAC,gBAAgB,CAAC;aAChC;;;;gBAgDD,UAA2B,KAAa;gBACpC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aACjC;;;WAlDA;QACD,sBAAW,8DAA2B;;;gBAAtC;gBACI,OAAO,IAAI,CAAC,4BAA4B,CAAC;aAC5C;;;;gBAgDD,UAAuC,KAAa;gBAChD,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;aAC7C;;;WAlDA;QACD,sBAAW,6DAA0B;;;gBAArC;gBACI,OAAO,IAAI,CAAC,2BAA2B,CAAC;aAC3C;;;;gBAgDD,UAAsC,KAAa;gBAC/C,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;aAC5C;;;WAlDA;QACD,sBAAW,6DAA0B;;;gBAArC;gBACI,OAAO,IAAI,CAAC,2BAA2B,CAAC;aAC3C;;;;gBAgDD,UAAsC,KAAa;gBAC/C,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;aAC5C;;;WAlDA;QACD,sBAAW,+CAAY;;;gBAAvB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;;;;gBAgDD,UAAwB,KAAa;gBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;;;WAlDA;QACD,sBAAW,iDAAc;;;gBAAzB;gBACI,OAAO,IAAI,CAAC,eAAe,CAAC;aAC/B;;;;gBAgDD,UAA0B,KAAa;gBACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAChC;;;WAlDA;QACD,sBAAW,sDAAmB;;;gBAA9B;gBACI,OAAO,IAAI,CAAC,oBAAoB,CAAC;aACpC;;;;gBAgDD,UAA+B,KAAa;gBACxC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACrC;;;WAlDA;QACD,sBAAW,oDAAiB;;;gBAA5B;gBACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;;;;gBAgDD,UAA6B,KAAa;gBACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACnC;;;WAlDA;QACD,sBAAW,2DAAwB;;;gBAAnC;gBACI,OAAO,IAAI,CAAC,yBAAyB,CAAC;aACzC;;;;gBAgDD,UAAoC,KAAa;gBAC7C,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;aAC1C;;;WAlDA;QACD,sBAAW,yDAAsB;;;gBAAjC;gBACI,OAAO,IAAI,CAAC,uBAAuB,CAAC;aACvC;;;;gBAgDD,UAAkC,KAAa;gBAC3C,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;aACxC;;;WAlDA;QACD,sBAAW,6DAA0B;;;gBAArC;gBACI,OAAO,IAAI,CAAC,2BAA2B,CAAC;aAC3C;;;;gBAgDD,UAAsC,KAAa;gBAC/C,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;aAC5C;;;WAlDA;QACD,sBAAW,yDAAsB;;;gBAAjC;gBACI,OAAO,IAAI,CAAC,uBAAuB,CAAC;aACvC;;;;gBAgDD,UAAkC,KAAa;gBAC3C,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;aACxC;;;WAlDA;QACD,sBAAW,mDAAgB;;;gBAA3B;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;aACjC;;;;gBAgDD,UAA4B,KAAa;gBACrC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAClC;;;WAlDA;QAtHDF;YADCC,WAAQ;;gEACiB;QAS1BD;YADCC,WAAQ;;kFACmC;QAG5CD;YADCC,WAAQ;;kFACmC;QAG5CD;YADCC,WAAQ;;oEACqB;QAK9BD;YADCC,WAAQ;;2EAC4B;QAKrCD;YADCC,WAAQ;;gFACiC;QAG1CD;YADCC,WAAQ;;8EAC+B;QAGxCD;YADCC,WAAQ;;kFACmC;QAG5CD;YADCC,WAAQ;;8EAC+B;QAGxCD;YADCC,WAAQ;;wEACyB;QA1CzB,qBAAqB;YADjCC,OAAI,CAAC,uBAAuB,CAAC;;WACjB,qBAAqB,CAiLjC;QAAD,4BAAC;KAAA;;;;;;;QC7JG,uBAAY,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO;YACvD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;SAC3B;QAED,sBAAW,mCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;WAAA;QACD,sBAAW,+BAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;WAAA;QACD,sBAAW,mCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;WAAA;QACD,sBAAW,+BAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;WAAA;QACD,sBAAW,iCAAM;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;WAAA;QACD,sBAAW,kCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;WAAA;QA3CDF;YADCC,WAAQ;;wDACmB;QAG5BD;YADCC,WAAQ;;oDACa;QAGtBD;YADCC,WAAQ;;wDACiB;QAG1BD;YADCC,WAAQ;;oDACa;QAGtBD;YADCC,WAAQ;;sDACe;QAGxBD;YADCC,WAAQ;;uDACgB;QAlBhB,aAAa;YADzBC,OAAI,CAAC,eAAe,CAAC;;WACT,aAAa,CAgDzB;QAAD,oBAAC;KAAA;;;;;;;QClBG;SAEC;;;;QAEM,4CAAY;;;YAAnB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;;QACM,4CAAY;;;;YAAnB,UAAoB,SAAS;gBACzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aAC/B;QAED,sBAAW,4DAAyB;;;gBAApC;gBACI,OAAO,IAAI,CAAC,0BAA0B,CAAC;aAC1C;;;;gBAqCD,UAAqC,KAAa;gBAC9C,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;aAC3C;;;WAvCA;QACD,sBAAW,uDAAoB;;;gBAA/B;gBACI,OAAO,IAAI,CAAC,qBAAqB,CAAC;aACrC;;;;gBAqCD,UAAgC,KAAa;gBACzC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;aACtC;;;WAvCA;QACD,sBAAW,+CAAY;;;gBAAvB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;;;;gBAqCD,UAAwB,KAAa;gBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;;;WAvCA;QACD,sBAAW,gDAAa;;;gBAAxB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;;gBAqCD,UAAyB,KAAoB;gBACzC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC/B;;;WAvCA;QACD,sBAAW,8CAAW;;;gBAAtB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;;gBAqCD,UAAuB,KAAc;gBACjC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;;;WAvCA;QACD,sBAAW,gDAAa;;;gBAAxB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;;gBAqCD,UAAyB,KAAc;gBACnC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC/B;;;WAvCA;QACD,sBAAW,gDAAa;;;gBAAxB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;;gBAqCD,UAAyB,KAAa;gBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC/B;;;WAvCA;QACD,sBAAW,2CAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBAaD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAfA;QACD,sBAAW,4CAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBAOD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WATA;QACD,sBAAW,oDAAiB;;;gBAA5B;gBACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;;;;gBA+BD,UAA6B,KAAa;gBACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACnC;;;WAjCA;QAlEDF;YADCC,WAAQ;;gEACiB;QAK1BD;YADCC,WAAQ;;iFACkC;QAG3CD;YADCC,WAAQ;;4EAC6B;QAGtCD;YADCC,WAAQ;;oEACqB;QAG9BD;YADCC,WAAQ;;qEAC6B;QAjB7B,qBAAqB;YADjCC,OAAI,CAAC,uBAAuB,CAAC;;WACjB,qBAAqB,CAwGjC;QAAD,4BAAC;KAAA;;;;;;;QCtEG,6BAAY,QAAQ;YAFZ,gBAAW,GAAkB,EAAE,CAAC;YAGpC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC7B;QAED,sBAAW,yCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;WAAA;QACD,sBAAW,2CAAU;;;gBAArB;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;;gBACD,UAAsB,KAA4B;gBAC9C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC5B;;;WAHA;QAID,sBAAW,2CAAU;;;gBAArB;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;;gBACD,UAAsB,KAA4B;gBAC9C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC5B;;;WAHA;QAID,sBAAW,sCAAK;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;;gBACD,UAAiB,KAAuB;gBACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;;;WAHA;QAID,sBAAW,sCAAK;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;;gBACD,UAAiB,KAAuB;gBACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;;;WAHA;QAID,sBAAW,sCAAK;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;;gBACD,UAAiB,KAAuB;gBACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;;;WAHA;QAID,sBAAW,sCAAK;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;;gBACD,UAAiB,KAAuB;gBACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;;;WAHA;QAID,sBAAW,sCAAK;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;;gBACD,UAAiB,KAAuB;gBACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;;;WAHA;QAID,sBAAW,2CAAU;;;gBAArB;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;;gBACD,UAAsB,KAAgC;gBAClD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC5B;;;WAHA;QAID,sBAAW,2CAAU;;;gBAArB;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;;gBACD,UAAsB,KAAoB;gBACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC5B;;;WAHA;QAhFDF;YADCC,WAAQ;;8DACiB;QAG1BD;YADCC,WAAQ;sCACY,qBAAqB;gEAAC;QAG3CD;YADCC,WAAQ;sCACY,qBAAqB;gEAAC;QAS3CD;YADCC,WAAQ;sCACO,gBAAgB;2DAAC;QAlBxB,mBAAmB;YAD/BC,OAAI,CAAC,qBAAqB,CAAC;;WACf,mBAAmB,CA2F/B;QAAD,0BAAC;KAAA;;;;;;;QCzFG,uBAAY,aAAa,EAAE,OAAO;YAC9B,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;SAC3B;QAED,sBAAW,wCAAa;;;gBAAxB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;;gBACD,UAAyB,KAAc;gBACnC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC/B;;;WAHA;QAID,sBAAW,kCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;;gBACD,UAAmB,KAAc;gBAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACzB;;;WAHA;QAID,sBAAW,oCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;QA3BDF;YADCC,WAAQ;;6DACuB;QAGhCD;YADCC,WAAQ;;uDACiB;QANjB,aAAa;YADzBC,OAAI,CAAC,eAAe,CAAC;;WACT,aAAa,CAmCzB;QAAD,oBAAC;KAAA;;;;;;;QCxBG,6BAAY,KAAY,EAAE,IAAW,EAAE,MAAa;YAChD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACzB;gCAfQ,mBAAmB;QAiB5B,sBAAW,sCAAK;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;WAAA;QAED,sBAAW,uCAAM;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;WAAA;QAED,sBAAW,qCAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;;gBAED,UAAgB,KAAa;gBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;;;WAJA;;;;QAMM,mCAAK;;;YAAZ;gBACI,OAAO,IAAI,qBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACzE;;QAhCDF;YADCC,WAAQ;;2DACc;QAGvBD;YADCC,WAAQ;;0DACa;QAGtBD;YADCC,WAAQ;;4DACe;QATf,mBAAmB;YAD/BC,OAAI,CAAC,qBAAqB,CAAC;;WACf,mBAAmB,CAoC/B;QAAD,0BAAC;KAAA;;;;;;;QCtBG,6BAAY,OAAe,EAAE,SAAiB,EAAE,QAAgB,EAAE,UAAkB;YAChF,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;SACjC;QAED,sBAAW,wCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;WAAA;QAED,sBAAW,0CAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;WAAA;QAED,sBAAW,yCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;WAAA;QAED,sBAAW,2CAAU;;;gBAArB;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;WAAA;QAhCDF;YADCC,WAAQ;;6DACgB;QAGzBD;YADCC,WAAQ;;+DACkB;QAG3BD;YADCC,WAAQ;;8DACiB;QAG1BD;YADCC,WAAQ;;gEACmB;QAZnB,mBAAmB;YAD/BC,OAAI,CAAC,qBAAqB,CAAC;;WACf,mBAAmB,CAqC/B;QAAD,0BAAC;KAAA;;;;;;;QC4BG;SAEC;QAED,sBAAW,qCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;;gBACD,UAAmB,KAAa;gBAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACzB;;;WAHA;QAKD,sBAAW,uCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;QAKD,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,wCAAU;;;gBAArB;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;;gBACD,UAAsB,KAAa;gBAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC5B;;;WAHA;QAKD,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,oCAAM;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;gBACD,UAAkB,KAAa;gBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;;;WAHA;QAKD,sBAAW,uCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;QAKD,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,4CAAc;;;gBAAzB;gBACI,OAAO,IAAI,CAAC,eAAe,CAAC;aAC/B;;;;gBACD,UAA0B,KAAa;gBACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAChC;;;WAHA;QAKD,sBAAW,uCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;QAKD,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,kCAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;;gBACD,UAAgB,KAAa;gBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;;;WAHA;QAKD,sBAAW,uCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;QAKD,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,uCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;QAKD,sBAAW,oCAAM;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;gBACD,UAAkB,KAAa;gBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;;;WAHA;QAKD,sBAAW,qCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;;gBACD,UAAmB,KAAa;gBAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACzB;;;WAHA;QAKD,sBAAW,yCAAW;;;gBAAtB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;;gBACD,UAAuB,KAAa;gBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;;;WAHA;QAKD,sBAAW,sCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAc;gBAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,uCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;QAhNDF;YADCC,WAAQ;;0DACgB;QAGzBD;YADCC,WAAQ;;4DACkB;QAG3BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;6DACmB;QAG5BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;yDACe;QAGxBD;YADCC,WAAQ;;4DACkB;QAG3BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;iEACuB;QAGhCD;YADCC,WAAQ;;4DACkB;QAG3BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;uDACa;QAGtBD;YADCC,WAAQ;;4DACkB;QAG3BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;4DACkB;QAG3BD;YADCC,WAAQ;;yDACe;QAGxBD;YADCC,WAAQ;;0DACgB;QAGzBD;YADCC,WAAQ;;8DACoB;QAG7BD;YADCC,WAAQ;;2DACkB;QAG3BD;YADCC,WAAQ;;4DACkB;QA/DlB,gBAAgB;YAD5BC,OAAI,CAAC,kBAAkB,CAAC;;WACZ,gBAAgB,CAwN5B;QAAD,uBAAC;KAAA;;;;;;;QCxLG,gCAAY,QAAgB;YA7BpB,SAAI,GAAW,GAAG,CAAC;YAGnB,cAAS,GAAW,CAAC,CAAC;YAGtB,oBAAe,GAAW,CAAC,CAAC;YAG5B,UAAK,GAAW,GAAG,CAAC;YAGpB,QAAG,GAAW,GAAG,CAAC;YAGlB,QAAG,GAAW,GAAG,CAAC;YAGlB,QAAG,GAAW,GAAG,CAAC;YAGlB,QAAG,GAAW,GAAG,CAAC;YAGlB,sBAAiB,GAAW,CAAC,CAAC;YAMlC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC7B;mCAlCQ,sBAAsB;QAoC/B,sBAAW,uCAAG;;;gBAAd;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC;aACpB;;;;gBACD,UAAe,KAAa;gBACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACrB;;;WAHA;QAKD,sBAAW,4CAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;WAAA;QAED,sBAAW,kDAAc;;;gBAAzB;gBACI,OAAO,IAAI,CAAC,eAAe,CAAC;aAC/B;;;;gBACD,UAA0B,KAAa;gBACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAChC;;;WAHA;QAKD,sBAAW,wCAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;;gBACD,UAAgB,KAAa;gBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;;;WAHA;QAKD,sBAAW,sCAAE;;;gBAAb;gBACI,OAAO,IAAI,CAAC,GAAG,CAAC;aACnB;;;;gBACD,UAAc,KAAa;gBACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;aACpB;;;WAHA;QAKD,sBAAW,sCAAE;;;gBAAb;gBACI,OAAO,IAAI,CAAC,GAAG,CAAC;aACnB;;;;gBACD,UAAc,KAAa;gBACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;aACpB;;;WAHA;QAKD,sBAAW,sCAAE;;;gBAAb;gBACI,OAAO,IAAI,CAAC,GAAG,CAAC;aACnB;;;;gBACD,UAAc,KAAa;gBACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;aACpB;;;WAHA;QAKD,sBAAW,sCAAE;;;gBAAb;gBACI,OAAO,IAAI,CAAC,GAAG,CAAC;aACnB;;;;gBACD,UAAc,KAAa;gBACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;aACpB;;;WAHA;QAKD,sBAAW,oDAAgB;;;gBAA3B;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;aACjC;;;;gBACD,UAA4B,KAAa;gBACrC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAClC;;;WAHA;QAKD,sBAAW,sDAAkB;;;gBAA7B;gBACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;aACnC;;;;gBACD,UAA8B,KAAa;gBACvC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;aACpC;;;WAHA;;;;QAKM,sCAAK;;;YAAZ;;oBACQ,2BAA2B,GAA2B,IAAI,wBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC;gBACpG,2BAA2B,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;gBAClE,2BAA2B,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC5C,2BAA2B,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC9C,2BAA2B,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC1C,2BAA2B,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC1C,2BAA2B,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC1C,2BAA2B,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAC1C,2BAA2B,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACtE,2BAA2B,CAAC,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC;gBAE1E,OAAO,2BAA2B,CAAC;aAEtC;;QAlHDF;YADCC,WAAQ;;4DACkB;QAG3BD;YADCC,WAAQ;;iEACqB;QAG9BD;YADCC,WAAQ;;uEAC2B;QAGpCD;YADCC,WAAQ;;6DACmB;QAG5BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;2DACiB;QAG1BD;YADCC,WAAQ;;yEAC6B;QAGtCD;YADCC,WAAQ;;2EAC2B;QA9B3B,sBAAsB;YADlCC,OAAI,CAAC,wBAAwB,CAAC;;WAClB,sBAAsB,CAyHlC;QAAD,6BAAC;KAAA;;;;;;;QCjGG,8BAAY,QAAQ,EAAE,MAAM,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,aAAa;YAF/E,mBAAc,GAAiB,EAAE,CAAC;YAGtC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;YACpD,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;SACvC;iCA7BQ,oBAAoB;QAgC7B,sBAAI,0CAAQ;;;gBA4BZ;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBA9BD,UAAa,QAAgB;gBACzB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;aAC7B;;;WAAA;QAED,sBAAI,wCAAM;;;gBA4BV;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;gBA9BD,UAAW,KAAa;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;;;WAAA;QAED,sBAAI,uDAAqB;;;gBA4BzB;gBACI,OAAO,IAAI,CAAC,sBAAsB,CAAC;aACtC;;;;gBA9BD,UAA0B,qBAA6B;gBACnD,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;aACvD;;;WAAA;QAED,sBAAI,qDAAmB;;;gBA4BvB;gBACI,OAAO,IAAI,CAAC,oBAAoB,CAAC;aACpC;;;;gBA9BD,UAAwB,mBAA2B;gBAC/C,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;aACnD;;;WAAA;QAED,sBAAI,+CAAa;;;gBA4BjB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;;gBA9BD,UAAkB,aAAyC;gBACvD,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;aACvC;;;WAAA;QAED,sBAAI,kDAAgB;;;gBA4BpB;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;aACjC;;;;gBA9BD,UAAqB,gBAAwB;gBACzC,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;aAC7C;;;WAAA;QAED,sBAAI,+CAAa;;;gBA4BjB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;;gBA9BD,UAAkB,aAA4B;gBAC1C,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;aACvC;;;WAAA;;;;QA8BM,oCAAK;;;YAAZ;;oBACU,qBAAqB,GAAG,IAAI,sBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG;;;mBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAE,GAAA,EAAC,CAAC;gBACpL,qBAAqB,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG;;;mBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAA,EAAC,CAAC;gBACtE,qBAAqB,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBAEjE,OAAO,qBAAqB,CAAC;aAChC;;QA3FDF;YADCC,WAAQ;;+DACiB;QAG1BD;YADCC,WAAQ;;6DACe;QAGxBD;YADCC,WAAQ;;4EAC8B;QAGvCD;YADCC,WAAQ;;0EAC4B;QAGrCD;YADCC,WAAQ;sCACe,KAAK;oEAAsB;QAGnDD;YADCC,WAAQ;;uEACyB;QAGlCD;YADCC,WAAQ;sCACe,KAAK;oEAAa;QArBjC,oBAAoB;YADhCC,OAAI,CAAC,sBAAsB,CAAC;;WAChB,oBAAoB,CA+FhC;QAAD,2BAAC;KAAA;;;;;;;QCxFG;YALQ,cAAS,GAAW,EAAE,CAAC;YAGvB,iBAAY,GAAW,CAAC,CAAC;SAGhC;QAED,sBAAW,gDAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,mDAAW;;;gBAAtB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;;gBACD,UAAuB,KAAa;gBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;;;WAHA;QAjBDF;YADCC,WAAQ;;qEACsB;QAG/BD;YADCC,WAAQ;;wEACwB;QANxB,0BAA0B;YADtCC,OAAI,CAAC,4BAA4B,CAAC;;WACtB,0BAA0B,CA0BtC;QAAD,iCAAC;KAAA;;;;;;;QCTG;SACC;QAED,sBAAW,wCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,wCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,wCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAKD,sBAAW,sCAAM;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;gBACD,UAAkB,KAAa;gBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;;;WAHA;QAKD,sBAAW,yCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aAC3B;;;WAHA;QA/CDF;YADCC,WAAQ;;6DACiB;QAG1BD;YADCC,WAAQ;;6DACiB;QAG1BD;YADCC,WAAQ;;6DACiB;QAG1BD;YADCC,WAAQ;;2DACe;QAGxBD;YADCC,WAAQ;;8DACkB;QAflB,kBAAkB;YAD9BC,OAAI,CAAC,oBAAoB,CAAC;;WACd,kBAAkB,CAsD9B;QAAD,yBAAC;KAAA;;;;;;;QCrCG;SACC;QAED,sBAAW,mDAAY;;;gBAAvB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;;;;gBACD,UAAwB,KAAa;gBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;;;WAHA;QAKD,sBAAW,kDAAW;;;gBAAtB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;;gBACD,UAAuB,KAAa;gBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;;;WAHA;QAKD,sBAAW,mDAAY;;;gBAAvB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC;aAC7B;;;;gBACD,UAAwB,KAAa;gBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;;;WAHA;QAKD,sBAAW,sDAAe;;;gBAA1B;gBACI,OAAO,IAAI,CAAC,gBAAgB,CAAC;aAChC;;;;gBACD,UAA2B,KAAa;gBACpC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aACjC;;;WAHA;QAKD,sBAAW,qDAAc;;;gBAAzB;gBACI,OAAO,IAAI,CAAC,eAAe,CAAC;aAC/B;;;;gBACD,UAA0B,cAAsB;gBAC5C,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;aACzC;;;WAHA;QA/CDF;YADCC,WAAQ;;wEACqB;QAG9BD;YADCC,WAAQ;;uEACoB;QAG7BD;YADCC,WAAQ;;wEACqB;QAG9BD;YADCC,WAAQ;;2EACwB;QAGjCD;YADCC,WAAQ;;0EACuB;QAfvB,yBAAyB;YADrCC,OAAI,CAAC,2BAA2B,CAAC;;WACrB,yBAAyB,CA0DrC;QAAD,gCAAC;KAAA;;;;;;;QC/CG,4BAAY,IAAY,EAAE,MAAc,EAAE,KAAU;YAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACvB;QAGD,sBAAW,oCAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;;gBACD,UAAgB,KAAa;gBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;;;WAHA;QAKD,sBAAW,sCAAM;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;gBACD,UAAkB,KAAa;gBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;;;WAHA;QAKD,sBAAW,qCAAK;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;;gBACD,UAAiB,KAAU;gBACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;;;WAHA;QA/BDF;YADCC,WAAQ;;yDACa;QAGtBD;YADCC,WAAQ;;2DACe;QAGxBD;YADCC,WAAQ;;0DACW;QATX,kBAAkB;YAD9BC,OAAI,CAAC,oBAAoB,CAAC;;WACd,kBAAkB,CAsC9B;QAAD,yBAAC;KAAA;;;;;;;QCTG;YA1BQ,iCAA4B,GAAW,EAAE,CAAC;YAG1C,qCAAgC,GAAW,EAAE,CAAC;YAG9C,uBAAkB,GAAW,EAAE,CAAC;YAGhC,2BAAsB,GAAW,EAAE,CAAC;YAGpC,0BAAqB,GAAW,EAAE,CAAC;YAGnC,qCAAgC,GAAW,EAAE,CAAC;YAG9C,iCAA4B,GAAW,EAAE,CAAC;YAG1C,gCAA2B,GAAW,EAAE,CAAC;YAGzC,yBAAoB,GAAW,EAAE,CAAC;SAGzC;QAED,sBAAW,6DAA2B;;;gBAAtC;gBACI,OAAO,IAAI,CAAC,4BAA4B,CAAC;aAC5C;;;;gBACD,UAAuC,KAAa;gBAChD,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;aAC7C;;;WAHA;QAKD,sBAAW,iEAA+B;;;gBAA1C;gBACI,OAAO,IAAI,CAAC,gCAAgC,CAAC;aAChD;;;;gBACD,UAA2C,KAAa;gBACpD,IAAI,CAAC,gCAAgC,GAAG,KAAK,CAAC;aACjD;;;WAHA;QAKD,sBAAW,mDAAiB;;;gBAA5B;gBACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;;;;gBACD,UAA6B,KAAa;gBACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;aACnC;;;WAHA;QAKD,sBAAW,uDAAqB;;;gBAAhC;gBACI,OAAO,IAAI,CAAC,sBAAsB,CAAC;aACtC;;;;gBACD,UAAiC,KAAa;gBAC1C,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;aACvC;;;WAHA;QAKD,sBAAW,sDAAoB;;;gBAA/B;gBACI,OAAO,IAAI,CAAC,qBAAqB,CAAC;aACrC;;;;gBACD,UAAgC,KAAa;gBACzC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;aACtC;;;WAHA;QAKD,sBAAW,iEAA+B;;;gBAA1C;gBACI,OAAO,IAAI,CAAC,gCAAgC,CAAC;aAChD;;;;gBACD,UAA2C,KAAa;gBACpD,IAAI,CAAC,gCAAgC,GAAG,KAAK,CAAC;aACjD;;;WAHA;QAKD,sBAAW,6DAA2B;;;gBAAtC;gBACI,OAAO,IAAI,CAAC,4BAA4B,CAAC;aAC5C;;;;gBACD,UAAuC,KAAa;gBAChD,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;aAC7C;;;WAHA;QAKD,sBAAW,4DAA0B;;;gBAArC;gBACI,OAAO,IAAI,CAAC,2BAA2B,CAAC;aAC3C;;;;gBACD,UAAsC,KAAa;gBAC/C,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;aAC5C;;;WAHA;QAKD,sBAAW,qDAAmB;;;gBAA9B;gBACI,OAAO,IAAI,CAAC,oBAAoB,CAAC;aACpC;;;;gBACD,UAA+B,KAAa;gBACxC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACrC;;;WAHA;QAvFDF;YADCC,WAAQ;;kFACyC;QAGlDD;YADCC,WAAQ;;sFAC6C;QAGtDD;YADCC,WAAQ;;wEAC+B;QAGxCD;YADCC,WAAQ;;4EACmC;QAG5CD;YADCC,WAAQ;;2EACkC;QAG3CD;YADCC,WAAQ;;sFAC6C;QAGtDD;YADCC,WAAQ;;kFACyC;QAGlDD;YADCC,WAAQ;;iFACwC;QAGjDD;YADCC,WAAQ;;0EACiC;QA3BjC,oBAAoB;YADhCC,OAAI,CAAC,sBAAsB,CAAC;;WAChB,oBAAoB,CA8FhC;QAAD,2BAAC;KAAA;;;;;;;QClFG,sCAAY,aAAuC,EAAE,kBAA4C,EAAE,iBAAiC;YAR5H,mBAAc,GAA6B,EAAE,CAAC;YAG9C,wBAAmB,GAA6B,EAAE,CAAC;YAGnD,uBAAkB,GAAmB,EAAE,CAAC;YAG5C,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;YAC9C,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;SAC/C;QAED,sBAAW,uDAAa;;;gBAAxB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;WAAA;QAED,sBAAW,4DAAkB;;;gBAA7B;gBACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;aACnC;;;WAAA;QAED,sBAAW,2DAAiB;;;gBAA5B;gBACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;;;WAAA;QAxBDF;YADCC,WAAQ;sCACe,KAAK;4EAAyB;QAGtDD;YADCC,WAAQ;sCACoB,KAAK;iFAAyB;QAG3DD;YADCC,WAAQ;sCACmB,KAAK;gFAAe;QATvC,4BAA4B;YADxCC,OAAI,CAAC,8BAA8B,CAAC;6CAYN,KAAK,EAAyC,KAAK,EAAwC,KAAK;WAXlH,4BAA4B,CA8BxC;QAAD,mCAAC;KAAA;;;;;;;QCtBG,sCAAYC,gBAA4B,EAAE,IAAY;YAL9C,mBAAc,GAAkB,IAAI,CAAC;YAGrC,UAAK,GAAW,EAAE,CAAC;YAGvB,IAAI,CAAC,cAAc,GAAGA,gBAAa,CAAC;YACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACrB;QAED,sBAAW,uDAAa;;;gBAAxB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;aAC9B;;;WAAA;QAED,sBAAW,8CAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;WAAA;QAhBDH;YADCC,WAAQ;sCACe,aAAa;4EAAQ;QAG7CD;YADCC,WAAQ;;mEACkB;QANlB,4BAA4B;YADxCC,OAAI,CAAC,8BAA8B,CAAC;6CASN,aAAa;WAR/B,4BAA4B,CAoBxC;QAAD,mCAAC;KAAA;;;;;;;QCVG,oBAAY,IAAY,EAAE,KAAa,EAAE,GAAU;YAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;SACnB;QAED,sBAAW,4BAAI;;;gBAAf;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;aACrB;;;WAAA;QACD,sBAAW,6BAAK;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;WAAA;QACD,sBAAW,2BAAG;;;gBAAd;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC;aACpB;;;WAAA;QAtBDF;YADCC,WAAQ;;iDACa;QAGtBD;YADCC,WAAQ;;kDACc;QAGvBD;YADCC,WAAQ;;gDACY;QATZ,UAAU;YADtBC,OAAI,CAAC,YAAY,CAAC;;WACN,UAAU,CA2BtB;QAAD,iBAAC;KAAA;;;;;;;QCZG,qBAAY,QAAe,EAAE,OAAe,EAAE,SAAiB,EAAE,OAAc;YAC3E,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;SAC3B;QAED,sBAAW,gCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;WAAA;QACD,sBAAW,kCAAS;;;gBAApB;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;WAAA;QACD,sBAAW,gCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;WAAA;QACD,sBAAW,iCAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;WAAA;QA9BDF;YADCC,WAAQ;;sDACiB;QAG1BD;YADCC,WAAQ;;qDACgB;QAGzBD;YADCC,WAAQ;;uDACmB;QAG5BD;YADCC,WAAQ;;qDACgB;QAZhB,WAAW;YADvBC,OAAI,CAAC,aAAa,CAAC;;WACP,WAAW,CAmCvB;QAAD,kBAAC;KAAA;;;;;;;QC3BG,mCAAY,QAAgB,EAAE,QAAiB;YAC3C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC7B;QAED,sBAAW,+CAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAID,sBAAW,+CAAQ;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBACD,UAAoB,KAAc;gBAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;;;WAHA;QAlBDF;YADCC,WAAQ;;oEACiB;QAG1BD;YADCC,WAAQ;;oEACkB;QANlB,yBAAyB;YADrCC,OAAI,CAAC,2BAA2B,CAAC;;WACrB,yBAAyB,CA2BrC;QAAD,gCAAC;KAAA;;;;;;;;QC3BG,SAAU,SAAS;QACnB,QAAS,QAAQ;QACjB,QAAS,QAAQ;QACjB,OAAQ,OAAO;;;QAYf,0BAAY,KAAK,EAAE,OAAO;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC1B;QAGD,sBAAW,mCAAK;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;;;;gBACD,UAAiB,KAAmB;gBAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;;;WAHA;QAKD,sBAAW,qCAAO;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;;;;gBACD,UAAmB,KAAa;gBAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACzB;;;WAHA;QApBDF;YADCC,WAAQ;;wDACoB;QAG7BD;YADCC,WAAQ;;0DACgB;QANhB,gBAAgB;YAD5BC,OAAI,CAAC,kBAAkB,CAAC;;WACZ,gBAAgB,CA2B5B;QAAD,uBAAC;KAAA;;;;;;;QCzBG;SAEC;QAED,sBAAW,8CAAc;;;gBAAzB;gBACI,OAAO,IAAI,CAAC,eAAe,CAAC;aAC/B;;;;gBACD,UAA0B,KAAa;gBACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAChC;;;WAHA;QAID,sBAAW,kDAAkB;;;gBAA7B;gBACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;aACnC;;;;gBACD,UAA8B,KAAgC;gBAC1D,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;aACpC;;;WAHA;QAjBDF;YADCC,WAAQ;;mEACuB;QAGhCD;YADCC,WAAQ;sCACoB,KAAK;uEAAqB;QAN9C,kBAAkB;YAD9BC,OAAI,CAAC,oBAAoB,CAAC;;WACd,kBAAkB,CA0B9B;QAAD,yBAAC;KAAA;;;;;;;;;;;AC9BD;QAUI,0BACY,QAAyB;YADrC,iBAYC;YAXW,aAAQ,GAAR,QAAQ,CAAiB;YAa7B,kBAAa,GAAgB,IAAI,CAAC;YAClC,gBAAW,GAAW,IAAI,CAAC;YAC3B,YAAO,GAAG,KAAK,CAAC;YAChB,YAAO,GAAG,IAAI,CAAC;YACf,sBAAiB,GAAsB,IAAI,iBAAiB,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAChG,kBAAa,GAAwB,mBAAmB,CAAC,UAAU,CAAC;YACpE,gBAAW,GAA4B,IAAIE,oBAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7E,kBAAa,GAAyC,IAAIA,oBAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC9F,mBAAc,GAA6B,IAAIA,oBAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7E,mBAAc,GAA6B,IAAIA,oBAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7E,6BAAwB,GAAuC,IAAIA,oBAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC3G,yBAAoB,GAAiC,IAAIA,oBAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC7F,6BAAwB,GAA+B,IAAIC,YAAO,EAAE,CAAC;YAvBzE,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,SAAS;;eAAC;;gBAEtC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC5B,KAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;gBAC1D,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC1B,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACtB,KAAI,CAAC,oBAAoB,CAAC,IAAI,iBAAiB,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;aACvF,EAAC,CAAA;SACL;;;;QAiBM,2CAAgB;;;YAAvB;gBACI,OAAO,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;aACnD;;;;;QAEM,2CAAgB;;;;YAAvB,UAAwB,MAAmB;gBACvC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;gBAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACtD;;;;QAEM,+CAAoB;;;YAA3B;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;aAC5C;;;;;QAEM,+CAAoB;;;;YAA3B,UAA4B,MAA2B;gBACnD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;gBAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC/C;;;;QAEM,yCAAc;;;YAArB;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;aAC1C;;;;;QAEM,yCAAc;;;;YAArB,UAAsB,IAAY;gBAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC3C;;;;QAEM,qCAAU;;;YAAjB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;aAC7C;;;;;QAEM,qCAAU;;;;YAAjB,UAAkB,GAAY;gBAC1B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1C;;;;QAEM,qCAAU;;;YAAjB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;aAC7C;;;;;QAEM,qCAAU;;;;YAAjB,UAAkB,GAAY;gBAC1B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1C;;;;;QAEM,uCAAY;;;;YAAnB,UAAoB,IAAuB;gBACvC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC5C;;;;QAEM,uCAAY;;;YAAnB;gBACI,OAAO,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;aACvD;;;;;;;QAIM,+CAAoB;;;;;;YAA3B,UAA4B,IAAuB;gBAC/C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;iBACjF;gBACD,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAC9D;;;;QAEM,+CAAoB;;;YAA3B;gBACI,OAAO,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;aACvD;;oBApGJC,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;wBAJQC,kBAAe;;;;+BAHxB;KAKA,IAwGC;;QAED;SAGC;QAAD,wBAAC;IAAD,CAAC,IAAA;;;QAGG,oBAAiB;QACjB,aAAU;QACV,YAAS;QACT,cAAW;;;;;;;;;QAIX,UAAO;QACP,oBAAiB;QACjB,uBAAoB;QACpB,QAAK;;;;;;;;QAIL,OAAI;QACJ,SAAM;;;;;;;;;;QCnFR,4BACU,UAAuB,EACvB,UAAsB,EACtB,SAA2B,EAC3B,YAA0B,EAG1B,eAAgC,EAGhC,mBAAqC,EAGrC,oBAAsC,EACtC,eAAgC,EAChC,kBAAsC;YAfhD,iBAuCC;YAtCS,eAAU,GAAV,UAAU,CAAa;YACvB,eAAU,GAAV,UAAU,CAAY;YACtB,cAAS,GAAT,SAAS,CAAkB;YAC3B,iBAAY,GAAZ,YAAY,CAAc;YAG1B,oBAAe,GAAf,eAAe,CAAiB;YAGhC,wBAAmB,GAAnB,mBAAmB,CAAkB;YAGrC,yBAAoB,GAApB,oBAAoB,CAAkB;YACtC,oBAAe,GAAf,eAAe,CAAiB;YAChC,uBAAkB,GAAlB,kBAAkB,CAAoB;YAzBxC,wBAAmB,GAAG,IAAI,GAAG,EAAkB,CAAC;YAChD,wBAAmB,GAAG,IAAI,GAAG,EAAkB,CAAC;YAChD,wBAAmB,GAAG,IAAI,GAAG,EAAkB,CAAC;YAChD,uBAAkB,GAAG,IAAI,GAAG,EAA+B,CAAC;YAE5D,oBAAe,GAAwB,IAAI,GAAG,EAAkB,CAAC;YACjE,2BAAsB,GAAoC,IAAI,GAAG,EAA8B,CAAC;YAExF,SAAI,GAAG,IAAI,CAAC;YAkpCpB,aAAQ,GAAY,KAAK,CAAC;YA/nChC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;;YAEpD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;YACtE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;YAChE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;YAC9D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;YAC9D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;YACzD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;YACtD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YACpD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;YAC1D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;YAChE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAC/D,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAC/D,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAE/D,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,kBAAkB,EAAE,8BAA8B,CAAC,CAAC;YAC7E,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;YAC5D,IAAI,CAAC,eAAe,CAAC,OAAO;;;;eAAC,UAAC,IAAI,EAAE,GAAG;gBACrC,KAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,GAAG,EAAE,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;aAClF,EAAC,CAAC;SACJ;;;;;;;;;;;;QAQM,sDAAyB;;;;;;;;;YAAhC,UAAiC,IAAY,EAAE,QAAiB;gBAC9D,OAAOC,SAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;aAC9D;;;;;;;QAEa,uDAA0B;;;;;;YAAxC,UAAyC,IAAY,EAAE,QAAiB;;;;;;gCACtE,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;gCAE7E,UAAU,GAAwB,IAAI,mBAAmB,CAAC,IAAI,CAAC;;;;gCAE7D,cAAc,SAAK;gCACnB,eAAe,SAAK;gCACpB,oBAAoB,SAAK;gCACzB,UAAU,SAAK;gCAEf,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,0BAA0B,CAAC;gCAC/D,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,2BAA2B,CAAC;gCACjE,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,qBAAqB,CAAC;gCAChE,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,2BAA2B,CAAC;gCAEhE,oBAAyB,gBAAgB,IAAE,WAAW,CAAC,IAAI,CAAC,CAAC;gCAC7D,oBAA0B,MAAM,IAAE,WAAW,CAAC,IAAI,CAAC,CAAC;gCAEkB,qBAAM,OAAO,CAAC,GAAG,CAAC;wCACtF,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE;wCAChD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;wCACjD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE;wCACtD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE;qCAC7C,CAAC,EAAA;;gCALF,yCAKE,EALD,sBAAc,EAAE,uBAAe,EAAE,4BAAoB,EAAE,kBAAU,CAK/D;gCACH,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;gCAC9C,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;gCAChD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;gCAC1D,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;sCAIlC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC;uCAC9B,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC;uCAChC,oBAAoB,CAAC,MAAM,CAAC,QAAQ,CAAC;uCACrC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;oCAH5B,wBAG4B;gCAE1B,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gCAC1D,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gCAE5D,kBAAgB,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC;gCACvC,cAAc,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC;gCAC7C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,eAAa,CAAC,CAAC;gCAC5C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;sCAE1C,eAAa,IAAI,SAAS,IAAI,cAAc,IAAI,SAAS,CAAA;oCAAzD,wBAAyD;;gCAGvD,wBAA2B,EAAE;gCACjC,oBAAoB,CAAC,MAAM,CAAC,CAAC,OAAO;;;mCAAC,UAAA,IAAI;oCACvC,qBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;iCACjD,EAAC,CAAC;gCACH,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,qBAAmB,CAAC,CAAC;;gCAGpD,mBAAiB,CAAC,CAAC;gCACnB,aAAa,GAAG,CAAC,CAAC;gCAClB,kBAAgB,CAAC,CAAC;gCAClB,WAAW,GAAG,eAAa,CAAC,mBAAmB;gCAC/C,eAA4B,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;gCAEjE,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;gCAC/B,WAAW,GAAG,UAAU,CAAC,MAAM;;;mCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC,eAAe,IAAIC,kBAAe,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,IAAI,MAAM,GAAA,EAAC;gCACrI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;oCAC1B,eAAa,GAAG,CAAC,CAAC;oCAClB,WAAW,CAAC,OAAO;;;uCAAC,UAAA,CAAC;wCACnB,IAAI,CAAC,CAAC,KAAK,IAAI,eAAa,CAAC,0BAA0B,EAAE;4CACvD,YAAU,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;4CAClC,eAAa,IAAI,CAAC,CAAC,KAAK,CAAC;yCAC1B;qCACF,EAAC,CAAC;iCACJ;gCAEG,eAAe,GAAG,UAAU,CAAC,MAAM;;;mCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC,eAAe,IAAIA,kBAAe,CAAC,IAAI,IAAI,CAAC,CAAC,QAAQ,IAAI,MAAM,GAAA,EAAC;gCACrI,IAAI,eAAe,CAAC,MAAM,EAAE;oCAC1B,gBAAc,GAAG,CAAC,CAAC;oCACnB,aAAa,GAAG,CAAC,CAAC;oCAClB,eAAe,CAAC,OAAO;;;uCAAC,UAAA,CAAC;wCACvB,gBAAc,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,eAAa,CAAC,0BAA0B,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;qCACvF,EAAC,CAAC;oCACH,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAc,GAAG,eAAa,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;iCACvF;gCACD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,YAAU,CAAC,CAAC;gCAElC,UAAU,GAA0B,IAAI,qBAAqB,EAAE;gCAC/D,UAAU,GAA0B,IAAI,qBAAqB,EAAE;gCAC/D,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAChD,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAChD,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAChD,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAChD,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAEpD,UAAU,CAAC,QAAQ,GAAG,eAAa,CAAC,QAAQ,CAAC;gCAC7C,UAAU,CAAC,SAAS,GAAG,eAAa,CAAC,SAAS,CAAC;gCAC/C,UAAU,CAAC,iBAAiB,GAAG,eAAa,CAAC,iBAAiB,CAAC;gCAC/D,UAAU,CAAC,eAAe,GAAG,eAAa,CAAC,eAAe,CAAC;gCAC3D,UAAU,CAAC,2BAA2B,GAAG,eAAa,CAAC,2BAA2B,CAAC;gCACnF,UAAU,CAAC,0BAA0B,GAAG,eAAa,CAAC,0BAA0B,CAAC;gCACjF,UAAU,CAAC,iBAAiB,GAAG,eAAa,CAAC,iBAAiB,CAAC;gCAC/D,UAAU,CAAC,wBAAwB,GAAG,eAAa,CAAC,wBAAwB,CAAC;gCAC7E,UAAU,CAAC,sBAAsB,GAAG,eAAa,CAAC,sBAAsB,CAAC;gCACzE,UAAU,CAAC,0BAA0B,GAAG,eAAa,CAAC,0BAA0B,CAAC;gCACjF,UAAU,CAAC,sBAAsB,GAAG,eAAa,CAAC,sBAAsB,CAAC;gCACzE,UAAU,CAAC,gBAAgB,GAAG,eAAa,CAAC,gBAAgB,CAAC;gCAC7D,UAAU,CAAC,0BAA0B,GAAG,eAAa,CAAC,0BAA0B,CAAC;gCACjF,UAAU,CAAC,mBAAmB,GAAG,eAAa,CAAC,mBAAmB,CAAC;gCACnE,UAAU,CAAC,YAAY,GAAG,eAAa,CAAC,YAAY,CAAC;gCACrD,IAAI,IAAI,CAAC,mBAAmB,EAAE;oCACxB,iBAAiB,GAAkB,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,eAAa,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;oCAClH,UAAU,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;iCAC5C;gCAED,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;gCAC3B,UAAU,CAAC,yBAAyB,GAAG,cAAc,CAAC,yBAAyB,CAAC;gCAChF,UAAU,CAAC,oBAAoB,GAAG,cAAc,CAAC,oBAAoB,CAAC;gCACtE,UAAU,CAAC,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC;gCACtD,UAAU,CAAC,aAAa,GAAG,cAAc,CAAC,aAAa,CAAC;gCACxD,UAAU,CAAC,WAAW,GAAG,cAAc,CAAC,WAAW,IAAI,GAAG,CAAC;gCAC3D,UAAU,CAAC,aAAa,GAAG,cAAc,CAAC,aAAa,IAAI,GAAG,CAAC;gCAC/D,UAAU,CAAC,iBAAiB,GAAG,cAAc,CAAC,iBAAiB,CAAC;gCAChE,IAAI,IAAI,CAAC,oBAAoB,EAAE;oCACzB,kBAAkB,GAAkB,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;oCACrH,UAAU,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;iCAC7C;gCAED,KAAK,CAAC,IAAI,GAAG,qBAAmB,CAAC,WAAW,CAAC;gCAC7C,KAAK,CAAC,gBAAgB,GAAG,qBAAmB,CAAC,iBAAiB,CAAC;gCAC/D,KAAK,CAAC,IAAI,GAAG,qBAAmB,CAAC,IAAI,CAAC;gCACtC,KAAK,CAAC,aAAa,GAAG,qBAAmB,CAAC,cAAc,CAAC;gCACzD,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,eAAa,CAAC,CAAC;gCAChD,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,qBAAmB,CAAC,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;gCACvG,KAAK,CAAC,YAAY,GAAG,qBAAmB,CAAC,aAAa,CAAC;gCACvD,KAAK,CAAC,YAAY,GAAG,qBAAmB,CAAC,aAAa,CAAC;gCAEvD,KAAK,CAAC,OAAO,GAAG,qBAAmB,CAAC,aAAa,CAAC;gCAE9C,YAAY,GAAG,QAAQ,GAAG,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC,IAAI;gCACjE,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;qCAExE,QAAQ;oCAAR,wBAAQ;gCACF,qBAAM,IAAI,CAAC,wBAAwB,CAACA,kBAAe,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,mBAAmB,EAAE,UAAU,CAAC,0BAA0B,CAAC,EAAA;;gCAAlJ,KAAK,GAAG,SAA0I,CAAC;gCACnJ,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;;;gCAEtE,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,EAAE,YAAU,CAAC,CAAC;gCAC1E,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;;;gCAGxE,KAAK,CAAC,QAAQ,GAAG,qBAAmB,CAAC,SAAS,CAAC;gCAC/C,KAAK,CAAC,OAAO,GAAG,qBAAmB,CAAC,QAAQ,CAAC;gCAC7C,KAAK,CAAC,QAAQ,GAAG,qBAAmB,CAAC,aAAa,CAAC;gCACnD,KAAK,CAAC,WAAW,GAAG,qBAAmB,CAAC,gBAAgB,CAAC;gCACzD,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAc,CAAC,CAAC;gCACzD,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;gCACvD,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC,qBAAmB,CAAC,SAAS,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;gCACjH,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,oBAAoB,EAAE,UAAU,CAAC,iBAAiB,CAAC,CAAC;gCAEhH,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;gCACnC,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;gCACnC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;gCACzB,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;gCACzB,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;gCACzB,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;gCACzB,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;gCACzB,UAAU,CAAC,UAAU,GAAG,YAAU,CAAC;;;;;gCAKvC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIC,WAAQ,CAAC,QAAQ,EAAE,iCAAiC,GAAG,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;;gCAG3G,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,UAAU,CAAC,CAAC;gCAChE,sBAAO,UAAU,EAAC;;;;aACnB;;;;;;;;QAGM,kDAAqB;;;;;;;YAA5B,UAA6B,IAAY,EAAE,OAAe,EAAE,UAAiC,EAAE,YAAyB;gBADxH,iBAgDC;gBA/C8F,6BAAA;oBAAA,iBAAyB;;gBACtH,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;;oBAE3E,SAAS,GAAqB,IAAI,gBAAgB,EAAE;;oBACpD,cAAc,GAAyB,EAAE;gBAC7C,IAAI;;wBAEE,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;;wBACtB,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;oBAChC,IAAIC,cAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAIA,cAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,UAAU,GAAG,CAAC,EAAE;wBACjF,OAAO,CAAC,IAAI,CAAC,oCAAoC,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;;4BAC1E,IAAI,GAAW,CAACC,cAAW,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC;;4BAE/G,UAAU,GAAW,CAAC;;4BACtB,WAAW,GAAW,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC;;4BAElE,UAAU,GAAW,OAAO,GAAG,UAAU,GAAG,IAAI;;4BAChD,WAAW,GAAW,UAAU,GAAG,UAAU;;4BAC7C,YAAY,GAAW,UAAU,GAAG,WAAW;wBACnD,UAAU,GAAG,UAAU,CAAC;;4BAEpB,IAAI,GAAG,CAAC,EAAE,IAAI,EAAEC,WAAQ,CAAC,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAEA,WAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,EAAE,IAAI,EAAEA,WAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;wBAExJ,IAAI,IAAI,CAAC,eAAe,EAAE;4BACxB,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,iCAAiC,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;yBAC3F;;4BAEG,QAAQ,GAAa,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ;wBAEnD,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;wBAC9B,SAAS,CAAC,cAAc,GAAG,cAAc,CAAC;qBAE3C;yBAAM;;4BACD,MAAM,GAAG,CAACA,WAAQ,CAAC,GAAG,EAAEA,WAAQ,CAAC,IAAI,EAAEA,WAAQ,CAAC,KAAK,CAAC;wBAC1D,SAAS,CAAC,QAAQ,GAAGA,WAAQ,CAAC,GAAG,CAAC;wBAClC,MAAM,CAAC,OAAO;;;2BAAC,UAAA,IAAI;;gCACb,QAAQ,GAAkB,IAAI,aAAa,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC;4BAC5G,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBAC/B,EAAC,CAAC;wBACH,SAAS,CAAC,cAAc,GAAG,cAAc,CAAC;qBAC3C;iBACF;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIH,WAAQ,CAAC,QAAQ,EAAE,6BAA6B,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBACtG;gBAED,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC7E,OAAO,SAAS,CAAC;aAClB;;;;;;;;;QAIM,qDAAwB;;;;;;;;YAA/B,UAAgC,UAAiC,EAAE,IAAY,EAAE,UAAyB;;gBAGxG,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;;oBAChD,UAAU,GAAqB,IAAI,gBAAgB,EAAE;;oBACrD,mBAAmB,GAA+B,EAAE;gBACxD,IAAI;oBACF,IAAIC,cAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBAC9B,IAAI,IAAI,CAAC,eAAe,EAAE;4BACxB,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;yBAC3G;;4BACG,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,0BAA0B,EAAE,mBAAmB,CAAC;;4BAC7F,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,QAAQ,CAAC;;4BACnD,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;wBAChD,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC;wBAC3C,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;wBAC/B,UAAU,CAAC,SAAS,GAAG,SAAS,CAAC;wBACjC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;qBAC5B;yBAAM;;wBAEL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,mBAAmB,EAAE,CAAC,EAAE,EAAE;;gCACnD,IAAI,GAAwB,IAAI,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;4BAChF,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAChC;wBACD,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC9B,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;wBAChC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;wBACjC,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC;qBAC5C;iBACF;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAID,WAAQ,CAAC,QAAQ,EAAE,gCAAgC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBACzG;gBAED,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,mBAAmB,CAAC,CAAC;gBAE9D,OAAO,UAAU,CAAC;aAEnB;;;;;;QACM,4CAAe;;;;;YAAtB,UAAuB,0BAAkC,EAAE,mBAA+C;gBAA1G,iBAMC;gBALC,IAAI,0BAA0B,GAAG,CAAC,EAAE;oBAClC,OAAO,mBAAmB,CAAC,GAAG;;;uBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,0BAA0B,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAA,EAAC,CAAC,MAAM;;;;uBAAC,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAA,GAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;iBAC3M;qBAAM;oBACL,OAAO,IAAI,CAAC,IAAI,CAAC;iBAClB;aACF;;;;;;QACM,8CAAiB;;;;;YAAxB,UAAyB,0BAAkC,EAAE,mBAA+C;gBAC1G,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,0BAA0B,CAAC,mBAAmB,EAAE,0BAA0B,CAAC,CAAC,CAAC;aAClH;;;;;QAEM,+CAAkB;;;;YAAzB,UAA0B,SAAqB;gBAA/C,iBAYC;;oBAXK,MAAM,GAAG,IAAI;gBACjB,SAAS,CAAC,OAAO;;;mBAAC,UAAA,IAAI;oBACpB,IAAI,IAAI,IAAI,KAAI,CAAC,IAAI,EAAE;wBACrB,MAAM,GAAG,KAAK,CAAC;qBAChB;iBACF,EAAC,CAAC;;oBACC,SAAS,GAAG,IAAI,CAAC,IAAI;gBACzB,IAAI,CAAC,MAAM,EAAE;oBACX,SAAS,GAAG,SAAS,CAAC,GAAG;;;uBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,KAAI,CAAC,IAAI,IAAIE,cAAW,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC,MAAM;;;;uBAAC,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAA,GAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;iBAC3J;gBACD,OAAO,SAAS,CAAC;aAClB;;;;;;QAEM,+CAAkB;;;;;YAAzB,UAA0B,IAAI,EAAE,QAAQ;;oBAClC,MAAM,GAAG,IAAI,CAAC,IAAI;gBACtB,IAAID,cAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAIA,cAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAChE,IAAI,IAAI,CAAC,eAAe,EAAE;wBACxB,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;qBACvE;yBAAM;;4BACD,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;wBAClD,MAAM,GAAG,CAAC,UAAU,GAAG,CAAC,IAAI,GAAG,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;qBACzD;iBACF;gBACD,OAAO,MAAM,CAAC;aACf;;;;;;;;;;;QAOM,0CAAa;;;;;;;;;YAApB,UAAqB,UAA0B,EAAE,QAAgB,EAAE,WAAgC;gBACjG,OAAOH,SAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;aACrE;;;;;;;;QAEa,2CAAc;;;;;;;YAA5B,UAA6B,UAA0B,EAAE,QAAgB,EAAE,WAAgC;;;;;;gCACzG,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;;;;qCAIvE,IAAI,CAAC,eAAe;oCAApB,wBAAoB;;gCAEiB,qBAAM,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAA;;gCAAxF,WAAW,GAAwB,SAAqD;gCAC5F,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;;;gCAE7E,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;;;;gCAIjD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIE,WAAQ,CAAC,QAAQ,EAAE,qBAAqB,GAAG,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;;gCAG/F,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;gCAC5C,sBAAO,aAAa,EAAC;;;;aACtB;;;;;;;QAGM,+CAAkB;;;;;;YAAzB,UAA0B,IAAY,EAAE,QAAgB,EAAE,0BAAkC;gBAC1F,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,4BAA4B,EAAE,0BAA0B,CAAC,CAAA;;oBAExH,aAA4B;gBAEhC,IAAI;oBACF,IAAI,IAAI,CAAC,eAAe,EAAE;wBACxB,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,0BAA0B,CAAC,CAAC;qBACrH;yBAAM;wBACL,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;qBAChD;iBACF;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIA,WAAQ,CAAC,QAAQ,EAAE,0BAA0B,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBACnG;gBAED,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,aAAa,CAAC,CAAC;gBAChE,OAAOI,OAAE,CAAC,aAAa,CAAC,CAAC;aAC1B;;;;;;;QAGM,uCAAU;;;;;;YAAjB,UAAkB,UAA0B,EAAE,aAAsB,EAAE,UAA+B;gBACnG,OAAON,SAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC;aACtE;;;;;;;;QAEa,wCAAW;;;;;;;YAAzB,UAA0B,UAA0B,EAAE,aAAsB,EAAE,UAA+B;;;;;;;gCAC3G,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,UAAU,CAAC,CAAC;gCAGhD,gBAAgB,GAAkC,EAAE;gCACpD,QAAQ,GAAmB,IAAIO,iBAAc,EAAE;gCAC/C,UAAU,GAAmB,IAAIC,iBAAc,EAAE;gCAEjD,UAAU,GAAkB,IAAIC,gBAAa,CAAC,KAAK,CAAC;;;;gCAEtD,IAAI,UAAU,IAAIC,iBAAc,CAAC,GAAG,EAAE;oCAChC,eAAe,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;oCAEjD,eAAe,CAAC,OAAO;;;uCAAC,UAAA,IAAI;;4CACtB,OAAO,GAAG,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC;wCAC/C,OAAO,CAAC,OAAO;;;;2CAAC,UAAC,GAAG,EAAE,GAAG;4CACvB,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;gDACzB,gBAAgB,CAAC,IAAI,CAAC,IAAIC,yBAAsB,CAAC,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;6CACnF;yCACF,EAAC,CAAC;qCACJ,EAAC,CAAC;oCACH,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC;iCACtC;gCAED,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;gCAClD,QAAQ,CAAC,QAAQ,GAAGN,WAAQ,CAAC,KAAK,CAAC;gCACnC,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM;;;mCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,IAAI,KAAI,CAAC,IAAI,GAAA,EAAC,CAAC,GAAG;;;mCAAC,UAAA,CAAC;oCACjF,OAAO,IAAIO,qBAAkB,CAACX,kBAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;iCACtF,EAAC,CAAC;gCACH,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;gCAElC,UAAU,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;gCAC1C,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;gCACnC,UAAU,CAAC,gBAAgB,GAAG,QAAQ,CAAC;gCACvC,UAAU,CAAC,aAAa,GAAG,aAAa,GAAGY,QAAK,CAAC,GAAG,GAAGA,QAAK,CAAC,EAAE,CAAC;gCAChE,UAAU,CAAC,UAAU,GAAG,EAAE,CAAC;gCAE3B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gCAEtC,WAAW,GAAG,IAAIC,iBAAc,CAAC,UAAU,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC;gCAC9D,qBAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAA;;gCAA/C,IAAI,GAAG,SAAwC;qCAC/C,IAAI,CAAC,SAAS;oCAAd,wBAAc;gCAChB,qBAAM,IAAI,CAAC,aAAa,EAAE,EAAA;;gCAA1B,SAA0B,CAAC;gCAC3B,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;;oCAE5B,MAAM,oBAAoB,CAAC;;;;gCAI7B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIZ,WAAQ,CAAC,QAAQ,EAAE,kBAAkB,GAAG,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gCAC1F,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC;;;gCAG/B,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;gCAE7C,sBAAO,UAAU,EAAC;;;;aACnB;;;;;;;;QAKM,0CAAa;;;;;;YAApB;;gBAAA,iBAgBC;gBAbC,OAAOf,eAAU,CAAC,MAAM;;;mBAAC,UAAA,QAAQ;;wBAC3B,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC;oBACxD,oBAAmB,UAAU,IAAE,WAAW,CAAC,aAAa,CAAC,CAAC;oBAC1D,IAAI;wBACF,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI;;;2BAAC,UAAA,KAAK;4BACzD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC,CAAA;4BAChF,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;4BAClE,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACrB,EAAC,CAAC;qBACJ;oBAAC,OAAO,KAAK,EAAE;wBACd,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIe,WAAQ,CAAC,QAAQ,EAAE,qBAAqB,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC9F;iBACF,EAAC,CAAC;aACJ;;;;;;QAIM,6CAAgB;;;;;YAAvB;gBACE,OAAOF,SAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;aACvC;;;;;QAEa,8CAAiB;;;;YAA/B;;;;;;gCAGM,WAAW,GAAiC,EAAE;;;;gCAI5C,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,2BAA2B,CAAC;gCACjE,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,0BAA0B,CAAC;gCAE/B,qBAAM,OAAO,CAAC,GAAG,CAAC;wCACpD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;wCACjD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE;qCACjD,CAAC,EAAA;;gCAHF,yCAGE,EAHD,uBAAe,EAAE,sBAAc,CAG7B;;gCAGC,cAAc,GAAG,IAAI,GAAG,EAAe;gCACvC,kBAAgB,IAAI,GAAG,EAAe;gCAC1C,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;oCACvE,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;oCAC7D,eAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;oCAE3D,WAAW,GAAG,EAAE,CAAC;oCACjB,cAAc,CAAC,OAAO;;;;uCAAC,UAAC,IAAI,EAAE,GAAG;;4CAC3B,UAAU,GAAG,IAAI,qBAAqB,EAAE;wCAC5C,UAAU,CAAC,QAAQ,GAAG,GAAG,CAAC;wCAC1B,UAAU,CAAC,SAAS,GAAG,eAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;wCACxD,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAIa,QAAK,CAAC,GAAG,CAAC;wCAC3D,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAIA,QAAK,CAAC,GAAG,CAAC;wCACvD,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;wCAC9C,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;wCAC9C,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qCAC9B,EAAC,CAAC;iCACJ;;;;gCAED,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIX,WAAQ,CAAC,QAAQ,EAAE,wBAAwB,GAAG,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;;gCAGlG,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,WAAW,CAAC,CAAC;gCACzD,sBAAO,WAAW,EAAC;;;;aACpB;;;;;;QAEO,0CAAa;;;;;YAArB,UAAsB,QAAQ;gBAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;oBAC9B,GAAG,GAAG,IAAI,GAAG,EAAe;gBAChC,IAAI,QAAQ,IAAI,IAAI,EAAE;oBACpB,QAAQ,CAAC,OAAO;;;uBAAC,UAAA,IAAI;wBACnB,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;4BAC9B,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;yBAC9B;qBACF,EAAC,CAAC;iBACJ;gBACD,OAAO,GAAG,CAAC;aACZ;;;;;;;;;;;QAOM,4CAAe;;;;;;;;;YAAtB,UAAuB,eAAgC,EAAE,QAAqB,EAAE,OAAoB;gBAA3C,yBAAA;oBAAA,YAAoB,CAAC;;gBAAE,wBAAA;oBAAA,YAAoB;;gBAClG,IAAIE,cAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAChC,OAAOJ,SAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC;iBACpE;qBAAM;oBACL,OAAOA,SAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,eAAe,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;iBACjF;aACF;;;;;;;QAEa,kDAAqB;;;;;;YAAnC,UAAoC,eAAgC,EAAE,IAAiB;gBAAjB,qBAAA;oBAAA,QAAgB,CAAC;;;;;;;gCAEjF,aAAa,GAAwB,IAAI,mBAAmB,CAAC,IAAI,CAAC;;;;gCAEpD,qBAAM,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,IAAI,CAAC,EAAA;;gCAAjE,aAAa,GAAG,SAAiD,CAAC;gCAClE,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;sCAC9E,aAAa,IAAI,IAAI,CAAA;oCAArB,wBAAqB;gCACF,qBAAM,IAAI,CAAC,wBAAwB,CAAC,eAAe,EAAE,IAAI,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,qBAAqB,CAAC,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,4BAA4B,CAAC,CAAC,EAAA;;gCAA1L,cAAc,GAAG,SAAyK;gCAC9L,IAAI,cAAc,IAAI,IAAI,EAAE;oCAC1B,aAAa,CAAC,KAAK,GAAG,cAAc,CAAC;oCACrC,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;iCAC5H;qCAAM;oCACL,MAAM,gCAAgC,CAAC;iCACxC;gCACG,aAAa,GAA8B,IAAI,yBAAyB,EAAE;sCAC1E,eAAe,IAAIC,kBAAe,CAAC,QAAQ,CAAA;oCAA3C,wBAA2C;gCACzC,OAAO,GAAW,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG;gCACjF,YAAY,GAAW,aAAa,CAAC,KAAK,CAAC,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI;gCACrH,YAAY,GAAW,aAAa,CAAC,KAAK,CAAC,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,YAAY,GAAG,aAAa,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE;gCACrJ,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,OAAO,EAAE,aAAa,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;;;sCACvG,eAAe,IAAIA,kBAAe,CAAC,IAAI,CAAA;oCAAvC,wBAAuC;gCACH,qBAAM,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAA;;gCAA3F,kBAAkB,GAAuB,SAAkD;gCAE/F,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,MAAM,EAAE;oCAClE,kBAAkB,GAAG,kBAAkB,CAAC,kBAAkB;oCAC9D,OAAO,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC;oCACzE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,MAAM,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oCAE9E,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;oCAC5C,aAAa,CAAC,YAAY,GAAG,kBAAkB,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,MAAM,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oCAC9F,aAAa,CAAC,WAAW,GAAG,kBAAkB,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,KAAK,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oCAC5F,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,UAAU,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;oCACtH,aAAa,CAAC,eAAe,GAAG,kBAAkB,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,aAAa,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oCACzG,aAAa,CAAC,cAAc,GAAG,kBAAkB,CAAC,cAAc,CAAC;iCAClE;qCAAM;oCACL,MAAM,2BAA2B,CAAC;iCACnC;gCACD,aAAa,CAAC,UAAU,GAAG,aAAa,CAAC;;;oCAG3C,MAAM,kCAAkC,GAAG,aAAa,CAAA;;gCAG1D,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;gCACtD,IAAI,IAAI,CAAC,eAAe,EAAE;oCACxB,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;iCACvE;;;;gCAGD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIC,WAAQ,CAAC,QAAQ,EAAE,4BAA4B,GAAG,OAAK,CAAC,CAAC,CAAC;;;gCAG9F,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;gCACjG,sBAAO,aAAa,EAAC;;;;aACtB;;;;;;;;QAEa,sDAAyB;;;;;;;YAAvC,UAAwC,eAAgC,EAAE,QAAqB,EAAE,OAAoB;gBAA3C,yBAAA;oBAAA,YAAoB,CAAC;;gBAAE,wBAAA;oBAAA,YAAoB;;;;;;;gCAEnH,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,eAAe,EAAE,aAAa,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;gCAO/F,mBAAmB,GAAQ,EAAE;gCAE7B,UAAU,GAA0B,IAAI,qBAAqB,EAAE;gCAC/D,UAAU,GAA0B,IAAI,qBAAqB,EAAE;gCAC/D,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAChD,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAChD,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAChD,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAChD,KAAK,GAAqB,IAAI,gBAAgB,EAAE;gCAChD,UAAU,GAA8B,IAAI,yBAAyB,EAAE;gCAE3E,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;gCAC/B,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;gCAC3B,WAAW,GAAwB,IAAI,mBAAmB,CAAC,QAAQ,CAAC;;;;gCAGlE,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC;gCAClD,oBAAa,UAAU,IAAE,UAAU,CAAC,OAAO,CAAC,CAAC;gCACzC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC;gCAC9D,oBAAmB,gBAAgB,IAAE,UAAU,CAAC,OAAO,CAAC,CAAC;gCAEtB,qBAAM,OAAO,CAAC,GAAG,CAAC;wCACnD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE;wCAChD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE;qCACvD,CAAC,EAAA;;gCAHF,yCAGE,EAHD,mBAAW,EAAE,yBAAiB,CAG5B;gCAEH,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,WAAW,CAAC,CAAC;gCAClE,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE,iBAAiB,CAAC,CAAC;gCAE1E,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC;gCAC/C,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,cAAc,CAAC;gCAEpE,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;gCAC/B,aAAa,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC;sCAC3C,OAAO,IAAI,SAAS,IAAI,aAAa,IAAI,SAAS,CAAA;oCAAlD,wBAAkD;gCACpD,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC;gCACnD,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;gCAE7C,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,cAAc,CAAC,CAAC;gCACxE,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,UAAU,CAAC,CAAC;gCAEhE,UAAU,CAAC,OAAO;;;mCAAC,UAAA,SAAS;oCAC1B,mBAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC;iCAC3D,EAAC,CAAC;gCAEC,mBAAmB,GAAG,aAAa,CAAC,mBAAmB;gCACvD,0BAA0B,GAAG,aAAa,CAAC,0BAA0B;gCACjE,qBAAM,IAAI,CAAC,4BAA4B,CAAC,eAAe,EAAE,QAAQ,EAAE,mBAAmB,EAAE,0BAA0B,EAAE,OAAO,CAAC,EAAA;;gCAApI,KAAK,GAAG,SAA4H,CAAC;gCACrI,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;gCAClE,aAAa,GAAW,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,0BAA0B,EAAE,KAAK,CAAC,SAAS,CAAC;gCAE3G,UAAU,CAAC,wBAAwB,GAAG,aAAa,CAAC,wBAAwB,CAAC;gCAC7E,UAAU,CAAC,sBAAsB,GAAG,aAAa,CAAC,sBAAsB,CAAC;gCACzE,UAAU,CAAC,0BAA0B,GAAG,aAAa,CAAC,0BAA0B,CAAC;gCACjF,UAAU,CAAC,sBAAsB,GAAG,aAAa,CAAC,sBAAsB,CAAC;gCACzE,UAAU,CAAC,gBAAgB,GAAG,aAAa,CAAC,gBAAgB,CAAC;gCAC7D,UAAU,CAAC,0BAA0B,GAAG,aAAa,CAAC,0BAA0B,CAAC;gCACjF,UAAU,CAAC,mBAAmB,GAAG,aAAa,CAAC,mBAAmB,CAAC;gCACnE,UAAU,CAAC,YAAY,GAAG,aAAa,CAAC,YAAY,CAAC;gCACrD,UAAU,CAAC,0BAA0B,GAAG,aAAa,CAAC,0BAA0B,CAAC;gCACjF,IAAI,IAAI,CAAC,mBAAmB,EAAE;oCACxB,iBAAiB,GAAkB,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;oCACtH,UAAU,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;iCAC5C;gCAGD,UAAU,CAAC,yBAAyB,GAAG,cAAc,CAAC,yBAAyB,CAAC;gCAChF,UAAU,CAAC,oBAAoB,GAAG,cAAc,CAAC,oBAAoB,CAAC;gCACtE,UAAU,CAAC,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC;gCACtD,UAAU,CAAC,aAAa,GAAG,cAAc,CAAC,MAAM,CAAC;gCACjD,IAAI,IAAI,CAAC,oBAAoB,EAAE;oCACzB,kBAAkB,GAAkB,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;oCACzH,UAAU,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;iCAC7C;sCAEG,eAAe,IAAID,kBAAe,CAAC,QAAQ,CAAA;oCAA3C,wBAA2C;gCAC7C,KAAK,CAAC,IAAI,GAAG,mBAAmB,CAAC,WAAW,CAAC;gCAC7C,KAAK,CAAC,gBAAgB,GAAG,mBAAmB,CAAC,iBAAiB,CAAC;gCAC/D,KAAK,CAAC,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC;gCACtC,KAAK,CAAC,aAAa,GAAG,mBAAmB,CAAC,cAAc,CAAC;gCACzD,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC;gCAC7B,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,mBAAmB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;gCAExG,KAAK,CAAC,OAAO,GAAG,mBAAmB,CAAC,aAAa,CAAC;gCAE9C,OAAO,GAAG,mBAAmB,CAAC,aAAa;gCAC3C,YAAY,GAAG,mBAAmB,CAAC,aAAa,GAAG,mBAAmB,CAAC,aAAa,GAAG,mBAAmB,CAAC,WAAW;gCACtH,YAAY,GAAG,mBAAmB,CAAC,aAAa,GAAG,mBAAmB,CAAC,aAAa,GAAG,aAAa,CAAC,gBAAgB;gCACzH,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;gCAEpF,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;gCACpC,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;gCACpC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;gCAC1B,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;gCAC1B,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;gCAC1B,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;;;gCAG1B,KAAK,CAAC,QAAQ,GAAG,mBAAmB,CAAC,SAAS,CAAC;gCAC/C,KAAK,CAAC,OAAO,GAAG,mBAAmB,CAAC,QAAQ,CAAC;gCAC7C,KAAK,CAAC,QAAQ,GAAG,mBAAmB,CAAC,aAAa,CAAC;gCACnD,KAAK,CAAC,WAAW,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;gCAErC,qBAAM,IAAI,CAAC,8BAA8B,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAA;;gCAA5E,aAAa,GAAG,SAA4D;gCAEhF,IAAI,aAAa,IAAI,IAAI,EAAE;oCACrB,YAAY,GAAG,aAAa,CAAC,kBAAkB;oCACnD,UAAU,CAAC,YAAY,GAAG,YAAY,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,MAAM,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oCACrF,UAAU,CAAC,WAAW,GAAG,YAAY,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,KAAK,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAA;oCAClF,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,UAAU,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;oCAC7G,UAAU,CAAC,eAAe,GAAG,YAAY,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAI,aAAa,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oCAChG,UAAU,CAAC,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC;iCAC1D;qCAAM;oCACL,MAAM,sBAAsB,CAAA;iCAC7B;gCACD,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;gCACpC,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;gCACpC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;gCAC1B,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;;;gCAI1B,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;;;gCAGxC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;gCAClD,IAAI,IAAI,CAAC,eAAe,EAAE;oCACxB,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;iCACnE;;;;gCAED,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIC,WAAQ,CAAC,QAAQ,EAAE,gCAAgC,GAAG,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;;gCAG1G,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gCAC3G,sBAAO,WAAW,EAAC;;;;aACpB;;;;;;;;;;;;;QAOM,+CAAkB;;;;;;;;;;;YAAzB,UAA0B,eAAgC,EAAE,QAAgB,EAAE,mBAAgC,EAAE,0BAAuC,EAAE,OAAoB;gBAA/F,oCAAA;oBAAA,wBAAgC;;gBAAE,2CAAA;oBAAA,+BAAuC;;gBAAE,wBAAA;oBAAA,YAAoB;;gBAC3K,IAAIE,cAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAChC,OAAOJ,SAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,eAAe,EAAE,QAAQ,EAAE,mBAAmB,EAAE,0BAA0B,CAAC,CAAC,CAAC;iBACxH;qBAAM;oBACL,OAAOA,SAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,eAAe,EAAE,QAAQ,EAAE,mBAAmB,EAAE,0BAA0B,EAAE,OAAO,CAAC,CAAC,CAAC;iBACrI;aACF;;;;;;;;;;QAEa,yDAA4B;;;;;;;;;YAA1C,UAA2C,eAAuB,EAAE,QAAgB,EAAE,mBAA2B,EAAE,0BAAkC,EAAE,OAAe;;;;;;;gCAIhK,WAAW,GAAqB,IAAI,gBAAgB,EAAE;gCACtD,mBAAmB,GAA+B,EAAE;;;;gCAGlD,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC;gCAC9C,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC;gCACtD,oBAAa,UAAU,IAAE,UAAU,CAAC,OAAO,CAAC,CAAC;gCAC7C,oBAAe,YAAY,IAAE,UAAU,CAAC,OAAO,CAAC,CAAC;gCAExB,qBAAM,OAAO,CAAC,GAAG,CAAC;wCACzC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE;wCAChD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE;qCACnD,CAAC,EAAA;;gCAHF,yCAGE,EAHD,gBAAQ,EAAE,kBAAU,CAGlB;gCAEH,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;gCAClC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gCAElC,gBAAc,IAAI,GAAG,EAAkB;gCACvC,eAAa,IAAI,GAAG,EAAkB;gCACtC,UAAU,GAAe,EAAE;gCAE/B,IAAI,QAAQ,CAAC,KAAK,IAAI,IAAI,IAAI,UAAU,CAAC,MAAM,IAAI,IAAI,EAAE;oCACvD,QAAQ,CAAC,KAAK,CAAC,OAAO;;;uCAAC,UAAA,IAAI;wCACzB,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,EAAE;4CAC7D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO;;;+CAAC,UAAA,IAAI;gDAC/B,IAAI,IAAI,CAAC,eAAe,IAAI,eAAe,EAAE;oDAC3C,aAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;iDACpD;6CACF,EAAC,CAAC;yCACJ;qCACF,EAAC,CAAC;oCAEH,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM;;;uCAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,QAAQ,IAAI,QAAQ,GAAA,EAAC,CAAC,GAAG;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,GAAA,EAAC,CAAC;oCAChG,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;oCACtC,UAAU,CAAC,OAAO;;;uCAAC,UAAA,MAAM;wCACvB,MAAM,CAAC,OAAO;;;2CAAC,UAAA,KAAK;4CAClB,IAAI,KAAK,CAAC,QAAQ,IAAI,MAAM,IAAI,KAAK,CAAC,eAAe,IAAI,eAAe,EAAE;gDACxE,YAAU,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;6CACrD;yCACF,EAAC,CAAC;qCACJ,EAAC,CAAC;iCACJ;qCAAM;oCACL,MAAM,0BAA0B,GAAG,QAAQ,CAAC;iCAC7C;gCAED,KAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,mBAAmB,EAAE,CAAC,EAAE,EAAE;oCAC7C,mBAAmB,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAC9C,CAAC,EACD,IAAI,CAAC,YAAY,CAAC,aAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACrC,YAAU,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,0BAA0B,GAAG,IAAI,CAAC,IAAI,GAAG,YAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iCACjG;gCACD,WAAW,CAAC,SAAS,GAAG,mBAAmB,CAAC;gCAC5C,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,0BAA0B,EAAE,mBAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC;gCACtG,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,EAAE,mBAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC;gCAC1G,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;;;;gCAE7B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIE,WAAQ,CAAC,QAAQ,EAAE,mCAAmC,GAAG,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;;gCAG7G,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,WAAW,CAAC,CAAC;gCAC/D,sBAAO,WAAW,EAAC;;;;aACpB;;;;;;;;;QAEa,qDAAwB;;;;;;;;YAAtC,UAAuC,eAAuB,EAAE,QAAgB,EAAE,mBAA2B,EAAE,0BAAkC;;;;;;gCAE/I,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,eAAe,EAAE,UAAU,EAAE,QAAQ,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,4BAA4B,EAAE,0BAA0B,CAAC,CAAA;gCAChM,UAAU,GAAqB,IAAI,gBAAgB,EAAE;gCACrD,mBAAmB,GAA+B,EAAE;;;;gCAElD,UAAU,SAAA;gCAAE,YAAY,SAAA;;gCAExB,iBAAyB,KAAK,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;gCACtE,eAAuB,KAAK,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;gCACpE,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,oBAAoB,CAAC;gCACvD,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,2BAA2B,CAAC;gCAChE,oBAAwB,QAAQ,IAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;gCACxD,oBAA0B,MAAM,IAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;gCAE3B,qBAAM,OAAO,CAAC,GAAG,CAAC;wCAC7C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE;wCAC9C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE;qCAC7C,CAAC,EAAA;;gCAHF,yCAGE,EAHD,oBAAY,EAAE,kBAAU,CAGtB;gCACH,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;gCAC1C,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;gCAEtC,IAAI,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;oCAChE,YAAY,CAAC,MAAM,CAAC,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,eAAe,IAAI,eAAe,GAAA,EAAC,CAAC,GAAG;;;uCAAC,UAAA,CAAC;wCAC1E,cAAY,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;qCAChD,EAAC,CAAC;oCACH,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,eAAe,IAAI,eAAe,IAAI,CAAC,CAAC,QAAQ,IAAI,MAAM,IAAI,CAAC,CAAC,KAAK,IAAI,0BAA0B,GAAA,EAAC,CAAC,GAAG;;;uCAAC,UAAA,CAAC;wCACzI,YAAU,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;qCAC9C,EAAC,CAAC;iCACJ;qCAAM;oCACL,MAAM,oCAAoC,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,GAAG,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC;iCAC9G;gCACD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,cAAY,CAAC,CAAC;gCAC1C,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,YAAU,CAAC,CAAC;gCAEtC,KAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,mBAAmB,EAAE,CAAC,EAAE,EAAE;oCAC7C,mBAAmB,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAC9C,CAAC,EACD,cAAY,CAAC,CAAC,GAAG,CAAC,CAAC,EACnB,YAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iCACvB;gCACD,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC;gCAC3C,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,0BAA0B,EAAE,mBAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC;gCACrG,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,EAAE,mBAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC;gCACzG,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;;;;gCAE5B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIA,WAAQ,CAAC,QAAQ,EAAE,+BAA+B,GAAG,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;;gCAEzG,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,UAAU,CAAC,CAAC;gCAC/D,sBAAO,UAAU,EAAC;;;;aACnB;;;;;;;;;;QAMM,kDAAqB;;;;;;;;YAA5B,UAA6B,QAAgB,EAAE,OAAoB;gBAApB,wBAAA;oBAAA,YAAoB;;gBACjE,IAAI,OAAO,IAAI,EAAE,EAAE;oBACjB,OAAOF,SAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACxD;qBAAM,IAAI,OAAO,IAAI,EAAE,EAAE;oBACxB,OAAOA,SAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;iBACrE;aACF;;;;;;QAEa,uDAA0B;;;;;YAAxC,UAAyC,QAAgB;;;;;;;gCACvD,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,QAAQ,CAAC,CAAC;gCAEzD,UAAU,GAAuB,IAAI,kBAAkB,EAAE;;;;;gCAOvD,oBAAoB,sBAA+C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAA;gCAC9G,oBAAoB,uBAAgD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAC;gCACpH,oBAAoB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gCACvC,oBAAoB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gCAET,qBAAM,OAAO,CAAC,GAAG,CACjD,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAAC,GAAG;;;2CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,GAAA,EAAC,CAAC,EAAA;;gCADrG,yCACqG,EADpG,qBAAa,EAAE,sBAAc,CACwE;gCACtG,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,aAAa,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;gCAEhF,IAAI,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;oCACjE,wBAAwB,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,MAAM;;;uCAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,KAAK,gBAAgB,GAAA,EAAC;oCAC9F,cAAc,GAAW,wBAAwB,CAAC,MAAM,GAAG,CAAC,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,EAAE;oCAExG,UAAU,GAA8B,EAAE;oCAC1C,kBAAkB,GAAG,cAAc,CAAC,MAAM,CAAC;oCAC/C,OAAO,CAAC,GAAG,CAAC,+CAA+C,EAAE,kBAAkB,CAAC,CAAC;oCACjF,IAAI,kBAAkB,EAAE;wCACtB,UAAU,GAAG,oBAAa,kBAAkB,IAAE,GAAG;;;2CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAA,EAAC,CAAC;qCACpG;yCAAM;wCACL,MAAM,8BAA8B,CAAA;qCACrC;oCACD,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,UAAU,CAAC,CAAC;oCAElE,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;oCAC/C,UAAU,CAAC,cAAc,GAAG,cAAc,CAAC;oCAC3C,UAAU,CAAC,kBAAkB,GAAG,UAAU,CAAC;iCAE5C;;;;gCAED,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIE,WAAQ,CAAC,QAAQ,EAAE,kCAAkC,GAAG,OAAK,CAAC,CAAC,CAAC;;;gCAGpG,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,UAAU,CAAC,CAAC;gCACjE,sBAAO,UAAU,EAAC;;;;aACnB;;;;;;QAEO,yDAA4B;;;;;YAApC,UAAqC,MAAW;;oBAC1C,kBAAkB,GAAuB,IAAI,kBAAkB,EAAE;gBACrE,kBAAkB,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC1C,kBAAkB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC9C,kBAAkB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC9C,kBAAkB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC9C,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACnE,OAAO,kBAAkB,CAAC;aAC3B;;;;;;;QAEa,2DAA8B;;;;;;YAA5C,UAA6C,QAAgB,EAAE,OAAe;;;;;;;gCAE5E,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gCACjF,UAAU,GAAuB,IAAI,kBAAkB,EAAE;gCACzD,QAAQ,GAA8B,EAAE;;;;gCAGtC,yCAAwD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,GAAC;gCACpG,kBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gCAChB,qBAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,kBAAgB,CAAC,CAAC,SAAS,EAAE,EAAA;;gCAA7E,cAAc,GAAG,SAA4D;gCAEjF,OAAO,CAAC,GAAG,CAAC,gDAAgD,EAAE,cAAc,CAAC,CAAC;gCAC9E,IAAI,cAAc,CAAC,WAAW,IAAI,IAAI,EAAE;oCAClC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC;oCAC9D,cAAc,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,cAAc;oCAC3D,kBAAkB,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM;oCAC3D,oBAAa,kBAAkB,IAAE,OAAO;;;uCAAC,UAAA,IAAI;wCAC3C,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;wCACjC,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;qCAC7B,EAAC,CAAC;oCAEH,QAAQ,GAAG,oBAAa,kBAAkB,IAAE,GAAG;;;uCAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAA,EAAC,CAAC;oCACjG,UAAU,CAAC,kBAAkB,GAAG,QAAQ,CAAC;oCACzC,UAAU,CAAC,cAAc,GAAG,cAAc,CAAC;iCAC5C;qCAAM;oCACL,MAAM,sCAAsC,GAAG,cAAc,CAAC;iCAC/D;;;;gCAGD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIA,WAAQ,CAAC,QAAQ,EAAE,sCAAsC,GAAG,QAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;;gCAGhH,OAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,UAAU,CAAC,CAAC;gCACtE,sBAAO,UAAU,EAAC;;;;aAEnB;;;;;QAGM,oDAAuB;;;;YAA9B,UAA+B,QAAgB;gBAD/C,iBAwBC;;oBArBK,sBAAsB,sBAAmD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAA;gBAC1H,sBAAsB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC7C,OAAOf,eAAU,CAAC,MAAM;;;mBAAC,UAAA,QAAQ;oBAC/B,IAAI;wBACF,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,SAAS;;;2BAAC,UAAA,IAAI;4BAC7D,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;;oCACZ,UAAU,GAA4B,EAAE;;gCAE5C,UAAU,GAAG,oBAAa,IAAI,CAAC,MAAM,CAAC,IAAE,GAAG;;;mCAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,GAAA,EAAC,CAAC;gCAC3F,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,UAAU,CAAC,CAAC;gCACnD,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gCAC1B,QAAQ,CAAC,QAAQ,EAAE,CAAC;6BACrB;iCACI;gCACH,MAAM,qCAAqC,GAAG,IAAI,CAAC;6BACpD;yBACF,EAAC,CAAC;qBACJ;oBAAC,OAAO,KAAK,EAAE;wBACd,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIe,WAAQ,CAAC,QAAQ,EAAE,+BAA+B,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;qBACxG;iBACF,EAAC,CAAC;aACJ;;;;;;QAEO,uDAA0B;;;;;YAAlC,UAAmC,MAAW;;oBACxC,gBAAgB,GAAG,IAAI,gBAAgB,EAAE;gBAE7C,gBAAgB,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC1C,gBAAgB,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAC9C,gBAAgB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC5C,gBAAgB,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBAChD,gBAAgB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC5C,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC3D,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACjE,gBAAgB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC5C,gBAAgB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC5C,gBAAgB,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBACxD,gBAAgB,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAC9C,gBAAgB,CAAC,SAAS,GAAG,gBAAgB,CAAC,SAAS,IAAI,GAAG,GAAG,MAAM,GAAG,SAAS,CAAC;gBACpF,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC/D,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACvD,gBAAgB,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAC9C,gBAAgB,CAAC,QAAQ,GAAG,gBAAgB,CAAC,SAAS,KAAK,GAAG,CAAC;gBAC/D,gBAAgB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC5C,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACjE,gBAAgB,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBACxC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC7D,gBAAgB,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBAElD,OAAO,gBAAgB,CAAC;aAEzB;;;;;QAGY,4CAAe;;;;YAA5B,UAA6B,QAAgB;;;;;;gCAGvC,wBAAwB,sBAA6D,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,0BAA0B,CAAC,EAAA;gCAC3I,wBAAwB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gCAC3C,yBAAyB,sBAAyD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,wBAAwB,CAAC,EAAA;gCACtI,yBAAyB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;;;;gCAE1C,cAAc,SAAA;gCACd,gBAAgB,SAAA;gCAEiB,qBAAM,OAAO,CAAC,GAAG,CAAC;wCACrD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,SAAS,EAAE;wCAC9D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC,SAAS,EAAE;qCAChE,CAAC,EAAA;;gCAHF,yCAGE,EAHD,sBAAc,EAAE,wBAAgB,CAG/B;gCAEF,IAAI,gBAAgB,IAAI,cAAc,EAAE;oCAClC,gBAAgB,GAAe,gBAAgB,CAAC,MAAM,CAAC;oCACvD,kBAAkB,GAAe,cAAc,CAAC,MAAM,CAAC;oCAE3D,4BAA4B,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,gCAAgC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,sBAAsB,CAAC,QAAQ,CAAC,CAAC;oCAC/J,4BAA4B,CAAC,kBAAkB,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;oCAC7F,4BAA4B,CAAC,cAAc,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;oCAEtF,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,4BAA4B,CAAC,CAAC;iCACpE;qCAAM;oCACL,MAAM,uCAAuC,CAAC;iCAC/C;gCAED,sBAAO,4BAA4B,EAAC;;;gCAGpC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIA,WAAQ,CAAC,QAAQ,EAAE,uBAAuB,GAAG,QAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;;;;;aAGlG;;;;;;QAEO,6DAAgC;;;;;YAAxC,UAAyC,MAAW;;oBAE9C,YAAY,GAA2B,IAAI,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC;gBAEtF,YAAY,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;gBACzC,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC3C,YAAY,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;gBACvC,YAAY,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;gBACvC,YAAY,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;gBACvC,YAAY,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;;oBACnC,sBAAsB,GAAGC,cAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC;gBAChH,YAAY,CAAC,gBAAgB,GAAG,sBAAsB,CAAC;gBACvD,OAAO,YAAY,CAAC;aACrB;;;;;QAEM,kDAAqB;;;;YAA5B,UAA6B,YAAoC;gBAC/D,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,MAAM;;;;mBAAC,UAAC,KAAK,EAAE,IAAI;;wBACzF,OAAO,GAAGA,cAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;oBAC3D,OAAO,KAAK,GAAG,OAAO,CAAC;iBACxB,GAAE,CAAC,CAAC,CAAC;aACP;;;;;;QAEM,6CAAgB;;;;;YAAvB,UAAwB,mBAA2B,EAAE,mBAA2B;gBAAhF,iBAeC;;oBAbK,yBAAyB,sBAAyD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,wBAAwB,CAAC,EAAA;gBACtI,yBAAyB,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;gBACtE,yBAAyB,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;gBACtE,OAAOhB,eAAU,CAAC,MAAM;;;mBAAC,UAAA,QAAQ;oBAC/B,IAAI;wBACF,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC,SAAS;;;2BAAC,UAAA,IAAI;4BAChE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;4BAC9B,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACrB,EAAC,CAAC;qBACJ;oBAAC,OAAO,KAAK,EAAE;wBACd,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIe,WAAQ,CAAC,QAAQ,EAAE,wBAAwB,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;qBACjG;iBACF,EAAC,CAAC;aACJ;;;;;;;;;;QAMM,wCAAW;;;;;;;;YAAlB,UAAmB,CAAS,EAAE,KAAa;;oBACrC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC;;oBAC3B,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK;gBAC1D,OAAO,UAAU,CAAC;aACnB;;;;;;QAEM,kCAAK;;;;;YAAZ,UAAa,GAAG,EAAE,SAAc;gBAAd,0BAAA;oBAAA,cAAc;;gBAC9B,OAAO,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;aAC3C;;;;;;QAEM,sDAAyB;;;;;YAAhC,UAAiC,IAAS,EAAE,MAAW;gBACrD,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;;oBACpE,cAAc,GAAGC,cAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;gBACtE,IAAI,CAACA,cAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBAC/B,OAAO,IAAI,CAAC,IAAI,CAAC;iBAClB;qBAAM;;wBACD,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,cAAc;oBAClF,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;iBAC1B;aACF;;;;;;QAEM,iDAAoB;;;;;YAA3B,UAA4B,YAAiB,EAAE,MAAW;gBACxD,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;;oBACpF,cAAc,GAAGA,cAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;gBACtE,IAAI,CAACA,cAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;oBACvC,OAAO,IAAI,CAAC,IAAI,CAAC;iBAClB;qBAAM;oBACL,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,cAAc,EAAE,QAAQ,EAAE,CAAC;iBAC3D;aACF;QAKD,sBAAW,iDAAiB;;;gBAA5B;gBACE,OAAO,IAAI,CAAC,QAAQ,CAAC;aACtB;;;;gBAED,UAA6B,OAAgB;gBAC3C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;aACzB;;;WAJA;;;;;;QAMM,uDAA0B;;;;;YAAjC,UAAkC,IAAgC,EAAE,WAAmB;gBACrF,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;gBAC9D,OAAO,IAAI,CAAC,GAAG;;;;mBAAC,UAAC,CAAC,EAAE,KAAK,IAAK,QAAC,KAAK,GAAG,CAAC,GAAG,WAAW,IAAI,KAAK,GAAG,CAAC,KAAK,WAAW,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAC,EAAC,CAAC;aAC3G;;;;;;QAEM,iDAAoB;;;;;YAA3B,UAA4B,IAAI,EAAE,IAAI;gBACpC,IAAIC,cAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;oBAClD,OAAO,IAAI,CAAC,IAAI,CAAC;iBAClB;qBAAM;oBACL,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;iBACpE;aACF;;;;;;QAEM,iDAAoB;;;;;YAA3B,UAA4B,GAAG,EAAE,IAAI;gBACnC,IAAIA,cAAW,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;oBAChD,OAAO,IAAI,CAAC,IAAI,CAAC;iBAClB;qBAAM;oBACL,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;iBACnE;aACF;;;;;;;;QAMY,0CAAa;;;;;;YAA1B;;;;;gCACE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gCAClD,qBAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,EAAA;;gCAA/D,SAA+D,CAAC;gCAChE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;;;;aACrD;;;;QAEY,2CAAc;;;YAA3B;;;wBACE,sBAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,EAAC;;;aAC7D;;;;QAEY,2CAAc;;;YAA3B;;;wBACE,sBAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,EAAC;;;aAC7D;;;;;QAGY,4CAAe;;;;YAA5B,UAA6B,WAAwB;;;wBACnD,sBAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAC;;;aAC3C;;;;;QAEM,yCAAY;;;;YAAnB,UAAoB,KAAU;gBAC5B,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;aACxF;;;;;;;;QAGa,6CAAgB;;;;;;;YAA9B,UAA+B,WAAwB;;;;;;gCACjD,UAAU,GAAkB,IAAIK,gBAAa,CAAC,KAAK,CAAC;gCACpD,eAAe,GAAG;oCACpB,SAAS,EAAE,WAAW,CAAC,OAAO;oCAC9B,UAAU,EAAE,WAAW,CAAC,QAAQ;oCAChC,WAAW,EAAE,WAAW,CAAC,SAAS;oCAClC,SAAS,EAAE,WAAW,CAAC,OAAO;iCAC/B;;;;gCAEK,QAAQ,GAAG,eAAe;gCAC1B,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC;gCAC/D,oBAAqB,eAAe,IAAE,QAAQ,GAAG,QAAQ,CAAC;gCAC1D,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAC;gCACpC,qBAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,SAAS,EAAE,EAAA;;gCAArE,OAAO,GAAG,SAA2D;gCACzE,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;qCAC5B,OAAO,CAAC,OAAO;oCAAf,wBAAe;gCACjB,qBAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,EAAA;;gCAAtE,SAAsE,CAAC;gCACvE,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;;oCAE5B,MAAM,oBAAoB,CAAC;;;;gCAG7B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIP,WAAQ,CAAC,QAAQ,EAAE,uBAAuB,GAAG,QAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;;gCAEjG,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,UAAU,CAAC,CAAC;gCAC1D,sBAAO,UAAU,EAAC;;;;aAEnB;;;;;;QAEa,6CAAgB;;;;;YAA9B,UAA+B,WAA2B;;;;;;gCAEpD,UAAU,GAAkB,IAAIO,gBAAa,CAAC,KAAK,CAAC;;;;gCAGtD,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,WAAW,CAAC,CAAC;gCACxD,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,qBAAqB,CAAC;gCACvE,oBAAyB,mBAAmB,IAAE,QAAQ,GAAG,WAAW,CAAC;gCACvD,qBAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,SAAS,EAAE,EAAA;;gCAAzE,OAAO,GAAG,SAA+D;gCAE7E,IAAI,OAAO,CAAC,OAAO,EAAE;oCACnB,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;iCAC7B;qCAAM;oCACL,MAAM,mBAAmB,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;iCAChD;;;;gCAGD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIP,WAAQ,CAAC,QAAQ,EAAE,QAAK,CAAC,CAAC,CAAC;;oCAE/D,sBAAO,UAAU,EAAC;;;;aACnB;;;;;;QAEO,8CAAiB;;;;;YAAzB,UAA0B,QAA6B;gBAAvD,iBAUC;gBATC,IAAI,CAAC,eAAe,CAAC,OAAO;;;;mBAAC,UAAC,IAAI,EAAE,GAAG;;wBACjC,YAAY,GAAuB,KAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,GAAG,CAAC;oBAC3E,IAAI,YAAY,CAAC,MAAM,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;;4BAC5D,QAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;wBAChC,YAAY,GAAG,YAAY,CAAC,MAAM;;;2BAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,EAAE,IAAI,QAAM,GAAA,EAAC,CAAC;wBAC/D,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,GAAG,KAAI,CAAC,IAAI,CAAC;qBACxF;iBACF,EAAC,CAAC;gBACH,OAAO,QAAQ,CAAC;aACjB;;oBAtxCFJ,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;wBAnCQiB,cAAW;wBAAEC,aAAU;wBAYvB,gBAAgB;wBAdcC,eAAY;wDAsD9CC,WAAQ,YACRC,SAAM,SAAC,oBAAoB;wDAE3BD,WAAQ,YACRC,SAAM,SAACC,+BAA4B;wDAEnCF,WAAQ,YACRC,SAAM,SAACE,gCAA6B;wBA3D+GC,kBAAe;wBAAuSC,qBAAkB;;;;QA8F9d/B;YADCgC,QAAK,CAAC,qBAAqB,CAAC;;;4CACsCrC,eAAU;2EAE5E;QAiLDK;YADCgC,QAAK,CAAC,kBAAkB,CAAC;;6DAC8C,qBAAqB;4CAA8B,gBAAgB;uEA+C1I;QAIDhC;YADCgC,QAAK,CAAC,kBAAkB,CAAC;;6CACkB,qBAAqB,UAA4B,KAAK;4CAAW,gBAAgB;0EAqC5H;QA4CDhC;YADCgC,QAAK,CAAC,eAAe,CAAC;;6DACyD,mBAAmB;4CAAGrC,eAAU;+DAE/G;QAwBDK;YADCgC,QAAK,CAAC,eAAe,CAAC;;;4CACwErC,eAAU;oEAiBxG;QAGDK;YADCgC,QAAK,CAAC,eAAe,CAAC;;8DAC2D,mBAAmB;4CAAGrC,eAAU;4DAEjH;QAmJDK;YADCgC,QAAK,CAAC,qBAAqB,CAAC;;;4CAC0ErC,eAAU;iEAMhH;QAiNDK;YADCgC,QAAK,CAAC,kBAAkB,CAAC;;;4CACsJrC,eAAU;oEAMzL;QAmODK;YADCgC,QAAK,CAAC,kBAAkB,CAAC;;;4CACwBrC,eAAU;yEAuB3D;QAgCDK;YADCgC,QAAK,CAAC,wBAAwB,CAAC;;;;iEAoC/B;QA+HDhC;YADCgC,QAAK,CAAC,eAAe,CAAC;;6CACmB,WAAW;;iEAEpD;iCArvCH;KAmCA;;;;;;ACnCA;QAiBI,0BACY,YAA0B,EAC1B,kBAAsC,EAGtC,eAAgC,EAGhC,SAA6B;YAP7B,iBAAY,GAAZ,YAAY,CAAc;YAC1B,uBAAkB,GAAlB,kBAAkB,CAAoB;YAGtC,oBAAe,GAAf,eAAe,CAAiB;YAGhC,cAAS,GAAT,SAAS,CAAoB;YAXjC,gBAAW,GAAkB,EAAE,CAAC;YAChC,kBAAa,GAAkB,EAAE,CAAC;YAYtC,IAAG,IAAI,CAAC,SAAS,EAAC;gBACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;gBACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;aAC1D;iBAAI;gBACD,IAAI,CAAC,WAAW,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,SAAS,EAAE,UAAU,EAAE,sBAAsB,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;gBAC1H,IAAI,CAAC,aAAa,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,sBAAsB,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;aAC3J;SACJ;;;;;;;;;;;;;QAGK,wCAAa;;;;;;;;;;;;YAApB,UAAqB,IAAY,EAAE,KAAa,EAAE,GAAW,EAAE,UAA+B,EAAE,QAAiB,EAAE,WAA8B,EAAE,WAA4B;gBAA5B,4BAAA;oBAAA,mBAA4B;;gBAE9K,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;gBACzH,IAAI;;wBACE,eAAe,SAAS;;wBACxB,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAIpB,cAAW,CAAC,OAAO,CAAC,GAAG,CAAC;;wBACpE,aAAa,GAAY,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAIA,cAAW,CAAC,OAAO,CAAC,GAAG,CAAC;;wBAC5F,cAAc,GAAY,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAACD,cAAW,CAAC,UAAU,CAAC,GAAG,CAAC;;wBAC/F,gBAAgB,GAAY,aAAa,IAAI,cAAc,IAAI,SAAS;;;wBAExE,gBAAgB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,eAAe,GAAG,KAAK,GAAG,WAAW;oBAC7F,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,gBAAgB,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;oBAExG,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;wBAChG,eAAe,GAAGA,cAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;wBAC7C,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,eAAe,EAAE,WAAW,CAAC,CAAC;qBACnF;oBAED,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;oBAClH,IAAI,CAAC,eAAe,IAAI,CAAC,gBAAgB,IAAI,CAAC,WAAW,EAAE;wBACzD,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;wBACtC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;4BAChC,UAAU,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU,CAAC,0BAA0B,EAAE,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;4BACpJ,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;4BAC1H,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;yBACnE;wBAED,IAAI,CAAC,QAAQ,EAAE;4BACb,QAAQ,KAAK;gCACX,KAAK,UAAU;oCACb,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,EAAE,UAAU,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;oCACtH,MAAM;gCACR,KAAK,sBAAsB;oCACzB,UAAU,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,EAAE,UAAU,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;oCAClI,MAAM;gCACR,KAAK,MAAM;oCACT,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;oCACvH,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,UAAU,CAAC,UAAU,EAAE,GAAG,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;oCACvH,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oCAChH,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;oCACpE,MAAM;gCACR,KAAK,SAAS;oCACZ,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;oCACpH,MAAM;6BACT;yBACF;6BAAM;;gCACD,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC;;gCAChF,0BAA0B,GAAGA,cAAW,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB,CAAC;4BAC1F,QAAQ,KAAK;gCACX,KAAK,MAAM;oCACT,UAAU,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oCACpH,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;oCAC9E,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,kBAAkB,EAAE,WAAW,EAAE,CAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC;oCAC3G,IAAI,CAAC,cAAc,IAAI,0BAA0B,EAAE;wCACjD,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB,EAAE,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;wCACrJ,UAAU,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU,CAAC,0BAA0B,EAAE,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;wCACpJ,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wCAChH,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;qCACnE;oCACD,MAAM;gCACR,KAAK,kBAAkB;oCACrB,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oCACnG,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;oCAClG,MAAM;gCACR,KAAK,SAAS;oCACZ,IAAI,CAAC,cAAc,IAAI,0BAA0B,EAAE;wCACjD,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB,EAAE,GAAG,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;qCACjI;oCACD,MAAM;gCACR,KAAK,UAAU;oCACb,UAAU,CAAC,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;;wCAC5H,kBAAkB,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC;;wCAChG,8BAA8B,GAAGA,cAAW,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,oBAAoB,CAAC;oCAClG,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;oCAC5I,UAAU,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,UAAU,CAAC,KAAK,CAAC,oBAAoB,EAAE,UAAU,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;oCACpK,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,kBAAkB,EAAE,WAAW,CAAC,CAAC;oCACvF,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,sBAAsB,EAAE,WAAW,EAAE,CAAC,8BAA8B,EAAE,WAAW,CAAC,CAAC;oCACnH,MAAM;gCACR,KAAK,sBAAsB;oCACzB,UAAU,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;oCAC/G,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;oCAC1G,MAAM;6BACT;yBACF;qBACF;iBACF;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAID,WAAQ,CAAC,QAAQ,EAAE,qBAAqB,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC9F;gBAED,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,WAAW,CAAC,CAAC;gBACtD,OAAO,WAAW,CAAC;aACpB;;;;;;;QAEM,oCAAS;;;;;;YAAhB,UAAiB,IAAY,EAAE,UAA+B,EAAE,QAAiB;gBAAjF,iBAkBC;gBAhBC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;;oBAEpF,WAAW,GAAG,EAAE;;oBAChB,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC3B,IAAI;oBACF,QAAQ,CAAC,OAAO;;;uBAAC,UAAA,OAAO;;wBAEtB,IAAI,IAAI,IAAI,OAAO,IAAI,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,SAAS,EAAE;4BACxG,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;yBAC9E;qBACF,EAAC,CAAC;iBAEJ;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAIA,WAAQ,CAAC,QAAQ,EAAE,iBAAiB,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC1F;gBACD,OAAO,WAAW,CAAC;aACpB;;;;;;;;QAEM,wCAAa;;;;;;;YAApB,UAAqB,IAAY,EAAE,UAA+B,EAAE,QAAiB,EAAE,WAAyB;gBAAhH,iBAgCC;;oBA9BK,UAAU,GAAG,IAAI,GAAG,EAAyB;;oBAE7C,SAAS,GAAG,CAAC,MAAM,EAAE,kBAAkB,EAAE,MAAM,EAAE,eAAe,CAAC;;oBACjE,SAAS,GAAG,CAAC,SAAS,CAAC;;oBACvB,SAAS,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,CAAC;gBAClE,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;gBAC7B,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;gBAC7B,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;gBAE7B,IAAI,IAAI,IAAI,CAAC,EAAE;;;wBAET,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,SAAS;;wBACtC,4BAA0B,GAAG,UAAU,CAAC,UAAU,CAAC,0BAA0B;oBACjF,SAAS,CAAC,MAAM;;;uBAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,GAAG,4BAA0B,GAAA,EAAC,CAAC,OAAO;;;uBAAC,UAAA,CAAC;wBACvE,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;qBACtG,EAAC,CAAC;oBACH,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;iBACnE;qBAAM;;oBAEL,IAAI,QAAQ,EAAE;wBACZ,SAAS,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;wBACvC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;qBACpC;;wBACG,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC;oBACnC,QAAQ,CAAC,OAAO;;;uBAAC,UAAA,GAAG;wBAClB,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;qBACtH,EAAC,CAAC;iBACJ;gBAED,OAAO,WAAW,CAAC;aACpB;;;;;;;;;;;QAEO,oCAAS;;;;;;;;;;YAAjB,UAAkB,IAAY,EAAE,KAAa,EAAE,SAAiB,EAAE,WAAoB,EAAE,WAA8B,EAAE,QAAqB;gBAArB,yBAAA;oBAAA,aAAqB;;gBAC3I,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;gBAC1H,QAAQ,GAAGE,cAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,SAAS,GAAG,QAAQ,CAAC;gBACxE,WAAW,GAAG,WAAW,CAAC,MAAM;;;mBAAC,UAAA,CAAC,IAAI,QAAC,CAAC,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC,KAAK,IAAI,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAC,EAAC,CAAC;gBAC3G,IAAI,WAAW,EAAE;oBACf,WAAW,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;iBACzD;gBACD,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;gBACxC,OAAO,WAAW,CAAC;aACpB;;;;;;;QAEO,0CAAe;;;;;;YAAvB,UAAwB,QAA0B,EAAE,WAA8B;;gBAGhF,IAAI,IAAI,CAAC,eAAe,EAAE;;wBACpB,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;oBACxF,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,mBAAmB,CAAC,CAAC;iBACtG;qBACI;;wBACC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;oBACjD,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,mBAAmB,CAAC,CAAC;iBACtG;gBAED,OAAO,WAAW,CAAC;aACpB;;oBAxMFN,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACnB;;;;wBAVkBmB,eAAY;wBAGxB,kBAAkB;wDAiBlBC,WAAQ,YACRC,SAAM,SAAC,oBAAoB;wDAE3BD,WAAQ,YACRC,SAAM,SAAC,cAAc;;;;+BAxB9B;KAQA;;;;;;ACRA;QAgBE;YAEE,IAAI,CAAC,YAAY,GAAG,IAAI,gBAAgB,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,qBAAqB,GAAG,IAAIvB,oBAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACpE,IAAI,CAAC,sBAAsB,GAAG,IAAIA,oBAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAEvE;;;;;QAED,yCAAQ;;;;YAAR,UAAS,KAAuB;gBAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAEpD;;;;QAED,yCAAQ;;;YAAR;gBACE,OAAO,IAAI,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;;QAQD,uDAAsB;;;;;;;;;;YAAtB,UAAuB,SAA8B;gBACnD,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,SAAS,CAAC,CAAC;gBAC5D,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;gBAC/B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACtD;;;;QAED,uDAAsB;;;YAAtB;gBACE,OAAO,IAAI,CAAC,sBAAsB,CAAC;aACpC;;oBA3CFE,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;qCAPD;KAKA;;;;;;;;;;;ACJA;QAEI,2BAAoB,KAAa,EAAU,IAAY;YAAnC,UAAK,GAAL,KAAK,CAAQ;YAAU,SAAI,GAAJ,IAAI,CAAQ;SAAK;;;;QAErD,oCAAQ;;;YAAf;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;;;;;QAEM,oCAAQ;;;;YAAf,UAAgB,KAAa;gBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;;;;QAEM,mCAAO;;;YAAd;gBACE,OAAO,IAAI,CAAC,IAAI,CAAC;aAClB;;;;;QAEM,mCAAO;;;;YAAd,UAAe,IAAY;gBACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACpB;QACL,wBAAC;IAAD,CAnBA,IAmBC,+BAA+B;;;;;;ACpBhC;QAqBE,gCACU,gBAAkC;YAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;SAE3C;;;;;QAEM,sDAAqB;;;;YAA5B,UAA6B,QAAgB;;oBAEvC,KAAK,GAAG,YAAY,CAAC,KAAK;;oBAC1B,MAAM,GAAG,YAAY,CAAC,MAAM;;oBAC5B,OAAO,GAAG,YAAY,CAAC,OAAO;;oBAC9B,aAAa,GAAG,EAAE;gBACtB,QAAQ,QAAQ;oBACd,KAAK,KAAK;wBACR,aAAa,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;wBACzC,MAAM;oBACR,KAAK,MAAM;wBACT,aAAa,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;wBAClC,MAAM;oBACR,KAAK,OAAO;wBACV,aAAa,GAAG,CAAC,OAAO,CAAC,CAAC;wBAC1B,MAAM;oBACR;wBACE,MAAM;iBACT;gBAED,OAAO,aAAa,CAAC;aACtB;;;;;;QAGM,uDAAsB;;;;;YAA7B,UAA8B,SAA2B,EAAE,cAAyC;;oBAE9F,aAAa,GAAG;oBAClB,IAAI,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC;oBACvF,IAAI,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC;oBACrF,IAAI,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC;oBAC3F,IAAI,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC;iBAClG;;oBAEG,kBAAkB,GAAG;oBACvB,IAAI,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,cAAc,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;oBAC/G,IAAI,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;oBAC7G,IAAI,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,cAAc,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;oBAC/G,IAAI,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,cAAc,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;iBACtH;;oBAEG,iBAAiB,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG;;;;mBAAC,UAAC,KAAK,EAAE,KAAK;oBAC/E,IAAG,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;wBACrD,OAAO,KAAK,CAAC;qBACd;yBACI;wBACH,QAAQ,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE;qBAC/F;iBACF,EAAC;gBAEF,OAAO,IAAI,4BAA4B,CAAC,aAAa,EAAE,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;aAC/F;;;;;;QAEM,kDAAiB;;;;;YAAxB,UAAyB,WAAmB,EAAE,gBAAkC;;oBAE1E,aAA4B;;oBAC5B,IAAY;gBAEhB,IAAI,WAAW,IAAI,YAAY,CAAC,KAAK,EAAE;oBACrC,aAAa,GAAG,gBAAgB,CAAC,cAAc,CAAC,MAAM;;;uBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAIO,WAAQ,CAAC,GAAG,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC;oBAC3F,IAAI,GAAG,kBAAkB,CAAC;iBAC3B;qBAEI,IAAI,WAAW,IAAI,YAAY,CAAC,MAAM,EAAE;oBAC3C,aAAa,GAAG,gBAAgB,CAAC,cAAc,CAAC,MAAM;;;uBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAIA,WAAQ,CAAC,IAAI,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC;oBAC5F,IAAI,GAAG,mBAAmB,CAAC;iBAC5B;qBAEI,IAAI,WAAW,IAAI,YAAY,CAAC,OAAO,EAAE;oBAC5C,aAAa,GAAG,gBAAgB,CAAC,cAAc,CAAC,MAAM;;;uBAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,IAAIA,WAAQ,CAAC,KAAK,GAAA,EAAC,CAAC,CAAC,CAAC,CAAC;oBAC7F,IAAI,GAAG,oBAAoB,CAAC;iBAC7B;gBAGD,OAAO,IAAI,4BAA4B,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aAC9D;;;;;QAKM,oDAAmB;;;;YAA1B,UAA2B,QAA6B;gBACtD,OAAO,IAAI,CAAC,mCAAmC,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;aAC3F;;;;;;QAEM,oEAAmC;;;;;YAA1C,UAA2C,UAAiC,EAAE,UAAiC;;oBACzG,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,UAAU,CAAC;;oBAC7D,eAAe,GAAG,IAAI,oBAAoB,EAAE;gBAChD,eAAe,CAAC,2BAA2B,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,sBAAsB,EAAE,EAAE,wBAAwB,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;gBAC7N,eAAe,CAAC,+BAA+B,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;gBAChI,eAAe,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;gBAC7G,eAAe,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;gBACtH,eAAe,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;gBAEpH,IAAG,IAAI,CAAC,sCAAsC,CAAC,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC,eAAe,CAAC,EAAE;oBACjG,eAAe,CAAC,+BAA+B,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;iBACjI;qBACI;oBACH,eAAe,CAAC,+BAA+B,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;iBACvG;gBAED,IAAG,IAAI,CAAC,sCAAsC,CAAC,UAAU,CAAC,oBAAoB,EAAE,UAAU,CAAC,0BAA0B,CAAC,EAAE;oBACtH,eAAe,CAAC,2BAA2B,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,sBAAsB,EAAE,EAAE,gBAAgB,EAAE,UAAU,CAAC,oBAAoB,EAAE,iBAAiB,EAAE,UAAU,CAAC,0BAA0B,EAAE,CAAC,CAAC;oBACnO,eAAe,CAAC,0BAA0B,GAAG,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,EAAE,gBAAgB,EAAE,UAAU,CAAC,oBAAoB,EAAE,iBAAiB,EAAE,UAAU,CAAC,0BAA0B,EAAE,CAAC,CAAC;iBAClO;qBACI;oBACH,eAAe,CAAC,2BAA2B,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;oBAClG,eAAe,CAAC,0BAA0B,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;iBACjG;gBAGD,OAAO,eAAe,CAAC;aACxB;;;;;;;QAEO,sDAAqB;;;;;;YAA7B,UAA8B,UAAiC,EAAE,UAAiC;gBAChG,OAAO;;oBAEL,wBAAwB,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,yBAAyB,CAAC;;;oBAK1G,cAAc,EAAE,UAAU,CAAC,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,YAAY;oBAC1E,cAAc,EAAE,UAAU,CAAC,mBAAmB;;;oBAI9C,gBAAgB,EAAE,UAAU,CAAC,yBAAyB;oBACtD,iBAAiB,EAAE,UAAU,CAAC,0BAA0B;iBAEzD,CAAA;aACF;;;;;;;QAEO,uEAAsC;;;;;;YAA9C,UAA+C,cAAsB,EAAE,eAAuB;;oBACxF,WAAW,GAAGD,cAAW,CAAC,UAAU,CAAC,cAAc,CAAC,IAAIA,cAAW,CAAC,UAAU,CAAC,eAAe,CAAC;;oBAC/F,SAAS,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;;oBAC7E,kBAAkB,GAAG,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC;gBAElF,OAAO,WAAW,IAAI,SAAS,IAAI,kBAAkB,CAAC;aACvD;;oBAnJFN,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;wBAjBQ2B,mBAAgB;;;;qCADzB;KAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
