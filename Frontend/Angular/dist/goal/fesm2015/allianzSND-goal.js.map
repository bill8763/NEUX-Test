{"version":3,"file":"allianzSND-goal.js.map","sources":["ng://@allianzSND/goal/lib/injectionToken/injection-token.ts","ng://@allianzSND/goal/lib/goal.module.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetGoalSettingAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetYearConfigAPI.ts","ng://@allianzSND/goal/lib/api/AgencyPlanGetMainAPI.ts","ng://@allianzSND/goal/lib/api/AgencyPlanGetDetailAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetExpectedAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetValue.ts","ng://@allianzSND/goal/lib/api/GoalSettingSetExpectedAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetPlanAPI.ts","ng://@allianzSND/goal/lib/api/GoalSettingGetActualAPI.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingCommon.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep1.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep2.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep3.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep4.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep5.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingYearConfig.ts","ng://@allianzSND/goal/lib/service/model/ActivityValue.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingGoalStatus.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStepData.ts","ng://@allianzSND/goal/lib/service/model/IsApproveInfo.ts","ng://@allianzSND/goal/lib/service/model/MonthlyPlanFYFCData.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanAgentInfo.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanDetail.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanGoalExpected.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingPlanPopup.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanDirectUnitDetail.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanMainData.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanDataForOverview.ts","ng://@allianzSND/goal/lib/service/model/SettingChangeEvent.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingTranslate.ts","ng://@allianzSND/goal/lib/service/model/CombineStep5AndAgecyPlanData.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStep3ForTabChange.ts","ng://@allianzSND/goal/lib/service/model/VaildError.ts","ng://@allianzSND/goal/lib/service/model/ApproveInfo.ts","ng://@allianzSND/goal/lib/service/model/GoalSettingStepDataParams.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanStatus.ts","ng://@allianzSND/goal/lib/service/model/AgencyPlanMainInfo.ts","ng://@allianzSND/goal/lib/service/goal-store.service.ts","ng://@allianzSND/goal/lib/service/goal-setting.service.ts","ng://@allianzSND/goal/lib/service/goal-valid.service.ts","ng://@allianzSND/goal/lib/service/agencyPlanStore-service.ts","ng://@allianzSND/goal/lib/components/goal-ui-title-list/goa-ui-title-list-item.ts","ng://@allianzSND/goal/lib/utils/goal-setting-util.service.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\nimport { goalSettingStep } from \"../interface/goalSettingStep\";\nimport { goalSettingShowRule } from '../interface/goalSettingShowRule';\nimport { GoalSubmitExtension } from '../interface/GoalSubmitExtension';\nimport { GoalValidExtension } from \"../interface/goalValidExtension\";\n\nexport const goalSettingStepToken = new InjectionToken<goalSettingStep>('goalSettingStep');\nexport const goalValidToken = new InjectionToken<GoalValidExtension>('GoalValidExtension');\nexport const goalSettingShowRuleToken = new InjectionToken<goalSettingShowRule>('goalSettingShowRule');\nexport const GoalSubmitExtensionToken = new InjectionToken<GoalSubmitExtension>(\"GoalSubmitExtension\");\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@allianzSND/core';\nimport { UIModule } from '@allianzSND/ui';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    UIModule\n  ],\n  declarations: [\n  ],\n  exports: [\n  ]\n})\nexport class GoalModule { }\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ISQLiteAPI, EqualRestriction, StringUtils, ClientCustomDao, PageInfo, LimitRestriction, OffsetRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class GoalSettingGetGoalSettingAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    private _dataYear: number = -1\n    setDataYear(dataYear: number) {\n        this._dataYear = dataYear;\n    }\n\n    getAPIName(): string {\n        return 'getGoalSettingGoalSetting';\n    }\n\n    getMockPath(): string {\n      \n        if(this._dataYear == 2019) {\n            return './assets/mock/getGoalSettingGoalSetting_2019.json';\n        }\n\n        else if(this._dataYear == 2020) {\n            return './assets/mock/getGoalSettingGoalSetting_2020.json';\n        }\n\n        else if(this._dataYear == -1) {\n            return './assets/mock/getGoalSettingGoalSetting_all.json';\n        }\n\n        else {\n            //todo throw error\n            console.warn(\"yearStatus dataYear not match\");\n            return ''\n        }\n    }\n\n    executeSQL(): Observable<any> {\n        console.log(\"queryByTable: getGoalSettingGoalSetting this._dataYear:\", this._dataYear);\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n\n                let goalSettingObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Goal_Setting\");\n                if (goalSettingObj) {\n\n                    if(this._dataYear != -1) {\n                        goalSettingObj.addRestriction(new EqualRestriction('DataYear',[this._dataYear]));\n                    }\n\n                    dao = new ClientCustomDao(dao);\n\n\n                    dao.queryByTable(goalSettingObj).subscribe((resp) => {\n                        console.log(\"queryByTable overviewYearStatus: \", JSON.stringify(resp));\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ISQLiteAPI, EqualRestriction, StringUtils, ClientCustomDao, PageInfo, LimitRestriction, OffsetRestriction, OrderByRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class GoalSettingGetYearConfigAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    private _dataYear: number = -1\n    setDataYear(dataYear: number) {\n        this._dataYear = dataYear;\n    }\n\n    getAPIName(): string {\n        return 'getGoalSettingYearConfig';\n    }\n\n    getMockPath(): string {\n        if(this._dataYear == 2019) {\n            return './assets/mock/getGoalSettingYearConfig_2019.json';\n        }\n\n        else if(this._dataYear == 2020) {\n            return './assets/mock/getGoalSettingYearConfig_2020.json';\n        }\n\n        else if(this._dataYear == -1) {\n            return './assets/mock/getGoalSettingYearConfig_all.json';\n        }\n\n        else {\n            console.warn(\"yearConfig dataYear not match\");\n            return ''\n        }\n    }\n\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                let yearConfigObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Year_Config\");\n                if (yearConfigObj) {\n\n                    if(this._dataYear != -1) {\n                        yearConfigObj.addRestriction(new EqualRestriction('DataYear',[this._dataYear]));\n                    }\n\n                    yearConfigObj.addRestriction(new OrderByRestriction([{ column: 'DataYear', order: 'ASC' }]));\n\n                    dao = new ClientCustomDao(dao);           \n                    \n                    \n                    dao.queryByTable(yearConfigObj).subscribe((resp) => {\n                        console.warn(\"queryByTable yearConfig: \", JSON.stringify(resp));\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IMockAPI, IAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, EqualRestriction } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\n\nexport class AgencyPlanGetMainAPI implements IMockAPI, IAPI, ISQLiteAPI {\n  private _dataYear: number;\n\n  setDataYear(dataYear: number) {\n    this._dataYear = dataYear\n  }\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  getAPIName(): string {\n    return \"getAgencyPlanMain\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/getAgencyPlanMainMock.json\";\n  }\n\n  executeSQL(): Observable<any> {\n    console.log(\"dataYear\", this._dataYear);\n    return Observable.create((observer) => {\n      let agencyMainObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Agency_Plan_Main\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (agencyMainObj != undefined && dao != undefined) {\n        dao = new ClientCustomDao(dao);\n        agencyMainObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n        dao.queryByTable(agencyMainObj).subscribe((resp) => {\n          console.log(\"resp\", resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IMockAPI, IAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, EqualRestriction} from '@allianzSND/core';\nimport { Observable } from 'rxjs';\n\nexport class AgencyPlanGetDetailAPI implements IMockAPI, IAPI, ISQLiteAPI{\n  private _dataYear: number;\n\n  setDataYear(dataYear: number) {\n    this._dataYear = dataYear;\n  }\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  getAPIName(): string {\n    return \"getAgencyPlanDetail\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/getAgencyPlanDetail.json\";\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let agencyDetailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Agency_Detail_Data\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (agencyDetailObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        agencyDetailObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n        dao.queryByTable(agencyDetailObj).subscribe((resp) => {\n          console.log(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IMockAPI, IAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, EqualRestriction} from '@allianzSND/core';\nimport { Observable } from 'rxjs';\n\nexport class GoalSettingGetExpectedAPI implements IMockAPI, IAPI, ISQLiteAPI{\n  private _dataYear: number;\n\n  setDataYear(dataYear: number) {\n    this._dataYear = dataYear\n  }\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  getAPIName(): string {\n    return \"getGoalSettingExpected\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/getGoalSettingExpected.json\";\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let goalExpectedObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Goal_Setting_Expected\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (goalExpectedObj != undefined && dao != undefined) {\n        dao = new ClientCustomDao(dao);\n        goalExpectedObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n        dao.queryByTable(goalExpectedObj).subscribe((resp) => {\n          console.log(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ISQLiteAPI, EqualRestriction, ClientCustomDao } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class GoalSettingGetValueAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    private _dataYear: number = -1;\n    setDataYear(dataYear: number) {\n        this._dataYear = dataYear;\n    }\n\n    getAPIName(): string {\n        return 'getGoalSettingValue';\n    }\n\n    getMockPath(): string {\n        if (this._dataYear == 2019) {\n            return './assets/mock/getGoalSettingValue_2019.json';\n        }\n        else if (this._dataYear == 2020) {\n            return './assets/mock/getGoalSettingValue_2020.json';\n        }\n        else {\n            console.warn(\"GoalSettingGetValueAPI mock path not found\");\n            return '';\n        }\n\n    }\n\n    executeSQL(): Observable<any> {\n        /*\n            \"FYFC\": 200,\n            \"FYFC_Actual\": 30,\n            \"FYFC_Now_To_Year_End\": 170,\n            \"Manpower\": 70,\n            \"Recruitment\": 40\n         */\n        return Observable.create((observer) => {\n            console.log(\"queryByTable: goalSettingValue this._dataYear:\", this._dataYear);\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n\n                let goalSettingValue = this.daoFactory.getDefaultTable(\"TW_LH_SD_Goal_Setting_Value\");\n                if (goalSettingValue) {\n\n\n                    dao = new ClientCustomDao(dao);\n                    if (this._dataYear != -1) {\n                        goalSettingValue.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n                    }\n\n\n                    //todo!\n                    dao.queryByTable(goalSettingValue).subscribe((resp) => {\n                        console.log(\"queryByTable: goalSettingValue\", resp);\n\n\n\n\n\n\n                        // console.warn(\"goalSettingValue========: \",data);\n                        observer.next(resp);\n                        observer.complete();\n\n                    });\n\n                }\n\n\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IMockAPI, IAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, EqualRestriction, SQLiteResponse } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\nexport class GoalSettingSetExpectedAPI implements IMockAPI, IAPI, ISQLiteAPI {\n  private _expectedRecruitment: object = {};\n  private _indirectRecruitment: number = 0;\n\n  setExpectedRecruitment(expectedRecruitment: object) {\n    this._expectedRecruitment = expectedRecruitment;\n  }\n\n  setIndirectRecruitment(indirectRecruitment: number) {\n    this._indirectRecruitment = indirectRecruitment;\n  }\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  getAPIName(): string {\n    return \"setGoalSettingExpected\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/saveSuccess.json\";\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create(async (observer) => {\n      let goalExpectedObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Goal_Setting_Expected\");\n      let goalExpectedExtObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Goal_Setting_Expected_Extension\");\n      let agencyMainObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Agency_Plan_Main\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (goalExpectedObj != undefined && agencyMainObj != undefined && dao != undefined) {\n        dao = new ClientCustomDao(dao);\n\n        agencyMainObj.addRestriction(new EqualRestriction('DataYear', [this._expectedRecruitment['DataYear']]));\n        agencyMainObj.addRestriction(new EqualRestriction('DataType', ['Recruitment']));\n        agencyMainObj.setValue('MonthPlan', [this._expectedRecruitment['RecruitmentTotal'] + this._indirectRecruitment]);\n\n\n        goalExpectedObj.setValue('Q1', this._expectedRecruitment['Q1']);\n        goalExpectedObj.setValue('Q2', this._expectedRecruitment['Q2']);\n        goalExpectedObj.setValue('Q3', this._expectedRecruitment['Q3']);\n        goalExpectedObj.setValue('Q4', this._expectedRecruitment['Q4']);\n        goalExpectedObj.setValue('FYFC', this._expectedRecruitment['FYFC']);\n        goalExpectedObj.setValue('ANP', this._expectedRecruitment['ANP']);\n        goalExpectedObj.setValue('DataYear', this._expectedRecruitment['DataYear']);\n\n        goalExpectedObj.addRestriction(new EqualRestriction('DataYear', [this._expectedRecruitment['DataYear']]));\n        let goalExpectedResp = await dao.queryByTable(goalExpectedObj).toPromise();\n        console.log('dataYear: ', this._expectedRecruitment['DataYear'], ' goalExpectedResp:', goalExpectedResp);\n        if (goalExpectedResp.Body.length > 0) {\n          //sqlite has data;\n          dao.transactionUpdate(goalExpectedObj);\n        }\n        else {\n          //sqlite not has data;\n          let clientID = uuid();\n          goalExpectedObj.setValue('ClientID', clientID);\n          goalExpectedExtObj.setValue('ClientID', clientID);\n          dao.transactionInsert(goalExpectedObj);\n          dao.transactionInsert(goalExpectedExtObj);\n        }\n\n\n        // dao.transactionUpdate(goalExpectedObj);\n        dao.transactionUpdate(agencyMainObj);\n        dao.runTransaction().subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, DaoFactory, ClientCustomDao, EqualRestriction } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, from } from 'rxjs';\n\n\n\nexport class GoalSettingGetPlanAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _dataYear: number = -1;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n\n  setDataYear(year: number) {\n    this._dataYear = year;\n  }\n\n\n  getAPIName(): string {\n    return 'getGoalSettingPlan';\n  }\n\n  getMockPath(): string {\n    //alert(\"personal progress mock data\");\n    if (this._dataYear == 2019) {\n      return './assets/mock/getGoalSettingPlan_2019.json';\n    }\n    else if (this._dataYear == 2020) {\n      return './assets/mock/getGoalSettingPlan_2020.json';\n    }\n    else {\n      console.warn(\"datYear not match mock path\");\n      return '';\n    }\n  }\n\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let dao = this.daoFactory.getDefaultDao();\n      if (dao != undefined) {\n\n\n        let goalSettingObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Goal_Setting_Plan_Value\");\n        if (goalSettingObj) {\n\n          if (this._dataYear != -1) {\n            goalSettingObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n          }\n\n          dao = new ClientCustomDao(dao);\n\n\n          dao.queryByTable(goalSettingObj).subscribe((resp) => {\n            console.warn(\"queryByTable Goal_Setting_Plan_Value: \", JSON.stringify(resp));\n            observer.next(resp);\n            observer.complete();\n          });\n        }\n        else {\n          observer.next(false);\n          observer.complete();\n        }\n\n      }\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n\n\n}","import { IAPI, EqualRestriction, ClientCustomDao } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, from } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\n\n\n\nexport class GoalSettingGetActualAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n  private _dataYear: number = -1;\n\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n  setDataYear(year: number) {\n    this._dataYear = year;\n  }\n\n\n\n  getAPIName(): string {\n    return 'getGoalSettingActualValue';\n  }\n\n  getMockPath(): string {\n    //alert(\"personal progress mock data\");\n    if (this._dataYear == 2019) {\n      return './assets/mock/getGoalSettingActualValue_2019.json';\n    }\n    else if (this._dataYear == 2020) {\n      return './assets/mock/getGoalSettingActualValue_2020.json';\n    }\n    else {\n      //todo throw error\n      console.warn('dataYear not match mock path');\n      return '';\n    }\n  }\n\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let dao = this.daoFactory.getDefaultDao();\n      if (dao != undefined) {\n\n\n        let goalSettingObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Actual_Value\");\n        if (goalSettingObj) {\n\n          if (this._dataYear != -1) {\n            goalSettingObj.addRestriction(new EqualRestriction('DataYear', [this._dataYear]));\n          }\n\n          dao = new ClientCustomDao(dao);\n\n\n          dao.queryByTable(goalSettingObj).subscribe((resp) => {\n            console.warn(\"queryByTable Goal_Setting_Actual_Value: \", resp);\n            observer.next(resp);\n            observer.complete();\n          });\n        }\n        else {\n          observer.next(false);\n          observer.complete();\n        }\n\n      }\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n}","import { GoalSettingStep4 } from \"./GoalSettingStep4\";\nimport { GoalSettingPlanPopup } from \"./GoalSettingPlanPopup\";\nimport { GoalSettingStepData } from \"./GoalSettingStepData\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\nexport enum DWM_DATETYPE {\n    DAILY = 'Daily',\n    WEEKLY = 'Weekly',\n    MONTHLY = 'Monthly'\n}\n\nexport enum GOALSETTINGSTEP {\n    STEP1 = 1,\n    STEP2 = 2,\n    STEP3 = 3,\n    STEP4 = 4,\n    STEP5 = 5\n}\n\nexport enum GOALSETTINGSETMODE {\n    SET_NEXT_YESR,\n    ADGUST_GOAL\n}\n\nexport enum ROLE {\n    // FEMALEAGENT = '01',\n    // FEMALEAGENTLEADER = '02',\n    // MALEAGENT = '03',\n    // MALEAGENTLEADER = '04',\n\n    // AGENT = 'AG',\n    // AGENTLEADER = 'AL',\n    // CAO = 'Manager',\n    // ZONEHEAD = 'Supervisor'\n    AGENT = 'AG',\n    AGENTLEADER = 'AL',\n    ZONEHEAD = 'Manager',\n    CAO = 'Supervisor'\n}\n\nexport enum APPROVESTATUS {\n    PENDING = 'P',\n    WAINTING = 'W',\n    NONE = 'N',\n    APPROVE = 'A',\n}\n\nexport enum APITYPE {\n    SQLITE = 'SQLITE',\n    RESTFUL = 'RESTFUL',\n    MOCK = 'MOCK'\n}\n\n@Bean('ValidationState')\nexport class ValidationState {\n\n    @Required\n    private _step: number;\n\n    @Required\n    private _isDataLegal: boolean;\n    \n    constructor() {\n    }\n\n    set step(step: number) {\n        this._step = step;\n    }\n\n    set isDataLegal(isDataLegal: boolean) {\n        this._isDataLegal = isDataLegal;\n    }\n\n    get step() {\n        return this._step;\n    }\n\n    get isDataLegal() {\n        return this._isDataLegal;\n    }\n}\n\nexport class PlanFYFCPopupInfo {\n    private _state: number;\n    private _data: GoalSettingStepData;\n\n    constructor(state: number, data: GoalSettingStepData) {\n        this._state = state;\n        this._data = data;\n    }\n\n    public set state(state: number) {\n        this._state = state;\n    }\n\n    public set data(data: GoalSettingStepData) {\n        this._data = data;\n    }\n\n    public get state(): number {\n        return this._state;\n    }\n\n    public get data(): GoalSettingStepData {\n        return this._data;\n    }\n}\n\n\n\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep1')\nexport class GoalSettingStep1 {\n\n    @Required\n    private _FYFC: string;\n\n    @Required\n    private _AnnualConvention: string;\n\n    @Required\n    private _MDRT: string;\n\n    @Required\n    private _PromotionPlan: string;\n\n    @Required\n    private _Actual: string;\n\n    @Required\n    private _FYFCNowToYearEnd: string;\n\n    private _ActivityFYFC: string;\n\n    private _ActivityDays: string;\n\n    constructor() {\n\n    }\n\n    public get FYFC(): string {\n        return this._FYFC;\n    }\n    public set FYFC(value: string) {\n        this._FYFC = value;\n    }\n    public get AnnualConvention(): string {\n        return this._AnnualConvention;\n    }\n    public set AnnualConvention(value: string) {\n        this._AnnualConvention = value;\n    }\n    public get MDRT(): string {\n        return this._MDRT;\n    }\n    public set MDRT(value: string) {\n        this._MDRT = value;\n    }\n    public get PromotionPlan(): string {\n        return this._PromotionPlan;\n    }\n    public set PromotionPlan(value: string) {\n        this._PromotionPlan = value;\n    }\n    public get Actual(): string {\n        return this._Actual;\n    }\n    public set Actual(value: string) {\n        this._Actual = value;\n    }\n    public get FYFCNowToYearEnd(): string {\n        return this._FYFCNowToYearEnd;\n    }\n    public set FYFCNowToYearEnd(value: string) {\n        this._FYFCNowToYearEnd = value;\n    }\n    public get ActivityFYFC(): string {\n        return this._ActivityFYFC;\n    }\n    public set ActivityFYFC(value: string) {\n        this._ActivityFYFC = value;\n    }\n    public get ActivityDays(): string {\n        return this._ActivityDays;\n    }\n    public set ActivityDays(value: string) {\n        this._ActivityDays = value;\n    }\n\n}\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep2')\nexport class GoalSettingStep2 {\n\n    @Required\n    private _PerCase: string;\n\n    constructor() {\n    }\n\n    public get PerCase(): string {\n        return this._PerCase;\n    }\n    public set PerCase(value: string) {\n        this._PerCase = value;\n    }\n\n}\n","import { ActivityValue } from \"./ActivityValue\";\nimport { TIMEBASE, Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep3')\nexport class GoalSettingStep3 {\n\n    @Required\n    private _ActivityValues: Array<ActivityValue> = [];\n\n    @Required\n    private _Activity: TIMEBASE;\n\n    constructor() {\n    }\n\n    public get Activity(): TIMEBASE {\n        return this._Activity;\n    }\n    public set Activity(value: TIMEBASE) {\n        this._Activity = value;\n    }\n    public get ActivityValues(): Array<ActivityValue> {\n        return this._ActivityValues;\n    }\n    public set ActivityValues(value: Array<ActivityValue>) {\n        this._ActivityValues = value;\n    }\n\n\n}\n","import { MonthlyPlanFYFCData } from \"./MonthlyPlanFYFCData\";\nimport { Required, Bean } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep4')\nexport class GoalSettingStep4 {\n\n    @Required\n    private _Forecast: string;\n\n    @Required\n    private _Shortfall: string;\n\n    @Required\n    private _Actual: string;\n\n    @Required\n    private _MonthList: Array<MonthlyPlanFYFCData> = [];\n\n    constructor() {\n    }\n\n    public get Forecast(): string {\n        return this._Forecast;\n    }\n    public set Forecast(value: string) {\n        this._Forecast = value;\n    }\n    public get Shortfall(): string {\n        return this._Shortfall;\n    }\n    public set Shortfall(value: string) {\n        this._Shortfall = value;\n    }\n    public get Actual(): string {\n        return this._Actual;\n    }\n    public set Actual(value: string) {\n        this._Actual = value;\n    }\n    public get MonthList(): Array<MonthlyPlanFYFCData> {\n        return this._MonthList;\n    }\n    public set MonthList(value: Array<MonthlyPlanFYFCData>) {\n        this._MonthList = value;\n    }\n\n    public clone() {\n        const cloneGoalSettingStep4 = new GoalSettingStep4();\n        cloneGoalSettingStep4.Forecast = this._Forecast;\n        cloneGoalSettingStep4.Shortfall = this._Shortfall;\n        cloneGoalSettingStep4.MonthList = this._MonthList.map(x => x.clone());\n        cloneGoalSettingStep4.Actual = this._Actual;\n        return cloneGoalSettingStep4;\n    }\n}\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep5')\nexport class GoalSettingStep5 {\n\n    @Required\n    private _TeamFYFC: string;\n\n    @Required\n    private _TeamANP: string;\n\n    @Required\n    private _Manpower: string;\n\n    @Required\n    private _Recruitment: string;\n\n    @Required\n    private _TeamFYFCActual: string;\n\n    @Required\n    private _TeamANPActual: string;\n\n    @Required\n    private _TeamFYFCNowToYearEnd: string;\n\n    @Required\n    private _TeamANPNowToYearEnd: string;\n\n\n    constructor() {\n    }\n\n    public get TeamFYFC(): string {\n        return this._TeamFYFC;\n    }\n    public set TeamFYFC(value: string) {\n        this._TeamFYFC = value;\n    }\n    public get TeamANP(): string {\n        return this._TeamANP;\n    }\n    public set TeamANP(value: string) {\n        this._TeamANP = value;\n    }\n    public get Manpower(): string {\n        return this._Manpower;\n    }\n    public set Manpower(value: string) {\n        this._Manpower = value;\n    }\n    public get Recruitment(): string {\n        return this._Recruitment;\n    }\n    public set Recruitment(value: string) {\n        this._Recruitment = value;\n    }\n    public get TeamFYFCActual(): string {\n        return this._TeamFYFCActual;\n    }\n    public set TeamFYFCActual(value: string) {\n        this._TeamFYFCActual = value;\n    }\n    public get TeamANPActual(): string {\n        return this._TeamANPActual;\n    }\n    public set TeamANPActual(value: string) {\n        this._TeamANPActual = value;\n    }\n    public get TeamFYFCNowToYearEnd(): string {\n        return this._TeamFYFCNowToYearEnd;\n    }\n    public set TeamFYFCNowToYearEnd(value: string) {\n        this._TeamFYFCNowToYearEnd = value;\n    }\n    public get TeamANPNowToYearEnd(): string {\n        return this._TeamANPNowToYearEnd;\n    }\n    public set TeamANPNowToYearEnd(value: string) {\n        this._TeamANPNowToYearEnd = value;\n    }\n\n\n}\n","import { ExtensionData, Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingYearConfig')\nexport class GoalSettingYearConfig {\n\n    private _IsCurrent: string;\n\n    @Required\n    private _DataYear: number;\n\n    private _QuarterStartMonth: number;\n\n    private _QuarterEndMonth: number;\n\n    private _GoalSettingActivityProcMode: string;\n\n    @Required\n    private _GoalAndPlanDifferenceLimit: number;\n\n    @Required\n    private _PerformanceSettlementMonth: number;\n\n    @Required\n    private _WorkingMonth: number;\n\n    private _WorkingQuarter: number;\n\n    @Required\n    private _MonthQuantityOfYear: number;\n\n    private _FyfcCovertAnpRate: number;\n\n    @Required\n    private _InforceConvertSubmitRate: number;\n\n    @Required\n    private _InforceConvertMeetRate: number;\n\n    @Required\n    private _InforceConvertScheduleRate: number;\n\n    @Required\n    private _InforceConvertFindRate: number;\n\n    @Required\n    private _NowToYearEndDays: number;\n\n    private _Extension: ExtensionData;\n\n    // constructor(IsCurrent: string, DataYear: number,  QuarterStartMonth: number, QuarterEndMonth: number, GoalSettingActivityProcMode: string, GoalAndPlanDifferenceLimit: number, PerformanceSettlementMonth: number, WorkingMonth: number, MonthQuantityOfYear: number, FyfcCovertAnpRate: number, InforceConvertSubmitRate: number, InforceConvertMeetRate: number, InforceConvertScheduleRate: number, InforceConvertFindRate: number, NowToYearEndDays: number) {\n    //     this._IsCurrent = IsCurrent;\n    //     this._DataYear = DataYear;\n    //     this._QuarterStartMonth = QuarterStartMonth;\n    //     this._QuarterEndMonth = QuarterEndMonth;\n    //     this._GoalSettingActivityProcMode = GoalSettingActivityProcMode;\n    //     this._GoalAndPlanDifferenceLimit = GoalAndPlanDifferenceLimit;\n    //     this._PerformanceSettlementMonth = PerformanceSettlementMonth;\n    //     this._WorkingMonth = WorkingMonth;\n    //     this._MonthQuantityOfYear = MonthQuantityOfYear;\n    //     this._FyfcCovertAnpRate = FyfcCovertAnpRate;\n    //     this._InforceConvertSubmitRate = InforceConvertSubmitRate;\n    //     this._InforceConvertMeetRate = InforceConvertMeetRate;\n    //     this._InforceConvertScheduleRate = InforceConvertScheduleRate;\n    //     this._InforceConvertFindRate = InforceConvertFindRate;\n    //     this._NowToYearEndDays = NowToYearEndDays;\n \n    // }\n\n    constructor() {\n\n    }\n\n    public getExtension(){\n        return this._Extension;\n    }\n    public setExtension(extension){\n        this._Extension = extension;\n    }\n    \n    public get IsCurrent(): string {\n        return this._IsCurrent;\n    }\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public get QuarterStartMonth(): number {\n        return this._QuarterStartMonth;\n    }\n    public get QuarterEndMonth(): number {\n        return this._QuarterEndMonth;\n    }\n    public get GoalSettingActivityProcMode(): string {\n        return this._GoalSettingActivityProcMode;\n    }\n    public get GoalAndPlanDifferenceLimit(): number {\n        return this._GoalAndPlanDifferenceLimit;\n    }\n    public get PerformanceSettlementMonth(): number {\n        return this._PerformanceSettlementMonth;\n    }\n    public get WorkingMonth(): number {\n        return this._WorkingMonth;\n    }\n    public get WorkingQuarter(): number {\n        return this._WorkingQuarter;\n    }\n    public get MonthQuantityOfYear(): number {\n        return this._MonthQuantityOfYear;\n    }\n    public get FyfcCovertAnpRate(): number {\n        return this._FyfcCovertAnpRate;\n    }\n    public get InforceConvertSubmitRate(): number {\n        return this._InforceConvertSubmitRate;\n    }\n    public get InforceConvertMeetRate(): number {\n        return this._InforceConvertMeetRate;\n    }\n    public get InforceConvertScheduleRate(): number {\n        return this._InforceConvertScheduleRate;\n    }\n    public get InforceConvertFindRate(): number {\n        return this._InforceConvertFindRate;\n    }\n    public get NowToYearEndDays(): number {\n        return this._NowToYearEndDays;\n    }\n\n\n    public set IsCurrent(value: string) {\n        this._IsCurrent = value;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n    public set QuarterStartMonth(value: number) {\n        this._QuarterStartMonth = value;\n    }\n    public set QuarterEndMonth(value: number) {\n        this._QuarterEndMonth = value;\n    }\n    public set GoalSettingActivityProcMode(value: string) {\n        this._GoalSettingActivityProcMode = value;\n    }\n    public set GoalAndPlanDifferenceLimit(value: number) {\n        this._GoalAndPlanDifferenceLimit = value;\n    }\n    public set PerformanceSettlementMonth(value: number) {\n        this._PerformanceSettlementMonth = value;\n    }\n    public set WorkingMonth(value: number) {\n        this._WorkingMonth = value;\n    }\n    public set WorkingQuarter(value: number) {\n        this._WorkingQuarter = value;\n    }\n    public set MonthQuantityOfYear(value: number) {\n        this._MonthQuantityOfYear = value;\n    }\n    public set FyfcCovertAnpRate(value: number) {\n        this._FyfcCovertAnpRate = value;\n    }\n    public set InforceConvertSubmitRate(value: number) {\n        this._InforceConvertSubmitRate = value;\n    }\n    public set InforceConvertMeetRate(value: number) {\n        this._InforceConvertMeetRate = value;\n    }\n    public set InforceConvertScheduleRate(value: number) {\n        this._InforceConvertScheduleRate = value;\n    }\n    public set InforceConvertFindRate(value: number) {\n        this._InforceConvertFindRate = value;\n    }\n    public set NowToYearEndDays(value: number) {\n        this._NowToYearEndDays = value;\n    }\n\n  \n\n}\n","import { TIMEBASE, Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ActivityValue')\nexport class ActivityValue{\n\n    @Required\n    private _TimeBase: TIMEBASE;\n\n    @Required\n    private _Find: string;\n\n    @Required\n    private _Schedule: string;\n\n    @Required\n    private _Meet: string;\n\n    @Required\n    private _Submit: string;\n    \n    @Required\n    private _Inforce: string;\n    \n    constructor(TimeBase, Find, Schedule, Meet, Submit, Inforce) {\n        this._TimeBase = TimeBase;\n        this._Schedule = Schedule;\n        this._Find = Find;\n        this._Meet = Meet;\n        this._Submit = Submit;\n        this._Inforce = Inforce;\n    }\n\n    public get TimeBase(): TIMEBASE {\n        return this._TimeBase;\n    }\n    public get Find(): string {\n        return this._Find;\n    }\n    public get Schedule(): string {\n        return this._Schedule;\n    }\n    public get Meet(): string {\n        return this._Meet;\n    }\n    public get Submit(): string {\n        return this._Submit;\n    }\n    public get Inforce(): string {\n        return this._Inforce;\n    }\n\n}","import { APPROVESTATUS } from \"./GoalSettingCommon\";\nimport { ExtensionData, Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingGoalStatus')\nexport class GoalSettingGoalStatus {\n\n    @Required\n    private _DataYear: number;\n\n    private _IsCurrent: string;\n\n    @Required\n    private _PersonnelGoalApplicableYM: number;\n\n    @Required\n    private _TeamGoalApplicableYM: number;\n\n    @Required\n    private _GoalSetMonth: number;\n\n    @Required\n    private _ApproveStatus: APPROVESTATUS;\n\n    private _IsFirstTime: boolean;\n\n    private _IsNeedSetting: boolean;\n\n    private _RemainingDays: number;\n\n    private _SupervisorComment: string;\n\n    private _Extension: ExtensionData;\n\n    constructor() {\n\n    }\n\n    public getExtension() {\n        return this._Extension;\n    }\n    public setExtension(extension) {\n        this._Extension = extension;\n    }\n\n    public get PersonnelGoalApplicableYM(): number {\n        return this._PersonnelGoalApplicableYM;\n    }\n    public get TeamGoalApplicableYM(): number {\n        return this._TeamGoalApplicableYM;\n    }\n    public get GoalSetMonth(): number {\n        return this._GoalSetMonth;\n    }\n    public get ApproveStatus(): APPROVESTATUS {\n        return this._ApproveStatus;\n    }\n    public get IsFirstTime(): boolean {\n        return this._IsFirstTime;\n    }\n    public get IsNeedSetting(): boolean {\n        return this._IsNeedSetting;\n    }\n    public get RemainingDays(): number {\n        return this._RemainingDays;\n    }\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public get IsCurrent(): string {\n        return this._IsCurrent;\n    }\n    public get SupervisorComment(): string {\n        return this._SupervisorComment;\n    }\n\n\n\n    public set IsCurrent(value: string) {\n        this._IsCurrent = value;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n    public set PersonnelGoalApplicableYM(value: number) {\n        this._PersonnelGoalApplicableYM = value;\n    }\n    public set TeamGoalApplicableYM(value: number) {\n        this._TeamGoalApplicableYM = value;\n    }\n    public set GoalSetMonth(value: number) {\n        this._GoalSetMonth = value;\n    }\n    public set ApproveStatus(value: APPROVESTATUS) {\n        this._ApproveStatus = value;\n    }\n    public set IsFirstTime(value: boolean) {\n        this._IsFirstTime = value;\n    }\n    public set IsNeedSetting(value: boolean) {\n        this._IsNeedSetting = value;\n    }\n    public set RemainingDays(value: number) {\n        this._RemainingDays = value;\n    }\n    public set SupervisorComment(value: string) {\n        this._SupervisorComment = value;\n    }\n\n}","import { GoalSettingYearConfig } from \"./GoalSettingYearConfig\";\nimport { GoalSettingGoalStatus } from \"./GoalSettingGoalStatus\";\nimport { GoalSettingStep1 } from \"./GoalSettingStep1\";\nimport { GoalSettingStep2 } from \"./GoalSettingStep2\";\nimport { GoalSettingStep3 } from \"./GoalSettingStep3\";\nimport { GoalSettingStep4 } from \"./GoalSettingStep4\";\nimport { GoalSettingStep5 } from \"./GoalSettingStep5\";\nimport { AgencyPlanDetail } from \"./AgencyPlanDetail\";\nimport { AgencyPlanDataForOverview } from \"./AgencyPlanDataForOverview\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStepData')\nexport class GoalSettingStepData{\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _YearConfig: GoalSettingYearConfig;\n\n    @Required\n    private _GoalStatus: GoalSettingGoalStatus;\n\n    private _Step1: GoalSettingStep1;\n\n    private _Step2: GoalSettingStep2;\n\n    private _Step3: GoalSettingStep3;\n\n    @Required\n    private _Step4: GoalSettingStep4;\n\n    private _Step5: GoalSettingStep5;\n\n    private _AgencyPlan: AgencyPlanDataForOverview;\n\n    private _ActualList: Array<string> = [];\n\n    constructor(DataYear) {\n        this._DataYear = DataYear;\n    }\n    \n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public get YearConfig(): GoalSettingYearConfig {\n        return this._YearConfig;\n    }\n    public set YearConfig(value: GoalSettingYearConfig) {\n        this._YearConfig = value;\n    }\n    public get GoalStatus(): GoalSettingGoalStatus {\n        return this._GoalStatus;\n    }\n    public set GoalStatus(value: GoalSettingGoalStatus) {\n        this._GoalStatus = value;\n    }\n    public get Step1(): GoalSettingStep1 {\n        return this._Step1;\n    }\n    public set Step1(value: GoalSettingStep1) {\n        this._Step1 = value;\n    }\n    public get Step2(): GoalSettingStep2 {\n        return this._Step2;\n    }\n    public set Step2(value: GoalSettingStep2) {\n        this._Step2 = value;\n    }\n    public get Step3(): GoalSettingStep3 {\n        return this._Step3;\n    }\n    public set Step3(value: GoalSettingStep3) {\n        this._Step3 = value;\n    }\n    public get Step4(): GoalSettingStep4 {\n        return this._Step4;\n    }\n    public set Step4(value: GoalSettingStep4) {\n        this._Step4 = value;\n    }\n    public get Step5(): GoalSettingStep5 {\n        return this._Step5;\n    }\n    public set Step5(value: GoalSettingStep5) {\n        this._Step5 = value;\n    }\n    public get AgencyPlan(): AgencyPlanDataForOverview {\n        return this._AgencyPlan;\n    }\n    public set AgencyPlan(value: AgencyPlanDataForOverview) {\n        this._AgencyPlan = value;\n    }\n    public get ActualList(): Array<string> {\n        return this._ActualList;\n    }\n    public set ActualList(value: Array<string>) {\n        this._ActualList = value;\n    }\n\n\n\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('IsApproveInfo')\nexport class IsApproveInfo{\n    \n    @Required\n    private _IsNeedApprove: boolean;\n\n    @Required\n    private _IsPopup: boolean;\n\n    private _PopupType: string;\n\n\n    constructor(IsNeedApprove, IsPopup){\n        this._IsNeedApprove = IsNeedApprove;\n        this._IsPopup = IsPopup;\n    }\n\n    public get IsNeedApprove(): boolean {\n        return this._IsNeedApprove;\n    }\n    public set IsNeedApprove(value: boolean) {\n        this._IsNeedApprove = value;\n    }\n    public get IsPopup(): boolean {\n        return this._IsPopup;\n    }\n    public set IsPopup(value: boolean) {\n        this._IsPopup = value;\n    }\n    public get PopupType(): string {\n        return this._PopupType;\n    }\n    public set PopupType(value: string) {\n        this._PopupType = value;\n    }\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('MonthlyPlanFYFCData')\nexport class MonthlyPlanFYFCData {\n\n    @Required\n    private _Month: number;\n\n    @Required\n    private _Plan: string;\n\n    @Required\n    private _Actual: string;\n\n    constructor(Month:number, Plan:string, Actual:string){\n        this._Month = Month;\n        this._Plan = Plan;\n        this._Actual = Actual;\n    }\n\n    public get Month(): number {\n        return this._Month;\n    }\n\n    public get Actual(): string {\n        return this._Actual;\n    }\n\n    public get Plan(): string {\n        return this._Plan;\n    }\n    \n    public set Plan(value: string) {\n        this._Plan = value;\n    }\n\n    public clone(): MonthlyPlanFYFCData{\n        return new MonthlyPlanFYFCData(this._Month, this._Plan, this._Actual);\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanAgentInfo')\nexport class AgencyPlanAgentInfo {\n\n    @Required\n    private _AgentID: string;\n\n    @Required\n    private _AgentName: string;\n\n    @Required\n    private _DataYear: number;\n    \n    @Required\n    private _AppUseMode: string;\n\n    constructor(AgentID: string, AgentName: string, DataYear: number, AppUseMode: string) {\n        this._AgentID = AgentID;\n        this._AgentName = AgentName;\n        this._DataYear = DataYear;\n        this._AppUseMode = AppUseMode;\n    }\n\n    public get AgentID(): string {\n        return this._AgentID;\n    }\n\n    public get AgentName(): string {\n        return this._AgentName;\n    }\n    \n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    \n    public get AppUseMode(): string {\n        return this._AppUseMode;\n    }\n\n}\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanDetail')\nexport class AgencyPlanDetail {\n\n    @Required\n    private _AgentID: string;\n\n    @Required\n    private _AgentName: string;\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _AppUseMode: string;\n\n    @Required\n    private _JobGrade: string;\n\n    @Required\n    private _Actual: string;\n\n    @Required\n    private _CaseCount: string;\n\n    @Required\n    private _ClientID: string;\n\n    @Required\n    private _DataType: string;\n\n    @Required\n    private _DirectUnitType: string;\n    \n    @Required\n    private _Drilldown: string;\n\n    @Required\n    private _Forecast: string;\n\n    @Required\n    private _Goal: string;\n\n    @Required\n    private _IsApprove: string;\n\n    @Required\n    private _Manpower: number;\n\n    @Required\n    private _MonthPlan: string;\n\n    @Required\n    private _Orders: number;\n\n    @Required\n    private _PerCase: string;\n\n    @Required\n    private _Recruitment: number;\n\n    @Required\n    private _IsHasDot: boolean;\n    \n    @Required\n    private _TextColor: string;\n\n    constructor(){\n\n    }\n\n    public get AgentID(): string {\n        return this._AgentID;\n    }\n    public set AgentID(value: string) {\n        this._AgentID = value;\n    }\n  \n    public get AgentName(): string {\n        return this._AgentName;\n    }\n    public set AgentName(value: string) {\n        this._AgentName = value;\n    }\n    \n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n   \n    public get AppUseMode(): string {\n        return this._AppUseMode;\n    }\n    public set AppUseMode(value: string) {\n        this._AppUseMode = value;\n    }\n\n    public get JobGrade(): string {\n        return this._JobGrade;\n    }\n    public set JobGrade(value: string) {\n        this._JobGrade = value;\n    }\n\n    public get Actual(): string {\n        return this._Actual;\n    }\n    public set Actual(value: string) {\n        this._Actual = value;\n    }\n    \n    public get CaseCount(): string {\n        return this._CaseCount;\n    }\n    public set CaseCount(value: string) {\n        this._CaseCount = value;\n    }\n    \n    public get ClientID(): string {\n        return this._ClientID;\n    }\n    public set ClientID(value: string) {\n        this._ClientID = value;\n    }\n    \n    public get DataType(): string {\n        return this._DataType;\n    }\n    public set DataType(value: string) {\n        this._DataType = value;\n    }\n    \n    public get DirectUnitType(): string {\n        return this._DirectUnitType;\n    }\n    public set DirectUnitType(value: string) {\n        this._DirectUnitType = value;\n    }\n   \n    public get Drilldown(): string {\n        return this._Drilldown;\n    }\n    public set Drilldown(value: string) {\n        this._Drilldown = value;\n    }\n    \n    public get Forecast(): string {\n        return this._Forecast;\n    }\n    public set Forecast(value: string) {\n        this._Forecast = value;\n    }\n    \n    public get Goal(): string {\n        return this._Goal;\n    }\n    public set Goal(value: string) {\n        this._Goal = value;\n    }\n    \n    public get IsApprove(): string {\n        return this._IsApprove;\n    }\n    public set IsApprove(value: string) {\n        this._IsApprove = value;\n    }\n    \n    public get Manpower(): number {\n        return this._Manpower;\n    }\n    public set Manpower(value: number) {\n        this._Manpower = value;\n    }\n  \n    public get MonthPlan(): string {\n        return this._MonthPlan;\n    }\n    public set MonthPlan(value: string) {\n        this._MonthPlan = value;\n    }\n    \n    public get Orders(): number {\n        return this._Orders;\n    }\n    public set Orders(value: number) {\n        this._Orders = value;\n    }\n  \n    public get PerCase(): string {\n        return this._PerCase;\n    }\n    public set PerCase(value: string) {\n        this._PerCase = value;\n    }\n    \n    public get Recruitment(): number {\n        return this._Recruitment;\n    }\n    public set Recruitment(value: number) {\n        this._Recruitment = value;\n    }\n\n    public get IsHasDot(): boolean {\n        return this._IsHasDot;\n    }\n    public set IsHasDot(value: boolean) {\n        this._IsHasDot = value;\n    }\n\n    public get TextColor(): string {\n        return this._TextColor;\n    }\n    public set TextColor(value: string) {\n        this._TextColor = value;\n    }\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanGoalExpected')\nexport class AgencyPlanGoalExpected {\n\n    @Required\n    private _ANP: string = '0';\n\n    @Required\n    private _DataYear: number = 0;\n\n    @Required\n    private _WorkingQuarter: number = 0;\n\n    @Required\n    private _FYFC: string = '0';\n\n    @Required\n    private _Q1: string = '0';\n\n    @Required\n    private _Q2: string = '0';\n\n    @Required\n    private _Q3: string = '0';\n\n    @Required\n    private _Q4: string = '0';\n\n    @Required\n    private _RecruitmentTotal: number = 0;\n    \n    @Required\n    private _FYFCConvertANPRate: number;\n\n    constructor(dataYear: number) {\n        this._DataYear = dataYear;\n    }\n\n    public get ANP(): string {\n        return this._ANP;\n    }\n    public set ANP(value: string) {\n        this._ANP = value;\n    }\n\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n\n    public get WorkingQuarter(): number {\n        return this._WorkingQuarter;\n    }\n    public set WorkingQuarter(value: number) {\n        this._WorkingQuarter = value;\n    }\n\n    public get FYFC(): string {\n        return this._FYFC;\n    }\n    public set FYFC(value: string) {\n        this._FYFC = value;\n    }\n   \n    public get Q1(): string {\n        return this._Q1;\n    }\n    public set Q1(value: string) {\n        this._Q1 = value;\n    }\n    \n    public get Q2(): string {\n        return this._Q2;\n    }\n    public set Q2(value: string) {\n        this._Q2 = value;\n    }\n    \n    public get Q3(): string {\n        return this._Q3;\n    }\n    public set Q3(value: string) {\n        this._Q3 = value;\n    }\n  \n    public get Q4(): string {\n        return this._Q4;\n    }\n    public set Q4(value: string) {\n        this._Q4 = value;\n    }\n   \n    public get RecruitmentTotal(): number {\n        return this._RecruitmentTotal;\n    }\n    public set RecruitmentTotal(value: number) {\n        this._RecruitmentTotal = value;\n    }\n\n    public get FYFCConvertANPRate(): number {\n        return this._FYFCConvertANPRate;\n    }\n    public set FYFCConvertANPRate(value: number) {\n        this._FYFCConvertANPRate = value;\n    }\n\n    public clone(): AgencyPlanGoalExpected {\n        let cloneAgencyPlanGoalExpected: AgencyPlanGoalExpected = new AgencyPlanGoalExpected(this._DataYear);\n        cloneAgencyPlanGoalExpected.WorkingQuarter = this._WorkingQuarter;\n        cloneAgencyPlanGoalExpected.ANP = this._ANP;\n        cloneAgencyPlanGoalExpected.FYFC = this._FYFC;\n        cloneAgencyPlanGoalExpected.Q1 = this._Q1;\n        cloneAgencyPlanGoalExpected.Q2 = this._Q2;\n        cloneAgencyPlanGoalExpected.Q3 = this._Q3;\n        cloneAgencyPlanGoalExpected.Q4 = this._Q4;\n        cloneAgencyPlanGoalExpected.RecruitmentTotal = this._RecruitmentTotal;\n        cloneAgencyPlanGoalExpected.FYFCConvertANPRate = this._FYFCConvertANPRate;\n       \n        return cloneAgencyPlanGoalExpected;\n\n    }\n\n    \n\n}","import { MonthlyPlanFYFCData } from \"./MonthlyPlanFYFCData\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingPlanPopup')\nexport class GoalSettingPlanPopup {\n\n    @Required\n    private _FYFCGoal: number;\n\n    @Required\n    private _actual: number;\n\n    @Required\n    private _performanceMonthStart: number;\n\n    @Required\n    private _performanceMonthEnd: number;\n\n    @Required\n    private _monthPlanList: Array<MonthlyPlanFYFCData>;\n\n    @Required\n    private _approveThreshold: number;\n    \n    @Required\n    private _eachMonthPlan: Array<string> =[];\n\n    constructor(FYFCgoal, actual, performanceMonthStart, performanceMonthEnd, monthPlanList) {\n        this._FYFCGoal = FYFCgoal;\n        this._actual = actual;\n        this._performanceMonthStart = performanceMonthStart;\n        this._performanceMonthEnd = performanceMonthEnd;\n        this._monthPlanList = monthPlanList;\n    }\n\n\n    set FYFCGoal(FYFCgoal: number) {\n        this._FYFCGoal = FYFCgoal;\n    }\n\n    set actual(value: number) {\n        this._actual = value;\n    }\n\n    set performanceMonthStart(performanceMonthStart: number) {\n        this._performanceMonthStart = performanceMonthStart;\n    }\n\n    set performanceMonthEnd(performanceMonthEnd: number) {\n        this._performanceMonthEnd = performanceMonthEnd;\n    }\n\n    set monthPlanList(monthPlanList: Array<MonthlyPlanFYFCData>) {\n        this._monthPlanList = monthPlanList;\n    }\n\n    set approveThreshold(approveThreshold: number) {\n        this._approveThreshold = approveThreshold;\n    }\n\n    set eachMonthPlan(eachMonthPlan: Array<string>) {\n        this._eachMonthPlan = eachMonthPlan;\n    }\n\n    get FYFCGoal() {\n        return this._FYFCGoal;\n    }\n\n    get actual(): number {\n        return this._actual;\n    }\n\n    get performanceMonthStart() {\n        return this._performanceMonthStart;\n    }\n\n    get performanceMonthEnd() {\n        return this._performanceMonthEnd;\n    }\n\n    get monthPlanList() {\n        return this._monthPlanList;\n    }\n\n    get approveThreshold() {\n        return this._approveThreshold;\n    }\n\n    get eachMonthPlan() {\n        return this._eachMonthPlan;\n    }\n\n    public clone() {\n        const cloneGoalSettingStep4 = new GoalSettingPlanPopup(this._FYFCGoal, this._actual, this._performanceMonthStart, this._performanceMonthEnd, this.monthPlanList.map(x => x.clone()));\n        cloneGoalSettingStep4._eachMonthPlan = this.eachMonthPlan.map(x => x);\n        cloneGoalSettingStep4._approveThreshold = this._approveThreshold;\n\n        return cloneGoalSettingStep4;\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanDirectUnitDetail')\nexport class AgencyPlanDirectUnitDetail {\n\n    @Required\n    private _Manpower: string = '';\n    \n    @Required\n    private _Recruitment: number = 0;\n    \n    constructor() {\n    }\n\n    public get Manpower(): string {\n        return this._Manpower;\n    }\n    public set Manpower(value: string) {\n        this._Manpower = value;\n    }\n\n    public get Recruitment(): number {\n        return this._Recruitment;\n    }\n    public set Recruitment(value: number) {\n        this._Recruitment = value;\n    }\n\n    \n}\n\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanMainData')\nexport class AgencyPlanMainData {\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _DataType: string;\n\n    @Required\n    private _Forecast: string;\n\n    @Required\n    private _Actual: string;\n    \n    @Required\n    private _MonthPlan: string;\n\n    constructor() {\n    }\n\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n\n    public get DataType(): string {\n        return this._DataType;\n    }\n    public set DataType(value: string) {\n        this._DataType = value;\n    }\n\n    public get Forecast(): string {\n        return this._Forecast;\n    }\n    public set Forecast(value: string) {\n        this._Forecast = value;\n    }\n\n    public get Actual(): string {\n        return this._Actual;\n    }\n    public set Actual(value: string) {\n        this._Actual = value;\n    }\n\n    public get MonthPlan(): string {\n        return this._MonthPlan;\n    }\n    public set MonthPlan(value: string) {\n        this._MonthPlan = value;\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanDataForOverview')\nexport class AgencyPlanDataForOverview {\n\n    @Required\n    private _FYFCForecast: string;\n\n    @Required\n    private _ANPForecast: string;\n\n    @Required\n    private _ManpowerPlan: string;\n\n    @Required\n    private _RecruitmentPlan: string;\n    \n    @Required\n    private _CompletionRate: string;\n\n    constructor() {       \n    }\n\n    public get FYFCForecast(): string {\n        return this._FYFCForecast;\n    }\n    public set FYFCForecast(value: string) {\n        this._FYFCForecast = value;\n    }\n\n    public get ANPForecast(): string {\n        return this._ANPForecast;\n    }\n    public set ANPForecast(value: string) {\n        this._ANPForecast = value;\n    }\n   \n    public get ManpowerPlan(): string {\n        return this._ManpowerPlan;\n    }\n    public set ManpowerPlan(value: string) {\n        this._ManpowerPlan = value;\n    }\n   \n    public get RecruitmentPlan(): string {\n        return this._RecruitmentPlan;\n    }\n    public set RecruitmentPlan(value: string) {\n        this._RecruitmentPlan = value;\n    }\n\n    public get CompletionRate(): string {\n        return this._CompletionRate;\n    }\n    public set CompletionRate(CompletionRate: string) {\n        this._CompletionRate = CompletionRate;\n    }\n    \n    \n\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('SettingChangeEvent')\nexport class SettingChangeEvent {\n\n    @Required\n    private _step: number;\n\n    @Required\n    private _column: string;\n\n    @Required\n    private _value: any;\n\n    constructor(step: number, column: string, value: any) {\n        this._step = step;\n        this._column = column;\n        this._value = value;\n    }\n\n\n    public get step(): number {\n        return this._step;\n    }\n    public set step(value: number) {\n        this._step = value;\n    }\n\n    public get column(): string {\n        return this._column;\n    }\n    public set column(value: string) {\n        this._column = value;\n    }\n\n    public get value(): any {\n        return this._value;\n    }\n    public set value(value: any) {\n        this._value = value;\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingTranslate')\nexport class GoalSettingTranslate {\n\n    @Required\n    private _TeamGoalEffectiveMonthTitle: string = '';\n\n    @Required\n    private _PersonalGoalEffectiveMonthTitle: string = '';\n\n    @Required\n    private _NowToYearEndTitle: string = '';\n\n    @Required\n    private _FYFCNowToYearEndTitle: string = '';\n\n    @Required\n    private _ANPNowToYearEndTitle: string = '';\n\n    @Required\n    private _PersonalFYFCActualVariableTitle: string = '';\n\n    @Required\n    private _TeamFYFCActualVariableTitle: string = '';\n\n    @Required\n    private _TeamANPActualVariableTitle: string = '';\n\n    @Required\n    private _FYFCActualDashTitle: string = '';\n    \n    constructor() {       \n    }\n\n    public get TeamGoalEffectiveMonthTitle(): string {\n        return this._TeamGoalEffectiveMonthTitle;\n    }\n    public set TeamGoalEffectiveMonthTitle(value: string) {\n        this._TeamGoalEffectiveMonthTitle = value;\n    }\n   \n    public get PersonalGoalEffectiveMonthTitle(): string {\n        return this._PersonalGoalEffectiveMonthTitle;\n    }\n    public set PersonalGoalEffectiveMonthTitle(value: string) {\n        this._PersonalGoalEffectiveMonthTitle = value;\n    }\n   \n    public get NowToYearEndTitle(): string {\n        return this._NowToYearEndTitle;\n    }\n    public set NowToYearEndTitle(value: string) {\n        this._NowToYearEndTitle = value;\n    }\n    \n    public get FYFCNowToYearEndTitle(): string {\n        return this._FYFCNowToYearEndTitle;\n    }\n    public set FYFCNowToYearEndTitle(value: string) {\n        this._FYFCNowToYearEndTitle = value;\n    }\n    \n    public get ANPNowToYearEndTitle(): string {\n        return this._ANPNowToYearEndTitle;\n    }\n    public set ANPNowToYearEndTitle(value: string) {\n        this._ANPNowToYearEndTitle = value;\n    }\n  \n    public get PersonalFYFCActualVariableTitle(): string {\n        return this._PersonalFYFCActualVariableTitle;\n    }\n    public set PersonalFYFCActualVariableTitle(value: string) {\n        this._PersonalFYFCActualVariableTitle = value;\n    }\n    \n    public get TeamFYFCActualVariableTitle(): string {\n        return this._TeamFYFCActualVariableTitle;\n    }\n    public set TeamFYFCActualVariableTitle(value: string) {\n        this._TeamFYFCActualVariableTitle = value;\n    }\n  \n    public get TeamANPActualVariableTitle(): string {\n        return this._TeamANPActualVariableTitle;\n    }\n    public set TeamANPActualVariableTitle(value: string) {\n        this._TeamANPActualVariableTitle = value;\n    }\n    \n    public get FYFCActualDashTitle(): string {\n        return this._FYFCActualDashTitle;\n    }\n    public set FYFCActualDashTitle(value: string) {\n        this._FYFCActualDashTitle = value;\n    }\n}","import { GoalTitleListItem } from \"../../components/goal-ui-title-list/goa-ui-title-list-item\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('CombineStep5AndAgecyPlanData')\nexport class CombineStep5AndAgecyPlanData {\n\n    @Required\n    private _Step5ItemList: Array<GoalTitleListItem> = [];\n\n    @Required\n    private _AgencyPlanItemList: Array<GoalTitleListItem> = [];\n    \n    @Required\n    private _ItemTextIsRedList: Array<boolean> = [];\n\n    constructor(Step5ItemList: Array<GoalTitleListItem>, AgencyPlanItemList: Array<GoalTitleListItem>, ItemTextIsRedList: Array<boolean>) {\n        this._Step5ItemList = Step5ItemList;\n        this._AgencyPlanItemList = AgencyPlanItemList;\n        this._ItemTextIsRedList = ItemTextIsRedList;\n    }\n\n    public get Step5ItemList() {\n        return this._Step5ItemList;\n    }\n\n    public get AgencyPlanItemList() {\n        return this._AgencyPlanItemList;\n    }\n\n    public get ItemTextIsRedList() {\n        return this._ItemTextIsRedList;\n    }\n\n\n}","import { ActivityValue } from \"./ActivityValue\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStep3ForTabChange')\nexport class GoalSettingStep3ForTabChange {\n\n    @Required\n    private _ActivityValue: ActivityValue = null;\n\n    @Required\n    private _Unit: string = '';\n    \n    constructor(ActivityValue: ActivityValue, Unit: string) {\n        this._ActivityValue = ActivityValue;\n        this._Unit = Unit;\n    }\n\n    public get ActivityValue() {\n        return this._ActivityValue;\n    }\n\n    public get Unit() {\n        return this._Unit;\n    }\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ValidError')\nexport class ValidError{\n\n    @Required\n    private _Step: number;\n\n    @Required\n    private _ColId: string;\n\n    @Required\n    private _Msg: string;\n\n    constructor(Step: number, ColId: string, Msg:string){\n        this._Step = Step;\n        this._ColId = ColId;\n        this._Msg = Msg;\n    }\n\n    public get Step(): number {\n        return this._Step;\n    }\n    public get ColId(): string {\n        return this._ColId;\n    }\n    public get Msg(): string {\n        return this._Msg;\n    }\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ApproveInfo')\nexport class ApproveInfo{\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _AgentID: string;\n\n    @Required\n    private _IsApprove: boolean;\n    \n    @Required\n    private _Comment: string;\n\n\n    constructor(DataYear:number, AgentID: string, IsApprove:boolean, Comment:string){\n        this._DataYear = DataYear;\n        this._AgentID = AgentID;\n        this._IsApprove = IsApprove;\n        this._Comment = Comment;\n    }\n\n    public get Comment(): string {\n        return this._Comment;\n    }\n    public get IsApprove(): boolean {\n        return this._IsApprove;\n    }\n    public get AgentID(): string {\n        return this._AgentID;\n    }\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('GoalSettingStepDataParams')\nexport class GoalSettingStepDataParams{\n\n    @Required\n    private _DataYear: number;\n\n    @Required\n    private _isAdjust: boolean;\n\n    constructor(DataYear: number, isAdjust: boolean){\n        this._DataYear = DataYear;\n        this._isAdjust = isAdjust;\n    }\n\n    public get DataYear(): number {\n        return this._DataYear;\n    }\n    public set DataYear(value: number) {\n        this._DataYear = value;\n    }\n    public get isAdjust(): boolean {\n        return this._isAdjust;\n    }\n    public set isAdjust(value: boolean) {\n        this._isAdjust = value;\n    }\n\n\n}","import { Bean, Required } from \"@allianzSND/core\";\n\nexport enum AGENCY_STATE {\n    DISPLAY = 'display',\n    ACCEPT = 'accept',\n    REJECT = 'reject',\n    FIRST = 'first'\n}\n\n@Bean('AgencyPlanStatus')\nexport class AgencyPlanStatus {\n\n    @Required\n    private _state: AGENCY_STATE;\n\n    @Required\n    private _agentID: string;\n\n    constructor(state, agentID) {\n        this.state = state;\n        this.agentID = agentID;\n    }\n\n   \n    public get state(): AGENCY_STATE {\n        return this._state;\n    }\n    public set state(value: AGENCY_STATE) {\n        this._state = value;\n    }\n    \n    public get agentID(): string {\n        return this._agentID;\n    }\n    public set agentID(value: string) {\n        this._agentID = value;\n    }\n}","import { AgencyPlanMainData } from \"./AgencyPlanMainData\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('AgencyPlanMainInfo')\nexport class AgencyPlanMainInfo {\n\n    @Required\n    private _CompletionRate: string;\n    \n    @Required\n    private _AgencyMainDataList: Array<AgencyPlanMainData>;\n\n    constructor(){\n\n    }\n    \n    public get CompletionRate(): string {\n        return this._CompletionRate;\n    }\n    public set CompletionRate(value: string) {\n        this._CompletionRate = value;\n    }\n    public get AgencyMainDataList(): Array<AgencyPlanMainData> {\n        return this._AgencyMainDataList;\n    }\n    public set AgencyMainDataList(value: Array<AgencyPlanMainData>) {\n        this._AgencyMainDataList = value;\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { PlanFYFCPopupInfo } from './model/GoalSettingCommon';\nimport { DefaultLoginMgr, NotificationType } from '@allianzSND/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GoalStoreService {\n\n    constructor(\n        private loginMgr: DefaultLoginMgr\n    ) {\n        this.loginMgr.subscribeLogout().subscribe(() => {\n            //reset to init\n            this.setSyncGoalDatas(null);\n            this.setGoalLandingStatus(GOAL_LANDING_STATUS.FIRST_INIT);\n            this.setSettingYear(null);\n            this.setIsPromo(false);\n            this.setCanSkip(true);\n            this.setPlanFYFCPopupInfo(new PlanFYFCPopupInfo(PLAN_FYFC_POPUP_STATE.CLOSE, null));\n        })\n    }\n\n    private syncGoalDatas: SYNC_STATUS = null;\n    private settingYear: number = null;\n    private isPromo = false;\n    private canSkip = true;\n    private planFYFCPopupInfo: PlanFYFCPopupInfo = new PlanFYFCPopupInfo(PLAN_FYFC_POPUP_STATE.CLOSE, null);\n    private landingStatus: GOAL_LANDING_STATUS = GOAL_LANDING_STATUS.FIRST_INIT;\n    private yearSubject: BehaviorSubject<number> = new BehaviorSubject(this.settingYear);\n    private statusSubject: BehaviorSubject<GOAL_LANDING_STATUS> = new BehaviorSubject(this.landingStatus);\n    private isPromoSubject: BehaviorSubject<boolean> = new BehaviorSubject(this.isPromo);\n    private canSkipSubject: BehaviorSubject<boolean> = new BehaviorSubject(this.canSkip);\n    private planFYFCPopupInfoSubject: BehaviorSubject<PlanFYFCPopupInfo> = new BehaviorSubject(this.planFYFCPopupInfo);\n    private syncGoalDatasSubject: BehaviorSubject<SYNC_STATUS> = new BehaviorSubject(this.syncGoalDatas);\n    private goalPopupResponseSubject: Subject<GoalPopupResponse> = new Subject();\n\n\n    public getSyncGoalDatas(): Observable<SYNC_STATUS> {\n        return this.syncGoalDatasSubject.asObservable();\n    }\n\n    public setSyncGoalDatas(status: SYNC_STATUS): void {\n        this.syncGoalDatas = status;\n        this.syncGoalDatasSubject.next(this.syncGoalDatas);\n    }\n\n    public getGoalLandingStatus(): Observable<GOAL_LANDING_STATUS> {\n        return this.statusSubject.asObservable();\n    }\n\n    public setGoalLandingStatus(status: GOAL_LANDING_STATUS): void {\n        this.landingStatus = status;\n        this.statusSubject.next(this.landingStatus);\n    }\n\n    public getSettingYear(): Observable<number> {\n        return this.yearSubject.asObservable();\n    }\n\n    public setSettingYear(year: number): void {\n        this.settingYear = year;\n        this.yearSubject.next(this.settingYear);\n    }\n\n    public getIsPromo(): Observable<boolean> {\n        return this.isPromoSubject.asObservable();\n    }\n\n    public setIsPromo(val: boolean): void {\n        this.isPromo = val;\n        this.isPromoSubject.next(this.isPromo);\n    }\n\n    public getCanSkip(): Observable<boolean> {\n        return this.canSkipSubject.asObservable();\n    }\n\n    public setCanSkip(val: boolean): void {\n        this.canSkip = val;\n        this.canSkipSubject.next(this.canSkip);\n    }\n\n    public setPopupResp(resp: GoalPopupResponse): void {\n        this.goalPopupResponseSubject.next(resp);\n    }\n\n    public getPopupResp(): Observable<GoalPopupResponse> {\n        return this.goalPopupResponseSubject.asObservable();\n    }\n\n    // for edit personal popup\n\n    public setPlanFYFCPopupInfo(info: PlanFYFCPopupInfo) {\n        console.log(\"Set info\");\n        this.planFYFCPopupInfo = info;\n        if (info.data) {\n            this.planFYFCPopupInfo.data.Step4 = this.planFYFCPopupInfo.data.Step4.clone();\n        }\n        this.planFYFCPopupInfoSubject.next(this.planFYFCPopupInfo);\n    }\n\n    public getPlanFYFCPopupInfo() {\n        return this.planFYFCPopupInfoSubject.asObservable();\n    }\n\n    // end of for edit personal popup\n\n}\n\nexport class GoalPopupResponse {\n    public response: boolean;\n    public type: NotificationType;\n}\n\nexport enum GOAL_LANDING_STATUS {\n    SETTING_SUBMITTED,\n    FIRST_INIT, // from landing\n    FIRST_SET, // from overview and isn't adjsut\n    ADJUST_GOAL // from overview and is adjust\n}\n\nexport enum PLAN_FYFC_POPUP_STATE {\n    DISPLAY,\n    NEEDAPPROVESUBMIT,\n    NOTNEEDAPPROVESUBMIT,\n    CLOSE\n}\n\nexport enum SYNC_STATUS {\n    SYNC,\n    FINISH\n}\n\n\n\n","import { Injectable, Optional, Inject, ErrorHandler } from \"@angular/core\";\nimport { Observable, of, from } from \"rxjs\";\nimport { APIDispatch, APIFactory, pushApproveGoalAPI, StringUtils, getAgencyPlanAPI, getGoalAPI, getActualAPI, getYearConfigAPI, APPError, NumberUtils, DataSyncService, SubmitGoalSettingValue, SubmitGoalInfo, SubmitGoalPlanInfo, GetDeviceInfoAPI, SuccessStatus, YESNO, TIMEBASE, SUBMITGOALTYPE, SubmitGoalPlan, PERFORMANCETYPE, SubmitGoalData, ExtensionData, yearConfigExtensionDataToken, goalSettingExtensionDataToken, ExtensionFactory, pushGoalSettingDataAPI, ProfileCodeService, ProfileCode, Valid } from \"@allianzSND/core\";\nimport { goalSettingStepToken } from '../injectionToken';\nimport { goalSettingStep } from '../interface/goalSettingStep';\nimport { AgencyPlanGetMainAPI } from '../api/AgencyPlanGetMainAPI';\nimport { AgencyPlanGetDetailAPI } from '../api/AgencyPlanGetDetailAPI';\nimport { GoalSettingSetExpectedAPI } from '../api/GoalSettingSetExpectedAPI';\nimport { GoalSettingGetExpectedAPI } from '../api/GoalSettingGetExpectedAPI';\nimport { GoalSettingGetValueAPI } from '../api/GoalSettingGetValue';\nimport { GoalSettingGetActualAPI } from '../api/GoalSettingGetActualAPI';\nimport { GoalSettingGetPlanAPI } from '../api/GoalSettingGetPlanAPI';\nimport { GoalSettingGetYearConfigAPI } from '../api/GoalSettingGetYearConfigAPI'\nimport { GoalSettingStep4 } from './model/GoalSettingStep4';\nimport { GoalStoreService, SYNC_STATUS } from './goal-store.service';\nimport { AgencyPlanDetail } from './model/AgencyPlanDetail';\nimport { AgencyPlanGoalExpected } from './model/AgencyPlanGoalExpected';\nimport { AgencyPlanMainData } from './model/AgencyPlanMainData';\nimport { AgencyPlanDataForOverview } from './model/AgencyPlanDataForOverview';\nimport { GoalSettingYearConfig } from './model/GoalSettingYearConfig';\nimport { GoalSettingStep2 } from './model/GoalSettingStep2';\nimport { MonthlyPlanFYFCData } from './model/MonthlyPlanFYFCData';\nimport { GoalSettingStepData } from './model/GoalSettingStepData';\nimport { GoalSettingStep5 } from './model/GoalSettingStep5';\nimport { GoalSettingStep3 } from './model/GoalSettingStep3';\nimport { GoalSettingStep1 } from './model/GoalSettingStep1';\nimport { GoalSettingGoalStatus } from './model/GoalSettingGoalStatus';\nimport { IsApproveInfo } from './model/IsApproveInfo';\nimport { ActivityValue } from './model/ActivityValue';\nimport { ValidError } from './model/VaildError';\nimport { ApproveInfo } from './model/ApproveInfo';\nimport { GetOtherParameterAPI } from \"@allianzSND/core\";\nimport { AgencyPlanMainInfo } from \"./model/AgencyPlanMainInfo\";\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class GoalSettingService {\n  private TextConvertStep1Map = new Map<string, string>();\n  private TextConvertStep2Map = new Map<string, string>();\n  private TextConvertStep5Map = new Map<string, string>();\n  private StepTextConvertMap = new Map<string, Map<string, string>>();\n\n  private ColMapToProfile: Map<string, string> = new Map<string, string>();\n  private ColMapToProfileCodeMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n\n  public readonly DASH = '--';\n\n  constructor(\n    private dispatcher: APIDispatch,\n    private APIFactory: APIFactory,\n    private goalStore: GoalStoreService,\n    private errorHandler: ErrorHandler,\n    @Optional()\n    @Inject(goalSettingStepToken)\n    private goalSettingStep: goalSettingStep,\n    @Optional()\n    @Inject(yearConfigExtensionDataToken)\n    private yearConfigExtension: ExtensionFactory,\n    @Optional()\n    @Inject(goalSettingExtensionDataToken)\n    private goalSettingExtension: ExtensionFactory,\n    private dataSyncService: DataSyncService,\n    private profileCodeService: ProfileCodeService\n  ) {\n    this.TextConvertStep1Map.set(\"FYFC\", \"PERSON_FYFC\");\n    // this.TextConvertStep1Map.set(\"ANP\", \"PERSON_ANP\");\n    this.TextConvertStep1Map.set(\"AnnualConvention\", \"ANNUAL_CONVENTION\");\n    this.TextConvertStep1Map.set(\"MDRT\", \"MDRT\");\n    this.TextConvertStep1Map.set(\"PromotionPlan\", \"PROMOTION_PLAN\");\n    this.TextConvertStep1Map.set(\"ActivityFYFC\", \"ACTIVITY_FYFC\");\n    this.TextConvertStep1Map.set(\"ActivityDays\", \"ACTIVITY_DAYS\");\n    this.TextConvertStep2Map.set(\"PerCase\", \"PER_CASE_FYFC\");\n    this.TextConvertStep5Map.set(\"TeamFYFC\", \"TEAM_FYFC\");\n    this.TextConvertStep5Map.set(\"TeamANP\", \"TEAM_ANP\");\n    this.TextConvertStep5Map.set(\"Manpower\", \"TEAM_MANPOWER\");\n    this.TextConvertStep5Map.set(\"Recruitment\", \"TEAM_RECRUITMENT\");\n    this.StepTextConvertMap.set(\"Step1\", this.TextConvertStep1Map);\n    this.StepTextConvertMap.set(\"Step2\", this.TextConvertStep2Map);\n    this.StepTextConvertMap.set(\"Step5\", this.TextConvertStep5Map);\n\n    this.ColMapToProfile.set(\"AnnualConvention\", \"GoalSetting_AnnualConvention\");\n    this.ColMapToProfile.set(\"MDRT\", \"GoalSetting_MDRT\");\n    this.ColMapToProfile.set(\"PromotionPlan\", \"Promotion_Plan\");\n    this.ColMapToProfile.forEach((code, col) => {\n      this.ColMapToProfileCodeMap.set(col, this.profileCodeService.getCodeArray(code));\n    });\n  }\n\n  //-----------\n\n  //#region  goalStepDatas\n\n  // GoalSettingService\n  @Valid('GoalSettingStepData')\n  public getGoalSettingStep1_5Data(year: number, isAdjust: boolean): Observable<GoalSettingStepData> {\n    return from(this._getGoalSettingStep1_5Data(year, isAdjust));\n  }\n\n  private async _getGoalSettingStep1_5Data(year: number, isAdjust: boolean): Promise<GoalSettingStepData> {\n    console.log('into _getGoalSettingStep1_5Data year:', year, 'isAdjust', isAdjust);\n\n    let returnData: GoalSettingStepData = new GoalSettingStepData(year);\n    try {\n      let yearConfigResp: any;\n      let goalSettingResp: any;\n      let goalSettingValueResp: any;\n      let actualResp: any;\n\n      let yearConfig = this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n      let goalSetting = this.APIFactory.getAPI(\"getGoalSettingGoalSetting\");\n      let goalSettingValue = this.APIFactory.getAPI(\"getGoalSettingValue\");\n      let actual = this.APIFactory.getAPI(\"getGoalSettingActualValue\");\n\n      (<GoalSettingGetValueAPI>goalSettingValue).setDataYear(year);\n      (<GoalSettingGetActualAPI>actual).setDataYear(year);\n\n      [yearConfigResp, goalSettingResp, goalSettingValueResp, actualResp] = await Promise.all([\n        this.dispatcher.dispatch(yearConfig).toPromise(),\n        this.dispatcher.dispatch(goalSetting).toPromise(),\n        this.dispatcher.dispatch(goalSettingValue).toPromise(),\n        this.dispatcher.dispatch(actual).toPromise()\n      ]);\n      console.log(\"yearConfigResp\", yearConfigResp);\n      console.log(\"goalSettingResp\", goalSettingResp);\n      console.log(\"goalSettingValueResp\", goalSettingValueResp);\n      console.log(\"actualResp\", actualResp);\n      //call GetYearConfigAPI\n\n\n      if (yearConfigResp.Header[\"status\"]\n        && goalSettingResp.Header[\"status\"]\n        && goalSettingValueResp.Header[\"status\"]\n        && actualResp.Header[\"status\"]) {\n\n        let yearConfigMap = this.yearJsonToMap(yearConfigResp[\"Body\"]);\n        let goalSettingMap = this.yearJsonToMap(goalSettingResp[\"Body\"]);\n\n        let yearConfigObj = yearConfigMap.get(year);\n        let goalSettingObj = goalSettingMap.get(year);\n        console.log(\"yearConfigObj\", yearConfigObj);\n        console.log(\"goalSettingObj\", goalSettingObj);\n\n        if (yearConfigObj != undefined && goalSettingObj != undefined) {\n\n          // call GetGoalSettingValue\n          let goalSettingValueObj: any = {};\n          goalSettingValueResp[\"Body\"].forEach(data => {\n            goalSettingValueObj[data.DataType] = data.Value;\n          });\n          console.log(\"goalSettingValueObj\", goalSettingValueObj);\n\n          // call GetActualValue\n          let teamFYFCActual = -1;\n          let teamANPActual = -1;\n          let allYearActual = -1;\n          let monthOfYear = yearConfigObj.MonthQuantityOfYear;\n          let actuallist: Array<string> = Array(monthOfYear).fill(this.DASH, 0);\n\n          let actualBody = actualResp[\"Body\"];\n          let FYFCActuals = actualBody.filter(x => x.DataYear == year && x.PerformanceType == PERFORMANCETYPE.PERSONAL && x.DataType == \"FYFC\");\n          if (FYFCActuals.length > 0) {\n            allYearActual = 0;\n            FYFCActuals.forEach(x => {\n              if (x.Month <= yearConfigObj.PerformanceSettlementMonth) {\n                actuallist[x.Month - 1] = x.Value;\n                allYearActual += x.Value;\n              }\n            });\n          }\n\n          let TeamFYFCActuals = actualBody.filter(x => x.DataYear == year && x.PerformanceType == PERFORMANCETYPE.TEAM && x.DataType == \"FYFC\");\n          if (TeamFYFCActuals.length) {\n            teamFYFCActual = 0;\n            teamANPActual = 0;\n            TeamFYFCActuals.forEach(x => {\n              teamFYFCActual += (x.Month <= yearConfigObj.PerformanceSettlementMonth) ? x.Value : 0;\n            });\n            teamANPActual = this.numberToFix(teamFYFCActual * yearConfigObj.FyfcCovertAnpRate, 0);\n          }\n          console.log(\"actuallist\", actuallist);\n\n          let YearConfig: GoalSettingYearConfig = new GoalSettingYearConfig();\n          let GoalStatus: GoalSettingGoalStatus = new GoalSettingGoalStatus();\n          let Step1: GoalSettingStep1 = new GoalSettingStep1();\n          let Step2: GoalSettingStep2 = new GoalSettingStep2();\n          let Step3: GoalSettingStep3 = new GoalSettingStep3();\n          let Step4: GoalSettingStep4 = new GoalSettingStep4();\n          let Step5: GoalSettingStep5 = new GoalSettingStep5();\n\n          YearConfig.DataYear = yearConfigObj.DataYear;\n          YearConfig.IsCurrent = yearConfigObj.IsCurrent;\n          YearConfig.QuarterStartMonth = yearConfigObj.QuarterStartMonth;\n          YearConfig.QuarterEndMonth = yearConfigObj.QuarterEndMonth;\n          YearConfig.GoalSettingActivityProcMode = yearConfigObj.GoalSettingActivityProcMode;\n          YearConfig.GoalAndPlanDifferenceLimit = yearConfigObj.GoalAndPlanDifferenceLimit;\n          YearConfig.FyfcCovertAnpRate = yearConfigObj.FyfcCovertAnpRate;\n          YearConfig.InforceConvertSubmitRate = yearConfigObj.InforceConvertSubmitRate;\n          YearConfig.InforceConvertMeetRate = yearConfigObj.InforceConvertMeetRate;\n          YearConfig.InforceConvertScheduleRate = yearConfigObj.InforceConvertScheduleRate;\n          YearConfig.InforceConvertFindRate = yearConfigObj.InforceConvertFindRate;\n          YearConfig.NowToYearEndDays = yearConfigObj.NowToYearEndDays;\n          YearConfig.PerformanceSettlementMonth = yearConfigObj.PerformanceSettlementMonth;\n          YearConfig.MonthQuantityOfYear = yearConfigObj.MonthQuantityOfYear;\n          YearConfig.WorkingMonth = yearConfigObj.WorkingMonth;\n          if (this.yearConfigExtension) {\n            let yearConfigExtData: ExtensionData = this.yearConfigExtension.getExtensionData(yearConfigObj, { source: \"SQL\" });\n            YearConfig.setExtension(yearConfigExtData);\n          }\n\n          GoalStatus.DataYear = year;\n          GoalStatus.PersonnelGoalApplicableYM = goalSettingObj.PersonnelGoalApplicableYM;\n          GoalStatus.TeamGoalApplicableYM = goalSettingObj.TeamGoalApplicableYM;\n          GoalStatus.GoalSetMonth = goalSettingObj.GoalSetMonth;\n          GoalStatus.ApproveStatus = goalSettingObj.ApproveStatus;\n          GoalStatus.IsFirstTime = goalSettingObj.IsFirstTime == \"Y\";\n          GoalStatus.IsNeedSetting = goalSettingObj.IsNeedSetting == \"Y\";\n          GoalStatus.SupervisorComment = goalSettingObj.SupervisorComment;\n          if (this.goalSettingExtension) {\n            let goalSettingExtData: ExtensionData = this.goalSettingExtension.getExtensionData(goalSettingObj, { source: \"SQL\" });\n            GoalStatus.setExtension(goalSettingExtData);\n          }\n\n          Step1.FYFC = goalSettingValueObj.PERSON_FYFC;\n          Step1.AnnualConvention = goalSettingValueObj.ANNUAL_CONVENTION;\n          Step1.MDRT = goalSettingValueObj.MDRT;\n          Step1.PromotionPlan = goalSettingValueObj.PROMOTION_PLAN;\n          Step1.Actual = this.changeToDash(allYearActual);\n          Step1.FYFCNowToYearEnd = this.calculateNowToYearEndGoal(goalSettingValueObj.PERSON_FYFC, Step1.Actual);\n          Step1.ActivityFYFC = goalSettingValueObj.ACTIVITY_FYFC;\n          Step1.ActivityDays = goalSettingValueObj.ACTIVITY_DAYS;\n\n          Step2.PerCase = goalSettingValueObj.PER_CASE_FYFC;\n\n          let ActivityFYFC = isAdjust ? Step1.FYFCNowToYearEnd : Step1.FYFC;\n          Step3 = this.calculateActivityData(ActivityFYFC, Step2.PerCase, YearConfig);\n\n          if (isAdjust) {\n            Step4 = await this._getMonthActualPlanBySQL(PERFORMANCETYPE.PERSONAL, year, YearConfig.MonthQuantityOfYear, YearConfig.PerformanceSettlementMonth);\n            Step4.Shortfall = this.calculateShortfall(Step1.FYFC, Step4.Forecast);\n          } else {\n            Step4 = this.calculateMonthActualPlan(YearConfig, Step1.FYFC, actuallist);\n            Step4.Shortfall = this.calculateShortfall(Step1.FYFC, Step4.Forecast);\n          }\n\n          Step5.TeamFYFC = goalSettingValueObj.TEAM_FYFC;\n          Step5.TeamANP = goalSettingValueObj.TEAM_ANP;\n          Step5.Manpower = goalSettingValueObj.TEAM_MANPOWER;\n          Step5.Recruitment = goalSettingValueObj.TEAM_RECRUITMENT;\n          Step5.TeamFYFCActual = this.changeToDash(teamFYFCActual);\n          Step5.TeamANPActual = this.changeToDash(teamANPActual);\n          Step5.TeamFYFCNowToYearEnd = this.calculateNowToYearEndGoal(goalSettingValueObj.TEAM_FYFC, Step5.TeamFYFCActual);\n          Step5.TeamANPNowToYearEnd = this.calculateANPFromFYFC(Step5.TeamFYFCNowToYearEnd, YearConfig.FyfcCovertAnpRate);\n\n          returnData.YearConfig = YearConfig;\n          returnData.GoalStatus = GoalStatus;\n          returnData.Step1 = Step1;\n          returnData.Step2 = Step2;\n          returnData.Step3 = Step3;\n          returnData.Step4 = Step4;\n          returnData.Step5 = Step5;\n          returnData.ActualList = actuallist;\n        }\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00400', 'getGoalSettingStep1_5Data fail!' + error.message));\n    }\n\n    console.log(\"getGoalSettingStep1_5Data returnData\", returnData);\n    return returnData;\n  }\n\n  @Valid('GoalSettingStep3')\n  public calculateActivityData(goal: string, perCase: string, yearConfig: GoalSettingYearConfig, activityDays: string = ''): GoalSettingStep3 {\n    console.log(\"calculateActivityData:\", goal, perCase, yearConfig, activityDays);\n\n    let returnObj: GoalSettingStep3 = new GoalSettingStep3();\n    let activityValues: Array<ActivityValue> = [];\n    try {\n\n      let numGoal = Number(goal);\n      let numPerCase = Number(perCase)\n      if (NumberUtils.isNumber(goal) && NumberUtils.isNumber(perCase) && numPerCase > 0) {\n        console.warn(\"calculateActivityData on service: \", goal, perCase, yearConfig);\n        let days: number = (StringUtils.isEmpty(activityDays)) ? Number(yearConfig.NowToYearEndDays) : Number(activityDays);\n\n        let daysInweek: number = 7;\n        let daysInMonth: number = 365 / Number(yearConfig.MonthQuantityOfYear);\n\n        let dayInforce: number = numGoal / numPerCase / days;\n        let weekInforce: number = dayInforce * daysInweek;\n        let monthInforce: number = dayInforce * daysInMonth;\n        dayInforce = dayInforce;\n\n        let tabs = [{ name: TIMEBASE.DAY, inforce: dayInforce }, { name: TIMEBASE.WEEK, inforce: weekInforce }, { name: TIMEBASE.MONTH, inforce: monthInforce }];\n\n        if (this.goalSettingStep) {\n          activityValues = this.goalSettingStep.calculateOtherRuleActivityInforce(tabs, yearConfig);\n        }\n\n        let activity: TIMEBASE = activityValues[0].TimeBase;\n\n        returnObj.Activity = activity;\n        returnObj.ActivityValues = activityValues;\n\n      } else {\n        let tabNum = [TIMEBASE.DAY, TIMEBASE.WEEK, TIMEBASE.MONTH];\n        returnObj.Activity = TIMEBASE.DAY;\n        tabNum.forEach(time => {\n          let activity: ActivityValue = new ActivityValue(time, this.DASH, this.DASH, this.DASH, this.DASH, this.DASH);\n          activityValues.push(activity);\n        });\n        returnObj.ActivityValues = activityValues;\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00401', 'calculateActivityData fail!' + error.message));\n    }\n\n    console.log(\"calculateActivityData return obj: \", JSON.stringify(returnObj));\n    return returnObj;\n  }\n\n  // step 4 function\n  @Valid('GoalSettingStep4')\n  public calculateMonthActualPlan(yearConfig: GoalSettingYearConfig, goal: string, actualList: Array<string>): GoalSettingStep4 {\n\n    //actualList example : [100,100,200,0,100,1]\n    console.log(\"calculateMonthActualPlan goal:\", goal);\n    let Step4Datas: GoalSettingStep4 = new GoalSettingStep4();\n    let MonthActualPlanList: Array<MonthlyPlanFYFCData> = [];\n    try {\n      if (NumberUtils.isNumber(goal)) {\n        if (this.goalSettingStep) {\n          MonthActualPlanList = this.goalSettingStep.calculateMonthActualPlan(yearConfig, Number(goal), actualList);\n        }\n        let forecast = this.calculateForecast(yearConfig.PerformanceSettlementMonth, MonthActualPlanList);\n        let shortfall = this.calculateShortfall(goal, forecast);\n        let actual = this.calulateSumByArray(actualList);\n        Step4Datas.MonthList = MonthActualPlanList;\n        Step4Datas.Forecast = forecast;\n        Step4Datas.Shortfall = shortfall;\n        Step4Datas.Actual = actual;\n      } else {\n        //å¨é¨é½dash\n        for (let i = 0; i < yearConfig.MonthQuantityOfYear; i++) {\n          let data: MonthlyPlanFYFCData = new MonthlyPlanFYFCData(i, this.DASH, this.DASH);\n          MonthActualPlanList.push(data);\n        }\n        Step4Datas.Actual = this.DASH;\n        Step4Datas.Forecast = this.DASH;\n        Step4Datas.Shortfall = this.DASH;\n        Step4Datas.MonthList = MonthActualPlanList;\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00402', 'calculateMonthActualPlan fail!' + error.message));\n    }\n\n    console.log(\"calculateMonthActualPlan:\", MonthActualPlanList);\n\n    return Step4Datas;\n\n  }\n  public calculateActual(PerformanceSettlementMonth: number, MonthActualPlanList: Array<MonthlyPlanFYFCData>): string {\n    if (PerformanceSettlementMonth > 0) {\n      return MonthActualPlanList.map(x => (Number(x.Actual) < 0 || x.Actual == this.DASH || x.Month > PerformanceSettlementMonth) ? 0 : Number(x.Actual)).reduce((pre, cur) => pre + Number(cur), 0).toString();\n    } else {\n      return this.DASH;\n    }\n  }\n  public calculateForecast(PerformanceSettlementMonth: number, MonthActualPlanList: Array<MonthlyPlanFYFCData>): string {\n    return this.calulateSumByArray(this.getActualPlanFromMonthList(MonthActualPlanList, PerformanceSettlementMonth));\n  }\n\n  public calulateSumByArray(monthList: Array<any>): string {\n    let isDash = true;\n    monthList.forEach(data => {\n      if (data != this.DASH) {\n        isDash = false;\n      }\n    });\n    let returnNum = this.DASH;\n    if (!isDash) {\n      returnNum = monthList.map(x => (Number(x) < 0 || x == this.DASH || StringUtils.isEmpty(x)) ? 0 : x).reduce((pre, cur) => pre + Number(cur), 0).toString();\n    }\n    return returnNum;\n  }\n\n  public calculateShortfall(goal, forecast): string {\n    let result = this.DASH;\n    if (NumberUtils.isNumber(goal) && NumberUtils.isNumber(forecast)) {\n      if (this.goalSettingStep) {\n        result = this.goalSettingStep.getShortfall(goal, forecast).toString();\n      } else {\n        let tempresult = (Number(goal) - Number(forecast));\n        result = (tempresult < 0) ? \"0\" : tempresult.toString();\n      }\n    }\n    return result;\n  }\n\n  //#endregion  goalStepDatas\n\n\n  //#region Submit & Approve function\n  @Valid('IsApproveInfo')\n  public isNeedApprove(SubmitType: SUBMITGOALTYPE, DataYear: number, adjustDatas: GoalSettingStepData): Observable<IsApproveInfo> {\n    return from(this._isNeedApprove(SubmitType, DataYear, adjustDatas));\n  }\n\n  private async _isNeedApprove(SubmitType: SUBMITGOALTYPE, DataYear: number, adjustDatas: GoalSettingStepData): Promise<IsApproveInfo> {\n    console.log(\"_isNeedApprove adjustDatas\", adjustDatas, SubmitType, DataYear);\n\n    let isApproveInfo: IsApproveInfo;\n    try {\n      if (this.goalSettingStep) {\n        //taiwan\n        let originDatas: GoalSettingStepData = await this._getGoalSettingStep1_5Data(DataYear, true);\n        isApproveInfo = this.goalSettingStep.isNeedApprove(adjustDatas, originDatas);\n      } else {\n        isApproveInfo = new IsApproveInfo(true, false);\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00403', 'isNeedApprove fail!' + error.message));\n    }\n\n    console.log(\"isNeedApprove\", isApproveInfo);\n    return isApproveInfo;\n  }\n\n  @Valid('IsApproveInfo')\n  public isNeedApprove_plan(FYFC: string, Forecast: string, GoalAndPlanDifferenceLimit: number): Observable<IsApproveInfo> {\n    console.log('isNeedApprove_plan FYFC', FYFC, 'Forecast', Forecast, 'GoalAndPlanDifferenceLimit', GoalAndPlanDifferenceLimit)\n\n    let isApproveInfo: IsApproveInfo;\n\n    try {\n      if (this.goalSettingStep) {\n        isApproveInfo = this.goalSettingStep.isNeedApprove_plan(Number(FYFC), Number(Forecast), GoalAndPlanDifferenceLimit);\n      } else {\n        isApproveInfo = new IsApproveInfo(true, false);\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00404', 'isNeedApprove_plan fail!' + error.message));\n    }\n\n    console.log(\"isNeedApprove_plan isApproveInfo:\", isApproveInfo);\n    return of(isApproveInfo);\n  }\n\n  @Valid('SuccessStatus')\n  public submitGoal(submitType: SUBMITGOALTYPE, IsNeedApprove: boolean, submitData: GoalSettingStepData): Observable<SuccessStatus> {\n    return from(this._submitGoal(submitType, IsNeedApprove, submitData));\n  }\n\n  private async _submitGoal(submitType: SUBMITGOALTYPE, IsNeedApprove: boolean, submitData: GoalSettingStepData): Promise<SuccessStatus> {\n    console.log(\"[_submitGoal] submitData\", submitData);\n\n    let Activity: TIMEBASE;\n    let GoalSettingValue: Array<SubmitGoalSettingValue> = [];\n    let GoalPlan: SubmitGoalPlan = new SubmitGoalPlan();\n    let SubmitInfo: SubmitGoalInfo = new SubmitGoalInfo();\n    let SubmitDatas: SubmitGoalData;\n    let returnResp: SuccessStatus = new SuccessStatus(false);\n    try {\n      if (submitType == SUBMITGOALTYPE.ALL) {\n        let GoalSettingType = [\"Step1\", \"Step2\", \"Step5\"];\n\n        GoalSettingType.forEach(step => {\n          let stepMap = this.StepTextConvertMap.get(step);\n          stepMap.forEach((val, key) => {\n            if (submitData[step][key]) {\n              GoalSettingValue.push(new SubmitGoalSettingValue(val, submitData[step][key], []));\n            }\n          });\n        });\n        Activity = submitData.Step3.Activity;\n      }\n\n      console.log(\"GoalSettingValue\", GoalSettingValue);\n      GoalPlan.TimeBase = TIMEBASE.MONTH;\n      GoalPlan.Values = submitData.Step4.MonthList.filter(x => x.Plan != this.DASH).map(x => {\n        return new SubmitGoalPlanInfo(PERFORMANCETYPE.PERSONAL, x.Month, Number(x.Plan), []);\n      });\n      console.log(\"GoalPlan\", GoalPlan);\n\n      SubmitInfo.DataYear = submitData.DataYear;\n      SubmitInfo.SubmitType = submitType;\n      SubmitInfo.ActivityGoalBase = Activity;\n      SubmitInfo.IsNeedApprove = IsNeedApprove ? YESNO.YES : YESNO.NO;\n      SubmitInfo.Extensions = [];\n\n      console.log(\"SubmitInfo\", SubmitInfo);\n\n      SubmitDatas = new SubmitGoalData(SubmitInfo, GoalSettingValue, GoalPlan);\n      let Resp = await this._pushGoalSetting(SubmitDatas);\n      if (Resp.isSuccess) {\n        await this.syncGoalDatas();\n        returnResp.isSuccess = true;\n      } else {\n        throw \"submit goal fail! \";\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00405', 'submitGoal fail!' + error.message));\n      returnResp.isSuccess = false;\n    }\n\n    console.log(\"_submitGoal resp2\", returnResp);\n\n    return returnResp;\n  }\n\n  //#endregion Submit & Approve\n\n  //#region LANDING status\n  public getIsFirstUse(): Observable<boolean> {\n    // get DeviceInfo table\n\n    return Observable.create(observer => {\n      let DeviceInfo = this.APIFactory.getAPI(\"getDeviceInfo\");\n      (<GetDeviceInfoAPI>DeviceInfo).setDataType(\"FirstUseAPP\");\n      try {\n        this.dispatcher.dispatch(DeviceInfo).toPromise().then(Datas => {\n          console.log(\"getIsFirstUse\", Datas[\"Body\"][0].CategoryVal == \"Y\" ? true : false)\n          observer.next(Datas[\"Body\"][0].CategoryVal == \"Y\" ? true : false);\n          observer.complete();\n        });\n      } catch (error) {\n        this.errorHandler.handleError(new APPError('F00408', 'getIsFirstUse fail!' + error.message));\n      }\n    });\n  }\n\n\n  // @Valid('GoalSettingGoalStatus')\n  public getSettingStatus(): Observable<Array<GoalSettingGoalStatus>> {\n    return from(this._getSettingStatus());\n  }\n\n  private async _getSettingStatus(): Promise<Array<GoalSettingGoalStatus>> {\n    let GoalSettingResp: any;\n    let yearConfigResp: any;\n    let returnDatas: Array<GoalSettingGoalStatus> = [];\n\n    try {\n\n      let goalSetting = this.APIFactory.getAPI(\"getGoalSettingGoalSetting\");\n      let yearConfig = this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n\n      [GoalSettingResp, yearConfigResp] = await Promise.all([\n        this.dispatcher.dispatch(goalSetting).toPromise(),\n        this.dispatcher.dispatch(yearConfig).toPromise()\n      ]);\n\n      //getGoalSetting\n      let goalSettingMap = new Map<number, any>();\n      let yearConfigMap = new Map<number, any>();\n      if (GoalSettingResp.Header[\"status\"] && yearConfigResp.Header[\"status\"]) {\n        goalSettingMap = this.yearJsonToMap(GoalSettingResp[\"Body\"]);\n        yearConfigMap = this.yearJsonToMap(yearConfigResp[\"Body\"]);\n\n        returnDatas = [];\n        goalSettingMap.forEach((data, key) => {\n          let goalStatus = new GoalSettingGoalStatus();\n          goalStatus.DataYear = key;\n          goalStatus.IsCurrent = yearConfigMap.get(key).IsCurrent;\n          goalStatus.IsNeedSetting = data.IsNeedSetting == YESNO.YES;\n          goalStatus.IsFirstTime = data.IsFirstTime == YESNO.YES;\n          goalStatus.ApproveStatus = data.ApproveStatus;\n          goalStatus.RemainingDays = data.Remainingdays;\n          returnDatas.push(goalStatus);\n        });\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00409', 'getSettingStatus fail!' + error.message));\n    }\n\n    console.log(\"getSettingStatus returnDatas\", returnDatas);\n    return returnDatas;\n  }\n\n  private yearJsonToMap(yearJson): Map<number, any> {\n    console.log(\"yearJson\", yearJson);\n    let map = new Map<number, any>();\n    if (yearJson != null) {\n      yearJson.forEach(data => {\n        if (data.DataYear != undefined) {\n          map.set(data.DataYear, data);\n        }\n      });\n    }\n    return map;\n  }\n\n  //#endregion LANDING status\n\n\n  //#region GoalSetting overview\n  @Valid('GoalSettingStepData')\n  public getOverviewData(performanceType: PERFORMANCETYPE, DataYear: number = -1, AgentID: string = \"\"): Observable<GoalSettingStepData> {\n    if (StringUtils.isEmpty(AgentID)) {\n      return from(this._getOverviewDataBySQL(performanceType, DataYear));\n    } else {\n      return from(this._getOverviewDataByRestful(performanceType, DataYear, AgentID));\n    }\n  }\n\n  private async _getOverviewDataBySQL(performanceType: PERFORMANCETYPE, year: number = -1) {\n\n    let goalStepDatas: GoalSettingStepData = new GoalSettingStepData(year);\n    try {\n      goalStepDatas = await this._getGoalSettingStep1_5Data(year, true);\n      console.log(\"_getOverviewDataBySQL goalStepDatas\", JSON.stringify(goalStepDatas));\n      if (goalStepDatas != null) {\n        let actualPlanData = await this._getMonthActualPlanBySQL(performanceType, year, goalStepDatas[\"YearConfig\"][\"MonthQuantityOfYear\"], goalStepDatas[\"YearConfig\"][\"PerformanceSettlementMonth\"]);\n        if (actualPlanData != null) {\n          goalStepDatas.Step4 = actualPlanData;\n          goalStepDatas.Step4.Shortfall = this.calculateShortfall(goalStepDatas.Step1.FYFC, goalStepDatas.Step4.Forecast).toString();\n        } else {\n          throw \"get MonthActualPlan data fail.\";\n        }\n        let agencyPlanObj: AgencyPlanDataForOverview = new AgencyPlanDataForOverview();\n        if (performanceType == PERFORMANCETYPE.PERSONAL) {\n          let perCase: string = goalStepDatas.Step2.PerCase ? goalStepDatas.Step2.PerCase : '1';\n          let activityGoal: string = goalStepDatas.Step1.ActivityFYFC ? goalStepDatas.Step1.ActivityFYFC : goalStepDatas.Step1.FYFC;\n          let activityDays: string = goalStepDatas.Step1.ActivityDays ? goalStepDatas.Step1.ActivityDays : goalStepDatas.YearConfig.NowToYearEndDays.toString();\n          goalStepDatas.Step3 = this.calculateActivityData(activityGoal, perCase, goalStepDatas.YearConfig, activityDays);\n        } else if (performanceType == PERFORMANCETYPE.TEAM) {\n          let agencyPlanMainInfo: AgencyPlanMainInfo = await this.getAgencyPlanMainData(year).toPromise();\n\n          if (agencyPlanMainInfo && agencyPlanMainInfo.AgencyMainDataList.length) {\n            let agencyPlanMainList = agencyPlanMainInfo.AgencyMainDataList;\n            console.warn(\"agencyPlanMainList: \", JSON.stringify(agencyPlanMainList));\n            console.log(agencyPlanMainList.filter(x => x.DataType == \"FYFC\")[0].Forecast);\n\n            console.log(\"agencyPlanObj\", agencyPlanObj);\n            agencyPlanObj.FYFCForecast = agencyPlanMainList.filter(x => x.DataType == \"FYFC\")[0].Forecast;\n            agencyPlanObj.ANPForecast = agencyPlanMainList.filter(x => x.DataType == \"ANP\")[0].Forecast;\n            agencyPlanObj.ManpowerPlan = this.changeToDash(agencyPlanMainList.filter(x => x.DataType == \"Manpower\")[0].MonthPlan);\n            agencyPlanObj.RecruitmentPlan = agencyPlanMainList.filter(x => x.DataType == \"Recruitment\")[0].MonthPlan;\n            agencyPlanObj.CompletionRate = agencyPlanMainInfo.CompletionRate;\n          } else {\n            throw \"get agencyPlan data fail.\";\n          }\n          goalStepDatas.AgencyPlan = agencyPlanObj;\n        }\n      } else {\n        throw \"get 1_5Data Fail. goalStepDatas:\" + goalStepDatas\n      }\n\n      goalStepDatas = this._converSelectCode(goalStepDatas);\n      if (this.goalSettingStep) {\n        goalStepDatas = this.goalSettingStep.changeEmptyToDash(goalStepDatas);\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00504', 'getOverviewDataBySQL fail!' + error));\n    }\n\n    console.log(\"_getOverviewDataBySQL goalStepDatas\", goalStepDatas, JSON.stringify(goalStepDatas));\n    return goalStepDatas;\n  }\n\n  private async _getOverviewDataByRestful(performanceType: PERFORMANCETYPE, DataYear: number = -1, AgentID: string = \"\"): Promise<GoalSettingStepData> {\n\n    console.warn(\"performanceType: \", performanceType, \" DataYear: \", DataYear, \" AgentID: \", AgentID);\n\n    let GetGoalResp: any;\n    let GetYearConfigResp: any;\n\n    let goalSettingObj: any;\n    let GoalValues: any;\n    let goalSettingValueObj: any = {};\n\n    let YearConfig: GoalSettingYearConfig = new GoalSettingYearConfig();\n    let GoalStatus: GoalSettingGoalStatus = new GoalSettingGoalStatus();\n    let Step1: GoalSettingStep1 = new GoalSettingStep1();\n    let Step2: GoalSettingStep2 = new GoalSettingStep2();\n    let Step3: GoalSettingStep3 = new GoalSettingStep3();\n    let Step4: GoalSettingStep4 = new GoalSettingStep4();\n    let Step5: GoalSettingStep5 = new GoalSettingStep5();\n    let AgencyPlan: AgencyPlanDataForOverview = new AgencyPlanDataForOverview();\n\n    YearConfig.DataYear = DataYear;\n    GoalStatus.DataYear = DataYear;\n    let returnDatas: GoalSettingStepData = new GoalSettingStepData(DataYear);\n\n    try {\n      let getGoalapi = this.APIFactory.getAPI(\"getGoal\");\n      (<getGoalAPI>getGoalapi).setAgentID(AgentID);\n      let getYearConfigapi = this.APIFactory.getAPI(\"getYearConfig\");\n      (<getYearConfigAPI>getYearConfigapi).setAgentID(AgentID);\n\n      [GetGoalResp, GetYearConfigResp] = await Promise.all([\n        this.dispatcher.dispatch(getGoalapi).toPromise(),\n        this.dispatcher.dispatch(getYearConfigapi).toPromise()\n      ]);\n\n      console.log(\"_getOverviewDataByRestful GetGoalResp\", GetGoalResp);\n      console.log(\"_getOverviewDataByRestful GetYearConfigResp\", GetYearConfigResp);\n\n      let GoalMap = this.yearJsonToMap(GetGoalResp.Goals);\n      let YearConfigMap = this.yearJsonToMap(GetYearConfigResp.Configurations);\n\n      let GoalObj = GoalMap.get(DataYear);\n      let yearConfigObj = YearConfigMap.get(DataYear);\n      if (GoalObj != undefined && yearConfigObj != undefined) {\n        goalSettingObj = GoalMap.get(DataYear).GoalSetting;\n        GoalValues = GoalMap.get(DataYear).GoalValue;\n\n        console.log(\"_getOverviewDataByRestful goalSettingObj\", goalSettingObj);\n        console.log(\"_getOverviewDataByRestful GoalValues\", GoalValues);\n\n        GoalValues.forEach(GoalValue => {\n          goalSettingValueObj[GoalValue.DataType] = GoalValue.Value;\n        });\n\n        let monthQuantityOfYear = yearConfigObj.MonthQuantityOfYear;\n        let PerformanceSettlementMonth = yearConfigObj.PerformanceSettlementMonth;\n        Step4 = await this._getMonthActualPlanByRestful(performanceType, DataYear, monthQuantityOfYear, PerformanceSettlementMonth, AgentID);\n        Step4.Shortfall = this.calculateShortfall(Step1.FYFC, Step4.Forecast);\n        let allYearActual: string = this.calculateActual(yearConfigObj.PerformanceSettlementMonth, Step4.MonthList);\n\n        YearConfig.InforceConvertSubmitRate = yearConfigObj.InforceConvertSubmitRate;\n        YearConfig.InforceConvertMeetRate = yearConfigObj.InforceConvertMeetRate;\n        YearConfig.InforceConvertScheduleRate = yearConfigObj.InforceConvertScheduleRate;\n        YearConfig.InforceConvertFindRate = yearConfigObj.InforceConvertFindRate;\n        YearConfig.NowToYearEndDays = yearConfigObj.NowToYearEndDays;\n        YearConfig.PerformanceSettlementMonth = yearConfigObj.PerformanceSettlementMonth;\n        YearConfig.MonthQuantityOfYear = yearConfigObj.MonthQuantityOfYear;\n        YearConfig.WorkingMonth = yearConfigObj.WorkingMonth;\n        YearConfig.GoalAndPlanDifferenceLimit = yearConfigObj.GoalAndPlanDifferenceLimit;\n        if (this.yearConfigExtension) {\n          let yearConfigExtData: ExtensionData = this.yearConfigExtension.getExtensionData(yearConfigObj, { source: \"Restful\" });\n          YearConfig.setExtension(yearConfigExtData);\n        }\n\n\n        GoalStatus.PersonnelGoalApplicableYM = goalSettingObj.PersonnelGoalApplicableYM;\n        GoalStatus.TeamGoalApplicableYM = goalSettingObj.TeamGoalApplicableYM;\n        GoalStatus.GoalSetMonth = goalSettingObj.GoalSetMonth;\n        GoalStatus.ApproveStatus = goalSettingObj.Status;\n        if (this.goalSettingExtension) {\n          let goalSettingExtData: ExtensionData = this.goalSettingExtension.getExtensionData(goalSettingObj, { source: \"Restful\" });\n          GoalStatus.setExtension(goalSettingExtData);\n        }\n\n        if (performanceType == PERFORMANCETYPE.PERSONAL) {\n          Step1.FYFC = goalSettingValueObj.PERSON_FYFC;\n          Step1.AnnualConvention = goalSettingValueObj.ANNUAL_CONVENTION;\n          Step1.MDRT = goalSettingValueObj.MDRT;\n          Step1.PromotionPlan = goalSettingValueObj.PROMOTION_PLAN;\n          Step1.Actual = allYearActual;\n          Step1.FYFCNowToYearEnd = this.calculateNowToYearEndGoal(goalSettingValueObj.PERSON_FYFC, allYearActual);\n\n          Step2.PerCase = goalSettingValueObj.PER_CASE_FYFC;\n\n          let perCase = goalSettingValueObj.PER_CASE_FYFC;\n          let activityGoal = goalSettingValueObj.ACTIVITY_FYFC ? goalSettingValueObj.ACTIVITY_FYFC : goalSettingValueObj.PERSON_FYFC;\n          let activityDays = goalSettingValueObj.ACTIVITY_DAYS ? goalSettingValueObj.ACTIVITY_DAYS : yearConfigObj.NowToYearEndDays;\n          Step3 = this.calculateActivityData(activityGoal, perCase, YearConfig, activityDays);\n\n          returnDatas.YearConfig = YearConfig;\n          returnDatas.GoalStatus = GoalStatus;\n          returnDatas.Step1 = Step1;\n          returnDatas.Step2 = Step2;\n          returnDatas.Step3 = Step3;\n          returnDatas.Step4 = Step4;\n\n        } else {\n          Step5.TeamFYFC = goalSettingValueObj.TEAM_FYFC;\n          Step5.TeamANP = goalSettingValueObj.TEAM_ANP;\n          Step5.Manpower = goalSettingValueObj.TEAM_MANPOWER;\n          Step5.Recruitment = goalSettingValueObj.TEAM_RECRUITMENT;\n\n          let agencyPlanObj = await this.getAgencyPlanMainDataByRestful(DataYear, AgentID);\n\n          if (agencyPlanObj != null) {\n            let mainDataList = agencyPlanObj.AgencyMainDataList;\n            AgencyPlan.FYFCForecast = mainDataList.filter(x => x.DataType == \"FYFC\")[0].Forecast;\n            AgencyPlan.ANPForecast = mainDataList.filter(x => x.DataType == \"ANP\")[0].Forecast\n            AgencyPlan.ManpowerPlan = this.changeToDash(mainDataList.filter(x => x.DataType == \"Manpower\")[0].MonthPlan);\n            AgencyPlan.RecruitmentPlan = mainDataList.filter(x => x.DataType == \"Recruitment\")[0].MonthPlan;\n            AgencyPlan.CompletionRate = agencyPlanObj.CompletionRate;\n          } else {\n            throw \"get agencyPlan fail.\"\n          }\n          returnDatas.YearConfig = YearConfig;\n          returnDatas.GoalStatus = GoalStatus;\n          returnDatas.Step4 = Step4;\n          returnDatas.Step5 = Step5;\n\n          //todo get completionRate \n          // AgencyPlan.CompletionRate = ? ;\n          returnDatas.AgencyPlan = AgencyPlan;\n        }\n      }\n      returnDatas = this._converSelectCode(returnDatas);\n      if (this.goalSettingStep) {\n        returnDatas = this.goalSettingStep.changeEmptyToDash(returnDatas);\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00505', 'getOverviewDataByRestful fail!' + error.message));\n    }\n\n    console.log(\"_getOverviewDataByRestful returnDatas\", returnDatas, JSON.parse(JSON.stringify(returnDatas)));\n    return returnDatas;\n  }\n\n  //#endregion GoalSetting overview\n\n\n  //#region get month actual & plan\n  @Valid('GoalSettingStep4')\n  public getMonthActualPlan(performanceType: PERFORMANCETYPE, DataYear: number, monthQuantityOfYear: number = 12, PerformanceSettlementMonth: number = 99, AgentID: string = \"\"): Observable<GoalSettingStep4> {\n    if (StringUtils.isEmpty(AgentID)) {\n      return from(this._getMonthActualPlanBySQL(performanceType, DataYear, monthQuantityOfYear, PerformanceSettlementMonth));\n    } else {\n      return from(this._getMonthActualPlanByRestful(performanceType, DataYear, monthQuantityOfYear, PerformanceSettlementMonth, AgentID));\n    }\n  }\n\n  private async _getMonthActualPlanByRestful(performanceType: string, DataYear: number, monthQuantityOfYear: number, PerformanceSettlementMonth: number, AgentID: string): Promise<GoalSettingStep4> {\n    // call GetGoalAPI (Restful set AgentID)\n    let GoalResp: any;\n    let ActualResp: any;\n    let returnDatas: GoalSettingStep4 = new GoalSettingStep4();\n    let MonthActualPlanList: Array<MonthlyPlanFYFCData> = [];\n\n    try {\n      let getGoalapi = this.APIFactory.getAPI(\"getGoal\");\n      let getActualapi = this.APIFactory.getAPI(\"getActual\");\n      (<getGoalAPI>getGoalapi).setAgentID(AgentID);\n      (<getActualAPI>getActualapi).setAgentID(AgentID);\n\n      [GoalResp, ActualResp] = await Promise.all([\n        this.dispatcher.dispatch(getGoalapi).toPromise(),\n        this.dispatcher.dispatch(getActualapi).toPromise()\n      ]);\n\n      console.log(\"GoalResp\", GoalResp);\n      console.log(\"ActualResp\", ActualResp);\n\n      let GoalPlanMap = new Map<number, string>();\n      let ActuallMap = new Map<number, string>();\n      let thisActual: Array<any> = [];\n\n      if (GoalResp.Goals != null && ActualResp.Actual != null) {\n        GoalResp.Goals.forEach(Goal => {\n          if (Goal.DataYear == DataYear && Goal.GoalPlan.Values != null) {\n            Goal.GoalPlan.Values.forEach(plan => {\n              if (plan.PerformanceType == performanceType) {\n                GoalPlanMap.set(plan.Month, plan.Value.toString());\n              }\n            });\n          }\n        });\n\n        thisActual = ActualResp.Actual.filter(Actual => Actual.DataYear == DataYear).map(x => x.Values);\n        console.log(\"thisActual\", thisActual);\n        thisActual.forEach(Actual => {\n          Actual.forEach(value => {\n            if (value.DataType == \"FYFC\" && value.PerformanceType == performanceType) {\n              ActuallMap.set(value.Month, value.Value.toString());\n            }\n          });\n        });\n      } else {\n        throw \"get Goal fail. GoalResp:\" + GoalResp;\n      }\n\n      for (let i = 1; i <= monthQuantityOfYear; i++) {\n        MonthActualPlanList.push(new MonthlyPlanFYFCData(\n          i,\n          this.changeToDash(GoalPlanMap.get(i)),\n          ActuallMap.get(i) == null || i > PerformanceSettlementMonth ? this.DASH : ActuallMap.get(i)));\n      }\n      returnDatas.MonthList = MonthActualPlanList;\n      returnDatas.Actual = this.calculateActual(PerformanceSettlementMonth, MonthActualPlanList).toString();\n      returnDatas.Forecast = this.calculateForecast(PerformanceSettlementMonth, MonthActualPlanList).toString();\n      returnDatas.Shortfall = null;\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00410', 'getMonthActualPlanByRestful fail!' + error.message));\n    }\n\n    console.log(\"_getMonthActualPlanByRestful Datas\", returnDatas);\n    return returnDatas;\n  }\n\n  private async _getMonthActualPlanBySQL(performanceType: string, DataYear: number, monthQuantityOfYear: number, PerformanceSettlementMonth: number): Promise<GoalSettingStep4> {\n\n    console.log('_getMonthActualPlanBySQL performanceType', performanceType, 'DataYear', DataYear, 'monthQuantityOfYear', monthQuantityOfYear, 'PerformanceSettlementMonth', PerformanceSettlementMonth)\n    let returnData: GoalSettingStep4 = new GoalSettingStep4();\n    let MonthActualPlanList: Array<MonthlyPlanFYFCData> = [];\n    try {\n      let actualResp, goalPlanResp;\n      // call GetGoalSettingValue       // call GetActualValue\n      let goalPlanList: string[] = Array(monthQuantityOfYear).fill(this.DASH, 0);\n      let actualList: string[] = Array(monthQuantityOfYear).fill(this.DASH, 0);\n      let goalPlan = this.APIFactory.getAPI(\"getGoalSettingPlan\");\n      let actual = this.APIFactory.getAPI(\"getGoalSettingActualValue\");\n      (<GoalSettingGetPlanAPI>goalPlan).setDataYear(DataYear);\n      (<GoalSettingGetActualAPI>actual).setDataYear(DataYear);\n\n      [goalPlanResp, actualResp] = await Promise.all([\n        this.dispatcher.dispatch(goalPlan).toPromise(),\n        this.dispatcher.dispatch(actual).toPromise()\n      ]);\n      console.log(\"goalPlanResp\", goalPlanResp);\n      console.log(\"actualResp\", actualResp);\n\n      if (goalPlanResp.Header[\"status\"] && actualResp.Header[\"status\"]) {\n        goalPlanResp[\"Body\"].filter(x => x.PerformanceType == performanceType).map(x => {\n          goalPlanList[x.Month - 1] = x.Value.toString();\n        });\n        actualResp[\"Body\"].filter(x => x.PerformanceType == performanceType && x.DataType == \"FYFC\" && x.Month <= PerformanceSettlementMonth).map(x => {\n          actualList[x.Month - 1] = x.Value.toString();\n        });\n      } else {\n        throw \"get GoalSetting fail. goalPlanResp\" + goalPlanResp.Header.msg + 'actualResp:' + actualResp.Header.msg;\n      }\n      console.log(\"goalPlanList\", goalPlanList);\n      console.log(\"actuallist\", actualList);\n\n      for (let i = 1; i <= monthQuantityOfYear; i++) {\n        MonthActualPlanList.push(new MonthlyPlanFYFCData(\n          i,\n          goalPlanList[i - 1],\n          actualList[i - 1]));\n      }\n      returnData.MonthList = MonthActualPlanList;\n      returnData.Actual = this.calculateActual(PerformanceSettlementMonth, MonthActualPlanList).toString();\n      returnData.Forecast = this.calculateForecast(PerformanceSettlementMonth, MonthActualPlanList).toString();\n      returnData.Shortfall = null;\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00411', 'getMonthActualPlanBySQL fail!' + error.message));\n    }\n    console.log(\"_getMonthActualPlanBySQL returnData\", returnData);\n    return returnData;\n  }\n\n  //#endregion get month actual & plan\n\n\n  //#region AgencyPlan Datas\n  public getAgencyPlanMainData(dataYear: number, AgentID: string = \"\"): Observable<AgencyPlanMainInfo> {\n    if (AgentID == \"\") {\n      return from(this.getAgencyPlanMainDataBySQL(dataYear));\n    } else if (AgentID != \"\") {\n      return from(this.getAgencyPlanMainDataByRestful(dataYear, AgentID));\n    }\n  }\n\n  private async getAgencyPlanMainDataBySQL(dataYear: number): Promise<AgencyPlanMainInfo> {\n    console.log('getAgencyPlanMainDataBySQL DataYear', dataYear);\n\n    let returnData: AgencyPlanMainInfo = new AgencyPlanMainInfo();\n\n    let otherParaResp;\n    let agencyPlanResp;\n\n    try {\n      //get completionRate \n      let getOtherParameterAPI: GetOtherParameterAPI = <GetOtherParameterAPI>this.APIFactory.getAPI('getOtherParameter');\n      let agencyPlanGetMainAPI: AgencyPlanGetMainAPI = <AgencyPlanGetMainAPI>(this.APIFactory.getAPI(\"getAgencyPlanMain\"));\n      getOtherParameterAPI.SetYear(dataYear);\n      agencyPlanGetMainAPI.setDataYear(dataYear);\n\n      [otherParaResp, agencyPlanResp] = await Promise.all(\n        [getOtherParameterAPI, agencyPlanGetMainAPI].map(api => this.dispatcher.dispatch(api).toPromise()));\n      console.log('otherParaResp: ', otherParaResp, \"agencyPlanResp\", agencyPlanResp);\n\n      if (otherParaResp.Header[\"status\"] && agencyPlanResp.Header[\"status\"]) {\n        let respFilterCompletionRate = otherParaResp['Body'].filter(x => x.MappingID === \"CompletionRate\");\n        let completionRate: string = respFilterCompletionRate.length > 0 ? respFilterCompletionRate[0].SetValue : '';\n\n        let returnList: Array<AgencyPlanMainData> = [];\n        let AgencyPlanMainList = agencyPlanResp[\"Body\"];\n        console.log(\"getAgencyPlanMainDataBySQL AgencyPlanMainList\", AgencyPlanMainList);\n        if (AgencyPlanMainList) {\n          returnList = (<Array<any>>AgencyPlanMainList).map(main => this._agencyPlanMainDataObjToBean(main));\n        } else {\n          throw \"get AgencyPlanMainList fail.\"\n        }\n        console.log('getAgencyPlanMainDataBySQL returnList:', returnList);\n\n        console.log('completionRate:', completionRate);\n        returnData.CompletionRate = completionRate;\n        returnData.AgencyMainDataList = returnList;\n\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00300', 'getAgencyPlanMainDataBySQL fail!' + error));\n    }\n\n    console.log(\"getAgencyPlanMainDataBySQL returnData\", returnData);\n    return returnData;\n  }\n\n  private _agencyPlanMainDataObjToBean(object: any): AgencyPlanMainData {\n    let agencyPlanMainData: AgencyPlanMainData = new AgencyPlanMainData();\n    agencyPlanMainData.Actual = object.Actual;\n    agencyPlanMainData.DataType = object.DataType;\n    agencyPlanMainData.DataYear = object.DataYear;\n    agencyPlanMainData.Forecast = object.Forecast;\n    agencyPlanMainData.MonthPlan = this.changeToDash(object.MonthPlan);\n    return agencyPlanMainData;\n  }\n\n  private async getAgencyPlanMainDataByRestful(dataYear: number, AgentID: string): Promise<AgencyPlanMainInfo> {\n\n    console.log('getAgencyPlanMainDataByRestful dataYear', dataYear, 'AgentID', AgentID);\n    let returnData: AgencyPlanMainInfo = new AgencyPlanMainInfo();\n    let MainList: Array<AgencyPlanMainData> = [];\n\n    try {\n      let getAgencyPlanAPI: getAgencyPlanAPI = <getAgencyPlanAPI>(this.APIFactory.getAPI(\"getAgencyPlan\"));\n      getAgencyPlanAPI.setAgentID(AgentID);\n      let agencyPlanResp = await this.dispatcher.dispatch(getAgencyPlanAPI).toPromise();\n\n      console.log(\"getAgencyPlanMainDataByRestful agencyPlanResp \", agencyPlanResp);\n      if (agencyPlanResp.AgencyPlans != null) {\n        let agencyPlanMap = this.yearJsonToMap(agencyPlanResp.AgencyPlans);\n        let completionRate = agencyPlanMap.get(dataYear).CompletionRate;\n        let tempAgencyPlanList = agencyPlanMap.get(dataYear).Values;\n        (<Array<any>>tempAgencyPlanList).forEach(plan => {\n          plan['MonthPlan'] = plan['Plan'];\n          plan['DataYear'] = dataYear;\n        });\n\n        MainList = (<Array<any>>tempAgencyPlanList).map(plan => this._agencyPlanMainDataObjToBean(plan));\n        returnData.AgencyMainDataList = MainList;\n        returnData.CompletionRate = completionRate;\n      } else {\n        throw \"get AgencyPlan fail. agencyPlanResp:\" + agencyPlanResp;\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00301', 'getAgencyPlanMainDataByRestful fail!' + error.message));\n    }\n\n    console.log(\"getAgencyPlanMainDataByRestful returnData \", returnData);\n    return returnData;\n\n  }\n\n  @Valid('AgencyPlanDetail')\n  public getAgencyPlanDetailData(dataYear: number): Observable<Array<AgencyPlanDetail>> {\n\n    let agencyPlanGetDetailAPI: AgencyPlanGetDetailAPI = <AgencyPlanGetDetailAPI>this.APIFactory.getAPI(\"getAgencyPlanDetail\");\n    agencyPlanGetDetailAPI.setDataYear(dataYear);\n    return Observable.create(observer => {\n      try {\n        this.dispatcher.dispatch(agencyPlanGetDetailAPI).subscribe(resp => {\n          if (resp[\"Body\"]) {\n            let returnList: Array<AgencyPlanDetail> = [];\n            // let AgencyPlanDetailList: Array<AgencyPlanDetail> = resp[\"Body\"];\n            returnList = (<Array<any>>resp[\"Body\"]).map(item => this._agencyPlanDetailObjToBean(item));\n            console.log(\"returnList in service: \", returnList);\n            observer.next(returnList);\n            observer.complete();\n          }\n          else {\n            throw \"get agencyPlanGetDetail fail. resp:\" + resp;\n          }\n        });\n      } catch (error) {\n        this.errorHandler.handleError(new APPError('F00302', 'getAgencyPlanDetailData fail!' + error.message));\n      }\n    });\n  }\n\n  private _agencyPlanDetailObjToBean(object: any): AgencyPlanDetail {\n    let agencyPlanDetail = new AgencyPlanDetail();\n\n    agencyPlanDetail.AgentID = object.AgentID;\n    agencyPlanDetail.AgentName = object.AgentName;\n    agencyPlanDetail.DataYear = object.DataYear;\n    agencyPlanDetail.AppUseMode = object.AppUseMode;\n    agencyPlanDetail.JobGrade = object.JobGrade;\n    agencyPlanDetail.Actual = this.changeToDash(object.Actual);\n    agencyPlanDetail.CaseCount = this.changeToDash(object.CaseCount);\n    agencyPlanDetail.ClientID = object.ClientID;\n    agencyPlanDetail.DataType = object.DataType;\n    agencyPlanDetail.DirectUnitType = object.DirectUnitType;\n    agencyPlanDetail.Drilldown = object.Drilldown;\n    agencyPlanDetail.TextColor = agencyPlanDetail.Drilldown == 'Y' ? 'blue' : 'default';\n    agencyPlanDetail.Forecast = this.changeToDash(object.Forecast);\n    agencyPlanDetail.Goal = this.changeToDash(object.Goal);\n    agencyPlanDetail.IsApprove = object.IsApprove;\n    agencyPlanDetail.IsHasDot = agencyPlanDetail.IsApprove === 'Y';\n    agencyPlanDetail.Manpower = object.Manpower;\n    agencyPlanDetail.MonthPlan = this.changeToDash(object.MonthPlan);\n    agencyPlanDetail.Orders = object.Orders;\n    agencyPlanDetail.PerCase = this.changeToDash(object.PerCase);\n    agencyPlanDetail.Recruitment = object.Recruitment;\n\n    return agencyPlanDetail;\n\n  }\n\n  @Valid('AgencyPlanGoalExpected')\n  public async getGoalExpected(dataYear: number): Promise<AgencyPlanGoalExpected> {\n\n    let returnAgencyPlanGoalExpected: AgencyPlanGoalExpected;\n    let goalSettingYearConfigAPI: GoalSettingGetYearConfigAPI = <GoalSettingGetYearConfigAPI>this.APIFactory.getAPI(\"getGoalSettingYearConfig\");\n    goalSettingYearConfigAPI.setDataYear(dataYear);\n    let goalSettingGetExpectedAPI: GoalSettingGetExpectedAPI = <GoalSettingGetExpectedAPI>this.APIFactory.getAPI(\"getGoalSettingExpected\");\n    goalSettingGetExpectedAPI.setDataYear(dataYear);\n    try {\n      let yearConfigResp;\n      let goalExpectedResp;\n\n      [yearConfigResp, goalExpectedResp] = await Promise.all([\n        this.dispatcher.dispatch(goalSettingYearConfigAPI).toPromise(),\n        this.dispatcher.dispatch(goalSettingGetExpectedAPI).toPromise()\n      ])\n\n      if (goalExpectedResp && yearConfigResp) {\n        let expectedRespBody: Array<any> = goalExpectedResp[\"Body\"];\n        let yearConfigRespBody: Array<any> = yearConfigResp[\"Body\"];\n\n        returnAgencyPlanGoalExpected = expectedRespBody.length > 0 ? this._agencyPlanGoalExpectedObjToBean(expectedRespBody[0]) : new AgencyPlanGoalExpected(dataYear);\n        returnAgencyPlanGoalExpected.FYFCConvertANPRate = yearConfigRespBody[0]['FyfcCovertAnpRate'];\n        returnAgencyPlanGoalExpected.WorkingQuarter = yearConfigRespBody[0]['WorkingQuarter'];\n\n        console.log(\"getGoalExpected trans\", returnAgencyPlanGoalExpected);\n      } else {\n        throw \"get goal expected and yearConfigfail.\";\n      }\n\n      return returnAgencyPlanGoalExpected;\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00303', 'getGoalExpected fail!' + error.message));\n    }\n\n  }\n\n  private _agencyPlanGoalExpectedObjToBean(object: any): AgencyPlanGoalExpected {\n\n    let goalExpected: AgencyPlanGoalExpected = new AgencyPlanGoalExpected(object.DataYear);\n\n    goalExpected.ANP = object.ANP.toString();\n    goalExpected.FYFC = object.FYFC.toString();\n    goalExpected.Q1 = object.Q1.toString();\n    goalExpected.Q2 = object.Q2.toString();\n    goalExpected.Q3 = object.Q3.toString();\n    goalExpected.Q4 = object.Q4.toString();\n    let numberRecruitmentTotal = NumberUtils.isNumber(object.RecruitmentTotal) ? Number(object.RecruitmentTotal) : 0;\n    goalExpected.RecruitmentTotal = numberRecruitmentTotal;\n    return goalExpected;\n  }\n\n  public calculaRecruitmentSum(goalExpected: AgencyPlanGoalExpected): number {\n    return [goalExpected.Q1, goalExpected.Q2, goalExpected.Q3, goalExpected.Q4].reduce((total, each) => {\n      let numberQ = NumberUtils.isNumber(each) ? Number(each) : 0;\n      return total + numberQ;\n    }, 0);\n  }\n\n  public saveGoalExpected(expectedRecruitment: object, indirectRecruitment: number): Observable<any> {\n\n    let goalSettingSetExpectedAPI: GoalSettingSetExpectedAPI = <GoalSettingSetExpectedAPI>this.APIFactory.getAPI(\"setGoalSettingExpected\");\n    goalSettingSetExpectedAPI.setExpectedRecruitment(expectedRecruitment);\n    goalSettingSetExpectedAPI.setIndirectRecruitment(indirectRecruitment);\n    return Observable.create(observer => {\n      try {\n        this.dispatcher.dispatch(goalSettingSetExpectedAPI).subscribe(resp => {\n          observer.next(resp[\"Header\"]);\n          observer.complete();\n        });\n      } catch (error) {\n        this.errorHandler.handleError(new APPError('F00304', 'saveGoalExpected fail!' + error.message));\n      }\n    });\n  }\n\n  //#endregion AgencyPlan Datas\n\n\n  //#region other function\n  public numberToFix(n: number, toFix: number): number {\n    let fix10 = Math.pow(10, toFix);\n    let returnData = Math.round(this.strip(n) * fix10) / fix10;\n    return returnData;\n  }\n\n  public strip(num, precision = 12) {\n    return Number(num.toPrecision(precision));\n  }\n\n  public calculateNowToYearEndGoal(FYFC: any, actual: any): string {\n    console.log(\"calculateNowToYearEndGoal FYFC:\", FYFC, \"actual:\", actual);\n    let caculeteActual = NumberUtils.isNumber(actual) ? Number(actual) : 0;\n    if (!NumberUtils.isNumber(FYFC)) {\n      return this.DASH;\n    } else {\n      let result = Number(FYFC) - caculeteActual < 0 ? 0 : Number(FYFC) - caculeteActual;\n      return result.toString();\n    }\n  }\n\n  public calculateAllYearGoal(NowToYearEnd: any, actual: any): string {\n    console.log(\"calculateNowToYearEndGoal NowToYearEnd:\", NowToYearEnd, \"actual:\", actual);\n    let caculeteActual = NumberUtils.isNumber(actual) ? Number(actual) : 0;\n    if (!NumberUtils.isNumber(NowToYearEnd)) {\n      return this.DASH;\n    } else {\n      return (Number(NowToYearEnd) + caculeteActual).toString();\n    }\n  }\n\n\n  private _isPopup: boolean = false;\n\n  public get saveFeedbackState() {\n    return this._isPopup;\n  }\n\n  public set saveFeedbackState(isPopup: boolean) {\n    this._isPopup = isPopup;\n  }\n\n  public getActualPlanFromMonthList(list: Array<MonthlyPlanFYFCData>, actualMonth: number) {\n    console.log(\"getActualPlanFromMonthList:\", list, actualMonth);\n    return list.map((x, index) => (index + 1 < actualMonth || index + 1 === actualMonth ? x.Actual : x.Plan));\n  }\n\n  public calculateANPFromFYFC(FYFC, rate): string {\n    if (StringUtils.isEmpty(FYFC) || FYFC == this.DASH) {\n      return this.DASH;\n    } else {\n      return this.numberToFix(Number(FYFC) * Number(rate), 0).toString();\n    }\n  }\n\n  public calculateFYFCFromANP(ANP, rate): string {\n    if (StringUtils.isEmpty(ANP) || ANP == this.DASH) {\n      return this.DASH;\n    } else {\n      return this.numberToFix(Number(ANP) / Number(rate), 0).toString();\n    }\n  }\n\n  //#endregion other function\n\n\n  //#region Sync Datas \n  public async syncGoalDatas() {\n    this.goalStore.setSyncGoalDatas(SYNC_STATUS.SYNC);\n    await this.dataSyncService.syncFunc([\"GOAL\", \"PROGRESS\"], true);\n    this.goalStore.setSyncGoalDatas(SYNC_STATUS.FINISH);\n  }\n\n  public async syncAgencyPlan() {\n    return this.dataSyncService.syncFunc([\"AGENCY_PLAN\"], true);\n  }\n\n  public async syncYearConfig() {\n    return this.dataSyncService.syncFunc([\"YEAR_CONFIG\"], true);\n  }\n\n  @Valid('SuccessStatus')\n  public async pushApproveGoal(approveInfo: ApproveInfo): Promise<SuccessStatus> {\n    return this._pushApproveGoal(approveInfo);\n  }\n\n  public changeToDash(param: any): string {\n    return (param === -1 || param === null || param === \"\") ? this.DASH : param.toString();\n  }\n  //#endregion Sync Datas \n\n  private async _pushApproveGoal(approveInfo: ApproveInfo): Promise<SuccessStatus> {\n    let returnResp: SuccessStatus = new SuccessStatus(false);\n    let approveInfoData = {\n      \"AgentID\": approveInfo.AgentID,\n      \"DataYear\": approveInfo.DataYear,\n      \"isApprove\": approveInfo.IsApprove,\n      \"comment\": approveInfo.Comment\n    }\n    try {\n      let mainData = approveInfoData;\n      let pushApproveData = this.APIFactory.getAPI(\"pushApproveGoal\");\n      (<pushApproveGoalAPI>pushApproveData).mainData = mainData;\n      console.log('pushApproveGoal mainData', mainData);\n      let getResp = await this.dispatcher.dispatch(pushApproveData).toPromise();\n      console.log('getResp', getResp);\n      if (getResp.success) {\n        await this.dataSyncService.syncFunc([\"DASHBOARD\", \"GOAL\", \"PROGRESS\"]);\n        returnResp.isSuccess = true;\n      } else {\n        throw \"Approve Goal fail.\";\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00100', 'pushApproveGoal fail!' + error.message));\n    }\n    console.log(\"[_pushApproveGoal] returnResp:\", returnResp);\n    return returnResp;\n\n  }\n\n  private async _pushGoalSetting(submitDatas: SubmitGoalData): Promise<SuccessStatus> {\n\n    let returnResp: SuccessStatus = new SuccessStatus(false);\n    try {\n\n      console.log('pushGoalSettingDataAPI mainData', submitDatas);\n      let pushGoalSettingData = this.APIFactory.getAPI(\"pushGoalSettingData\");\n      (<pushGoalSettingDataAPI>pushGoalSettingData).mainData = submitDatas;\n      let getResp = await this.dispatcher.dispatch(pushGoalSettingData).toPromise();\n\n      if (getResp.success) {\n        returnResp.isSuccess = true;\n      } else {\n        throw \"push Goal failed,\" + getResp.Header.msg;\n      }\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00101', error));\n    }\n    return returnResp;\n  }\n\n  private _converSelectCode(StepData: GoalSettingStepData): GoalSettingStepData {\n    this.ColMapToProfile.forEach((code, col) => {\n      let profileCodes: Array<ProfileCode> = this.ColMapToProfileCodeMap.get(col);\n      if (profileCodes.length && StepData.Step1 && StepData.Step1[col]) {\n        let colVal = StepData.Step1[col];\n        profileCodes = profileCodes.filter(x => x.getCode() == colVal);\n        StepData.Step1[col] = profileCodes.length ? profileCodes[0].getMappingID() : this.DASH;\n      }\n    });\n    return StepData;\n  }\n\n}","import { Injectable, ErrorHandler, Optional, Inject } from \"@angular/core\";\nimport { StringUtils, NumberUtils, APPError } from \"@allianzSND/core\";\nimport { GoalSettingStepData, ValidError, GoalSettingStep4 } from \"./model\";\nimport { GoalSettingService } from \"./goal-setting.service\";\nimport { goalSettingStep, GoalValidExtension } from \"../interface\";\nimport { goalSettingStepToken, goalValidToken } from \"../injectionToken\";\n\n\n@Injectable({\n    providedIn: \"root\"\n  })\n  \n  export class GoalValidService {\n\n    private numberValid: Array<string> = [];\n    private requiredValid: Array<string> = [];\n\n    constructor(\n        private errorHandler: ErrorHandler,\n        private goalSettingService: GoalSettingService,\n        @Optional()\n        @Inject(goalSettingStepToken)\n        private goalSettingStep: goalSettingStep,\n        @Optional()\n        @Inject(goalValidToken)\n        private goalValid: GoalValidExtension,\n    ){\n        if(this.goalValid){\n            this.numberValid = this.goalValid.getNumberArray();\n            this.requiredValid = this.goalValid.getRequiredArray();\n        }else{\n            this.numberValid = [\"FYFC\", \"FYFCNowToYearEnd\", \"PerCase\", \"TeamFYFC\", \"TeamFYFCNowToYearEnd\", \"Recruitment\", \"Manpower\"];\n            this.requiredValid = [\"FYFC\", \"FYFCNowToYearEnd\", \"AnnualConvention\", \"MDRT\", \"PerCase\", \"TeamFYFC\", \"TeamFYFCNowToYearEnd\", \"Manpower\", \"Recruitment\"];    \n        }\n    }\n\n   //#region Vaild function\n   public onChangeValid(step: number, colId: string, val: string, validDatas: GoalSettingStepData, isAdjust: boolean, errorResult: Array<ValidError>, isPageValid: boolean = false): Array<ValidError> {\n\n    console.log(\"onChangeValid colId\", colId, \"val\", val, 'validDatas', validDatas, errorResult, 'isPageValid', isPageValid);\n    try {\n      let isDecimalResult: boolean;\n      let PlanEmpty = colId.indexOf(\"Plan_\") != -1 && StringUtils.isEmpty(val);\n      let RequiredEmpty: boolean = this.requiredValid.indexOf(colId) != -1 && StringUtils.isEmpty(val);\n      let numberPositive: boolean = this.numberValid.indexOf(colId) != -1 && !NumberUtils.isPositive(val);\n      let vaildEmptyResult: boolean = RequiredEmpty || numberPositive || PlanEmpty; //è² æ¸çerror msg ä¹æ¯_required\n\n      let requiredErrorMsg = (colId.indexOf(\"Plan_\") != -1) ? \"Plan_required\" : colId + \"_required\";\n      errorResult = this._setError(step, colId, \"_required\", vaildEmptyResult, errorResult, requiredErrorMsg); //å¤æ·æ¯å¦æ¯è² æ¸ææ¯ç©ºå¼\n\n      if (!vaildEmptyResult && (this.numberValid.indexOf(colId) != -1 || colId.indexOf(\"Plan_\") != -1)) { //å¤æ·ä¸æ¯ç©ºå¼æè² æ¸æç¹¼çºå¾ä¸é©è­\n        isDecimalResult = NumberUtils.isDecimal(val);\n        errorResult = this._setError(step, colId, \"_point\", isDecimalResult, errorResult);\n      }\n\n      console.log(\"isDecimalResult\", isDecimalResult, \"vaildEmptyResult\", vaildEmptyResult, \"isPageValid\", isPageValid);\n      if (!isDecimalResult && !vaildEmptyResult && !isPageValid) { //é©è­é½æ²æé¯ææ¹å¼\n        console.log(\"onChangeValid no error\");\n        if (colId.indexOf(\"Plan_\") != -1) {\n          validDatas.Step4.Forecast = this.goalSettingService.calculateForecast(validDatas.YearConfig.PerformanceSettlementMonth, validDatas.Step4.MonthList);\n          validDatas.Step4.Shortfall = this.goalSettingService.calculateShortfall(validDatas.Step1.FYFC, validDatas.Step4.Forecast);\n          errorResult = this._validShortfall(validDatas.Step4, errorResult);\n        }\n\n        if (!isAdjust) { // ç¬¬ä¸æ¬¡è¨­å®goal\n          switch (colId) {\n            case \"TeamFYFC\":\n              validDatas.Step5.TeamANP = this.goalSettingService.calculateANPFromFYFC(val, validDatas.YearConfig.FyfcCovertAnpRate);\n              break;\n            case \"TeamFYFCNowToYearEnd\":\n              validDatas.Step5.TeamANPNowToYearEnd = this.goalSettingService.calculateANPFromFYFC(val, validDatas.YearConfig.FyfcCovertAnpRate);\n              break;\n            case \"FYFC\":\n              validDatas.Step3 = this.goalSettingService.calculateActivityData(val, validDatas.Step2.PerCase, validDatas.YearConfig);\n              validDatas.Step4 = this.goalSettingService.calculateMonthActualPlan(validDatas.YearConfig, val, validDatas.ActualList);\n              validDatas.Step4.Shortfall = this.goalSettingService.calculateShortfall(Number(val), validDatas.Step4.Forecast);\n              errorResult = this.unitPageValid(4, validDatas, false, errorResult);\n              break;\n            case \"PerCase\":\n              validDatas.Step3 = this.goalSettingService.calculateActivityData(validDatas.Step1.FYFC, val, validDatas.YearConfig);\n              break;\n          }\n        } else {\n          let FYFCSmallValid = Number(validDatas.Step1.Actual) > Number(validDatas.Step1.FYFC);\n          let FYFCNowToYearEndIsPositive = NumberUtils.isPositive(validDatas.Step1.FYFCNowToYearEnd);\n          switch (colId) {\n            case \"FYFC\":\n              validDatas.Step1.FYFCNowToYearEnd = this.goalSettingService.calculateNowToYearEndGoal(val, validDatas.Step1.Actual);\n              errorResult = this._setError(1, colId, \"_small\", FYFCSmallValid, errorResult);\n              errorResult = this._setError(1, \"FYFCNowToYearEnd\", \"_required\", !FYFCNowToYearEndIsPositive, errorResult);\n              if (!FYFCSmallValid && FYFCNowToYearEndIsPositive) {\n                validDatas.Step3 = this.goalSettingService.calculateActivityData(validDatas.Step1.FYFCNowToYearEnd, validDatas.Step2.PerCase, validDatas.YearConfig);\n                validDatas.Step4.Forecast = this.goalSettingService.calculateForecast(validDatas.YearConfig.PerformanceSettlementMonth, validDatas.Step4.MonthList);\n                validDatas.Step4.Shortfall = this.goalSettingService.calculateShortfall(Number(val), validDatas.Step4.Forecast);\n                errorResult = this._validShortfall(validDatas.Step4, errorResult);\n              }\n              break;\n            case \"FYFCNowToYearEnd\":\n              validDatas.Step1.FYFC = this.goalSettingService.calculateAllYearGoal(val, validDatas.Step1.Actual);\n              errorResult = this.onChangeValid(1, \"FYFC\", validDatas.Step1.FYFC, validDatas, true, errorResult);\n              break;\n            case \"PerCase\":\n              if (!FYFCSmallValid && FYFCNowToYearEndIsPositive) {\n                validDatas.Step3 = this.goalSettingService.calculateActivityData(validDatas.Step1.FYFCNowToYearEnd, val, validDatas.YearConfig);\n              }\n              break;\n            case \"TeamFYFC\":\n              validDatas.Step5.TeamFYFCNowToYearEnd = this.goalSettingService.calculateNowToYearEndGoal(val, validDatas.Step5.TeamFYFCActual);\n              let TeamFYFCSmallValid = Number(validDatas.Step5.TeamFYFCActual) > Number(validDatas.Step5.TeamFYFC);\n              let TeamFYFCNowToYearEndIsPositive = NumberUtils.isPositive(validDatas.Step5.TeamFYFCNowToYearEnd);\n              validDatas.Step5.TeamANP = this.goalSettingService.calculateANPFromFYFC(validDatas.Step5.TeamFYFC, validDatas.YearConfig.FyfcCovertAnpRate);\n              validDatas.Step5.TeamANPNowToYearEnd = this.goalSettingService.calculateANPFromFYFC(validDatas.Step5.TeamFYFCNowToYearEnd, validDatas.YearConfig.FyfcCovertAnpRate);\n              errorResult = this._setError(5, \"TeamFYFC\", \"_small\", TeamFYFCSmallValid, errorResult);\n              errorResult = this._setError(5, \"TeamFYFCNowToYearEnd\", \"_required\", !TeamFYFCNowToYearEndIsPositive, errorResult);\n              break;\n            case \"TeamFYFCNowToYearEnd\":\n              validDatas.Step5.TeamFYFC = this.goalSettingService.calculateAllYearGoal(val, validDatas.Step5.TeamFYFCActual);\n              errorResult = this.onChangeValid(1, \"TeamFYFC\", validDatas.Step5.TeamFYFC, validDatas, true, errorResult);\n              break;\n          }\n        }\n      }\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00406', 'onChangeValid fail!' + error.message));\n    }\n\n    console.log('onChangeValid errorResult', errorResult);\n    return errorResult;\n  }\n\n  public pageValid(step: number, validDatas: GoalSettingStepData, isAdjust: boolean): Array<ValidError> {\n\n    console.log('pageValid step', step, 'validDatas', JSON.stringify(validDatas), isAdjust);\n\n    let errorResult = [];\n    let steplist = [5, 4, 2, 1];\n    try {\n      steplist.forEach(stepNum => {\n        //å¤æ·å³é²ä¾çæ­¥é©å¤§æ¼æç­æ¼é©è­æ­¥é©æé©è­\n        if (step >= stepNum && validDatas[\"Step\" + stepNum] != null && validDatas[\"Step\" + stepNum] != undefined) {\n          errorResult = this.unitPageValid(stepNum, validDatas, isAdjust, errorResult);\n        }\n      });\n\n    } catch (error) {\n      this.errorHandler.handleError(new APPError('F00407', 'pageValid fail!' + error.message));\n    }\n    return errorResult;\n  }\n\n  public unitPageValid(step: number, validDatas: GoalSettingStepData, isAdjust: boolean, errorResult: ValidError[]): ValidError[] {\n\n    let stepColMap = new Map<number, Array<string>>();\n\n    let step1Cols = [\"FYFC\", \"AnnualConvention\", \"MDRT\", \"PromotionPlan\"];\n    let step2Cols = [\"PerCase\"];\n    let step5Cols = [\"TeamFYFC\", \"TeamANP\", \"Manpower\", \"Recruitment\"];\n    stepColMap.set(1, step1Cols);\n    stepColMap.set(2, step2Cols);\n    stepColMap.set(5, step5Cols);\n\n    if (step == 4) {\n      //é©è­ç¬¬4æ­¥\n      let monthList = validDatas.Step4.MonthList;\n      let performanceSettlementMonth = validDatas.YearConfig.PerformanceSettlementMonth;\n      monthList.filter(obj => obj.Month > performanceSettlementMonth).forEach(x => {\n        errorResult = this.onChangeValid(4, \"Plan_\" + x.Month, x.Plan, validDatas, false, errorResult, true);\n      });\n      errorResult = this._validShortfall(validDatas.Step4, errorResult);\n    } else {\n      //å¶ä»æ­¥é©é©è­\n      if (isAdjust) {\n        step5Cols.push(\"TeamFYFCNowToYearEnd\");\n        step1Cols.push(\"FYFCNowToYearEnd\");\n      }\n      let stepCols = stepColMap.get(step);\n      stepCols.forEach(col => {\n        errorResult = this.onChangeValid(step, col, validDatas[\"Step\" + step][col], validDatas, isAdjust, errorResult, true);\n      });\n    }\n\n    return errorResult;\n  }\n\n  private _setError(step: number, colId: string, errorType: string, validresult: boolean, errorResult: Array<ValidError>, errorMsg: string = ''): Array<ValidError> {\n    console.log('step', step, 'colId', colId, 'errorType', errorType, 'validresult', validresult, 'errorResult', errorResult);\n    errorMsg = StringUtils.isEmpty(errorMsg) ? colId + errorType : errorMsg;\n    errorResult = errorResult.filter(x => (x.ColId != colId || (x.ColId == colId && x.Msg.indexOf(errorMsg)))); //ç­æ¼colId && ç­æ¼errortype çåæ¿æ\n    if (validresult) {\n      errorResult.push(new ValidError(step, colId, errorMsg));\n    }\n    console.log('errorResult', errorResult);\n    return errorResult;\n  }\n\n  private _validShortfall(setp4Obj: GoalSettingStep4, errorResult: Array<ValidError>): Array<ValidError> {\n\n    //é©è­Shortfall\n    if (this.goalSettingStep) {\n      let validresult = this.goalSettingStep.validateGoal_Forecast(Number(setp4Obj.Shortfall));\n      errorResult = this._setError(4, \"Shortfall\", \"value\", validresult, errorResult, \"Shortfall_nonZero\");\n    }\n    else {\n      let validresult = Number(setp4Obj.Shortfall) != 0;\n      errorResult = this._setError(4, \"Shortfall\", \"value\", validresult, errorResult, \"Shortfall_nonZero\");\n    }\n\n    return errorResult;\n  }\n\n  //#endregion Vaild\n  }\n","import { Observable, BehaviorSubject, Subject } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\nimport { AgencyPlanAgentInfo } from \"./model\";\nimport { AgencyPlanStatus, AGENCY_STATE } from \"./model/AgencyPlanStatus\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AgencyPlanStoreService {\n\n  private _stateBehaviorSubject: Subject<AgencyPlanStatus>;\n  private _detailBehaviorSubject: Subject<AgencyPlanAgentInfo>;\n\n  private _agencyState: AgencyPlanStatus;\n  private _agencyDetail: AgencyPlanAgentInfo;\n\n  constructor(\n  ) {\n    this._agencyState = new AgencyPlanStatus(AGENCY_STATE.DISPLAY, null);\n    this._stateBehaviorSubject = new BehaviorSubject(this._agencyState);\n    this._detailBehaviorSubject = new BehaviorSubject(this._agencyDetail);\n\n  }\n\n  setState(state: AgencyPlanStatus): void {\n    this._agencyState = state;\n    this._stateBehaviorSubject.next(this._agencyState);\n\n  };\n\n  getState(): Observable<AgencyPlanStatus> {\n    return this._stateBehaviorSubject;\n  };\n\n  // setCurrentAgencyDetail(detail: any): void {\n  //   console.log(\"setCurrentAgencyDetail detail:\",detail);\n  //   this._agencyDetail = detail;\n  //   this._detailBehaviorSubject.next(this._agencyDetail);\n  // };\n\n  setCurrentAgencyDetail(agentInfo: AgencyPlanAgentInfo): void {\n    console.log(\"setCurrentAgencyDetail agentInfo:\", agentInfo);\n    this._agencyDetail = agentInfo;\n    this._detailBehaviorSubject.next(this._agencyDetail);\n  };\n\n  getCurrentAgencyDetail(): Observable<AgencyPlanAgentInfo> {\n    return this._detailBehaviorSubject;\n  };\n\n}\n","\nexport class GoalTitleListItem {\n\n    constructor(private title: string, private desc: string) { }\n\n    public getTitle(): string {\n      return this.title;\n    }\n\n    public setTitle(title: string): void {\n        this.title = title;\n    }\n\n    public getDesc(): string {\n      return this.desc;\n    }\n\n    public setDesc(desc: string): void {\n        this.desc = desc;\n    }\n} // end class GoalTitleListItem\n","import { Injectable } from '@angular/core';\nimport { TranslateService, TIMEBASE, StringUtils } from '@allianzSND/core';\nimport { GoalSettingStep5 } from '../service/model/GoalSettingStep5';\nimport { AgencyPlanDataForOverview } from '../service/model/AgencyPlanDataForOverview';\nimport { GoalTitleListItem } from '../components/goal-ui-title-list/goa-ui-title-list-item';\nimport { GoalSettingStep3 } from '../service/model/GoalSettingStep3';\nimport { ActivityValue } from '../service/model/ActivityValue';\nimport { DWM_DATETYPE } from '../service/model/GoalSettingCommon';\nimport { GoalSettingStepData } from '../service/model/GoalSettingStepData';\nimport { GoalSettingYearConfig } from '../service/model/GoalSettingYearConfig';\nimport { GoalSettingGoalStatus } from '../service/model/GoalSettingGoalStatus';\nimport { GoalSettingTranslate } from '../service/model/GoalSettingTranslate';\nimport { CombineStep5AndAgecyPlanData } from '../service/model/CombineStep5AndAgecyPlanData';\nimport { GoalSettingStep3ForTabChange } from '../service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoalSettingUtilService {\n\n  constructor(\n    private translateService: TranslateService\n  ) {\n  }\n\n  public getStep3TabOptionList(activity: string): Array<string> {\n\n    let daily = DWM_DATETYPE.DAILY;\n    let weekly = DWM_DATETYPE.WEEKLY;\n    let monthly = DWM_DATETYPE.MONTHLY;\n    let tabOptionList = [];\n    switch (activity) {\n      case 'Day':\n        tabOptionList = [daily, weekly, monthly];\n        break;\n      case 'Week':\n        tabOptionList = [weekly, monthly];\n        break;\n      case 'Month':\n        tabOptionList = [monthly];\n        break;\n      default:\n        break;\n    }\n\n    return tabOptionList;\n  }\n\n\n  public transformTeamStep5Data(step5Data: GoalSettingStep5, agencyPlanData: AgencyPlanDataForOverview): CombineStep5AndAgecyPlanData {\n\n    let step5ItemList = [\n      new GoalTitleListItem(this.translateService.translate('FYFC_Goal'), step5Data.TeamFYFC),\n      new GoalTitleListItem(this.translateService.translate('ANP_Goal'), step5Data.TeamANP),\n      new GoalTitleListItem(this.translateService.translate('Manpower_Goal'), step5Data.Manpower),\n      new GoalTitleListItem(this.translateService.translate('Recruitment_Goal'), step5Data.Recruitment)\n    ];\n\n    let agencyPlanItemList = [\n      new GoalTitleListItem(this.translateService.translate('FYFC_Forecast'), agencyPlanData.FYFCForecast.toString()),\n      new GoalTitleListItem(this.translateService.translate('ANP_Forecast'), agencyPlanData.ANPForecast.toString()),\n      new GoalTitleListItem(this.translateService.translate('Manpower_Plan'), agencyPlanData.ManpowerPlan.toString()),\n      new GoalTitleListItem(this.translateService.translate('Recruitment_Plan'), agencyPlanData.RecruitmentPlan.toString())\n    ];\n\n    let itemTextIsRedList = Array(step5ItemList.length).fill(false).map((value, index) => {\n      if(isNaN(Number(agencyPlanItemList[index].getDesc()))) {\n        return false;\n      }\n      else {\n        return (Number(step5ItemList[index].getDesc()) > Number(agencyPlanItemList[index].getDesc()));\n      }\n    });\n    \n    return new CombineStep5AndAgecyPlanData(step5ItemList, agencyPlanItemList, itemTextIsRedList);\n  }\n\n  public getTabChangeStep3(currentType: string, goalSettingStep3: GoalSettingStep3): GoalSettingStep3ForTabChange {\n\n    let activityValue: ActivityValue;\n    let unit: string;\n\n    if (currentType == DWM_DATETYPE.DAILY) {\n      activityValue = goalSettingStep3.ActivityValues.filter(x => x.TimeBase == TIMEBASE.DAY)[0];\n      unit = 'Goal_Setting_Day';\n    }\n\n    else if (currentType == DWM_DATETYPE.WEEKLY) {\n      activityValue = goalSettingStep3.ActivityValues.filter(x => x.TimeBase == TIMEBASE.WEEK)[0];\n      unit = 'Goal_Setting_Week';\n    }\n\n    else if (currentType == DWM_DATETYPE.MONTHLY) {\n      activityValue = goalSettingStep3.ActivityValues.filter(x => x.TimeBase == TIMEBASE.MONTH)[0];\n      unit = 'Goal_Setting_Month';\n    }\n\n    \n    return new GoalSettingStep3ForTabChange(activityValue, unit);\n  }\n\n\n\n\n  public translateByStepData(stepData: GoalSettingStepData) {\n    return this.translateByYearConfigAndGoaslStatus(stepData.YearConfig, stepData.GoalStatus);\n  }\n\n  public translateByYearConfigAndGoaslStatus(yearConfig: GoalSettingYearConfig, goalStatus: GoalSettingGoalStatus): GoalSettingTranslate {\n    let variable = this._getTranslateVariable(yearConfig, goalStatus);\n    let translateOnject = new GoalSettingTranslate();\n    translateOnject.TeamGoalEffectiveMonthTitle = this.translateService.translateWithVariable('Goal_Effective_Month', { \"effectiveMonthWithUnit\": this.translateService.translate('Month_' + goalStatus.TeamGoalApplicableYM) });\n    translateOnject.PersonalGoalEffectiveMonthTitle = this.translateService.translateWithVariable('Goal_Effective_Month', variable);\n    translateOnject.NowToYearEndTitle = this.translateService.translateWithVariable('Now_To_Year_End', variable);\n    translateOnject.FYFCNowToYearEndTitle = this.translateService.translateWithVariable('FYFC_Now_To_Year_End', variable);\n    translateOnject.ANPNowToYearEndTitle = this.translateService.translateWithVariable('ANP_Now_To_Year_End', variable);\n\n    if(this._isHasEffectiveMonthAndSettlementMonth(variable.effectiveMonth, variable.settlementMonth)) {\n      translateOnject.PersonalFYFCActualVariableTitle = this.translateService.translateWithVariable('FYFC_Actual_Variable', variable);\n    }\n    else {\n      translateOnject.PersonalFYFCActualVariableTitle = this.translateService.translate('FYFC_Actual_Dash');\n    }\n\n    if(this._isHasEffectiveMonthAndSettlementMonth(goalStatus.TeamGoalApplicableYM, yearConfig.PerformanceSettlementMonth)) {\n      translateOnject.TeamFYFCActualVariableTitle = this.translateService.translateWithVariable('FYFC_Actual_Variable', { \"effectiveMonth\": goalStatus.TeamGoalApplicableYM, \"settlementMonth\": yearConfig.PerformanceSettlementMonth });\n      translateOnject.TeamANPActualVariableTitle = this.translateService.translateWithVariable('ANP_Actual_Variable', { \"effectiveMonth\": goalStatus.TeamGoalApplicableYM, \"settlementMonth\": yearConfig.PerformanceSettlementMonth });\n    }\n    else {\n      translateOnject.TeamFYFCActualVariableTitle = this.translateService.translate('FYFC_Actual_Dash');\n      translateOnject.TeamANPActualVariableTitle = this.translateService.translate('ANP_Actual_Dash');\n    }\n\n\n    return translateOnject;\n  }\n\n  private _getTranslateVariable(yearConfig: GoalSettingYearConfig, goalStatus: GoalSettingGoalStatus) {\n    return {\n      //Goal_Effective_Month\n      \"effectiveMonthWithUnit\": this.translateService.translate('Month_' + goalStatus.PersonnelGoalApplicableYM),\n      //end of Goal_Effective_Month\n\n      //Now_To_Year_End\n      \n      \"workingMonth\": yearConfig.WorkingMonth == 0 ? 1 : yearConfig.WorkingMonth,\n      \"theLastMonth\": yearConfig.MonthQuantityOfYear,\n      //end of Now_To_Year_End\n\n      //FYFC_Actual_Variable\n      \"effectiveMonth\": goalStatus.PersonnelGoalApplicableYM,\n      \"settlementMonth\": yearConfig.PerformanceSettlementMonth,\n      //end of  FYFC_Actual_Variable\n    }\n  }\n\n  private _isHasEffectiveMonthAndSettlementMonth(effectiveMonth: number, settlementMonth: number): boolean {\n    let _isNotEmpty = StringUtils.isNotEmpty(effectiveMonth) && StringUtils.isNotEmpty(settlementMonth);\n    let _isNumber = !isNaN(Number(effectiveMonth)) && !isNaN(Number(settlementMonth));\n    let _isGreaterThanZero = Number(effectiveMonth) > 0 && Number(settlementMonth) > 0;\n\n    return _isNotEmpty && _isNumber && _isGreaterThanZero;\n  }\n}\n"],"names":["uuid","tslib_1.__decorate","ActivityValue","APIFactory"],"mappings":"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"}
