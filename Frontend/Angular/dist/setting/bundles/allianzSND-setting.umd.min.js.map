{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@allianzSND/setting/lib/service/setting-service.service.ts","ng://@allianzSND/setting/lib/injection-token.ts","ng://@allianzSND/setting/lib/components/setting/setting.component.ts","ng://@allianzSND/setting/lib/setting.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","SettingComponentService","dispatcher","APIFactory","deviceService","prototype","getUpdateTimeList","_this","console","debug","updateTimeListAPI","getAPI","Observable","create","observer","dispatch","subscribe","data","status","returnData_1","forEach","x","MainFunc","filter","BackendTime","complete","unbindDevice","unbindDeviceAPI","setDeviceID","getDeviceUUID","warn","toPromise","Injectable","args","providedIn","APIDispatch","DeviceService","settingMetaControllerToken","InjectionToken","SettingComponent","translateService","settingService","settingComponentService","changeDetector","profileCodeService","metaParser","metaExecutor","metaService","daoFactory","notificationUtils","metaController","fontSizeAccess","changeFontSize","APP_CONFIG","_super","isPopupSeeDetailOpen","isPopupOpenChangeLang","isPopupOpenChangeFontSize","isCollapseShow","optionLangDefault","language","Language","updateTimeList","languageAlert","fontSizeAlert","isDebug","optionFontSizeDefault","fontSizeSetting","__extends","__","constructor","tslib_1.__extends","defineProperty","metaConfig","Rows","_data","ngOnInit","getDebugMode","styleCollapse","getAppVersion","version","appVersion","getUpdateSubject","detectChanges","btnClick","type","id","onclickUpdateTime","onDataUpdated","getLanguageList","getFontSizeCode","resp","log","getMetaID","getMetaParams","onValidateAll","onValueChange","column","groupId","index","onChangeLang","onChangeFontSize","validationResult","getCodeArray","map","SelectOption","getLanguageID","getName","toggleCollapse","onMailToClick","emailAddress","window","open","onPdfClick","pdfUrl","getDevicePlatform","cordova","plugins","fileOpener2","file","applicationDirectory","error","message","success","resolveLocalFileSystemURL","fileEntry","externalDataDirectory","dirEntry","copyTo","newFileEntry","nativeURL","option","translate","onLanguageAlertCancel","onLanguageAlertConfirm","updateLanguage","onFontSizeAlertCancel","onFontSizeAlertConfirm","updateFontSize","_fetchCodeData","updateFontSizeOption","FuncID","Date","getCode","displayText","changeDebugMode","val","setDebugMode","onClickCleanDeviceBtn","confirm","checkNetworkBeforeAction","_a","_clearDeviceData","restartApp","APPError","error_1","_initLocalStorage","ENV","_clearDatabase","error_2","env","db_config","DATABASE","db_names","keys","dao","this_1","getDao","name","getSchema","returnMap","SqlCommandArray","command","tableName","includes","SQLCommand","excuteSqlCommand","db_names_1","__values","o","m","i","tslib_1.__values","db_names_1_1","MainDBKey","localStorage","getItem","ProfileDBKey","clear","setItem","Component","selector","template","animations","animationCollapse","changeDetection","ChangeDetectionStrategy","OnPush","TranslateService","SettingService","ChangeDetectorRef","ProfileCodeService","DefaultMetaParser","APIExecutor","MetaService","DaoFactory","NotificationUtils","Optional","Inject","FontSizeAccessToken","changeFontSizeToken","ConfigToken","FormMetaComponent","SettingModule","NgModule","imports","CommonModule","CoreModule","UIModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { APIDispatch, APIFactory, UpdateTimeListAPI, UnbindDeviceAPI, DeviceService } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingComponentService {\n\n  constructor(private dispatcher: APIDispatch,\n    private APIFactory: APIFactory,\n    private deviceService: DeviceService\n  ) { }\n\n  getUpdateTimeList(): Observable<any> {\n\n    console.debug('getUpdateTimeList');\n\n    let updateTimeListAPI: UpdateTimeListAPI = <UpdateTimeListAPI>this.APIFactory.getAPI('getUpdateTimeList');\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(updateTimeListAPI).subscribe((data) => {\n        if (data['Header'].status) {\n\n          let returnData: Array<any> = [];\n          let orders = [\"Homepage\", \"Goal_Setting\", \"Customer\", \"Calendar\", \"Progress\"];\n          orders.forEach(x => {\n            returnData.push({\n              MainFunc: data['Body'].filter(y => y.MainFunc == x)[0].MainFunc,\n              BackendTime: data['Body'].filter(y => y.MainFunc == x)[0].BackendTime\n            })\n          });\n          observer.next(returnData);\n          observer.complete();\n        } else {\n          observer.next([]);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  public async unbindDevice(): Promise<any> {\n    let unbindDeviceAPI = <UnbindDeviceAPI>this.APIFactory.getAPI('unbindDevice');\n    unbindDeviceAPI.setDeviceID(this.deviceService.getDeviceUUID());\n    console.warn(\"this._getDeviceUUID(): \", this.deviceService.getDeviceUUID());\n    return this.dispatcher.dispatch(unbindDeviceAPI).toPromise();\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { MetaController } from \"@allianzSND/core\";\n\nexport const settingMetaControllerToken = new InjectionToken<MetaController>(\"customerContactDetailMetaController\");\n","import { Component, OnInit, ChangeDetectorRef, Optional, Inject, ChangeDetectionStrategy } from '@angular/core';\nimport { changeFontSize, IFontSizeAccess, changeFontSizeToken, FontSizeAccessToken, ProfileCodeService, ProfileCode, Language, LanguageCode, DeviceService, TranslateService, SelectOption, MetaService, SettingService, FormMetaComponent, DefaultMetaParser, APIExecutor, MetaController, MetaColumn, ConfigToken, DaoFactory, SQLCommand, APPError } from '@allianzSND/core';\nimport { SettingComponentService } from '../../service/setting-service.service';\nimport { animationCollapse } from '@allianzSND/ui';\nimport { settingMetaControllerToken } from '../../injection-token';\nimport { NotificationUtils } from '@allianzSND/notification';\n// import * as XLSX from 'xlsx';\ndeclare var cordova;\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.scss'],\n  animations: [\n    animationCollapse\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingComponent extends FormMetaComponent implements OnInit {\n\n  constructor(\n    private translateService: TranslateService,\n    private deviceService: DeviceService,\n    private settingService: SettingService,\n    private settingComponentService: SettingComponentService,\n    private changeDetector: ChangeDetectorRef,\n    protected profileCodeService: ProfileCodeService,\n    metaParser: DefaultMetaParser,\n    metaExecutor: APIExecutor,\n    protected metaService: MetaService,\n    private daoFactory: DaoFactory,\n    private notificationUtils: NotificationUtils,\n    @Optional() @Inject(settingMetaControllerToken) private metaController: MetaController,\n    @Optional() @Inject(FontSizeAccessToken) private fontSizeAccess: IFontSizeAccess,\n    @Optional() @Inject(changeFontSizeToken) private changeFontSize: changeFontSize,\n    @Inject(ConfigToken) private APP_CONFIG: any,\n  ) {\n\n    super(metaService, profileCodeService, metaParser, metaExecutor);\n  }\n\n  //popup show \n  public isPopupSeeDetailOpen = false;\n  public isPopupOpenChangeLang = false;\n  public isPopupOpenChangeFontSize = false;\n  //collapse open or not\n  private isCollapseShow = false;\n  //style of collapse area\n  public styleCollapse: string;\n  // lang default option\n  private optionLangDefault = 'English';\n  public language: Language = new Language();\n  public appVersion: string;\n  public updateTimeList = [];\n  public languageAlert: string = '';\n  public fontSizeAlert: string = '';\n  public isDebug: boolean = false;\n  private optionFontSizeDefault: string = '1';\n  private fontSizeSetting: string = 'sm';\n\n  get rowConfig(): MetaColumn[][] {\n    return this.metaConfig.Rows;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.settingService.getDebugMode().subscribe(debug => {\n      this.isDebug = debug;\n    })\n\n    this.styleCollapse = this.isCollapseShow ? 'open' : 'closed';\n\n    this.deviceService.getAppVersion().then((version) => {\n      this.appVersion = version;\n    });\n\n    this.translateService.getUpdateSubject().subscribe(() => {\n      //update translate\n      this.getUpdateTimeList();\n      this.changeDetector.detectChanges();\n    });\n\n  }\n\n  btnClick(type: string, id: string) {\n    if (id === 'LastUpdatedTime')\n      this.onclickUpdateTime();\n\n    if (this.metaController)\n      this.metaController.btnClick(type, id, this._data);\n  }\n\n  onDataUpdated() {\n    super.onDataUpdated();\n    this._data[\"LanguageOption\"] = this.getLanguageList();\n    this.fontSizeAccess.getFontSizeCode().toPromise().then((resp) => {\n      this._data[\"FontSize\"] = resp;\n      this.optionFontSizeDefault = resp;\n      this.changeDetector.detectChanges();\n    })\n    console.log(\"setting Data updated:\", this._data);\n    this.optionLangDefault = this._data[\"Language\"];\n    if (this.metaController)\n      this.metaController.onDataUpdated(this._data);\n    this.changeDetector.detectChanges();\n  }\n\n  getMetaID() {\n    return \"setting\";\n  }\n\n  getMetaParams() {\n    return null;\n  }\n\n  onValidateAll() {\n    return true;\n  }\n\n  onValueChange(column: string, value: any, groupId: string, index: number) {\n    console.log(\"Setting ValueChange:\", column, value, this._data);\n    if (column === 'Language') {\n      this.onChangeLang(value);\n    }\n    else if (column === 'FontSize') {\n      this.onChangeFontSize(value);\n    }\n    if (this.metaController)\n      this.metaController.onValueChange(column, value, groupId, index, this._data, this.validationResult);\n  }\n\n\n  getLanguageList() {\n    // get languageType in SQLite and set default language\n    return this.translateService.getCodeArray().map(x => new SelectOption(x.getLanguageID, x.getName));\n  }\n\n  onclickUpdateTime() {\n    console.log('in on click update time');\n    this.isPopupSeeDetailOpen = !this.isPopupSeeDetailOpen;\n  }\n\n  //click collpase card\n  toggleCollapse() {\n    this.isCollapseShow = !this.isCollapseShow;\n    this.styleCollapse = this.isCollapseShow ? 'open' : 'closed';\n  }\n\n  //click to send email\n  onMailToClick(emailAddress: string) {\n    window.open('mailto:' + emailAddress + '?subject=å®è¯æ¸¬è©¦', '_system');\n  }\n\n  //click to open pdf\n  onPdfClick(pdfUrl: string) {\n    // cordova.plugins.SitewaertsDocumentViewer.viewDocument(cordova.file.applicationDirectory + pdfUrl, 'application/pdf', {})\n    if (this.deviceService.getDevicePlatform() == 'iOS') {\n      cordova.plugins.fileOpener2.open(\n        (cordova.file.applicationDirectory + pdfUrl),\n        'application/pdf',\n        {\n          error: function (e) {\n            console.log('Error status: ' + e.status + ' - Error message: ' + e.message);\n          },\n          success: function () {\n            console.log('file opened successfully');\n          }\n        }\n      );\n    } else {\n      (<any>window).resolveLocalFileSystemURL(cordova.file.applicationDirectory + pdfUrl, function (fileEntry) {\n\n        (<any>window).resolveLocalFileSystemURL(cordova.file.externalDataDirectory, function (dirEntry) {\n\n          fileEntry.copyTo(dirEntry, 'date.pdf', function (newFileEntry) {\n\n            cordova.plugins.fileOpener2.open(newFileEntry.nativeURL, 'application/pdf', {\n              error: function (e) {\n                console.log('Error status: ' + e.status + ' - Error message: ' + e.message);\n              },\n              success: function () {\n                console.log('file opened successfully');\n              }\n            });\n          });\n        });\n      });\n    }\n  }\n\n  //check if select language which different from default language\n  onChangeLang(option) {\n    if (option != this.optionLangDefault) {\n      this.languageAlert = this.translateService.translate('Language_Alert');\n      // if (option == 'en')\n      //   this.languageAlert = this.translateService.translate('English_Alert');\n      // if (option == 'zh_TW')\n      //   this.languageAlert = this.translateService.translate('Mandarin_Alert');\n      this.isPopupOpenChangeLang = true;\n    }\n  }\n\n  onChangeFontSize(option) {\n    if (option != this.optionFontSizeDefault) {\n      switch (option) {\n        case '1':\n          // this.fontSizeAlert = this.translateService.translate('Small_Alert');\n          this.fontSizeSetting = 'sm';\n          break;\n        case '2':\n          // this.fontSizeAlert = this.translateService.translate('Medium_Alert');\n          this.fontSizeSetting = 'md';\n          break;\n        case '3':\n          // this.fontSizeAlert = this.translateService.translate('Large_Alert');\n          this.fontSizeSetting = 'lg';\n          break;\n      }\n      this.fontSizeAlert = this.translateService.translate('Font_Size_Alert');\n      this.isPopupOpenChangeFontSize = true;\n    }\n  }\n\n  // lang change popup\n  onLanguageAlertCancel() {\n    this._data[\"Language\"] = this.optionLangDefault;\n  }\n\n\n  // confirm to change language\n  onLanguageAlertConfirm() {\n    this.updateLanguage(this._data[\"Language\"]);\n    this.optionLangDefault = this._data[\"Language\"];\n  }\n\n  // lang change popup\n  onFontSizeAlertCancel() {\n    this._data[\"FontSize\"] = this.optionFontSizeDefault;\n  }\n\n  // confirm to change language\n  onFontSizeAlertConfirm() {\n    this.updateFontSize();\n    this.optionFontSizeDefault = this._data[\"FontSize\"];\n  }\n\n  // update language\n  updateLanguage(option) {\n    this.translateService.updateLanguage(option).subscribe(data => {\n\n      if (data['Header'].status) {\n        this.profileCodeService._fetchCodeData().subscribe(data => {\n          this.updateFontSizeOption();\n        });\n        // this.deviceService.restartApp();\n      }\n    });\n  }\n\n  updateFontSize() {\n    if (this.changeFontSize) {\n      return this.changeFontSize.updateFontSize(this.fontSizeSetting);\n    }\n  }\n\n  // load updateTime\n  getUpdateTimeList() {\n    this.settingComponentService.getUpdateTimeList().subscribe(data => {\n      console.warn('getUpdateTimeList', data);\n      this.updateTimeList = data.map(x => {\n        return {\n          FuncID: this.translateService.translate(x.MainFunc),\n          BackendTime: new Date(x.BackendTime)\n        }\n      });\n    });\n  }\n\n  updateFontSizeOption() {\n    this._data[\"FontSizeOption\"] = this.profileCodeService.getCodeArray(\"Font_Size\")\n      .map(x => new SelectOption(x.getCode(), x.displayText));\n    this.changeDetector.detectChanges();\n  }\n\n  changeDebugMode(val) {\n    console.log(\"changeDebugMode:\", val);\n    this.settingService.setDebugMode(val);\n  }\n\n  async onClickCleanDeviceBtn() {\n    let confirmResult = confirm(\"Are you sure you want to unbind device (can NOT undo) ? \");\n    if (confirmResult) {\n      try {\n        if (this.notificationUtils.checkNetworkBeforeAction()) {\n          // online \n          console.warn(\"do deviceService.unbindDevice\");\n          let resp = await this.settingComponentService.unbindDevice();\n          console.warn(\"unbindDevice resp: \", resp);\n          if (resp.success) {\n            await this._clearDeviceData();\n            this.deviceService.restartApp();\n          }\n        }\n      } catch (error) {\n        throw new APPError(\"F00901\", \"unbindDeviceAPI fail: \" + error);\n      }\n    }\n  }\n\n  private async _clearDeviceData(): Promise<any> {\n    try {\n      this._initLocalStorage();\n      let env = this.APP_CONFIG.ENV;\n      if (env !== 'DEV') {\n        await this._clearDatabase();\n      };\n    } catch (error) {\n      throw new APPError('F00902', 'clearSqliteDB fail: ' + error);\n    }\n\n  }\n\n  private async _clearDatabase(): Promise<any> {\n\n    let env = this.APP_CONFIG.ENV;\n    let db_config = this.APP_CONFIG[env].DATABASE;\n    let db_names = Object.keys(db_config);\n    for (var name of db_names) {\n      // console.log('db_names be delete:', name);\n      let dao = this.daoFactory.getDao(name);\n\n      let returnMap = await dao.getSchema().toPromise();\n\n      let SqlCommandArray = [];\n\n      returnMap.forEach(value => {\n\n        let command: string = value.tableName.includes('TW_LH_SD_VW_') ? 'DROP VIEW IF EXISTS ' : 'DROP TABLE IF EXISTS ';\n        SqlCommandArray.push(new SQLCommand(command + value.tableName, []));\n      });\n\n      await dao.excuteSqlCommand(SqlCommandArray).toPromise();\n\n    }\n\n  }\n\n  private _initLocalStorage() {\n    let MainDBKey = window.localStorage.getItem('Main');\n    let ProfileDBKey = window.localStorage.getItem('Profile');\n    window.localStorage.clear();\n    window.localStorage.setItem('Main', MainDBKey);\n    window.localStorage.setItem('Profile', ProfileDBKey);\n  }\n\n\n  // start of upload language\n  // private readonly storageKeyName: string = 'LanguageJSON';\n  // private jsonText: string = '';\n  // public file: File = null;;\n  // public incomingfile(event) {\n  //   this.file = event.target.files[0];\n  // }\n  // public uploadLanguage() {\n  //   if (this.file) {\n  //     this.uploadFile();\n  //   }\n  //   else {\n  //     alert('Empty File.');\n  //   }\n  // }\n  // public resetLanguage() {\n  //   window.localStorage.removeItem(this.storageKeyName);\n  //   this.translateService.loadJson().then(() => {\n  //     this.onLanguageAlertConfirm();\n  //     alert('reset success');\n  //   });\n  // }\n\n  // uploadFile(): Promise<any> {\n\n  //   return new Promise((res, rej) => {\n  //     let workBook = null;\n  //     let jsonData: Array<any> = [];\n  //     const reader = new FileReader();\n  //     // const file = ev.target.files[0];\n  //     reader.onload = (event) => {\n  //       const data = reader.result;\n  //       try {\n  //         workBook = XLSX.read(data, { type: 'binary' });\n  //         // console.warn('workBook.SheetNames: ',workBook.SheetNames);\n\n  //         (<Array<string>>workBook.SheetNames).forEach(sheetName => {\n  //           let targetSheet = workBook.Sheets[sheetName];\n  //           // console.warn(sheetName, ' ', XLSX.utils.sheet_to_json(targetSheet, { header: 1 }))\n  //           jsonData = [...jsonData, XLSX.utils.sheet_to_json(targetSheet, { header: 1 })];\n  //         })\n  //         // let targetSheet = workBook.Sheets[workBook.SheetNames[0]];\n\n  //         // jsonData = XLSX.utils.sheet_to_json(targetSheet, { header: 1 });\n  //         jsonData = [].concat.apply([], jsonData)\n  //         console.warn(\"json data: \", jsonData);\n  //         this.jsonText = this._parseSheetJsonToLanguage(jsonData);\n  //         window.localStorage.setItem(this.storageKeyName, this.jsonText);\n  //         this.translateService.loadJson().then(() => {\n  //           // this.changeDetector.detectChanges();\n  //           this.onLanguageAlertConfirm();\n  //           alert('Upload Success.');\n  //           res();\n  //         });\n  //       }\n  //       catch (error) {\n  //         console.error(error);\n  //         alert('Upload Fail.');\n  //         rej();\n  //       }\n\n  //     }\n  //     reader.readAsBinaryString(this.file);\n  //   })\n\n  // }\n\n\n  // private _parseSheetJsonToLanguage(json: Array<any>): string {\n  //   let targetLanguage: Array<string> = ['zh_TW', 'TH', 'en'];\n  //   let languageObj = {};\n\n  //   (<Array<any>>json).forEach(col => {\n  //     let languageType: string = col[0];\n  //     if (languageType && targetLanguage.reduce((total, each) => total || each === languageType, false)) {\n  //       let mappingID: string = col[1];\n  //       let value: string = col[2] ? col[2] : '';\n  //       if (!languageObj[languageType]) {\n  //         languageObj[languageType] = {};\n  //       }\n  //       languageObj[languageType][mappingID] = value;\n  //     }\n  //   });\n\n  //   // console.warn(languageObj)\n  //   return JSON.stringify(languageObj, null, \"\\t\");\n\n  // }\n  // end of upload language\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoreModule } from '@allianzSND/core';\nimport { UIModule } from '@allianzSND/ui';\nimport { SettingComponent } from './components/setting/setting.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    UIModule\n  ],\n  declarations: [SettingComponent],\n  exports: [SettingComponent]\n})\nexport class SettingModule { }\n"]}