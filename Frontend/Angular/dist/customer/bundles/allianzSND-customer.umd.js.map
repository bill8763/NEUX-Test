{"version":3,"file":"allianzSND-customer.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@allianzSND/customer/lib/service/model/CustomerDetail.ts","ng://@allianzSND/customer/lib/service/model/CustomerContactNote.ts","ng://@allianzSND/customer/lib/service/model/CustomerItem.ts","ng://@allianzSND/customer/lib/service/model/CustomerAlertItem.ts","ng://@allianzSND/customer/lib/service/model/CustomerAddress.ts","ng://@allianzSND/customer/lib/service/model/CustomerEmail.ts","ng://@allianzSND/customer/lib/service/model/CustomerTel.ts","ng://@allianzSND/customer/lib/service/model/CustomerBirthday.ts","ng://@allianzSND/customer/lib/service/customer-service.service.ts","ng://@allianzSND/customer/lib/components/bean/customer-filter-preset.ts","ng://@allianzSND/customer/lib/components/bean/customer-filter-criteria.ts","ng://@allianzSND/customer/lib/components/bean/customer-confirm-action.ts","ng://@allianzSND/customer/lib/components/bean/customer-import-group.ts","ng://@allianzSND/customer/lib/injectionToken/injection-token.ts","ng://@allianzSND/customer/lib/interface/storeCustomer.interface.ts","ng://@allianzSND/customer/lib/utils/customer-utils.ts","ng://@allianzSND/customer/lib/components/customers/customers.component.ts","ng://@allianzSND/customer/lib/components/bean/customer-detail-result.ts","ng://@allianzSND/customer/lib/components/customer-edit/customer-edit.component.ts","ng://@allianzSND/customer/lib/components/customer-list/customer-list.component.ts","ng://@allianzSND/customer/lib/components/customer-detail/customer-detail.component.ts","ng://@allianzSND/customer/lib/components/customer-contact-list/customer-contact-list.component.ts","ng://@allianzSND/customer/lib/components/customer-filter/customer-filter.component.ts","ng://@allianzSND/customer/lib/components/customer-import/customer-import.component.ts","ng://@allianzSND/customer/lib/customers.module.ts","ng://@allianzSND/customer/lib/service/model/CustomerList.ts","ng://@allianzSND/customer/lib/service/model/MobileCustomerItem.ts","ng://@allianzSND/customer/lib/service/model/MobileCustomerList.ts","ng://@allianzSND/customer/lib/api/CustomerAddContactNote.ts","ng://@allianzSND/customer/lib/api/CustomerAutoDeleteAPI.ts","ng://@allianzSND/customer/lib/api/CustomerContactNoteAPI.ts","ng://@allianzSND/customer/lib/api/CustomerDeleteAPI.ts","ng://@allianzSND/customer/lib/api/CustomerDeleteContactNote.ts","ng://@allianzSND/customer/lib/api/CustomerDetailAPI.ts","ng://@allianzSND/customer/lib/api/CustomerEditContactNote.ts","ng://@allianzSND/customer/lib/api/CustomerEditOvertimeAPI.ts","ng://@allianzSND/customer/lib/api/CustomerGetePresetAPI.ts","ng://@allianzSND/customer/lib/api/CustomerListAPI.ts","ng://@allianzSND/customer/lib/api/CustomerSaveDetailAPI.ts","ng://@allianzSND/customer/lib/api/CustomerSavePresetAPI.ts","ng://@allianzSND/customer/lib/api/CustomerTelAPI.ts","ng://@allianzSND/customer/lib/api/CustomerUpdateFollowAPI.ts","ng://@allianzSND/customer/lib/api/ImportContactAPI.ts","ng://@allianzSND/customer/lib/api/CustomerBirthdayListAPI.ts","ng://@allianzSND/customer/lib/api/DashboardUpdateToReadAPI.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { StringUtils } from '@allianzSND/core';\nimport { CustomerAddress } from './CustomerAddress';\nimport { CustomerEmail } from './CustomerEmail';\nimport { CustomerTel } from './CustomerTel';\nexport class CustomerDetail{\n    private _clientID  : string;\n    private _lastName : string;\n    private _firstName : string;\n    private _occupation : string;\n    private _company : string;\n    private _birthday : Date;\n    private _ageRange : string;\n    private _gender : string;\n    private _income : string;\n    private _source : string;\n    private _marriage : string;\n    private _children : string;\n    private _familiarity : string;\n    private _recentStatus : string;\n    private _manpa : string;\n    private _contactFrequancy : string;\n    private _possibility : string;\n    private _isFollow : boolean;\n    private _dataSource : string;\n    private _isEmptyInfo : boolean;\n\n    private _emails : Array<CustomerEmail> = new Array<CustomerEmail>();\n    private _tels : Array<CustomerTel> = new Array<CustomerTel>();\n    private _addresses : Array<CustomerAddress> = new Array<CustomerAddress>();\n\n    constructor() {\n\n            if(StringUtils.isEmpty(this.firstName)) this.firstName = '';\n            if(StringUtils.isEmpty(this.occupation)) this.occupation = '';\n            if(StringUtils.isEmpty(this.company)) this.company = '';\n            if(StringUtils.isEmpty(this.ageRange)) this.ageRange = undefined;\n            if(StringUtils.isEmpty(this.gender)) this.gender = undefined;\n            if(StringUtils.isEmpty(this.income)) this.income = undefined;\n            if(StringUtils.isEmpty(this.source)) this.source = undefined;\n            if(StringUtils.isEmpty(this.marriage)) this.marriage = undefined;\n            if(StringUtils.isEmpty(this.children)) this.children = undefined;\n            if(StringUtils.isEmpty(this.familiarity)) this.familiarity = undefined;\n            if(StringUtils.isEmpty(this.recentStatus)) this.recentStatus = undefined;\n            if(StringUtils.isEmpty(this.manpa)) this.manpa = undefined;\n            if(StringUtils.isEmpty(this.contactFrequancy)) this._contactFrequancy = undefined;\n            if(StringUtils.isEmpty(this.possibility)) this.possibility = '';\n            if(StringUtils.isEmpty(this.clientID)) this.clientID = '';\n\n            this.updateEmptyStatus();\n    }\n\n    get dataSource() {\n        return this._dataSource;\n    }\n\n    get clientID() {\n        return this._clientID;\n    }    \n\n    get lastName(){\n        return this._lastName;\n    }\n\n    get firstName(){\n        return this._firstName;\n    }\n\n    get tels(){\n        return this._tels;\n    }\n\n    get emails(){\n        return this._emails;\n    }\n\n    get addresses(){\n        return this._addresses;\n    }\n\n    get birthday(){\n        return this._birthday;\n    }\n\n    get ageRange(){\n        return this._ageRange;\n    }\n\n    get gender(){\n        return this._gender;\n    }\n\n    get occupation(){\n        return this._occupation;\n    }\n\n    get company(){\n        return this._company;\n    }\n\n    get income(){\n        return this._income;\n    }\n\n    get source(){\n        return this._source;\n    }\n\n    get marriage(){\n        return this._marriage;\n    }\n\n    get children(){\n        return this._children;\n    }\n\n    get familiarity(){\n        return this._familiarity;\n    }\n\n    get recentStatus(){\n        return this._recentStatus;\n    }\n\n    get manpa(){\n        return this._manpa;\n    }\n\n    get contactFrequancy(){\n        return this._contactFrequancy;\n    }\n\n    get possibility(){\n        return this._possibility;\n    }\n\n    get isFollow() {\n        return this._isFollow;\n    }\n\n    get isEmptyInfo() {\n        return this._isEmptyInfo;\n    }\n\n\n    set dataSource(dataSource : string) {\n        this._dataSource = dataSource;\n    }\n    \n    set clientID(clientID : string) {\n        this._clientID = clientID;\n    }\n\n    set lastName(lastName : string){\n        this._lastName = lastName;\n    }\n\n    set firstName(firstName : string){\n        this._firstName = firstName;\n    }\n\n    set tels(tels : Array<CustomerTel>){\n        this._tels  = tels;\n    }\n\n    set emails(emails : Array<CustomerEmail>){\n        this._emails = emails;\n    }\n\n    set addresses(addresses : Array<CustomerAddress>){\n        this._addresses = addresses;\n    }\n\n    set birthday(birthday : Date){\n        this._birthday = birthday;\n       \n    }\n\n    set ageRange(ageRange : string){\n        this._ageRange = ageRange;\n    }\n\n    set gender(gender : string){\n        this._gender = gender;\n    }\n\n\n    set occupation(occupation : string){\n        this._occupation = occupation;\n    }\n\n    set company(company : string){\n        this._company = company;\n    }\n\n    set income(income : string){\n        this._income = income;\n    }\n\n    set source(source : string){\n        this._source = source;\n    }\n\n    set marriage(marriage : string){\n        this._marriage = marriage;\n    }\n\n    set children(children : string){\n        this._children = children;\n    }\n\n    set familiarity(familiarity : string){\n        this._familiarity = familiarity;\n    }\n\n    set recentStatus(recentStatus : string){\n        this._recentStatus = recentStatus;\n    }\n\n    set manpa(manpa : string){\n        this._manpa = manpa;\n    }\n\n    set contactFrequancy(contactFrequancy : string){\n        this._contactFrequancy = contactFrequancy;\n    }\n\n    set possibility(possibility : string){\n        this._possibility = possibility;   \n    }\n\n    set isFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    set isEmptyInfo(isEmptyInfo : boolean) {\n        this._isEmptyInfo = isEmptyInfo;\n    }\n\n\n    updateEmptyStatus() {\n        if(this.birthday == null && StringUtils.isEmpty(this.gender) && StringUtils.isEmpty(this.occupation)\n          && StringUtils.isEmpty(this.company) && StringUtils.isEmpty(this.income)\n          && StringUtils.isEmpty(this.source) && StringUtils.isEmpty(this.marriage)\n          && StringUtils.isEmpty(this.children) && StringUtils.isEmpty(this.familiarity)\n          && StringUtils.isEmpty(this.manpa) && StringUtils.isEmpty(this.recentStatus)) {\n            this.isEmptyInfo = true;\n          }\n          else {\n              this.isEmptyInfo = false;\n          }\n    }\n\n    updateFollowStatus(isFollow : boolean) {\n        this.isFollow = isFollow;\n    }\n\n    addEmail(email : CustomerEmail) {\n        this.emails.push(email);\n    }\n\n    addTel(tel : CustomerTel) {\n        this.tels.push(tel);\n    }\n\n    addAddress(address : CustomerAddress) {\n        this.addresses.push(address);\n    }\n\n    deleteTel(tel:CustomerTel,index:number){\n        this.tels.splice(index,1);\n    }\n    \n    deleteEmail(email:string,index:number){\n        this.emails.splice(index,1);\n    }\n    deleteAddress(addresses : CustomerAddress,index:number){\n        this.addresses.slice(index,1);\n    }\n\n    notOPUSTelNumber() : number{\n        let count = 0;\n\n        for(let i = 0 ; i < this.tels.length ; i++) {\n            if(this.tels[i].dataSource != 'OPUS') count++;\n        }\n\n        return count;\n    }\n}","export class CustomerContactNote{\n\n    private clientID : string;\n    public name : string;\n    public date : Date;\n    public noteMessage : string;\n\n    constructor(clientID:string,date : Date , noteMessage : string) {\n        this.clientID = clientID;\n        this.date = date;\n        this.noteMessage = noteMessage;\n    }\n\n    public getClientID() : string {\n        return this.clientID;\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerItem{\n    \n    private _clientID : string;\n    private _firstName : string;\n    private _lastName : string;\n    private _showName: string;\n    private _tag : string;\n    private _complementPercent : number;\n    private _isFollow : boolean;\n    private _isOtherSource : boolean;\n    private _isHighlight : boolean;\n\n    constructor(clientID : string,firstName : string ,lastName : string, possibility : string ,\n         complementPercent : number,isFollow : boolean , isOtherSource : boolean , isOverTimeAlert : string) {\n\n        this._clientID = clientID;\n        this._firstName = firstName;\n        this._lastName = lastName;\n        this._tag = possibility;\n        this._complementPercent = complementPercent;\n        this._isFollow = isFollow;\n        this._isOtherSource = isOtherSource;\n        \n        if(isOverTimeAlert == 'Y') {\n            this._isHighlight = true;\n        }\n\n        if(StringUtils.isEmpty(this._firstName)) this._firstName = '';\n    }\n\n\n    get isOtherSource() {\n        return this._isOtherSource;\n    }\n\n    get isFollow() {\n        return this._isFollow;\n    }\n\n    get clientID(){\n        return this._clientID;\n    }\n\n    get firstName(){\n        return this._firstName;\n    }\n\n    get lastName(){\n        return this._lastName;\n    }\n\n    get tag(){\n        return this._tag;\n    }\n\n    get complementPercent(){\n        return this._complementPercent;\n    }\n\n    set clientID(clientID : string){\n        this._clientID = clientID;\n    }    \n\n    set firstName(name : string){\n        this._firstName = name;\n    }\n\n    set lastName(name : string){\n        this._lastName = name;\n    }\n\n    set tag(tag : string){\n        this._tag = tag;\n    }\n\n    set complementPercent(complementPercent : number){\n        this._complementPercent = complementPercent;\n    }\n\n    set isFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    set isOtherSource(isOtherSource : boolean) {\n        this._isOtherSource = isOtherSource;\n    }\n\n    get isHighlight() {\n        return this._isHighlight;\n    }\n\n    set isHighLight(isHighLight : boolean) {\n        this._isHighlight = isHighLight;\n    }\n\n    get showName() {\n        return this._showName;\n    }\n    \n    set showName(showName: string) {\n        this._showName = showName;\n    }\n}","export class CustomerAlertItem {\n    private _clientID : string;\n    private _name : string;\n\n    constructor(clientID : string, name : string) {\n       this._clientID = clientID;\n       this._name = name;  \n    }\n\n   get clientID() {\n       return this._clientID;\n   }\n\n   get name(){\n    return this._name;\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerAddress{\n\n    public clientID : string;\n    public addressType : string;\n    public country : string;\n    public city : string;\n    public area : string;\n    public zipcode : string;\n    public address : string;\n    public dataSource : string;\n    \n\n    constructor(clientID:string,addressType : string,country : string,city : string,area : string,zipcode : string,address : string,dataSorce : string){\n        this.clientID = clientID;\n        this.addressType = addressType;\n        this.country = country;\n        this.city = city;\n        this.area = area;\n        this.zipcode = zipcode;\n        this.address = address;\n        this.dataSource = dataSorce;\n\n    }\n\n    toFullAddress() {        \n        \n        let array = [];\n        if(StringUtils.isNotEmpty(this.country)) array.push(this.country);\n        if(StringUtils.isNotEmpty(this.city)) array.push(this.city);\n        if(StringUtils.isNotEmpty(this.area)) array.push(this.area);\n        if(StringUtils.isNotEmpty(this.zipcode)) array.push(this.zipcode);\n        if(StringUtils.isNotEmpty(this.address)) array.push(this.address);\n\n        return array.join(', ');\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.country) \n        && StringUtils.isEmpty(this.city) && StringUtils.isEmpty(this.area)\n        && StringUtils.isEmpty(this.zipcode) && StringUtils.isEmpty(this.address);\n    }\n}\n","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerEmail {\n\n    public clientID : string;\n    public emailType :string;\n    public email : string;\n    public dataSource : string;\n\n    constructor(_clientID : string , _emailType : string , _email : string , _dataSource : string){\n        this.clientID = _clientID;\n        this.emailType = _emailType;\n        this.email = _email;\n        this.dataSource = _dataSource;\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.email);\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerTel{\n\n    public clientID : string;\n    public telType : string;\n    public tel : string;\n    public dataSource : string;\n\n    constructor(clientID : string,  telType : string, tel : string, dataSource : string) {\n        this.clientID = clientID;\n        this.telType = telType;\n        this.tel = tel;\n        this.dataSource = dataSource;\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.tel);\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\nimport { getMonth, getDate } from 'date-fns';\n\nexport class CustomerBirthday{\n    \n    private _clientID : string;\n    public lastName : string;\n    public firstName : string;\n    public birthdayMonth : string;\n    public birthdayDate : string;\n\n    constructor(clientID : string,firstName : string ,lastName : string, birthdayMonth: string , birthdayDate : string) {\n\n        this._clientID = clientID;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.birthdayMonth = birthdayMonth;\n        this.birthdayDate =  birthdayDate;\n       \n\n         if(StringUtils.isEmpty(this.firstName)) this.firstName = '';\n\n    }\n\n\n   \n\n   \n}","import { APIFactory, APIDispatch, ProfileCodeService, ContactItem, PageInfo, ValidationResult, DateUtils, StringUtils} from '@allianzSND/core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { CustomerDetail } from './model/CustomerDetail';\nimport { CustomerListAPI } from '../api/CustomerListAPI';\nimport { CustomerBirthdayListAPI } from '../api/CustomerBirthdayListAPI';\nimport { CustomerDetailAPI } from '../api/CustomerDetailAPI';\nimport { CustomerContactNote } from './model/CustomerContactNote';\nimport { CustomerContactNoteAPI } from '../api/CustomerContactNoteAPI';\nimport { CustomerItem } from './model/CustomerItem';\nimport { CustomerAlertItem } from './model/CustomerAlertItem';\nimport { CustomerAddress } from './model/CustomerAddress';\nimport { CustomerEmail } from './model/CustomerEmail';\nimport { CustomerTel } from './model/CustomerTel';\nimport { CustomerTelAPI } from '../api/CustomerTelAPI';\nimport { ImportContactAPI } from '../api/ImportContactAPI';\nimport { CustomerAddContactNoteAPI } from '../api/CustomerAddContactNote';\nimport { CustomerEditContactNoteAPI } from '../api/CustomerEditContactNote';\nimport { CustomerDeleteContactNoteAPI } from '../api/CustomerDeleteContactNote';\nimport { CustomerFilterCriteria } from '../components/bean/customer-filter-criteria';\nimport { CustomerDeleteAPI } from '../api/CustomerDeleteAPI';\nimport { CustomerEditOvertimeAPI } from '../api/CustomerEditOvertimeAPI';\nimport { CustomerAutoDeleteAPI } from '../api/CustomerAutoDeleteAPI';\nimport { CustomerSavePresetAPI } from '../api/CustomerSavePresetAPI';\nimport { CustomerGetPresetAPI } from '../api/CustomerGetePresetAPI';\nimport { CustomerUpdateFollowAPI } from '../api/CustomerUpdateFollowAPI';\nimport { CustomerFilterPreset } from '../components/bean/customer-filter-preset';\nimport { CustomerDetailResult } from '../components/bean/customer-detail-result';\nimport { CustomerSaveDetailAPI } from '../api/CustomerSaveDetailAPI';\nimport { CustomerBirthday } from './model/CustomerBirthday';\nimport { DashboardUpdateToReadAPI } from '../api/DashboardUpdateToReadAPI';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  //is first time use customer function\n  private _isFirstTime = true;//TODO\n\n  //add/edit profile result\n  private _profileResult : CustomerDetailResult;\n  \n  constructor(private dispatcher: APIDispatch, private dateUtils : DateUtils, private APIFactory: APIFactory, private profileCodeService: ProfileCodeService) {\n    //register api\n  }\n  \n  isFirstTime() : boolean{\n    if(this._isFirstTime) {\n      this._isFirstTime = false;\n      return true;\n    }\n    else {\n      return this._isFirstTime;\n    }\n    \n  }\n\n  get profileResult() {return this._profileResult;}\n  set profileResult(result) {this._profileResult = result;}\n\n  updateMessageToRead(messageType: string, messageDataCategory: string): Observable<any> {\n    let dashboardUpdateToReadAPI : DashboardUpdateToReadAPI = <DashboardUpdateToReadAPI>this.APIFactory.getAPI('updateDashboardToRead');\n    dashboardUpdateToReadAPI.setMessageType(messageType);\n    dashboardUpdateToReadAPI.setMessageDataCategory(messageDataCategory);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(dashboardUpdateToReadAPI).subscribe((data) => {\n        \n        console.debug('dashboard-service-updateMessageToRead',data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getOverTimeCustomerList(clientID) : Observable<Array<CustomerAlertItem>>{\n    let customerOverTimeAPI: CustomerEditOvertimeAPI = <CustomerEditOvertimeAPI>this.APIFactory.getAPI('getCustomerOverTime');\n\n    customerOverTimeAPI.setClientID(clientID);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerOverTimeAPI).subscribe((data) => {\n        \n        console.debug('customer-service-getOverTimeList',data);\n\n        let returnList = new Array<CustomerAlertItem>();\n       \n        let messages = data['Body'];\n        //set body data\n        for (let i = 0; i < messages.length; i++) {\n          let message = messages[i];\n\n          let args = JSON.parse(message['Arguments']);\n          let customerList = args['customers'];\n\n          for(let j=0 ; j< customerList.length ; j++) {\n            let event = new CustomerAlertItem(customerList[j].id, customerList[j].name);\n            returnList.push(event);\n          }\n          \n        }\n        \n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  getAutoDeleteCustomerList(clientID) : Observable<Array<CustomerAlertItem>>{\n    let customerDeleteAPI: CustomerAutoDeleteAPI = <CustomerAutoDeleteAPI>this.APIFactory.getAPI('getCustomerAutoDelete');\n\n    customerDeleteAPI.setClientID(clientID);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerDeleteAPI).subscribe((data) => {\n        console.log('customer-service-getAutoDeleteCustomerList',data);\n\n        let returnList = new Array<CustomerAlertItem>();\n       \n        let messages = data['Body'];\n        //set body data\n        for (let i = 0; i < messages.length; i++) {\n          let message = messages[i];\n\n          let args = JSON.parse(message['Arguments']);\n          let customerList = args['customers'];\n\n          for(let j=0 ; j< customerList.length ; j++) {\n            let event = new CustomerAlertItem(customerList[j].id, customerList[j].name);\n            returnList.push(event);\n          }\n          \n        }\n        \n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  updateCustomerFollowStatus(clientID,isFollow) : Observable<any> {\n    let updateCustomerFollowStatus: CustomerUpdateFollowAPI = <CustomerUpdateFollowAPI>this.APIFactory.getAPI('updateCustomerFollowStatus');\n    updateCustomerFollowStatus.setClient(clientID);\n    updateCustomerFollowStatus.setIsFollow(isFollow);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(updateCustomerFollowStatus).subscribe((data) => {\n        \n        console.debug('customer-service-updateCustomerFollowStatus',data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getFilterCriteriaPreset(): Observable<CustomerFilterPreset> {\n    let getFilterCriteria: CustomerGetPresetAPI = <CustomerGetPresetAPI>this.APIFactory.getAPI('getCustomerFilterPreset');\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(getFilterCriteria).subscribe((data) => {\n        \n        console.debug('customer-service-getFilterCriteria',data);\n\n        let settingArray = data['Body'];\n\n        let preset : CustomerFilterPreset;\n        if(settingArray.length =! 0) {\n          preset = JSON.parse(settingArray[0].SettingVal);\n        }\n        \n        console.debug('customer-service-getFilterCriteriaPreset',preset);\n\n        observer.next(preset);\n        observer.complete();\n      })\n    })\n  }\n\n  saveFilterCriteria(filterCriteria : CustomerFilterCriteria): Observable<any> {\n    let saveFilterCriteria: CustomerSavePresetAPI = <CustomerSavePresetAPI>this.APIFactory.getAPI('saveCustomerFilterPreset');\n\n    saveFilterCriteria.setFilterCriteria(filterCriteria);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(saveFilterCriteria).subscribe((data) => {\n        \n        console.debug('customer-service-saveFilterCriteria',data);\n\n        observer.next(data);\n        observer.complete();\n      })\n    })\n  }\n\n  checkInFilterCriteria(clientID : string,filterCriteria : CustomerFilterCriteria): Observable<boolean> {\n    let customerListAPI: CustomerListAPI = <CustomerListAPI>this.APIFactory.getAPI('getCustomerList');\n\n    customerListAPI.filterCriteria = filterCriteria;\n    customerListAPI.clientID = clientID;\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerListAPI).subscribe((data) => {\n        \n        console.debug('customer-service-checkInFilterCriteria',data);\n\n        observer.next(data['Body'].length != 0);\n        observer.complete();\n      })\n    })\n  }\n\n  //get customer datas\n  getCustomerList(filterCriteria : CustomerFilterCriteria,_pageInfo : PageInfo): Observable<Array<CustomerItem>> {\n    let customerListAPI: CustomerListAPI = <CustomerListAPI>this.APIFactory.getAPI('getCustomerList');\n\n    console.debug('customer-service-getCustomerList',filterCriteria,_pageInfo);\n\n    customerListAPI.filterCriteria = filterCriteria;\n    customerListAPI.pageInfo = _pageInfo;\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerListAPI).subscribe((data) => {\n        \n        console.debug('customer-service-getCustomerList',data);\n\n        let returnList = new Array<CustomerItem>();\n        let header = data['Header'];\n        let customerList = data['Body'];\n\n        //set header pageInfo\n        // _pageInfo.totalPage = header.PageInfo.totalPage;\n        // _pageInfo.totalRec = header.PageInfo.totalRec;\n\n        //set body data\n        for (let i = 0; i < customerList.length; i++) {\n          let json = customerList[i];\n          let isOtherSystem = json.DataSource != 'APP';\n          let isFollow = json.IsFollow == 'Y';\n          let completeness = json.Completeness;\n          let isOverTimeAlert = json.IsOverTimeAlert;\n    \n\n          let event = new CustomerItem(json.ClientID,json.FirstName,json.LastName,json.Possibility,completeness,isFollow,isOtherSystem,isOverTimeAlert);\n          returnList.push(event);\n        }\n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  getCustomerBirthdayList(targetDate, subN, addN): Observable<Array<CustomerBirthday>> {\n    let customerBirthdayListAPI: CustomerBirthdayListAPI = <CustomerBirthdayListAPI>this.APIFactory.getAPI('getCustomerBirthdayList');\n    customerBirthdayListAPI.subN = subN;\n    customerBirthdayListAPI.addN = addN;\n    customerBirthdayListAPI.targetDate = targetDate;\n  \n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerBirthdayListAPI).subscribe((data) => {\n        \n        console.debug('customer-service-getCustomerBirthdayList',data);\n\n        let returnList :Array<CustomerBirthday> = [];\n        // let header = data['Header'];\n        let birthdayList = data['Body'];\n\n\n        console.log(\"cusSer: \", birthdayList);\n\n        // //set body data\n        for (let i = 0; i < birthdayList.length; i++) {\n          let event = new CustomerBirthday(birthdayList[i]['ClientID'], birthdayList[i]['FirstName'], birthdayList[i]['LastName'], birthdayList[i]['BirthdayMonth'], birthdayList[i]['BirthdayDate']);\n          returnList.push(event);\n        }\n        observer.next(returnList);\n        observer.complete();\n      });\n\n      \n\n\n    });\n  }\n\n  convertCustomerDetailDisplayMode(customer : CustomerDetail) {\n    console.debug('convertCustomerDetailDisplayMode',customer);\n\n    customer.ageRange = this.profileCodeService.convertCode2Text('Customer_Age',customer.ageRange);\n    customer.gender = this.profileCodeService.convertCode2Text('Customer_Gender',customer.gender);\n    customer.income = this.profileCodeService.convertCode2Text('Customer_Income',customer.income);\n    customer.source = this.profileCodeService.convertCode2Text('Customer_Source',customer.source);\n    customer.marriage = this.profileCodeService.convertCode2Text('Customer_Marriage',customer.marriage);\n    customer.children = this.profileCodeService.convertCode2Text('Customer_Children',customer.children);\n    customer.familiarity = this.profileCodeService.convertCode2Text('Customer_Familiarity',customer.familiarity);\n    customer.recentStatus = this.profileCodeService.convertCode2Text('Customer_RecentStatus',customer.recentStatus);\n    customer.manpa = this.profileCodeService.convertCode2Text('Customer_Status',customer.manpa);\n    customer.contactFrequancy = this.profileCodeService.convertCode2Text('Customer_ContactFrequancy',customer.contactFrequancy);\n    customer.possibility = this.profileCodeService.convertCode2Text('Customer_Possibility',customer.possibility);\n        \n    customer.tels.forEach((tel) => {\n      tel.telType = this.profileCodeService.convertCode2Text('Customer_TelType',tel.telType);\n    });\n\n    customer.emails.forEach((email) => {\n      email.emailType = this.profileCodeService.convertCode2Text('Customer_EmailType',email.emailType);\n    });\n\n    customer.addresses.forEach((address) => {\n      address.addressType = this.profileCodeService.convertCode2Text('Customer_AddressType',address.addressType);\n    });\n\n  }\n\n  getCustomerDetail(clientID : string): Observable<CustomerDetail> {\n    if(StringUtils.isEmpty(clientID)) {\n      return Observable.create((observer) => {\n        observer.next(undefined);\n        observer.complete();\n      });\n    }\n    else {\n      let customerDetailAPI: CustomerDetailAPI = <CustomerDetailAPI>this.APIFactory.getAPI('getCustomerDetail');\n      customerDetailAPI.id = clientID;\n      \n      return Observable.create((observer)=>{\n        this.dispatcher.dispatch(customerDetailAPI).subscribe((data) => {\n          console.debug('customer-service-json',data);\n          let customer  = data['Body'][0];\n\n          console.debug('customer-service-getCustomerDetail',customer);\n\n          let ageRange : string = customer.AgeRange;\n          let gender : string = customer.Gender;\n          let income : string = customer.Income;\n          let source : string = customer.Source;\n          let marriage : string = customer.Marriage;\n          let children : string = customer.Children;\n          let familiarity : string = customer.Familiarity;\n          let recentStatus : string = customer.RecentStatus;\n          let manpa : string = customer.MANPA;\n          let contactFrequancy : string = customer.ContactFrequancy;\n          let possibility : string = customer.Possibility;\n          let isFollow : boolean = customer.IsFollow == 'Y';\n\n          let birthday : Date;\n\n          if(StringUtils.isNotEmpty(customer.BirthdayYear) && StringUtils.isNotEmpty(customer.BirthdayMonth) && StringUtils.isNotEmpty(customer.BirthdayDate)) {\n            birthday = new Date(Number(customer.BirthdayYear),Number(customer.BirthdayMonth) - 1,Number(customer.BirthdayDate));\n          }\n \n          \n          let customerDetail : CustomerDetail = new CustomerDetail();\n            customerDetail.clientID = customer.ClientID;\n            customerDetail.lastName = ( StringUtils.isNotEmpty(customer.LastName)? customer.LastName : '');\n            customerDetail.firstName = ( StringUtils.isNotEmpty(customer.FirstName)? customer.FirstName : '');\n            customerDetail.occupation = customer.Occupation;\n            customerDetail.company = customer.Company;\n            customerDetail.birthday = birthday;\n            customerDetail.ageRange = ageRange;\n            customerDetail.gender = gender;\n            customerDetail.income = income;\n            customerDetail.source = source;\n            customerDetail.marriage = marriage;\n            customerDetail.children = children;\n            customerDetail.familiarity = familiarity;\n            customerDetail.recentStatus = recentStatus;\n            customerDetail.manpa = manpa;\n            customerDetail.contactFrequancy = contactFrequancy;\n            customerDetail.possibility = possibility;\n            customerDetail.isFollow = isFollow;\n            customerDetail.dataSource = customer.DataSource;\n\n\n                  \n            \n            customer.tel.map(tel=> new CustomerTel(tel.ClientID,tel.TelType,tel.Tel,tel.DataSource)).forEach(element => {\n              customerDetail.addTel(element);\n            });\n\n            customer.email.map(email=> new CustomerEmail(email.ClientID,email.EmailType,email.Email,email.DataSource)).forEach(element => {\n              customerDetail.addEmail(element);\n            });\n\n            customer.address.map(address=> new CustomerAddress(address.ClientID,address.AddressType,address.Country,address.City,address.Area,address.Zipcode,address.Address,address.DataSource)).forEach(element => {\n              customerDetail.addAddress(element);\n            });\n\n            \n\n            console.debug('customer-service:',customerDetail);\n\n            \n            observer.next(customerDetail);\n            observer.complete();\n        })\n      })\n    }\n\n    \n  }\n\n  importContact(items : Array<ContactItem>) : Observable<string> {\n    let importContactAPI:  ImportContactAPI = <ImportContactAPI>this.APIFactory.getAPI('importContact');\n    \n    console.debug('customer-service-importContact',items);\n    importContactAPI.setItems(items);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(importContactAPI).subscribe((data) => {\n        console.debug('customer-service-importContact',data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n  }\n\n\n\n  validProfile(customerDetail : CustomerDetail): ValidationResult {\n    let validationResult = new ValidationResult();\n\n    //valid required\n    if (StringUtils.isEmpty(customerDetail.lastName))\n      validationResult.setErrorMap('lastName', 'required');\n    // if (customerProfile.firstName == '')\n    //   validationResult.setErrorMap('firstName', 'required');\n    \n    //valid format      \n\n    //valid email\n    if(customerDetail.emails.length != 0 ) {\n      customerDetail.emails.forEach((email) => {\n        if(!email.isEmpty()) {\n          if(!this.isEmailFormat(email.email)) {\n            validationResult.setErrorMap('email','format');\n          }\n        }\n      });\n      \n    }\n\n    //valid date\n    // if(customerProfile.birthday == null) {\n    //   validationResult.setErrorMap('birthday', 'date');\n    // }\n\n    return validationResult;\n  }\n\n  private isEmailFormat(email) {\n    let regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n    return regexp.test(email);\n  }\n\n  saveCustomerDetail(customerDetail : CustomerDetail):Observable<any> {\n    console.log(\"saveCustomerProfile\",customerDetail);\n\n    //check tel/email/address default type\n    customerDetail.tels.forEach((tel) => {\n      if(StringUtils.isEmpty(tel.telType)) tel.telType = 'TelHome';\n    });\n\n    customerDetail.emails.forEach((email) => {\n      if(StringUtils.isEmpty(email.emailType)) email.emailType = 'MailHome';\n    });\n\n    customerDetail.addresses.forEach((address) => {\n      if(StringUtils.isEmpty(address.addressType)) address.addressType = 'AddressTypeHome';\n    });\n\n    let saveCustomerDetailAPI : CustomerSaveDetailAPI = <CustomerSaveDetailAPI>this.APIFactory.getAPI('saveCustomerDetail'); \n  \n    saveCustomerDetailAPI.setDetail(customerDetail);\n\n    let subject = Observable.create((observer)=>{\n      this.dispatcher.dispatch(saveCustomerDetailAPI).subscribe((data)=>{\n\n        console.debug('customer-service-saveCustomerDetail',data);\n\n        observer.next(data['Header']);\n        observer.complete(); \n      })\n    })\n    console.log(\"subject: \", subject);\n    return subject;\n\n  }\n\n  deleteCustomerProfile(clientID : string) : Observable<any> {\n    console.log(\"deleteCustomerProfile\",clientID);\n    let deleteAPI : CustomerDeleteAPI = <CustomerDeleteAPI>this.APIFactory.getAPI('deleteCustomer'); \n    deleteAPI.clientID = clientID;\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(deleteAPI).subscribe((data)=>{\n\n        console.debug('customer-service-deleteCustomerProfile',data);\n\n        observer.next(data['Header']);\n        observer.complete(); \n      })\n    })\n  }\n\n  getCustomerContactNote(clientID : string,pageInfo : PageInfo): Observable<Array<CustomerContactNote>>{\n    let customerContactNoteAPI : CustomerContactNoteAPI = <CustomerContactNoteAPI>this.APIFactory.getAPI('getCustomerContactNote');\n\n    customerContactNoteAPI.setClientID(clientID);\n    customerContactNoteAPI.setPageInfo(pageInfo);\n\n    console.debug('customer-service-getCustomerContactNote',customerContactNoteAPI);\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerContactNoteAPI).subscribe((data) => {\n\n\n        console.debug('customer-service-getCustomerContactNote',data);\n\n        let returnCustomerContactNote: Array<CustomerContactNote> = new Array<CustomerContactNote>();\n        let customerContactNoteList = data['Body'];\n\n        for (let i = 0; i < customerContactNoteList.length; i++) {\n          let json = customerContactNoteList[i];\n          let user = new CustomerContactNote(json.ClientID,new Date(json.NoteTime),json.Note);          \n          returnCustomerContactNote.push(user);\n        }\n\n        observer.next(returnCustomerContactNote);\n        observer.complete();\n      })\n    })\n  }\n\n  addCustomerContact(clientID : string,customerClientID : string,note : string,noteTime : Date) : Observable<any> {\n    console.log(\"addCustomerContact\");\n    let addCustomerContactAPI : CustomerAddContactNoteAPI = <CustomerAddContactNoteAPI>this.APIFactory.getAPI('addCustomerContactNote'); \n    addCustomerContactAPI.setClientID(clientID);\n    addCustomerContactAPI.setCustomerClientID(customerClientID);\n    addCustomerContactAPI.setNote(note);\n    addCustomerContactAPI.setNoteTime(noteTime)\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(addCustomerContactAPI).subscribe((data) => {\n        console.debug('customer-service-addCustomerContact',data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n\n  }\n\n  editCustomerContact(contactClientID : string,note : string,noteTime : Date) : Observable<string> {\n    console.log(\"editCustomerContact\");\n    let editCustomerContactAPI : CustomerEditContactNoteAPI = <CustomerEditContactNoteAPI>this.APIFactory.getAPI('editCustomerContactNote'); \n    editCustomerContactAPI.setContactClientID(contactClientID);\n    editCustomerContactAPI.setNote(note);\n    editCustomerContactAPI.setNoteTime(noteTime)\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(editCustomerContactAPI).subscribe((data)=>{\n\n        console.debug('customer-service-editCustomerContact',data);\n\n        observer.next(data['Header']);\n        observer.complete(); \n      })\n    })\n  }\n\n  deleteCustomerContact(contactClientID : string) : Observable<any> {\n    console.log(\"deleteCustomerContact\");\n    let deleteCustomerContactAPI : CustomerDeleteContactNoteAPI = <CustomerDeleteContactNoteAPI>this.APIFactory.getAPI('deleteCustomerContactNote'); \n    deleteCustomerContactAPI.setContactClientID(contactClientID);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(deleteCustomerContactAPI).subscribe((data)=>{\n\n        console.debug('customer-service-editCustomerContact',data);\n\n        observer.next(data['Header']);\n        observer.complete(); \n      })\n    })\n  }\n\n  getCustomerContactTel(clientID : string) : Observable<Array<CustomerTel>>{\n    let customerTelAPI : CustomerTelAPI = <CustomerTelAPI>this.APIFactory.getAPI('getCustomerTel');\n\n    customerTelAPI.setClientID(clientID);\n\n    console.debug('customer-service-getCustomerContactTel',customerTelAPI);\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerTelAPI).subscribe((data) => {\n        console.debug('customer-service-getCustomerContactTel response',data);\n        let returnCustomerTel: Array<CustomerTel> = new Array<CustomerTel>();\n        let customerTelList = data['Body'];\n\n        customerTelList.map(tel=> new CustomerTel(tel.ClientID, this.profileCodeService.convertCode2Text('Customer_TelType',tel.TelType),tel.Tel,tel.DataSource)).forEach(element => {\n          returnCustomerTel.push(element);\n        });\n\n        observer.next(returnCustomerTel);\n        observer.complete();\n      })\n    })\n  }\n  \n}\n","export class CustomerFilterPreset{\n    \n    public addValues(column : string,values : Array<string>) {\n        this[column] = values;        \n        \n    }\n\n}","import { CustomerFilterPreset } from \"./customer-filter-preset\";\nimport { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerFilterCriteria {\n    private _keyword: string;\n    private filterMap: Map<string, Array<string>> = new Map<string, Array<string>>();\n    private _savePreset: boolean = false;\n\n    constructor(keyword = '', filterMap = new Map<string, Array<string>>(), savePreset = false) {\n        this._keyword = keyword;\n        this.filterMap = filterMap;\n        this._savePreset = savePreset;\n    }\n\n    addCriteria(filterCol: string, value: string) {\n        let values: Array<string> = this.filterMap.get(filterCol);\n        if (values == undefined) values = new Array<string>();\n\n        if (!values.includes(value)) {\n            values.push(value);\n\n            this.filterMap.set(filterCol, values);\n        }\n    }\n\n    addCriteriaCols(filterCol: string, values: string[]) {\n        this.filterMap.set(filterCol, values);\n    }\n\n    hasCriteria() {\n        return this.filterMap.size != 0 || StringUtils.isNotEmpty(this._keyword);\n    }\n\n    set keyword(keyword: string) { this._keyword = keyword }\n    get keyword() { return this._keyword }\n\n    set savePreset(isSave: boolean) {\n        this._savePreset = isSave;\n    }\n\n    get savePreset() { return this._savePreset }\n\n    getFilterMap() {\n        return this.filterMap;\n    }\n\n\n\n    toPresetJSON(): CustomerFilterPreset {\n        let preset = new CustomerFilterPreset();\n\n        this.filterMap.forEach((value: Array<string>, column: string) => {\n            preset.addValues(column, value);\n        });\n\n        console.debug('toPresetJSON', preset);\n\n        return preset;\n    }\n}","export class CustomerConfirmAction {\n    private _action : string;\n    private _optionObj : Array<string>;\n\n    constructor() {\n        \n    }\n\n    set action(action) {this._action = action}\n    set option(option) {this._optionObj = option}\n\n    get action() {return this._action}\n    get option() {return this._optionObj}\n}","import { ContactItem } from \"@allianzSND/core\";\n\nexport class CustomerImportGroup {\n    private _groupName : string;\n    private _isShow : boolean = true;\n    private _items : Array<ContactItem> = new Array<ContactItem>();\n\n    constructor(groupName : string) {\n        this._groupName = groupName;\n    }\n\n    public addItem(item : ContactItem) {\n        this._items.push(item);\n    }\n\n    public get getItems() {\n        return this._items;\n    }\n\n    public get groupName() {\n        return this._groupName;\n    }\n\n    public set groupName(groupName : string) {\n        this._groupName = groupName;\n    }\n\n    public get isShow() {\n        return this._isShow;\n    }\n\n    public set isShow(isShow : boolean) {\n        this._isShow = isShow;\n    }\n\n}","import { InjectionToken } from \"@angular/core\";\nimport { syncCustomer } from \"../interface/syncCustomer.interface\";\nimport { storeCustomer } from \"../interface/storeCustomer.interface\";\nimport { customerAction } from \"../interface/customerAction.interface\";\nimport { showCustomerRule } from \"../interface/showCustomerRule.interface\";\n\nexport const syncCustomerToken = new InjectionToken<syncCustomer>('syncCustomer');\nexport const storeCustomerToken = new InjectionToken<storeCustomer>(\"storeCustomer\");\nexport const customerActionToken = new InjectionToken<customerAction>(\"customerAction\");\nexport const showCustomerRuleToken = new InjectionToken<showCustomerRule>(\"showCustomerRule\");\n","import { Observable } from \"rxjs\";\nimport { CustomerDetail } from \"../service/model/CustomerDetail\";\nimport { CustomerItem } from '../service/model/CustomerItem';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport interface storeCustomer {\n    setState(state: CUSTOMER_STATE): void;\n    getState(): Observable<CUSTOMER_STATE>;\n    setCurrentCustomerDetail(detail: CustomerDetail): void;\n    getCurrentCustomerDetail(): Observable<CustomerDetail>;\n    setCustomerList(list: Array<CustomerItem>): void;\n    getCustomerList(): Observable<Array<CustomerItem>>;\n    setCriteria(criteria: CustomerFilterCriteria): void;\n    getCriteria(): Observable<CustomerFilterCriteria>;\n}\n\nexport enum CUSTOMER_STATE {\n    DISPLAY = 'display',\n    EDIT = 'edit',\n    ADD_SAVED = 'add saved',\n    EDIT_SAVED = 'edit saved',\n    FIRST = 'first'\n}","import { ProfileCode, ProfileCodeService, SQLiteTable, StringUtils } from \"@allianzSND/core\";\nimport { SelectOption } from \"@allianzSND/ui\";\nimport { differenceInCalendarDays } from 'date-fns';\nimport { CustomerDetail } from \"../service/model/CustomerDetail\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({providedIn:'root'})\nexport class CustomerUtils {\n\n    constructor(private profileCodeService: ProfileCodeService) { }\n\n    setCode2Option(codeArray: Array<ProfileCode>) {\n        let options: Array<SelectOption> = new Array();\n        if (codeArray != undefined) {\n            for (let code of codeArray) {\n                options.push(new SelectOption(code.getCode(), code.displayText));\n            }\n        }\n\n\n        return options;\n    }\n    \n    countCompletenessByProfile(customerDetail : CustomerDetail) {\n        console.debug('countCompletenessByDetail',customerDetail);\n\n        //count Completeness\n        let completeness: number = 0;\n        let countColumnName = ['FirstName', 'LastName', 'Occupation', 'Company', 'AgeRange', 'Gender',\n            'Income', 'Source', 'Marriage', 'Children', 'Familiarity', 'RecentStatus', 'MANPA',\n            'ContactFrequancy', 'Possibility'];\n\n            if(StringUtils.isNotEmpty(customerDetail.firstName)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.lastName)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.occupation)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.company)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.ageRange)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.gender)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.income)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.source)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.marriage)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.children)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.familiarity)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.recentStatus)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.manpa)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.contactFrequancy)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.possibility)) completeness++;\n\n      \n\n        //count birthday\n        if (customerDetail.birthday != undefined) completeness++;\n\n        //count phone/email/address\n        if (customerDetail.tels.length != 0) completeness++;\n        if (customerDetail.emails.length != 0) completeness++;\n        if (customerDetail.addresses.length != 0) completeness++;\n\n        console.debug('orginal completeness',completeness,(countColumnName.length + 4));\n\n        completeness = (completeness / (countColumnName.length + 4));\n\n        console.debug('before round completeness', completeness);\n        completeness = Math.round(completeness * 100) / 100;\n        console.debug('after round completeness', completeness);\n\n        return completeness;\n    }\n\n    countCompleteness(customerObj : SQLiteTable,telArraySize : number,emailArraySize : number,addressAddressSize : number) {\n        console.debug('countCompleteness',customerObj,telArraySize,emailArraySize,addressAddressSize);\n        \n        //count Completeness\n        let completeness: number = 0;\n        let countColumnName = ['FirstName', 'LastName', 'Occupation', 'Company', 'AgeRange', 'Gender',\n            'Income', 'Source', 'Marriage', 'Children', 'Familiarity', 'RecentStatus', 'MANPA',\n            'ContactFrequancy', 'Possibility'];\n\n        for (let columnName of countColumnName) {\n            if (StringUtils.isNotEmpty(customerObj.getValue(columnName))) {\n                console.debug('hasData',columnName + '=>' + customerObj.getValue(columnName));\n                completeness++;\n            }\n        }\n\n        //count birthday\n        if (StringUtils.isNotEmpty(customerObj.getValue('BirthdayYear')) &&\n        StringUtils.isNotEmpty(customerObj.getValue('BirthdayMonth')) &&\n        StringUtils.isNotEmpty(customerObj.getValue('BirthdayDate'))) completeness++;\n\n        //count phone/email/address\n        if (telArraySize != 0) completeness++;\n        if (emailArraySize != 0) completeness++;\n        if (addressAddressSize != 0) completeness++;\n\n        console.debug('orginal completeness',completeness,(countColumnName.length + 4));\n\n        completeness = (completeness / (countColumnName.length + 4));\n\n        console.debug('before round completeness', completeness);\n        completeness = Math.round(completeness * 100) / 100;\n        console.debug('after round completeness', completeness);\n\n        customerObj.setValue('Completeness', completeness);\n    }\n\n    setCustomerDefaultValue(dataObject: SQLiteTable) {\n        \n        //count age\n        if (StringUtils.isNotEmpty(dataObject.getValue('BirthdayYear')) && \n        StringUtils.isNotEmpty(dataObject.getValue('BirthdayMonth')) && \n        StringUtils.isNotEmpty(dataObject.getValue('BirthdayDate'))) {\n            let birthday = new Date(Number(dataObject.getValue('BirthdayYear')),\n                Number(dataObject.getValue('BirthdayMonth') - 1),\n                Number(dataObject.getValue('BirthdayDate')));\n\n            let age = this.countAge(birthday);\n            dataObject.setValue('age', age);\n\n            //check age range\n            if (StringUtils.isEmpty(dataObject.getValue('AgeRange'))) {\n                let ageRange = this.countAgeRange(age);\n                if(ageRange != undefined) {\n                    dataObject.setValue('AgeRange', ageRange);\n                }\n            }\n\n        }\n\n    }\n\n    countAgeRange(age : number) {\n        console.debug('countAgeRange',age);\n        let rangeResult;\n        let ageRange: Array<ProfileCode> = this.profileCodeService.getCodeArray('Customer_Age');\n        ageRange.forEach(profileCode => {\n            let args = profileCode.getArguments();\n            console.debug('customer-utils countAgeRange args',args);\n            \n            let obj = JSON.parse(args);\n            console.debug('customer-utils countAgeRange obj',obj);\n            if (age >= obj.start && age <= obj.end) {\n                console.debug('match age range',profileCode.getCode());\n                rangeResult = profileCode.getCode();\n            }\n        });\n\n        console.debug('rangeResult',rangeResult);\n\n        return rangeResult;\n    }\n\n    countAge(birthday : Date) : number{\n        let dates = this.calCEIntervalDays(birthday, new Date());\n        console.debug('dates', dates);\n        let age = Math.floor(dates / 365);\n        console.debug('age', age);\n\n        return age;\n    }\n\n    /**\n     * javascriptå³å¥èµ·å§æ¥èçµæ\n     * æ¥ææ ¼å¼çºæ°åå¹´ææ¥(EX.1060802)\n     * å³å¥ 1060702,1060802 æåå³31å¤©\n     * å³å¥ 1060901,1061001 æåå³30å¤©\n     * @param  sDate \n     * @param  eDate \n     * @return å¤©æ¸\n     */\n    calRocIntervalDays(sDate, eDate) {\n        var msecPerMinute = 1000 * 60;\n        var msecPerHour = msecPerMinute * 60;\n        var msecPerDay = msecPerHour * 24;\n        sDate = this.leftPad(sDate, 7, '0');\n        eDate = this.leftPad(eDate, 7, '0');\n        var begDateStr = \"\" + sDate.substring(3, 5) + \"/\" + sDate.substring(5) + \"/\" + (Number(sDate.substring(0, 3)) + Number(1911));\n        var endDateStr = \"\" + eDate.substring(3, 5) + \"/\" + eDate.substring(5) + \"/\" + (Number(eDate.substring(0, 3)) + Number(1911));\n        var begDate = new Date(begDateStr);\n        var endDate = new Date(endDateStr);\n        var interval = endDate.getTime() - begDate.getTime();\n        var days = Math.floor(interval / msecPerDay);\n        return days;\n    }\n    /**\n     * javascriptå³å¥èµ·å§æ¥èçµæ\n     * æ¥ææ ¼å¼çºè¥¿åå¹´ææ¥(EX.20170801)\n     * å³å¥ 20170702,20170802 æåå³31å¤©\n     * å³å¥ 20170901,20171001 æåå³30å¤©\n     * @param  sDate \n     * @param  eDate \n     * @return å¤©æ¸\n     */\n    calCEIntervalDays(sDate, eDate) {\n        // var msecPerMinute = 1000 * 60;\n        // var msecPerHour = msecPerMinute * 60;\n        // var msecPerDay = msecPerHour * 24;\n        // var begDateStr = \"\" + sDate.substring(4, 6) + \"/\" + sDate.substring(6) + \"/\" + sDate.substring(0, 4);\n        // var endDateStr = \"\" + eDate.substring(4, 6) + \"/\" + eDate.substring(6) + \"/\" + eDate.substring(0, 4);\n        // var begDate = new Date(begDateStr);\n        // var endDate = new Date(endDateStr);\n        // var interval = endDate.getTime() - begDate.getTime();\n        // var days = Math.floor(interval / msecPerDay);\n\n        // return days;\n        return differenceInCalendarDays(eDate, sDate);\n\n    }\n    /**\n     * åå·¦è£é¶\n     * Ex:leftPad(3,3,'0')->003\n     * @param  val    [åå¼]\n     * @param  padLen [è£è¶³é·åº¦]\n     * @param  padVal [è£è¶³å¼]\n     * @return        [description]\n     */\n    leftPad(val, padLen, padVal) {\n        if (val.toString().length < padLen) {\n            for (var i = 1; i < padLen; i++) {\n                val = padVal + val;\n                if (val.toString().length >= padLen) {\n                    break;\n                }\n            }\n        }\n        return val;\n    }\n}","import { Component, OnInit, ViewChild, ChangeDetectorRef, Input, TemplateRef, EventEmitter, Output, Optional, Inject, OnDestroy } from '@angular/core';\nimport { trigger, state, style, animate, transition, } from '@angular/animations';\nimport { ExtensionService, Language, StringUtils, DateUtils, PageInfo, DeviceService, ProfileCode, ProfileCodeService, TranslateService, ContactItem } from '@allianzSND/core';\nimport { CalendarService, CalendarEventDetail, CalendarEditComponent } from '@allianzSND/calendar';\nimport { CustomerService } from '../../service/customer-service.service';\nimport { CustomerTel } from '../../service/model/CustomerTel';\nimport { CustomerFilterCriteria } from '../bean/customer-filter-criteria';\nimport { CustomerAlertItem } from '../../service/model/CustomerAlertItem';\nimport { CustomerConfirmAction } from '../bean/customer-confirm-action';\nimport { CustomerDetail } from '../../service/model/CustomerDetail';\nimport { CustomerItem } from '../../service/model/CustomerItem';\nimport { CustomerContactNote } from '../../service/model/CustomerContactNote';\nimport { CustomerImportGroup } from '../bean/customer-import-group';\nimport { addDays, addHours, addMinutes, getDate, getHours, getMinutes, getMonth, getYear, subMinutes } from 'date-fns';\nimport { syncCustomerToken, storeCustomerToken, customerActionToken } from '../../injectionToken/injection-token';\nimport { syncCustomer } from '../../interface';\nimport { storeCustomer, CUSTOMER_STATE } from '../../interface/storeCustomer.interface';\nimport { customerAction } from '../../interface/customerAction.interface';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n  animations: [\n    trigger('searchBlockAni', [\n      state('*', style({\n        width: '0',\n        opacity: 0\n      })),\n      state('open', style({\n        width: '100%',\n        opacity: 1\n      })),\n      state('closed', style({\n        width: '0',\n        opacity: 0\n      })),\n      transition('open => closed', animate('300ms ease-in')),\n      transition('closed => open', animate('300ms ease-in'))\n    ]),\n  ]\n})\nexport class CustomersComponent implements OnInit, OnDestroy {\n\n  //intergration Calendar Module\n  @ViewChild(CalendarEditComponent) calendarEditComponent;\n  public viewTypeIndex = 2; // 'month'\n  public viewType: string;\n  public viewDate = new Date();\n  public weekStartsOn = 1; // Monday \n\n\n\n  // control mobile show\n  public isShow = false;\n\n  // popup\n  public isExpandDetail = false;\n  public isRefreshDetail = false;\n  public isSaveClick = false;\n\n  public language: Language = new Language();\n\n  //å®¢æ¶æ¸å®çsearch block animate\n  public isOpen: boolean = false;\n  public classSearch: string = '';\n\n  //popup control\n  public isDisplayImportSavePopup = false; //import popup\n  public isDisplaySavePopup = false; //save popup\n  public isDisplayDelCustomerPopup = false; //delete customer popup\n  public isDisplayConfirmAlertPopup = false; //confirm alert popup\n  public isDisplayInfoAlertPopup = false; //info alert popup\n  public isDisplayUpdateRemind = false; //alert customer over 6 month popup\n  public isDisplayDeleteRemind = false; //alert customer over 6 month & 7day popup\n  public isPopupImport = false; //import popup\n  public isPopupFilter = false; //filter popup\n  public isExpandEdit = false; // appointment popup\n  public isPopupCallPhone = false; //call customer phone popup\n  public isPopupNoteDetail = false; //contact detail popup\n  public isPopupEditNote = false; //add/edit contact note popup\n  public isPopupDeleteNote = false; //delete contact note popup\n  public isPopupConfirmDisable = true; // confirmPopup btn is disable default\n  public isDisplayDeletePopup = false; //delete success popup\n\n  //control overtime customer list\n  public alertOverTimeList = new Array<CustomerAlertItem>();\n\n  //control auto delete customer list\n  public alertAutoDeleteCustomer = new Array<CustomerAlertItem>();\n\n  //cache confirm action\n  private _confirmAction: CustomerConfirmAction = new CustomerConfirmAction();\n\n  //control refresh  content\n  public isLoadingFinishContent: boolean = false;\n\n  //control\n  public isLazyLoading: boolean = true;\n\n  //intergration customer-detail used\n  //call phone obj\n  public callPhoneTelArray: Array<CustomerTel>;\n\n  //intergration customer-contact-list used\n  //customer contact detail obj\n  public customerContactDetail: CustomerContactNote;\n  public customerContactList: Array<CustomerContactNote> = [];\n  public contactListPageInfo = new PageInfo();\n\n  public calendarEventDetail: CalendarEventDetail;\n  public viewDateCalendarEventList: Array<CalendarEventDetail> = [];\n\n  //intergration customer-list\n  public customerList = new Array<CustomerItem>();\n  public clickItem: CustomerItem;\n  public customerListPageInfo = new PageInfo();\n  public filterCriteria = new CustomerFilterCriteria();\n  public filterType = '';\n\n  public optionMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public translateMap: Map<string, string> = new Map<string, string>();\n\n  private dayTypesList: Array<string> = ['Cross_Day', 'All_Day'];\n  private noSchedule: string = 'No_Schedule';\n\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public alertTypeList: Array<ProfileCode> = [];\n\n\n  //intergration customer-import\n  public importContractMap = new Map<string, CustomerImportGroup>();\n  public mobileResultSize: number = 0;\n  public importData: boolean = false;\n  public importContactList: Array<ContactItem> = [];\n\n  //filter customer attribute\n  public isLoadCriteria: boolean = false;\n  public isClearCriteria: boolean = false;\n\n  //import result(success | fail);\n  public _onImportResult: boolean = false;\n\n\n  //intergration customer-edit used\n  //add/edit contact note attribute\n  private noteEditClientID: string;\n  public noteCurrentTime: Date = new Date();//add/edit Note current time\n  public noteMessage: string = '';//add/edit Note Message\n  private noteClientID: string = '';//edit/delete noteClientID\n  public isRefreshContactList: boolean = false;\n  public loadContactList: boolean = false;\n\n\n\n  // search animate in filter\n  public classBarMove: string = '';\n\n  //listener route back event\n  private _reloadData = false;\n\n  //intergration customer-detail used\n  public customerDetail: CustomerDetail = new CustomerDetail();\n\n  //current edit customer Id\n  private currentCustomer: CustomerDetail = null;\n\n  // current customer state\n  private customerState: CUSTOMER_STATE = CUSTOMER_STATE.FIRST;\n\n  //pre saved criteria\n  private pre_criteria: CustomerFilterCriteria = new CustomerFilterCriteria();\n\n  //pre saved customerlist\n  private pre_customerList: Array<CustomerItem>;\n\n  //subscribe of store\n  private criteriaChanges;\n  private customerDetailChanges;\n  private stateChanges;\n  private customerListChanges;\n\n  //subject of clear & save filter\n  public clearSubject = new Subject();\n  public saveFilterSubject = new Subject();\n\n\n  //for extension used\n  @Input() detailPreTemplate: TemplateRef<any>;\n  @Input() detailPostTemplate: TemplateRef<any>;\n  @Output() detailModel: EventEmitter<CustomerDetail> = new EventEmitter();\n\n  constructor(private customerService: CustomerService,\n    private calendarService: CalendarService,\n    private translateService: TranslateService,\n    private changeDetector: ChangeDetectorRef,\n    private deviceService: DeviceService,\n    private dateUtils: DateUtils,\n    private profileCodeService: ProfileCodeService,\n    private extensionService: ExtensionService,\n    private customerUtils: CustomerUtils,\n    @Optional() @Inject(storeCustomerToken) private customerStore: storeCustomer,\n    @Optional() @Inject(syncCustomerToken) private customerSync: syncCustomer,\n    @Optional() @Inject(customerActionToken) private customerAction: customerAction,\n\n\n  ) {\n\n  }\n\n  ngOnDestroy() {\n    if (this.customerStore) {\n      this.criteriaChanges.unsubscribe();\n      this.customerDetailChanges.unsubscribe();\n      this.stateChanges.unsubscribe();\n      this.customerListChanges.unsubscribe();\n    }\n  }\n\n\n  ngOnInit() {\n    this.activityTypeList = this.profileCodeService.getCodeArray('Calendar_Type');\n    this.alertTypeList = this.profileCodeService.getCodeArray('Calendar_RemindTime');\n    this.optionMap.set('Calendar_Type', this.activityTypeList);\n    this.optionMap.set('Calendar_RemindTime', this.alertTypeList);\n\n    this.dayTypesList.forEach((dayType) => {\n      this.translateMap.set(dayType, this.translateService.translate(dayType))\n    });\n    this.translateMap.set(this.noSchedule, this.translateService.translate(this.noSchedule));\n\n\n\n    if (this.customerStore) {\n      this.criteriaChanges = this.customerStore.getCriteria().subscribe((criteria) => {\n        this.pre_criteria = criteria;\n      })\n\n      this.customerDetailChanges = this.customerStore.getCurrentCustomerDetail().subscribe(detail => {\n        this.currentCustomer = detail;\n      });\n\n      this.customerListChanges = this.customerStore.getCustomerList().subscribe(list => {\n        this.pre_customerList = list;\n      })\n\n      this.stateChanges = this.customerStore.getState().subscribe((state) => {\n\n        console.log(\"main state: \", state);\n        //console.log(\"curreontCustomer: \", this.currentCustomer);\n        if (state == CUSTOMER_STATE.EDIT_SAVED && this.customerState != CUSTOMER_STATE.EDIT_SAVED) {\n\n          //after saved, check if current ID in criteria\n          console.log(\"state == CUSTOMER_STATE.EDIT_SAVED\");\n          console.log(\"currentCustomer: \", this.currentCustomer);\n          this.isDisplaySavePopup = true;\n          this.customerList = this.pre_customerList;\n          this.filterCriteria = this.pre_criteria;\n          if (this.pre_criteria.hasCriteria()) {\n            this.customerService.checkInFilterCriteria(this.currentCustomer.clientID, this.pre_criteria).subscribe(result => {\n              if (!result) {\n                this.customerList.forEach(item => {\n                  if (item.clientID == this.currentCustomer.clientID) {\n                    item.isHighLight = true;\n                  }\n                });\n                this.customerList = [...this.customerList];\n              }\n              else {\n                this.customerList.forEach(item => {\n                  if (item.clientID == this.currentCustomer.clientID) {\n                    console.debug('change isHighLight status');\n                    item.isHighLight = false;\n                  }\n                });\n              }\n              this.customerList.forEach(item => {\n                if (item.clientID == this.currentCustomer.clientID) {\n                  item.firstName = this.currentCustomer.firstName;\n                  item.lastName = this.currentCustomer.lastName;\n                  item.tag = this.currentCustomer.possibility;\n                  item.complementPercent = this.customerUtils.countCompletenessByProfile(this.currentCustomer);\n                }\n              });\n              this.customerList = [...this.customerList];\n\n              this.customerStore.setCustomerList(this.customerList);\n\n            })\n          }\n          else {\n            this.customerList.forEach((item) => {\n              if (item.clientID == this.currentCustomer.clientID) {\n                item.firstName = this.currentCustomer.firstName;\n                item.lastName = this.currentCustomer.lastName;\n                item.tag = this.currentCustomer.possibility;\n                item.complementPercent = this.customerUtils.countCompletenessByProfile(this.currentCustomer);\n              }\n            });\n            this.customerList = [...this.customerList];\n          }\n\n          this.onGetCustomerDetailByID(this.currentCustomer.clientID);\n          this.refreshContactNote(false);\n          // this.changeDetector.detectChanges();\n        }\n        else if (state == CUSTOMER_STATE.EDIT && this.customerState != CUSTOMER_STATE.EDIT && this.customerState == CUSTOMER_STATE.FIRST) {\n          // edit/click page click last page\n\n          this.customerList = this.pre_customerList;\n          this.filterCriteria = this.pre_criteria;\n          //this.onGetCustomerDetailByID(this.currentCustomer.clientID);\n          if (StringUtils.isEmpty(this.currentCustomer.clientID)) {\n            this.refreshCustomerList(false);\n          }\n          else {\n            this.onGetCustomerDetailByID(this.currentCustomer.clientID);\n            this.refreshContactNote(false);\n          }\n        }\n        else if (this.customerState == CUSTOMER_STATE.FIRST && state == CUSTOMER_STATE.DISPLAY) {\n          //firt in, fetch preset filter\n          console.log(\"this.customerState == CUSTOMER_STATE.FIRST && state == CUSTOMER_STATE.DISPLAY\");\n          this.loadPresetCriteria().then(() => {\n            this.refreshCustomerList(false);\n          });\n        }\n        else if (state == CUSTOMER_STATE.ADD_SAVED) {\n\n          //after add , get pre_criteria && refresh customerlist\n          console.log(\"state == CUSTOMER_STATE.ADD_SAVED\");\n          this.isDisplaySavePopup = true;\n          this.filterCriteria = this.pre_criteria;\n          this.refreshCustomerList(false);\n        }\n        this.customerState = state;\n      })\n      this.customerStore.setState(CUSTOMER_STATE.DISPLAY);\n\n    }\n    else {\n      this.refreshCustomerList(false);\n    }\n    this.refreshContactNote(false);\n\n\n\n    //check is first time open this function\n    if (this.customerService.isFirstTime()) {\n\n      console.log('customer is first time');\n\n      //check customer data over 6month\n\n      this.customerService.getOverTimeCustomerList(\"\").subscribe(data => {\n        this.alertOverTimeList = data;\n        if (this.alertOverTimeList.length != 0) {\n\n          this.customerService.updateMessageToRead('OverTime', 'Customer').subscribe(data => {\n            this.isDisplayUpdateRemind = true;\n          });\n\n        }\n      });\n\n\n\n\n      //check customer data over 6month & 7day\n      this.customerService.getAutoDeleteCustomerList(\"\").subscribe(data => {\n        console.log(\"customerAutoDelete: \", data);\n        this.alertAutoDeleteCustomer = data;\n        if (this.alertAutoDeleteCustomer.length != 0) {\n\n          this.customerService.updateMessageToRead('AutoDelete', 'Customer').subscribe(data => {\n            console.log(\"updateMessageToRead: \", data);\n            this.isDisplayDeleteRemind = true;\n          });\n\n\n        }\n      });\n\n\n      //check customer info alert\n      let timerObj = this.extensionService.getConfigValue('CustomerInfoAlertTimer');\n      console.debug('timerObj', timerObj);\n      this._checkIsInfoAlertTime(timerObj);\n\n\n\n    }\n  }\n\n\n  refreshCustomerList(isAppend: boolean) {\n    console.debug('refreshCustomerList append', isAppend);\n    console.debug(this.filterCriteria);\n    console.debug(this.customerListPageInfo);\n\n    //fetch customer-list data\n    if (!isAppend) this.customerListPageInfo.resetPage();\n\n    this.customerService.getCustomerList(this.filterCriteria, this.customerListPageInfo).subscribe(data => {\n      console.log(\"data in criteria: \", data);\n      if (!isAppend) this.customerList = [...data];\n      else this.customerList = [...this.customerList, ...data];\n\n      if ((!this.filterCriteria.hasCriteria())) {\n        this.filterType = 'NONE';\n      }\n      else {\n        this.filterType = StringUtils.isNotEmpty(this.filterCriteria.keyword) ? 'SEARCH' : 'FILTER';\n\n      }\n\n      if (this.customerStore) {\n        this.customerStore.setCustomerList(this.customerList);\n      }\n\n\n      if (this.customerList.length > 0) {\n        this.onGetCustomerDetailByID(this.customerList[0].clientID);\n      }\n      else {\n        this.customerDetail = new CustomerDetail();\n      }\n\n      // this.changeDetector.detectChanges();\n    });\n  }\n\n  /* integration contact-list */\n  refreshContactNote(isAppend: boolean) {\n\n\n    //if append data will next page\n    if (!isAppend) this.contactListPageInfo.resetPage();\n\n    this.customerService.getCustomerContactNote(this.customerDetail.clientID, this.contactListPageInfo).subscribe(data => {\n      if (isAppend) this.customerContactList = this.customerContactList.concat(data);\n      else this.customerContactList = data;\n\n      console.debug('refreshContactNote success isRefreshContactList status');\n\n    });\n\n  }\n\n  onGetCustomerContactListByID(clientID) {\n    this.customerService.getCustomerContactNote(clientID, this.contactListPageInfo).subscribe(data => {\n      this.customerContactList = data;\n    });\n  }\n\n  _checkIsInfoAlertTime(timerObj) {\n    let infoAlertDateRange: Array<Object> = timerObj.DateRange;\n    let infoAlertTimeRange: Object = timerObj.TimeRange;\n\n    let now = new Date();\n    console.debug('now', now);\n    console.debug('now month', now.getMonth() + 1);\n    console.debug('now date', now.getDate());\n    console.debug('now hours', now.getHours());\n    infoAlertDateRange.forEach(element => {\n      let month = element['month'];\n      let date = element['date'];\n\n      if ((now.getMonth() + 1 == Number.parseInt(month)) && now.getDate() == Number.parseInt(date)) {\n        if (now.getHours() >= Number.parseInt(infoAlertTimeRange['start'])\n          && now.getHours() <= Number.parseInt(infoAlertTimeRange['end'])) {\n          this.isDisplayInfoAlertPopup = true;\n          return;\n        }\n      }\n\n    });\n\n\n  }\n\n  onGetCustomerDetailByID(clientID) {\n    this.customerService.getCustomerDetail(clientID).subscribe(data => {\n      this.customerDetail = data;\n      this.customerService.convertCustomerDetailDisplayMode(this.customerDetail);\n\n    });\n\n\n  }\n\n  toggleSearch() {\n    this.isOpen = !this.isOpen;\n    this.classSearch = this.isOpen ? ' active' : ''\n    if (!this.isOpen) {\n      // this.filterCriteria = new CustomerFilterCriteria();\n      this.filterCriteria.keyword = '';\n      if (this.customerStore) {\n        this.customerStore.setCriteria(this.filterCriteria);\n      }\n      this.refreshCustomerList(false);\n    }\n\n  }\n\n  // search keypress\n  searchCustomerName(name) {\n    console.debug('searchCustomerName', name);\n\n    // this.filterCriteria = new CustomerFilterCriteria();\n    this.filterCriteria.keyword = name;\n    if (this.customerStore) {\n      this.customerStore.setCriteria(this.filterCriteria);\n    }\n    this.refreshCustomerList(false);\n\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n\n  //when customer-list click get click Item\n  onChangeCustomer(customerItem: CustomerItem) {\n\n    this.clickItem = customerItem;\n\n\n\n    //get CustomerDetail\n    this.onGetCustomerDetailByID(customerItem.clientID);\n\n    //get CustomerNote\n    this.onGetCustomerContactListByID(customerItem.clientID);\n    this.isShow = true;\n\n  }\n\n  //when customer-list fetch next record\n  onCustomerLoad() {\n    this.customerListPageInfo.nextPage();\n\n    this.refreshCustomerList(true);\n  }\n\n  //when customer-list sync data to backend\n  onCustomerRefresh() {\n    //sync & reload list\n    this.customerSync.sync().subscribe((resp) => {\n      this.refreshCustomerList(false);\n    })\n  }\n\n  deleteCustomer(customerClientID: string) {\n    this.isDisplayDelCustomerPopup = true;\n  }\n\n  doDeleteCustomer() {\n\n    this.customerList = this.customerList.filter(x => x.clientID != this.customerDetail.clientID);\n    this.onGetCustomerDetailByID(this.customerList[0].clientID);\n\n    this.customerService.deleteCustomerProfile(this.customerDetail.clientID).subscribe((data) => {\n      console.log(\"customerService.doDeleteCustomer()\", data);\n\n      if (data.status) {\n\n        if (this.customerStore) {\n          this.customerStore.setCustomerList(this.customerList);\n        }\n\n\n\n\n        this.isShow = false;\n        this.isDisplayDeletePopup = true;\n        // this.changeDetector.detectChanges();\n      }\n    });\n  }\n\n  addAppointment(customerClientID: string) {\n    let currentTime; // adjust time to next interval\n    currentTime = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), getHours(new Date()), getMinutes(new Date()));\n    currentTime = addMinutes(currentTime, (5 - getMinutes(currentTime) % 5));  // adjust minutes to next 5 minutes\n    currentTime = addHours(currentTime, 1);\n    this.calendarEventDetail = new CalendarEventDetail('', '', '', '', null, 'N', currentTime, addHours(currentTime, 1), 'Y', '8', null, '', '', null);\n    let queryDate = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), 0, 0, 0);\n    this.calendarService.getCalendarEventList(queryDate, subMinutes(addDays(this.viewDate, 1), 1), '').subscribe(data => {\n      this.viewDateCalendarEventList = data;\n      this.onToggleAppointmentModal(true);\n    });\n  }\n\n  onClickAppointmentSave() {\n    this.isSaveClick = true;\n  }\n\n  onToggleAppointmentModal(val) {\n    // console.log(\"X\");\n    this.isExpandEdit = val;\n  }\n\n  onSaveCalendarEvent(calendarEventDetail: CalendarEventDetail) {\n    //alert(calendarEventDetail);\n    this.isSaveClick = false;\n    if (calendarEventDetail) {\n      this.calendarService.addCalendarEvent(calendarEventDetail).subscribe(data => {\n\n        if (data.status) {\n          this.isDisplaySavePopup = true;\n          calendarEventDetail.clientID = data.clientID;\n          this.calendarEventDetail = calendarEventDetail;\n\n          this.onToggleAppointmentModal(false);\n        }\n\n      });\n    }\n\n  }\n\n  addCustomer() {\n\n    this.isDisplayConfirmAlertPopup = false;\n    // this.changeDetector.detectChanges();\n    let detail = new CustomerDetail();\n    if (this.customerStore) {\n      this.customerStore.setCurrentCustomerDetail(detail);\n      this.customerStore.setState(CUSTOMER_STATE.EDIT);\n    }\n    if (this.customerAction) {\n      this.customerAction.afterCustomerEdit(detail);\n    }\n  }\n\n  editCustomer(customerClientID: string) {\n    if (this.customerStore) {\n      this.customerStore.setState(CUSTOMER_STATE.EDIT);\n      this.customerService.getCustomerDetail(customerClientID).subscribe((detail: CustomerDetail) => {\n        this.customerStore.setCurrentCustomerDetail(detail);\n        if (this.customerAction)\n          this.customerAction.afterCustomerEdit(detail);\n      })\n\n\n    }\n\n\n  }\n\n  detailChange(customerDetail: CustomerDetail) {\n    console.log('detailChange', customerDetail);\n    this.detailModel.emit(customerDetail);\n\n  }\n\n  followChange(obj) {\n    this.customerService.updateCustomerFollowStatus(obj.clientID, obj.isFollow).subscribe((data) => {\n      //this.refreshCustomerList(false);\n      //console.log(JSON.stringify(this.customerList));\n      if (this.filterCriteria) {\n        this.customerService.checkInFilterCriteria(obj.clientID, this.filterCriteria).subscribe(result => {\n\n          this.customerList.forEach(item => {\n            if (item.clientID == obj.clientID) {\n              //console.debug('change isHighLight status in follow');\n              if (result) {\n                item.isHighLight = false;\n              }\n              else {\n                item.isHighLight = true;\n              }\n            }\n          });\n        })\n      }\n\n      this.customerList.filter(x => x.clientID == obj.clientID).forEach((value) => {\n        value.isFollow = obj.isFollow;\n      });\n    });\n\n\n    //this.followChangeClientID = obj.clientID;\n\n  }\n\n  addNote() {\n    console.debug('addNote');\n    this.noteCurrentTime = new Date();\n    this.noteMessage = '';\n    this.isPopupEditNote = true;\n  }\n\n  editNote(note: CustomerContactNote) {\n    console.debug('editNote', note);\n\n    this.noteEditClientID = note.getClientID();\n    this.noteCurrentTime = new Date();\n    this.noteMessage = note.noteMessage;\n    this.isPopupEditNote = true;\n\n  }\n\n  displayNote(note: CustomerContactNote) {\n    console.debug('displayNote', note);\n    this.customerContactDetail = note;\n\n    // add click customer name\n    this.customerContactDetail.name = this.customerDetail.lastName + this.customerDetail.firstName;\n\n    this.isPopupNoteDetail = true;\n  }\n\n\n  deleteNote(note: CustomerContactNote) {\n    console.debug('deleteNote', note);\n    this.noteClientID = note.getClientID();\n\n    this.isPopupDeleteNote = true;\n  }\n\n  doDeleteContact() {\n    this.customerService.deleteCustomerContact(this.noteClientID).subscribe(data => {\n\n      console.log(\"customerService.deleteNote()\", data);\n\n      if (data.status) {\n        this.customerContactList = this.customerContactList.filter(x => x.getClientID() != this.noteClientID);\n        this.noteClientID = '';\n        this.isDisplayDeletePopup = true;\n      }\n    });\n  }\n\n  onSaveNote(event) {\n\n    /* the same save btn for edit/add ,event also the same event, how to distinguish*/\n    //alert(JSON.stringify(this.noteMessage));\n\n    if (StringUtils.isEmpty(this.noteMessage)) {\n      alert('Message is required!!');\n    }\n    else {\n      this.customerService.addCustomerContact(this.noteEditClientID, this.customerDetail.clientID, this.noteMessage, this.noteCurrentTime).subscribe(data => {\n\n        console.log(\"customerService.saveNote()\", data);\n\n        if (data.status) {\n          console.debug('saveNote success , close popup & refresh list', this.isDisplaySavePopup, 'isRefreshContactList', this.isRefreshContactList);\n\n          // if(StringUtils.isNotEmpty(this.noteEditClientID)) {\n\n          //   let array = this.customerContactList.filter(x => x.getClientID() == this.noteEditClientID).forEach((value) =>{\n          //     value.noteMessage = this.noteMessage;\n          //   });\n\n          //   alert(array.length);\n          // }\n          // else {\n          //   this.refreshContactNote(false);\n          // }\n\n\n          this.noteEditClientID = undefined;\n          this.isPopupEditNote = false;\n          this.isDisplaySavePopup = true;\n          this.refreshContactNote(false);\n\n\n        }\n      });\n\n    }\n\n    // console.debug('saveNote', event);\n    //console.debug('clickClientID', this.noteEditClientID, this.noteEditClientID, 'noteCurrentTime', this.noteCurrentTime, 'noteMessage', this.noteMessage);\n    //alert(JSON.stringify(event));\n    // if (StringUtils.isEmpty(this.noteMessage)) {\n    //   alert('Message is required!!');\n    // }\n    // else {\n    //   this.customerService.addCustomerContact(this.noteEditClientID, this.customerDetail.clientID, this.noteMessage, this.noteCurrentTime).subscribe(data => {\n\n    //     console.log(\"customerService.saveNote()\", data);\n\n    //     if (data.status) {\n    //       console.debug('saveNote success , close popup & refresh list', this.isDisplaySavePopup, 'isRefreshContactList', this.isRefreshContactList);\n    //       this.noteEditClientID = undefined;\n    //       this.isPopupEditNote = false;\n    //       this.isDisplaySavePopup = true;\n    //       this.refreshContactNote(false);\n    //     }\n    //   });\n    // }\n\n  }\n\n  showConfirmPopup(action, optionArray) {\n\n    this._confirmAction.action = action;\n    this._confirmAction.option = optionArray;\n\n    this.isDisplayConfirmAlertPopup = true;\n    //default btn is disable\n    this.isPopupConfirmDisable = true; // true;\n  }\n\n  confirmPopup() {\n\n    if (this._confirmAction.action == 'add') {\n      this.addCustomer();\n    }\n\n    // 2019/03/25 Jeffery remove because edit not showpopup\n    // else if (this._confirmAction.action == 'edit') {\n    //   this.editCustomer(this._confirmAction.option[0]);\n    // }\n\n    else if (this._confirmAction.action == 'import') {\n      this.import();\n    }\n\n    this.isDisplayConfirmAlertPopup = false;\n  }\n\n  // detect confirm popup to content bottm and the btn can click\n  detectScroll(isBtm) {\n    console.log('in detect scroll===', isBtm);\n    if (isBtm) {\n      this.isPopupConfirmDisable = false\n    }\n  }\n\n\n\n  import() {\n\n    this.deviceService.searchContactsByName(\"\").subscribe(data => {\n      let importList = data;\n      console.debug('import result ', importList);\n\n      this.importContractMap.clear();\n\n      //regroup\n      importList.forEach(element => {\n\n        console.debug(element.lastname);\n\n        //if no lastname,use first name\n        if (StringUtils.isEmpty(element.lastname)) {\n          element.lastname = element.firstname;\n          element.firstname = '';\n        }\n\n        let name = element.lastname;\n\n        if (name != null && name.length > 0) {\n          let firstWord = name.substring(0, 1);\n          firstWord = firstWord.toLowerCase();\n          console.debug('firstWord =' + firstWord);\n\n          let group: CustomerImportGroup = this.importContractMap.get(firstWord);\n          if (group == undefined) group = new CustomerImportGroup(firstWord);\n\n          group.addItem(element);\n          this.importContractMap.set(firstWord, group);\n        }\n\n      });\n\n      console.debug('importContractMap', this.importContractMap);\n    });\n\n    this.isPopupImport = true;\n\n\n  }\n\n  //control import popup is display\n  displayImportPopup(isShow: boolean) {\n    this.isPopupImport = isShow;\n  }\n\n  //when keypress keyword refresh contract list\n  refreshImport(keyword) {\n    this.importContractMap.forEach((group: CustomerImportGroup, groupName: string) => {\n      // console.log(groupName, group);\n\n      group.isShow = false;\n      group.getItems.forEach((item: ContactItem) => {\n        // console.debug('item',item);\n        let name: string = item.lastname + item.firstname;\n        name = name.toLowerCase();\n        // console.debug(name);\n        if (name.indexOf(keyword) == -1) {\n          item.isShow = false;\n        }\n        else {\n          item.isShow = true;\n          group.isShow = true;\n        }\n      })\n    });\n  }\n\n  doImport() {\n    this.customerService.importContact(this.importContactList).subscribe(data => {\n      //alert(\"1\"+JSON.parse(JSON.stringify(data)).status);\n      let status = (JSON.parse(JSON.stringify(data))).status;\n\n      if (status) {\n\n        this.isPopupImport = false;\n        this.isDisplayImportSavePopup = true;\n        this.mobileResultSize = 0;\n\n        //refresh customer list\n        this.refreshCustomerList(false);\n      }\n    });\n  }\n\n\n\n\n  /* customer-import*/\n  onImportCustomer(importItems) {\n    console.debug('importItems', importItems);\n\n    this.importContactList = importItems;\n    this.mobileResultSize = importItems.length;\n  }\n\n  //call customer function\n  callCustomer(customerClientID: string) {\n    console.debug('callCustomer = ' + customerClientID);\n    this.customerService.getCustomerContactTel(customerClientID).subscribe(data => {\n      this.callPhoneTelArray = data;\n\n      //check number array is single\n      if (this.callPhoneTelArray.length != 0) {\n\n        //only one number just to call out\n        if (this.callPhoneTelArray.length == 1) {\n          this.callPhone(this.callPhoneTelArray[0].tel);\n        }\n        else {\n          this.isPopupCallPhone = true;\n        }\n      }\n\n    });\n\n  }\n\n  //cancel callphone popup\n  cancelCallPhone() {\n    this.isPopupCallPhone = !this.isPopupCallPhone;\n  }\n\n  //call number from phone\n  callPhone(telNumber: string) {\n    console.debug('callPhone', telNumber);\n\n\n    //call phone close popup\n    if (this.isPopupCallPhone) this.isPopupCallPhone = !this.isPopupCallPhone;\n\n\n    window.open('tel:' + telNumber, '_system');\n\n    //popup contact note\n    setTimeout((fun) => {\n      this.addNote();\n    }, 1000);\n  }\n\n\n  //open filter popup\n  filter() {\n    this.isPopupFilter = true;\n  }\n\n  //clear filter item\n  clearFilter() {\n    this.clearSubject.next();\n  }\n\n\n  //filter customer list and close popup\n  doFilter() {\n    this.saveFilterSubject.next();\n  }\n\n  doneCriteria(criteria: CustomerFilterCriteria) {\n    console.debug('doneCriteria', criteria);\n\n    this.filterCriteria = criteria;\n    this.isPopupFilter = false;\n    if (this.customerStore) {\n      this.customerStore.setCriteria(criteria);\n    }\n\n    if (criteria.savePreset) {\n      this.customerService.saveFilterCriteria(criteria).subscribe(data => {\n        console.debug('doneCriteria saveFilterCriteria', data);\n      });\n    }\n\n    this.refreshCustomerList(false);\n  }\n\n  loadPresetCriteria() {\n    //check has preset\n    let criteria = new CustomerFilterCriteria();\n    return new Promise((res) => {\n      this.customerService.getFilterCriteriaPreset().subscribe(data => {\n        console.debug('getfilterCriteriaPreset', data);\n\n        if (data != undefined) {\n\n          let count = 0;\n          for (let column in data) {\n            let values = data[column];\n            console.debug('column', column, 'arrays', values);\n            criteria.addCriteriaCols(column, values);\n            count++;\n          }\n\n          if (count != 0) {\n            criteria.savePreset = true;\n          }\n          this.filterCriteria = criteria;\n        }\n        res();\n      });\n    })\n\n  }\n\n\n  cancelDelete() {\n    console.log('cancelDelete');\n  }\n\n  // refreash content\n  refreshContent() {\n    console.log('content refresh:', this.customerSync);\n    let _this = this;\n    //set timeout for refresh animation\n    setTimeout(() => {\n      this.customerSync.sync().subscribe((resp) => {\n        if (resp) {\n          this.isLoadingFinishContent = true;\n          // this.triggerCustomerListQuery();\n        }\n      })\n    }, 800);\n\n  }\n\n\n  // loading content\n  loadContent(event) {\n    console.log('content loading');\n\n    if (!this.loadContactList) this.loadContactList = true;\n    else {\n      setTimeout(() => {\n        this.isLoadingFinishContent = true;\n      }, 0);\n    }\n\n  }\n\n  contactRefreshDone(val) {\n    console.debug('refresh done');\n    setTimeout(() => {\n      this.isLoadingFinishContent = !val;\n      this.loadContactList = val;\n    }, 0);\n  }\n\n\n  //isShowChange\n  isShowChange(val) {\n    if (this.isShow !== val) {\n      this.isShow = val;\n      // this.changeDetector.detectChanges();\n    }\n  }\n\n  public toNoteTime(time: Date) {\n    return this.dateUtils.toDateString(time, 'yyyy-MM-dd HH:mm');\n  }\n\n\n}\n","import { CustomerDetail } from \"../../service/model/CustomerDetail\";\n\nexport class CustomerDetailResult {\n    //edit profile result\n  private _detailSaveSuccess : boolean = false;\n\n  //edit profile result object\n  private _editDetail : CustomerDetail;\n\n  get detailSaveSuccess() {return this._detailSaveSuccess;}\n  set detailSaveSuccess(isSuccess : boolean) {this._detailSaveSuccess = isSuccess;}\n  \n  get editDetail() {return this._editDetail;}\n  set editDetail(detail) {this._editDetail = detail;}\n\n\n}","import { Component, OnInit, ElementRef, Output, AfterViewInit, ViewChild, Input, TemplateRef, EventEmitter, Optional, Inject, ChangeDetectorRef } from '@angular/core';\nimport { SelectOption } from '@allianzSND/ui';\nimport { ProfileCodeService, ValidationResult, Language, StringUtils } from '@allianzSND/core';\nimport { CustomerService } from '../../service/customer-service.service';\nimport { CustomerDetail } from '../../service/model/CustomerDetail';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { CustomerTel } from '../../service/model/CustomerTel';\nimport { CustomerEmail } from '../../service/model/CustomerEmail';\nimport { CustomerAddress } from '../../service/model/CustomerAddress';\nimport { CustomerDetailResult } from '../bean/customer-detail-result';\nimport { storeCustomer, CUSTOMER_STATE } from '../../interface/storeCustomer.interface';\nimport { storeCustomerToken, customerActionToken } from '../../injectionToken/injection-token';\nimport { customerAction } from '../../interface/customerAction.interface';\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: ['./customer-edit.component.scss']\n})\nexport class CustomerEditComponent implements OnInit, AfterViewInit {\n\n  @Output() sendContentHeight = new EventEmitter();\n  public contentHeight;\n\n  @ViewChild('inpageMain') content: ElementRef;\n\n  @Input() editPreTemplate: TemplateRef<any>;\n  @Input() editPostTemplate: TemplateRef<any>;\n  @Output() editModel: EventEmitter<CustomerDetail> = new EventEmitter();\n\n\n  public validationResult = new ValidationResult();\n  public customerDetail: CustomerDetail = new CustomerDetail();\n  public pageTitle = 'Edit Profile'; //default\n\n  //select options\n  public optionTel: Array<SelectOption> = new Array();\n  public optionAddress: Array<SelectOption> = new Array();\n  public optionEmail: Array<SelectOption> = new Array();\n  public optionAge: Array<SelectOption> = new Array();\n  public optionGender: Array<SelectOption> = new Array();\n  public optionIncome: Array<SelectOption> = new Array();\n  public optionSource: Array<SelectOption> = new Array();\n  public optionMarriage: Array<SelectOption> = new Array();\n  public optionChildren: Array<SelectOption> = new Array();\n  public optionFamiliarity: Array<SelectOption> = new Array();\n  public optionRecentStatus: Array<SelectOption> = new Array();\n  public optionManpa: Array<SelectOption> = new Array();\n  public optionContactFrequancyPerYear: Array<SelectOption> = new Array();\n\n  public language: Language = new Language();\n\n  public disableAge: boolean = false;\n  public isDisplaySavePopup: boolean = false;\n  public btnSaveDisable: boolean = false;\n  public isShow : boolean = false;\n\n  private _telLimit = 6;\n  private _emailLimit = 3;\n  private _addressLimit = 3;\n  private edit_type = \"add\";\n\n\n  constructor(\n    private customerService: CustomerService,\n    private profileCodeService: ProfileCodeService,\n    private customerUtils: CustomerUtils,\n    private changeDetector: ChangeDetectorRef,\n    @Optional() @Inject(customerActionToken) private customCustomerAction: customerAction,\n    @Optional() @Inject(storeCustomerToken) private customerStore: storeCustomer,\n  ) {\n\n    let telCodeArray = this.profileCodeService.getCodeArray('Customer_TelType');\n    let emailCodeArray = this.profileCodeService.getCodeArray('Customer_EmailType');\n    let addressCodeArray = this.profileCodeService.getCodeArray('Customer_AddressType');\n    let ageCodeArray = this.profileCodeService.getCodeArray('Customer_Age');\n    let genderCodeArray = this.profileCodeService.getCodeArray('Customer_Gender');\n    let incomeCodeArray = this.profileCodeService.getCodeArray('Customer_Income');\n    let sourceCodeArray = this.profileCodeService.getCodeArray('Customer_Source');\n    let marriageCodeArray = this.profileCodeService.getCodeArray('Customer_Marriage');\n    let childrenCodeArray = this.profileCodeService.getCodeArray('Customer_Children');\n    let familiarityCodeArray = this.profileCodeService.getCodeArray('Customer_Familiarity');\n    let recentStatusCodeArray = this.profileCodeService.getCodeArray('Customer_RecentStatus');\n    let manpaCodeArray = this.profileCodeService.getCodeArray('Customer_Status');\n    let contactFrequancyCodeArray = this.profileCodeService.getCodeArray('Customer_ContactFrequancy');\n\n    this.optionTel = this.customerUtils.setCode2Option(telCodeArray);\n    this.optionEmail = this.customerUtils.setCode2Option(emailCodeArray);\n    this.optionAddress = this.customerUtils.setCode2Option(addressCodeArray);\n    this.optionAge = this.customerUtils.setCode2Option(ageCodeArray);\n    this.optionGender = this.customerUtils.setCode2Option(genderCodeArray);\n    this.optionIncome = this.customerUtils.setCode2Option(incomeCodeArray);\n    this.optionSource = this.customerUtils.setCode2Option(sourceCodeArray);\n    this.optionMarriage = this.customerUtils.setCode2Option(marriageCodeArray);\n    this.optionChildren = this.customerUtils.setCode2Option(childrenCodeArray);\n    this.optionFamiliarity = this.customerUtils.setCode2Option(familiarityCodeArray);\n    this.optionRecentStatus = this.customerUtils.setCode2Option(recentStatusCodeArray);\n    this.optionManpa = this.customerUtils.setCode2Option(manpaCodeArray);\n    this.optionContactFrequancyPerYear = this.customerUtils.setCode2Option(contactFrequancyCodeArray);\n\n  }\n\n  ngOnInit() {\n\n    if (this.customerStore) {\n      this.customerStore.getCurrentCustomerDetail().subscribe((data: CustomerDetail) => {\n\n        this.customerDetail = data;\n        if (StringUtils.isEmpty(this.customerDetail.clientID)) {\n          //ADD\n          console.log(\"add :\", this.customerDetail);\n          this.pageTitle = \"\";\n          this.disableAge = false;\n          this.customerDetail = new CustomerDetail();\n          this.customerDetail.ageRange = '';\n          this.edit_type = \"add\";\n        }\n        else {\n          //Edit\n          console.log(\"edit :\", this.customerDetail);\n          this.pageTitle = this.customerDetail.lastName + this.customerDetail.firstName;\n          if (StringUtils.isNotEmpty(this.customerDetail.birthday)) {\n            this.disableAge = true;\n          }\n          else {\n            this.customerDetail.ageRange = '';\n            this.disableAge = false;\n          }\n          this.edit_type = \"edit\";\n        }\n        this.editModel.emit(this.customerDetail);\n        this.changeDetector.detectChanges();\n\n        this.isShow = true;\n      })\n    }\n  }\n\n  validationForm() {\n    console.log(this.customerDetail);\n\n    //valid customer\n    this.validationResult = this.customerService.validProfile(this.customerDetail);\n    if (this.validationResult != null) {\n      setTimeout(() => {\n        this.scrollToError();\n      }, 200);\n    }\n\n  }\n\n\n  // Save btn click\n  saveProfile(event) {\n\n    //valid customer\n    this.validationForm();\n    console.log(this.validationResult.isTrue());\n\n    if (this.validationResult.isTrue()) {\n\n      this.btnSaveDisable = true;\n      //if tel/email/address all empty data , skip it\n      let tmpTelArray = [];\n      let tmpEmailArray = [];\n      let tmpAddressArray = [];\n\n      this.customerDetail.tels.forEach((tel) => {\n        if (!tel.isEmpty()) tmpTelArray.push(tel);\n      })\n\n      this.customerDetail.emails.forEach((email) => {\n        if (!email.isEmpty()) tmpEmailArray.push(email);\n      })\n\n      this.customerDetail.addresses.forEach((address) => {\n        if (!address.isEmpty()) tmpAddressArray.push(address);\n      })\n\n      this.customerDetail.tels = tmpTelArray;\n      this.customerDetail.emails = tmpEmailArray;\n      this.customerDetail.addresses = tmpAddressArray;\n\n      console.log(\"customer-edit-save: \", this.customerDetail);\n      this.customerService.saveCustomerDetail(this.customerDetail).subscribe((data) => {\n        console.debug('saveDetail', data);\n\n        //this.isDisplaySavePopup = true;\n\n        //set result\n        let result = new CustomerDetailResult();\n\n\n        result.detailSaveSuccess = data.status;\n        result.editDetail = this.customerDetail;\n        this.customerService.profileResult = result;\n\n        if (this.customerStore) {\n          this.customerStore.setCurrentCustomerDetail(this.customerDetail);\n          let state = this.edit_type == \"add\" ? CUSTOMER_STATE.ADD_SAVED : CUSTOMER_STATE.EDIT_SAVED;\n          this.customerStore.setState(state);\n        }\n        if (this.customCustomerAction) {\n          this.customCustomerAction.afterCustomerEditSave(this.customerDetail);\n        }\n        this.btnSaveDisable = false;\n      });\n    }\n\n  }\n\n  ngAfterViewInit() {\n    //ç²å¾å§å®¹é«\n    setTimeout(() => {\n      this.contentHeight = this.content.nativeElement.offsetHeight;\n      console.log('ele Height:', this.contentHeight)\n    }, 600);\n\n    this.sendContentHeight.emit(this.contentHeight);\n\n  }\n\n  countAgeRange(birthday) {\n    console.debug('birthday', birthday);\n\n    this.customerDetail.birthday = birthday;\n\n    if (StringUtils.isEmpty(birthday)) {\n      this.customerDetail.ageRange = '';\n      this.disableAge = false;\n    }\n    else {\n      let age = this.customerUtils.countAge(birthday);\n      let ageRange = this.customerUtils.countAgeRange(age);\n      console.debug('ageRange', ageRange);\n\n      if (ageRange != undefined) {\n        this.customerDetail.ageRange = ageRange;\n        this.changeDetector.detectChanges();\n        this.disableAge = true;\n      }\n    }\n    this.changeDetector.detectChanges();\n\n\n  }\n\n  getTelLimit() {\n    return this._telLimit;\n  }\n\n  getEmailLimit() {\n    return this._emailLimit;\n  }\n\n  getAddressLimit() {\n    return this._addressLimit;\n  }\n\n  onAddTelGroup() {\n    console.debug('onAddTelGroup');\n    this.customerDetail.tels.push(new CustomerTel('', 'TelHome', '', 'APP'));\n  }\n\n  onAddMailGroup() {\n    console.debug('onAddMailGroup');\n    this.customerDetail.addEmail(new CustomerEmail('', 'MailHome', '', 'APP'));\n  }\n\n  onAddAddressGroup() {\n    console.debug('onAddAddressGroup');\n    this.customerDetail.addAddress(new CustomerAddress('', 'AddressTypeHome', '', '', '', '', '', 'APP'));\n  }\n\n  onRemoveTelGroup(index) {\n    console.debug('onRemoveTelGroup', index);\n    this.customerDetail.tels.splice(index, 1);\n  }\n\n  onRemoveEmailGroup(index) {\n    console.debug('onRemoveEmailGroup', index);\n    this.customerDetail.emails.splice(index, 1);\n  }\n\n  onRemoveAddressGroup(index) {\n    console.debug('onRemoveAddressGroup', index);\n    this.customerDetail.addresses.splice(index, 1);\n  }\n\n\n  scrollToError() {\n    let errorBlock = document.body.getElementsByClassName('error-msg');\n    if (errorBlock.item(0)) {\n      errorBlock.item(0).parentElement.parentElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n    // if (errorBlock[0]) errorBlock[0].scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectorRef, ElementRef, Inject, Optional, Injectable } from '@angular/core';\nimport { StringUtils, Language } from '@allianzSND/core';\nimport { CustomerItem } from '../../service/model/CustomerItem';\nimport { showCustomerRuleToken } from '../../injectionToken/injection-token';\nimport { showCustomerRule } from '../../interface/showCustomerRule.interface';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\nexport class CustomerListComponent implements OnInit {\n\n  //Is Default Data(No Search Status)\n  public isDefaultData: boolean = true;\n  public showSearchNoData: boolean = false;\n\n  public loadingFinish: boolean = true;\n\n  constructor(\n    private changeDetecor: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Optional() @Inject(showCustomerRuleToken) private showCustomerRule: showCustomerRule,\n  ) { }\n\n  @Output()\n  public customerClick: EventEmitter<CustomerItem> = new EventEmitter();\n\n  @Output()\n  public customerLoad: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public customerRefresh: EventEmitter<any> = new EventEmitter();\n\n  @Input()\n  get customerList() { return this._customerList; }\n  set customerList(customerList: Array<CustomerItem>) {\n    customerList.forEach(item => {\n      item.showName = this.convertNameToShow(item.firstName, item.lastName);\n    })\n    this._customerList = customerList;\n\n    this.loadingFinish = true;\n  }\n  private _customerList: Array<CustomerItem> = [];\n\n  @Input()\n  get filterType() { return this._filterType; }\n  set filterType(filterType) {\n    this._filterType = filterType;\n\n    if (this.customerList.length == 0 && StringUtils.isNotEmpty(this.filterType)) {\n      this.isDefaultData = this.filterType == 'NONE';\n      this.showSearchNoData = this.filterType == 'SEARCH';\n    }\n  }\n  private _filterType;\n\n  public language: Language = new Language();\n  public onClickCustomerID;\n\n\n  ngOnInit() {\n  }\n\n\n  trackByClientID(index, item) {\n    return item.clientID;\n  }\n\n\n\n  async closeSlidingItems() {\n    console.debug('list closeSlidingItems');\n\n    const item = this.elementRef.nativeElement.querySelector('ion-item-sliding');\n    if (item != null) {\n      /// console.debug('item size',item.length);\n      console.debug('item', item);\n      await item.close();\n      await item.closeOpened();\n    }\n\n  }\n\n  onClickCustomer(clientID: string) {\n\n    this.onClickCustomerID = clientID;\n\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 300);\n\n    let item = this.customerList.filter(item => item.clientID == clientID);\n\n    this.customerClick.emit(item[0]);\n  }\n\n\n  loadCustomer(e) {\n    console.log('lazy load customer:', e);\n\n    this.customerLoad.emit();\n\n  }\n\n  refreshCustomer() {\n    //set timeout for refresh animation\n    setTimeout(() => {\n        this.customerRefresh.emit();\n    }, 800);\n  }\n\n  convertNameToShow(firstName: string, lastName: string): string {\n    if(this.showCustomerRule) {\n      return this.showCustomerRule.convertName(firstName, lastName);\n    }\n    else {\n      return (firstName + lastName);\n    }\n  }\n}\n","import { Component, OnInit,Input, Output ,EventEmitter, ChangeDetectorRef, TemplateRef } from '@angular/core';\nimport { DateUtils, StringUtils, Language } from '@allianzSND/core'\nimport { CustomerDetail } from '../../service/model/CustomerDetail'; \n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.scss']\n})\nexport class CustomerDetailComponent implements OnInit {\n\n  @Output()\n  private onEditDetail: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onCallPhone: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onDeleteDetail: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onAddAppointment: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private followChange : EventEmitter<{'isFollow': boolean, 'clientID': string}> = new EventEmitter();\n \n  //for extension placeholder\n  @Input()\n  detailPreTemplate:TemplateRef<any>;\n\n  @Input()\n  detailPostTemplate:TemplateRef<any>;\n\n\n  private _customerDetail: CustomerDetail = new CustomerDetail();\n  @Input() \n  get customerDetail() { return this._customerDetail;}\n  set customerDetail(inputCustomerDetail) {\n      //check datasource is from OPUS\n      this._customerDetail = inputCustomerDetail;\n      console.log('inputCustomerDetail: ', inputCustomerDetail);\n      if(this._customerDetail.dataSource == 'OPUS') {\n        this.isEmptyDel = true;\n      }\n      else {\n        this.isEmptyDel = false;\n      }\n\n      this._customerDetail.updateEmptyStatus();\n      this.convertEmptyValToDisplayText(this._customerDetail);\n      this.checkInfoIsEmpty();\n      this.changeCollateButton();\n      \n      this.changeDetctor.detectChanges();\n  }\n\n\n  public language : Language = new Language();\n\n  // empty status\n  public isEmptyAppointment: boolean = false;\n  public isEmptyEdit: boolean = false;\n  public isEmptyDel: boolean = false;\n  public isEmptyDetailInfo: boolean = false;\n  public isEmptyContactNote: boolean = false;\n  public isCollapseBtnShow  : boolean = true;\n  public isHasAgeRange: boolean = false;\n  public isHasContactFrequancy: boolean = false;\n  \n\n  \n\n  constructor(private dateUtils : DateUtils, private changeDetctor:ChangeDetectorRef, \n   ) {\n   \n   }\n   \n\n  ngOnInit() {\n  }\n\n  private changeCollateButton() {\n    console.debug('changeCollateButton',this.customerDetail.tels.length,this.customerDetail.emails.length,this.customerDetail.addresses.length);\n    if(this.customerDetail.tels.length <= 2 && this.customerDetail.emails.length <= 1 && this.customerDetail.addresses.length <= 1) {\n      this.isCollapseBtnShow = false;\n    }\n    else {\n      this.isCollapseBtnShow = true;\n    }\n\n    console.debug('isCollapseBtnShow',this.isCollapseBtnShow);\n  }\n\n\n\n  private checkInfoIsEmpty() {\n    //if detail info is empty , display no data status      \n    if(this.customerDetail.isEmptyInfo) {\n      this.isEmptyDetailInfo = true;\n    }\n    else {\n      this.isEmptyDetailInfo = false;\n    }\n    \n  }\n\n  private convertEmptyValToDisplayText(customerDetail : CustomerDetail) {\n     //if not data set default value(?? or -- --)\n     console.log(\"convertEmptyValToDisplayText: \", customerDetail);\n     if(StringUtils.isEmpty(customerDetail.ageRange)) {\n       this.isHasAgeRange = false;\n     }\n     else {\n       this.isHasAgeRange = true;\n     }\n     if(StringUtils.isEmpty(customerDetail.contactFrequancy)) {\n       this.isHasContactFrequancy = false;\n     }\n     else {\n       this.isHasContactFrequancy = true;\n     }\n     if(StringUtils.isEmpty(customerDetail.gender)) customerDetail.gender = '- -';\n     if(StringUtils.isEmpty(customerDetail.occupation)) customerDetail.occupation = '- -';\n     if(StringUtils.isEmpty(customerDetail.company)) customerDetail.company = '- -';\n     if(StringUtils.isEmpty(customerDetail.income)) customerDetail.income = '- -';\n     if(StringUtils.isEmpty(customerDetail.source)) customerDetail.source = '- -';\n     if(StringUtils.isEmpty(customerDetail.marriage)) customerDetail.marriage = '- -';\n     if(StringUtils.isEmpty(customerDetail.children)) customerDetail.children = '- -';\n     if(StringUtils.isEmpty(customerDetail.familiarity)) customerDetail.familiarity = '- -';\n     if(StringUtils.isEmpty(customerDetail.recentStatus)) customerDetail.recentStatus = '- -';\n     if(StringUtils.isEmpty(customerDetail.manpa)) customerDetail.manpa = '- -';\n     if(StringUtils.isEmpty(customerDetail.children)) customerDetail.children = '- -';\n  }\n\n  public toBirthday() {\n   \n    if(this.customerDetail.birthday != undefined) {\n      return this.dateUtils.toDateString(this.customerDetail.birthday,'yyyy-MM-dd');\n    }\n    else {\n      return '- -';\n    }\n    \n  }\n\n  edit() {\n    this.onEditDetail.emit(this.customerDetail.clientID);\n  }\n\n  delete() {\n    this.onDeleteDetail.emit(this.customerDetail.clientID);\n  }  \n\n  callPhone() {\n    this.onCallPhone.emit(this.customerDetail.clientID);\n  }\n\n  addAppointment() {\n    this.onAddAppointment.emit(this.customerDetail.clientID);\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n  \n  isFollowChange(isFollow : boolean) {\n    console.debug('isFollowChange',isFollow);\n    // display new follow state first\n    this.customerDetail.updateFollowStatus(isFollow);\n    this.changeDetctor.detectChanges();\n   \n    //ouput follow detail change status\n    this.followChange.emit({'isFollow': isFollow, \"clientID\": this.customerDetail.clientID});\n    \n\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, Inject } from '@angular/core';\nimport { DateUtils, Language} from '@allianzSND/core';\nimport { CustomerContactNote } from '../../service/model/CustomerContactNote';\n\n@Component({\n  selector: 'app-customer-contact-list',\n  templateUrl: './customer-contact-list.component.html',\n  styleUrls: ['./customer-contact-list.component.scss']\n})\nexport class CustomerContactListComponent implements OnInit {\n\n\n  public language: Language = new Language();\n\n  @Output()\n  private onAddNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private onDisplayNote: EventEmitter<CustomerContactNote> = new EventEmitter();\n\n  @Output()\n  private onEditNote: EventEmitter<CustomerContactNote> = new EventEmitter();\n\n  @Output()\n  private onDeleteNote: EventEmitter<CustomerContactNote> = new EventEmitter();\n\n  @Output()\n  private contactListRefresh: EventEmitter<any> = new EventEmitter();\n\n \n\n\n  @Input()\n  get contactList() { return this._contactList; }\n  set contactList(contactList) {\n    \n    this._contactList = contactList;\n   \n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n  }\n  private _contactList: Array<CustomerContactNote>;\n\n  elementRef: ElementRef;\n  constructor(private dateUtils: DateUtils,\n    @Inject(ElementRef) elementRef: ElementRef) {\n    this.elementRef = elementRef;\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n\n  }\n\n  // ionic sliding need to call close event when every refresh\n  async closeSlidingItems() {\n    console.debug('closeSlidingItems');\n  \n\n    const item = this.elementRef.nativeElement.querySelector('ion-item-sliding');\n    if (item != null) {\n      /// console.debug('item size',item.length);\n      console.debug('item', item);\n      await item.close();\n      await item.closeOpened();\n    }\n\n  }\n\n  refreshContactNote() {\n    this.contactListRefresh.emit()\n   \n\n      // need to wait ion-item-sliding create at first from no data (when skelton interface)\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n\n  }\n\n  addNote() {\n    this.onAddNote.emit();\n  }\n\n  displayNote(note : CustomerContactNote) {\n    this.onDisplayNote.emit(note);\n  }\n\n  editNote(note : CustomerContactNote) {\n    this.onEditNote.emit(note);\n  }\n\n  deleteNote(note : CustomerContactNote) {\n    this.onDeleteNote.emit(note);\n  }\n\n\n  trackByClientID(index, item) {\n    return item.getClientID();\n  }\n\n  public toNoteTime(time: Date) {\n    return this.dateUtils.toDateString(time, 'yyyy-MM-dd HH:mm');\n  }\n}\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { ProfileCode, ProfileCodeService, Language } from '@allianzSND/core';\nimport { CustomerFilterCriteria } from '../bean/customer-filter-criteria';\nimport { CustomerService } from '../../service/customer-service.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-customer-filter',\n  templateUrl: './customer-filter.component.html',\n  styleUrls: ['./customer-filter.component.scss']\n})\nexport class CustomerFilterComponent implements OnInit {\n\n  public customerType: Array<ProfileCode>;\n  public customerDataSource: Array<ProfileCode>;\n  public possibility: Array<ProfileCode>;\n  public source: Array<ProfileCode>;\n  public familiarity: Array<ProfileCode>;\n  public recentStatus: Array<ProfileCode>;\n  public manpa: Array<ProfileCode>;\n  public gender: Array<ProfileCode>;\n  public marriage: Array<ProfileCode>;\n  public children: Array<ProfileCode>;\n  public income: Array<ProfileCode>;\n  public age: Array<ProfileCode>;\n  public contactFrequency: Array<ProfileCode>;\n  public completeness: Array<ProfileCode>;\n  public birthday: Array<ProfileCode>;\n  public isAsPresent = false; //é¸å®æ¯å¦å°æ­¤æ¬¡é ç®è®æé è¨­\n\n  //control filter column mapping to profilecode array\n  private filterColumnMap: Map<string, Array<ProfileCode>> = new Map();\n\n  //subject to subscribe for open & save & clear\n  @Input()\n  public clear: Subject<any>;\n\n  @Input()\n  public save: Subject<any>;\n\n  @Input()\n  public open: Subject<any>;\n\n\n\n  //Input criteria\n  private _criteria = new CustomerFilterCriteria();\n  @Input()\n  get criteria() {\n    return this._criteria;\n  }\n\n  set criteria(criteria: CustomerFilterCriteria) {\n    console.log(\"set criteria:\", criteria);\n    this._criteria = criteria;\n    this.isAsPresent = criteria.savePreset;\n    this.refreshFilterMap();\n  }\n\n\n  @Output()\n  private doneCriteria: EventEmitter<CustomerFilterCriteria> = new EventEmitter();\n\n\n\n\n  constructor(private customerService: CustomerService, private profileCodeService: ProfileCodeService) {\n\n  }\n\n  public language: Language = new Language();\n\n  ngOnInit() {\n    this.customerType = this.profileCodeService.getCodeArray('Customer_Type');\n    this.customerDataSource = this.profileCodeService.getCodeArray('Customer_DataSource');\n    this.possibility = this.profileCodeService.getCodeArray('Customer_Possibility');\n    this.children = this.profileCodeService.getCodeArray('Customer_Children');\n    this.source = this.profileCodeService.getCodeArray('Customer_Source');\n    this.familiarity = this.profileCodeService.getCodeArray('Customer_Familiarity');\n    this.recentStatus = this.profileCodeService.getCodeArray('Customer_RecentStatus');\n    this.age = this.profileCodeService.getCodeArray('Customer_Age');\n    this.gender = this.profileCodeService.getCodeArray('Customer_Gender');\n    this.income = this.profileCodeService.getCodeArray('Customer_Income');\n    this.marriage = this.profileCodeService.getCodeArray('Customer_Marriage');\n    this.manpa = this.profileCodeService.getCodeArray('Customer_Status');\n    this.contactFrequency = this.profileCodeService.getCodeArray('Customer_ContactFrequancy');\n    this.birthday = this.profileCodeService.getCodeArray('Customer_Birthday');\n    this.completeness = this.profileCodeService.getCodeArray('Customer_Completeness');\n\n    this.filterColumnMap.set('IsFollow', this.customerType);\n    this.filterColumnMap.set('DataSource', this.customerDataSource);\n    this.filterColumnMap.set('Possibility', this.possibility);\n    this.filterColumnMap.set('Source', this.source);\n    this.filterColumnMap.set('Familiarity', this.familiarity);\n    this.filterColumnMap.set('RecentStatus', this.recentStatus);\n    this.filterColumnMap.set('MANPA', this.manpa);\n    this.filterColumnMap.set('Gender', this.gender);\n    this.filterColumnMap.set('Marriage', this.marriage);\n    this.filterColumnMap.set('Children', this.children);\n    this.filterColumnMap.set('Income', this.income);\n    this.filterColumnMap.set('AgeRange', this.age);\n    this.filterColumnMap.set('Birthday', this.birthday);\n    this.filterColumnMap.set('ContactFrequancy', this.contactFrequency);\n    this.filterColumnMap.set('Completeness', this.completeness);\n    if (this.criteria.getFilterMap().size == 0)\n      this.clearCriteria();\n\n    if (this.clear) {\n      this.clear.subscribe(() => {\n        this.clearCriteria();\n      })\n    }\n\n    if (this.save) {\n      this.save.subscribe(() => {\n        this.saveCriteria();\n      })\n    }\n\n\n\n  }\n\n\n  onClick() {\n    // console.debug(this.isAsPresent);\n    this.isAsPresent = false;\n  }\n\n  private _resetFilter(array: Array<ProfileCode>) {\n    for (let profileCode of array) {\n      profileCode.isCheck = false;\n    }\n  }\n\n  private _addDefaultChecked(defaultArray: Array<string>, array: Array<ProfileCode>) {\n    for (let profileCode of array) {\n      if (defaultArray.includes(profileCode.getCode())) {\n        profileCode.isCheck = true;\n      }\n\n    }\n  }\n\n  private _addCriteria(criteriaColumn: string, array: Array<ProfileCode>, criteria: CustomerFilterCriteria) {\n    for (let profileCode of array) {\n      if (profileCode.isCheck) {\n        criteria.addCriteria(criteriaColumn, profileCode.getCode());\n      }\n    }\n  }\n\n  private _addFilterMap(column: string, value: Array<string>) {\n    if (this.filterColumnMap.has(column)) {\n      this.filterColumnMap.get(column).forEach((code: ProfileCode) => {\n        if (value.includes(code.getCode())) {\n          code.isCheck = true;\n        }\n      });\n    }\n\n  }\n\n  private clearCriteria() {\n    this._resetFilter(this.customerType);\n    this._resetFilter(this.customerDataSource);\n    this._resetFilter(this.birthday);\n    this._resetFilter(this.age);\n    this._resetFilter(this.gender);\n    this._resetFilter(this.income);\n    this._resetFilter(this.source);\n    this._resetFilter(this.marriage);\n    this._resetFilter(this.children);\n    this._resetFilter(this.familiarity);\n    this._resetFilter(this.recentStatus);\n    this._resetFilter(this.manpa);\n    this._resetFilter(this.contactFrequency);\n    this._resetFilter(this.possibility);\n    this._resetFilter(this.completeness);\n\n  }\n\n  private refreshFilterMap() {\n    // this.clearCriteria();\n    if (this.criteria.hasCriteria() && this.criteria.getFilterMap().size > 0) {\n      this.criteria.getFilterMap().forEach((value: Array<string>, column: string) => {\n        this._addFilterMap(column, value);\n      });\n    }\n  }\n\n  private saveCriteria() {\n    let criteria = new CustomerFilterCriteria();\n\n    console.debug('filterColumnMap', this.filterColumnMap);\n    this.filterColumnMap.forEach((value: Array<ProfileCode>, column: string) => {\n      this._addCriteria(column, value, criteria);\n    });\n\n    criteria.savePreset = this.isAsPresent;\n\n    this.doneCriteria.emit(criteria);\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ContactItem, Language } from '@allianzSND/core';\nimport { CustomerImportGroup } from '../bean/customer-import-group';\n\n@Component({\n  selector: 'app-customer-import',\n  templateUrl: './customer-import.component.html',\n  styleUrls: ['./customer-import.component.scss']\n})\nexport class CustomerImportComponent implements OnInit {  \n\n  @Input()\n  public importContractMap = new Map<string,CustomerImportGroup>();\n  \n  @Output()\n  private importCustomer: EventEmitter<Array<ContactItem>> = new EventEmitter();\n\n  \n  public language: Language = new Language();\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n\n  doImport() {\n\n    let importItems : Array<ContactItem> = new Array<ContactItem>();\n\n    this.importContractMap.forEach((group: CustomerImportGroup,groupName: string) => {      \n      group.getItems.forEach((item : ContactItem) => {   \n        console.debug(item);     \n        if(item.isCheck) {\n          importItems.push(item);\n        }\n      })\n    });\n\n    this.importCustomer.emit(importItems);\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CalendarModule } from '@allianzSND/calendar';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { CustomerEditComponent } from './components/customer-edit/customer-edit.component';\nimport { CustomerListComponent } from './components/customer-list/customer-list.component';\nimport { CustomerDetailComponent } from './components/customer-detail/customer-detail.component';\nimport { CustomerContactListComponent } from './components/customer-contact-list/customer-contact-list.component';\nimport { CustomerFilterComponent } from './components/customer-filter/customer-filter.component';\nimport { CustomerImportComponent } from './components/customer-import/customer-import.component';\nimport { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield'; // allianz select\nimport { NxDropdownModule } from '@allianz/ngx-ndbx'; // allianz select\nimport { NxRadioModule } from '@allianz/ngx-ndbx';  // allianz radio btn\nimport { NxInputModule } from '@allianz/ngx-ndbx/input'; // è¼¸å¥æ¡\nimport { NxMessageModule } from '@allianz/ngx-ndbx'; // allianz message\nimport { NxDatefieldModule } from '@allianz/ngx-ndbx/datefield'; // allianz date\nimport { NxNativeDateModule } from '@allianz/ngx-ndbx/datefield'; //allianz datetime\nimport { NxProgressbarModule } from '@allianz/ngx-ndbx/progressbar'; // allianz progress\nimport { NxModalModule } from '@allianz/ngx-ndbx'; // allianz popup modal\nimport { NxAccordionModule } from '@allianz/ngx-ndbx'; //allianz accordion\nimport { NxGridModule } from '@allianz/ngx-ndbx/grid';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UIModule } from '@allianzSND/ui';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { CoreModule } from '@allianzSND/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxFormfieldModule,\n    NxDropdownModule,\n    NxRadioModule,\n    NxInputModule,\n    NxMessageModule,\n    NxDatefieldModule,\n    NxNativeDateModule,\n    NxProgressbarModule,\n    NxModalModule,\n    NxAccordionModule,\n    NxGridModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    CalendarModule,\n    UIModule,\n  ],\n  declarations: [CustomersComponent, CustomerEditComponent, CustomerListComponent ,\n    CustomerDetailComponent, CustomerContactListComponent , CustomerFilterComponent, CustomerImportComponent\n  ],\n  providers:[DatePipe],\n  exports:[CustomersComponent,CustomerEditComponent]\n})\nexport class CustomersModule { }\n","import { CustomerItem } from './CustomerItem';\nexport class CustomerList {\n\n    private _customerList : Array<CustomerItem> = [];\n    \n    get length(){\n        return this._customerList.length;\n    }\n\n    constructor() {\n    }\n\n    get customerList(){\n        return this._customerList;\n    }\n\n    set customerList(customerList : Array<CustomerItem>){\n        this._customerList = customerList;\n    }\n    \n    addCustomerItem(customerEvent: CustomerItem) {\n        this._customerList.push(customerEvent);\n    }\n    \n    \n}","export class MobileCustomerItem{\n\n    private lastName : string;\n    private firstName : string;\n    private phoneNumber : Array<{id:number,text:string}>;\n    private email : Array<string>;\n    private address : Array<{id:number,city:string,area:string,code:number,address:string}>;\n    private birthday : string;\n\n    constructor(lastName : string,firstName : string,phoneNumber : Array<{id:number,text:string}>,email : Array<string>,address : Array<{id:number,city:string,area:string,code:number,address:string}>,birthday : string){\n        \n        this.lastName = lastName;\n        this.firstName = firstName;\n        this.phoneNumber = phoneNumber;\n        this.email = email;\n        this.address = address;\n        this.birthday = birthday;\n    }\n\n}","import { MobileCustomerItem } from \"./MobileCustomerItem\";\nexport class MobileCustomerList{\n\n    private mobileCustomerList : Array<MobileCustomerItem>;\n\n    constructor(mobileCustomerList : Array<MobileCustomerItem>){\n        this.mobileCustomerList = mobileCustomerList;\n    }\n\n}","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerAddContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private clientID : string;\n  private customerClientID:  string;\n  private note : string;\n  private noteTime : Date;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n  \n  setClientID(clientID : string) {\n    this.clientID = clientID;\n  }\n\n  setCustomerClientID(customerClientID : string) {\n    this.customerClientID = customerClientID;\n  }\n\n  setNote(note : string) {\n    this.note = note;\n  }\n\n  setNoteTime(noteTime : Date) {\n    this.noteTime = noteTime;\n  }\n\n  getAPIName() : string {\n    return 'addCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.setValue('CustomerClientID', this.customerClientID);\n        contactObj.setValue('Note', this.note);\n        contactObj.setValue('NoteTime', this.noteTime.getTime());\n      \n        if(this.clientID != undefined) {\n          contactObj.addRestriction(new EqualRestriction('ClientID',[this.clientID]));\n          dao.updateByTable(contactObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n        }\n        else {\n          dao.insertByTable(contactObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n        }\n\n        \n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, SQLiteTable, SQLCommand, InRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable, from, of } from 'rxjs';\n\nexport class CustomerAutoDeleteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n    \n  private _clientID: string;\n  private _status: string;\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  \n  setClientID(id) {\n    this._clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerAutoDelete';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerAutoDelete.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (messageObj != undefined && dao != undefined) {\n          \n          dao = new ClientCustomDao(dao);\n          \n          if(StringUtils.isNotEmpty(this._clientID)) {\n            messageObj.addRestriction(new EqualRestriction(\"ClientID\", [this._clientID]));\n          }\n          else {\n            messageObj.addRestriction(new EqualRestriction(\"Status\", ['UnRead']));\n          }\n\n          messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", ['Customer']));\n          messageObj.addRestriction(new EqualRestriction(\"MessageType\",['AutoDelete']));\n\n          dao.queryByTable(messageObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n\n      }\n\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n\n    });\n      //   return from(dao.queryByTable(messageObj).toPromise().then( resp => {\n\n\n      //     let messageArgument = JSON.parse(resp['Body'][0]['customers']);\n      //     let customerIDList = messageArgument['ids'];\n\n      //     let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      //     console.log(\"customerIDListInAPI: \", customerIDList);\n      //     customerObj.addRestriction(new InRestriction(\"ClientID\", customerIDList));\n      //     return dao.queryByTable(customerObj).toPromise().then(resp => {\n          \n      //       return resp;\n      //     })\n        \n      \n          \n      // }));\n      \n  } \n\n    \n  \n    \n}\n","import { PageInfo, IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, OrderByRestriction, LimitRestriction, OffsetRestriction } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\n\nexport class CustomerContactNoteAPI implements IAPI , IMockAPI , ISQLiteAPI {\n\n  private customerClientID:  string;\n  private pageInfo : PageInfo;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id : string) {\n      this.customerClientID = id;\n  }\n\n  setPageInfo(pageInfo : PageInfo) {\n    this.pageInfo = pageInfo;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerContactNote';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerContactNote.json';\n  }\n  \n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('CustomerClientID',[this.customerClientID]));\n        contactObj.addRestriction(new OrderByRestriction([{ column: 'NoteTime', order: 'DESC' }]))\n\n        //add page limit\n        contactObj.addRestriction(new LimitRestriction([this.pageInfo.pageSize]));\n        contactObj.addRestriction(new OffsetRestriction([(this.pageInfo.page - 1) * 5]));\n\n        console.debug(contactObj);\n        dao.queryByTable(contactObj).subscribe((resp) => {\n          console.debug(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerDeleteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n  \n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName() : string {\n    return 'deleteCustomer';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (customerObj != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n        customerObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n        dao.deleteByTable(customerObj).subscribe((resp) => {    \n          observer.next(resp);\n          observer.complete();\n        });\n\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerDeleteContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private contactClientID:  string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setContactClientID(contactClientID : string) {\n    this.contactClientID = contactClientID;\n  }\n\n  getAPIName() : string {\n    return 'deleteCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('ClientID',[this.contactClientID]));\n      \n        dao.deleteByTable(contactObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, SQLiteTable, EqualRestriction } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, of, from } from \"rxjs\";\n\nexport class CustomerDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private _id;\n\n    constructor(private daoFactory: DaoFactory){\n\n    }\n    public get id() {\n        return this._id;\n    }\n    public set id(value) {\n        this._id = value;\n    }\n    getAPIName(): string {\n        return 'getCustomerDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getCustomerDetail.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n        let defaultDao = this.daoFactory.getDefaultDao();\n        if (customerObj != undefined && defaultDao != undefined) {\n            let dao = new ClientCustomDao(defaultDao);\n            customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n            return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                let customer = resp;\n                let clientID = customer['Body'][0].ClientID;\n                let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                if (customerTelObj) {\n                    customerTelObj = (<SQLiteTable>customerTelObj);\n                    customerTelObj.addRestriction( new EqualRestriction('CustomerClientID', [clientID]));\n                    return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                        let telList = resp['Body'];\n                        customer['Body'][0]['tel'] = telList;\n                        return { customer, clientID };\n                    });\n                }\n                else\n                    return of({ customer, clientID }).toPromise();\n            }).then(({ customer, clientID }) => {\n                let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                if (customerEmailObj) {\n                    customerEmailObj = (<SQLiteTable>customerEmailObj);\n                    customerEmailObj.addRestriction( new EqualRestriction('CustomerClientID', [clientID]));\n\n                    return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                        let telList = resp['Body'];\n                        customer['Body'][0]['email'] = telList;\n                        return { customer, clientID };\n                    });\n                }\n                else\n                    return of({ customer, clientID }).toPromise();\n\n            }).then(({ customer, clientID }) => {\n                let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                if (customerAddrObj) {\n                    customerAddrObj = (<SQLiteTable>customerAddrObj);\n                    customerAddrObj.addRestriction( new EqualRestriction('CustomerClientID', [clientID]));\n\n                    return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                        let telList = resp['Body'];\n                        customer['Body'][0]['address'] = telList;\n                        return customer;\n                    });\n                }\n                else\n                    return of(customer).toPromise();\n            }))\n        }\n        else {\n            return of(false);\n        }\n    }\n\n\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerEditContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private contactClientID:  string;\n  private note : string;\n  private noteTime : Date;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setContactClientID(contactClientID : string) {\n    this.contactClientID = contactClientID;\n  }\n\n  setNote(note : string) {\n    this.note = note;\n  }\n\n  setNoteTime(noteTime : Date) {\n    this.noteTime = noteTime;\n  }\n\n  getAPIName() : string {\n    return 'editCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('ClientID',[this.contactClientID]));\n        contactObj.setValue('Note', this.note);\n        contactObj.setValue('NoteTime', this.noteTime.getTime());\n      \n        dao.updateByTable(contactObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, InRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable, of, from } from 'rxjs';\n\nexport class CustomerEditOvertimeAPI implements IAPI , IMockAPI, ISQLiteAPI {\n    \n  private _clientID: string;\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id) {\n    this._clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerOverTime';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerOverTime.json';\n  }\n\n  executeSQL(): Observable<any> {\n    \n    return Observable.create((observer) => {\n      let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (messageObj != undefined && dao != undefined) {\n          \n          dao = new ClientCustomDao(dao);\n          \n          if(StringUtils.isNotEmpty(this._clientID)) {\n            messageObj.addRestriction(new EqualRestriction(\"ClientID\", [this._clientID]));\n          }\n          else {\n            messageObj.addRestriction(new EqualRestriction(\"Status\", ['UnRead']));\n          }\n\n          messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", ['Customer']));\n          messageObj.addRestriction(new EqualRestriction(\"MessageType\",['OverTime']));\n\n          \n          dao.queryByTable(messageObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n\n      }\n\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n\n    });\n    \n  }\n    \n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nexport class CustomerGetPresetAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName(): string {\n        return 'getCustomerFilterPreset';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getCustomerFilterPreset.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let setting = this.daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n                if (setting) {\n                    dao = new ClientCustomDao(dao);\n\n                    setting = (<SQLiteTable>setting);\n\n                    setting.addRestriction(new EqualRestriction('SettingID',['CustomerFilterSetting']));\n\n                    dao.queryByTable(setting).subscribe((resp) => {\n                        console.debug(resp);\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, InRestriction, LikeRestriction, ORCompoundRestriction, EqualRestriction, IRestriction, LimitRestriction, OffsetRestriction, AndCompoundRestriction, PageInfo, OrderByRestriction, ProfileCodeService, LessOrEqualRestriction, GreaterOrEqualRestriction, NotEqualRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport class CustomerListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _filterCriteria: CustomerFilterCriteria;\n  private _pageInfo: PageInfo = new PageInfo();\n\n  private _queryClientID: string;\n\n  constructor(private daoFactory: DaoFactory, private profileCodeService: ProfileCodeService) {\n\n  }\n  set clientID(clientID: string) {\n    this._queryClientID = clientID;\n  }\n\n  set filterCriteria(criteria: CustomerFilterCriteria) {\n    this._filterCriteria = criteria;\n  }\n\n  set pageInfo(pageInfo: PageInfo) {\n    this._pageInfo = pageInfo;\n  }\n\n  getAPIName(): string {\n    return 'getCustomerList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCustomerList.json';\n  }\n\n  executeSQL(): Observable<any> {\n\n    return Observable.create((observer) => {\n      let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (customerObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n\n        if (this._filterCriteria != undefined) {\n\n          console.debug('CustomerListAPI _filterCriteria', this._filterCriteria);\n\n          let keyword = this._filterCriteria.keyword;\n\n          console.debug('customerListAPI keyword', keyword);\n          if (StringUtils.isNotEmpty(keyword)) {\n            let compoundRestriction = new ORCompoundRestriction([new LikeRestriction('FirstName', [keyword]), new LikeRestriction('LastName', [keyword])]);\n            customerObj.addRestriction(compoundRestriction);\n          }\n\n          let filterMap: Map<string, Array<string>> = this._filterCriteria.getFilterMap();\n\n          filterMap.forEach((array: Array<string>, key: string) => {\n            console.log(key, array);\n\n            if (key == 'Birthday') {\n              let birthdayRestriction = new Array<IRestriction>();\n              let monthArray = new Array<string>();\n              for (let birthday of array) {\n                if (birthday == 'Today') {\n                  let today = new Date();\n                  let startNum = today.getMonth() + 1;\n                  let endNum = today.getDate();\n                  let start = String(startNum);\n                  let end = String(endNum);\n                  if (start.length == 1) start = '0' + start;\n                  if (end.length == 1) end = '0' + end;\n\n                  birthdayRestriction.push(new AndCompoundRestriction([new EqualRestriction('BirthdayMonth', [start]),\n                  new EqualRestriction('BirthdayDate', [end])]));\n                }\n                else {\n                  if (birthday.length == 1) birthday = '0' + birthday;\n                  monthArray.push(birthday);\n                }\n              }\n\n              if (monthArray.length != 0) {\n                birthdayRestriction.push(new InRestriction('BirthdayMonth', monthArray));\n              }\n\n              customerObj.addRestriction(new ORCompoundRestriction(birthdayRestriction));\n            }\n            else if (key == 'DataSource') {\n              if (array.length != 2) {\n                let datasource = array[0];\n                if (datasource == 'E') {\n                  customerObj.addRestriction(new EqualRestriction('DataSource', ['OPUS']));\n                }\n                else {\n                  customerObj.addRestriction(new NotEqualRestriction('DataSource', ['OPUS']));\n                }\n\n              }\n            }\n            else if (key == 'Completeness') {\n              let completenessOption = this.profileCodeService.getCodeArray('Customer_Completeness');\n              let completenessRestriction = new Array<IRestriction>();\n              completenessOption.forEach(profileCode => {\n                let code = profileCode.getCode();\n\n                if (array.includes(code)) {\n                  let obj = JSON.parse(profileCode.getArguments());\n                  let start = obj.start;\n                  let end = obj.end;\n\n                  start = start / 100;\n                  end = end / 100;\n\n                  completenessRestriction.push(new AndCompoundRestriction([new GreaterOrEqualRestriction('Completeness', [start]), new LessOrEqualRestriction('Completeness', [end])]));\n                }\n              })\n\n              console.debug('completenessRestriction length', completenessRestriction.length);\n              console.log('completenessRestriction:', completenessRestriction);\n              if (completenessRestriction.length != 0) {\n                customerObj.addRestriction(new ORCompoundRestriction(completenessRestriction));\n                console.log('customerObj:', customerObj);\n              }\n\n            }\n            else {\n              customerObj.addRestriction(new InRestriction(key, array));\n            }\n\n          });\n\n        }\n\n\n        //add order by\n        customerObj.addRestriction(new OrderByRestriction([{ column: 'LastName', order: 'ASC' }]))\n\n        //add page limit\n        customerObj.addRestriction(new LimitRestriction([this._pageInfo.pageSize]));\n        customerObj.addRestriction(new OffsetRestriction([(this._pageInfo.page - 1) * 10]));\n\n        //if has edit profile will has clientID\n        if (StringUtils.isNotEmpty(this._queryClientID)) {\n          customerObj.addRestriction(new EqualRestriction('ClientID', [this._queryClientID]));\n        }\n\n        dao.queryByTable(customerObj).subscribe((resp) => {\n\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction, SQLCommand } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerDetail } from \"../service/model/CustomerDetail\";\nimport { CustomerUtils } from \"../utils/customer-utils\";\n\n\nexport class CustomerSaveDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private customerDetail: CustomerDetail;\n\n    constructor(private daoFactory: DaoFactory,private customerUtils : CustomerUtils) {\n\n    }\n\n    setDetail(detail: CustomerDetail) {\n        this.customerDetail = detail;\n    }\n\n    getAPIName(): string {\n        return 'saveCustomerDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        // let returnObj = {\n        //     \"status\": true,\n        //     \"msg\": ''\n        // };\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                if (customerObj) {\n                    dao = new ClientCustomDao(dao);\n\n                    customerObj = (<SQLiteTable>customerObj);\n\n                    let birthday = this.customerDetail.birthday;\n                    if (birthday != null && birthday != undefined) {\n                        customerObj.setValue(\"BirthdayYear\", birthday.getFullYear());\n                        let month = (birthday.getMonth() + 1).toString();\n                        if(month.length < 2) {\n                            month = '0' + month.toString();\n                        }\n                        customerObj.setValue(\"BirthdayMonth\", month);\n\n                        let date = (birthday.getDate()).toString();\n                        if(date.length < 2) {\n                            date = '0' + date.toString();\n                        }\n                        customerObj.setValue(\"BirthdayDate\", date);\n                    \n                        customerObj.setValue(\"BirthDayTimeStamp\", (new Date(2000, birthday.getMonth(), birthday.getDate())).getTime());\n                        \n                    }\n\n                    customerObj.setValue('ClientID', this.customerDetail.clientID);\n                    customerObj.setValue(\"LastName\", this.customerDetail.lastName);\n                    customerObj.setValue(\"FirstName\", this.customerDetail.firstName);\n                    customerObj.setValue(\"Occupation\", this.customerDetail.occupation);\n                    customerObj.setValue(\"Company\", this.customerDetail.company);\n                    customerObj.setValue(\"AgeRange\", this.customerDetail.ageRange);\n                    customerObj.setValue(\"Gender\", this.customerDetail.gender);\n                    customerObj.setValue(\"Income\", this.customerDetail.income);\n                    customerObj.setValue(\"Source\", this.customerDetail.source);\n                    customerObj.setValue(\"Marriage\", this.customerDetail.marriage);\n                    customerObj.setValue(\"Children\", this.customerDetail.children);\n                    customerObj.setValue(\"Familiarity\", this.customerDetail.familiarity);\n                    customerObj.setValue(\"RecentStatus\", this.customerDetail.recentStatus);\n                    customerObj.setValue(\"MANPA\", this.customerDetail.manpa);\n                    customerObj.setValue(\"ContactFrequancy\", this.customerDetail.contactFrequancy);\n                    customerObj.setValue(\"Possibility\", this.customerDetail.possibility);\n                    customerObj.setValue(\"IsFollow\", this.customerDetail.isFollow ? 'Y' : 'N');\n\n\n                    //set customer default column & value\n                    this.customerUtils.setCustomerDefaultValue(customerObj);\n\n                    //count Completeness\n                    this.customerUtils.countCompleteness(customerObj,this.customerDetail.tels.length,this.customerDetail.emails.length,this.customerDetail.addresses.length);\n\n                    console.debug('insertCustomer', customerObj);\n                    // console.log('clientID:', customerObj.getValue('ClientID'));\n                    if (customerObj.getValue('ClientID') == '') {\n                        dao.transactionInsert(customerObj);\n                    }\n                    else {\n                        customerObj.addRestriction(new EqualRestriction('ClientID',[customerObj.getValue('ClientID')]))\n                        dao.transactionUpdate(customerObj);\n\n                        //delete relation data\n                        dao.transactionSqlCommand(new SQLCommand('delete from TW_LH_SD_Customer_Tel where CustomerClientID = ? ', [customerObj.getValue('ClientID')]));\n                        dao.transactionSqlCommand(new SQLCommand('delete from TW_LH_SD_Customer_Email where CustomerClientID = ? ', [customerObj.getValue('ClientID')]));\n                        dao.transactionSqlCommand(new SQLCommand('delete from TW_LH_SD_Customer_Address where CustomerClientID = ? ', [customerObj.getValue('ClientID')]));\n                    }\n\n                    //save phone data              \n                    for (let phone of this.customerDetail.tels) {\n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        if (phoneInsertObj) {\n\n                            if (phone.telType == '') phone.telType = 'TelHome';\n\n                            phoneInsertObj = (<SQLiteTable>phoneInsertObj);\n                            phoneInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            phoneInsertObj.setValue('TelType', phone.telType);\n                            phoneInsertObj.setValue('Tel', phone.tel);\n\n                            //insert\n                            dao.transactionInsert(phoneInsertObj);\n                        }\n                    }\n\n                    //save email data\n                    for (let email of this.customerDetail.emails) {\n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        if (emailInsertObj) {\n                            if (email.emailType == '') email.emailType = 'MailHome';\n\n                            emailInsertObj = (<SQLiteTable>emailInsertObj);\n                            emailInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertObj.setValue('EmailType', email.emailType);\n                            emailInsertObj.setValue('Email', email.email);\n\n                            //insert\n                            dao.transactionInsert(emailInsertObj);\n                        }\n                    }\n\n                    //save address data\n                    for (let address of this.customerDetail.addresses) {\n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        if (addressInsertObj) {\n                            if (address.addressType == '') address.addressType = 'AddressTypeHome';\n\n                            addressInsertObj = (<SQLiteTable>addressInsertObj);\n                            addressInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            addressInsertObj.setValue('AddressType', address.addressType);\n                            addressInsertObj.setValue('Country',address.country);\n                            addressInsertObj.setValue('City',address.city);\n                            addressInsertObj.setValue('Area',address.area);\n                            \n                            \n                            addressInsertObj.setValue('Zipcode', address.zipcode);\n                            addressInsertObj.setValue('Address', address.address);\n\n                            //insert\n                            dao.transactionInsert(addressInsertObj);\n                        }\n                    }\n                    dao.runTransaction().subscribe((resp) => {\n                        // let header = resp['Header'];\n                        // if (!header.status) {\n                        //     returnObj['status'] = false;\n                        //     returnObj['msg'] = header.msg;\n                        // }\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport class CustomerSavePresetAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _criteria: CustomerFilterCriteria;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    setFilterCriteria(criteria: CustomerFilterCriteria) {\n        this._criteria = criteria;\n    }\n\n    getAPIName(): string {\n        return 'saveCustomerFilterPreset';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let setting = this.daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n                if (setting) {\n                    dao = new ClientCustomDao(dao);\n\n                    setting = (<SQLiteTable>setting);\n\n                    setting.addRestriction(new EqualRestriction('SettingID',['CustomerFilterSetting']));\n                    setting.setValue(\"SettingVal\",JSON.stringify(this._criteria.toPresetJSON()));\n\n                    dao.updateByTable(setting).subscribe((resp) => {\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\n\nexport class CustomerTelAPI implements IAPI , IMockAPI , ISQLiteAPI {\n\n  private clientID : string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id : string) {\n      this.clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerTel';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerTel.json';\n  }\n  \n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let telObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (telObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        telObj.addRestriction(new EqualRestriction('CustomerClientID',[this.clientID]));\n      \n        dao.queryByTable(telObj).subscribe((resp) => {\n          console.debug(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerUpdateFollowAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID : string;\n    private _isFollow : boolean;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    setClient(clientID : string) {\n        this._clientID = clientID;\n    }\n\n    setIsFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    getAPIName(): string {\n        return 'updateCustomerFollowStatus';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let customer = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                if (customer) {\n                    dao = new ClientCustomDao(dao);\n\n                    customer = (<SQLiteTable>customer);\n\n                    customer.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n                    customer.setValue(\"IsFollow\",this._isFollow ? 'Y' : 'N');\n\n                    dao.updateByTable(customer).subscribe((resp) => {\n                        \n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { ContactItem, IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\nimport { CustomerUtils } from \"../utils/customer-utils\";\n\n\nexport class ImportContactAPI implements IAPI, IMockAPI,ISQLiteAPI {\n    private items : Array<ContactItem>;\n    \n    public setItems(items : Array<ContactItem>) {\n        this.items = items;\n    }\n\n    constructor(private daoFactory: DaoFactory, private customerUtils : CustomerUtils) {\n\n    }\n\n    getAPIName(): string {\n        return 'importContact';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n    \n\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                dao = new ClientCustomDao(dao);\n\n                for(let item of this.items) {\n\n                    let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n\n                    customerObj.setValue(\"LastName\", item.lastname);\n                    customerObj.setValue(\"FirstName\", item.firstname);\n                    customerObj.setValue(\"IsFollow\", \"N\");\n\n                    let birthday = item.birthday;\n                    if (birthday != null) {\n                        customerObj.setValue(\"BirthdayYear\", birthday.getFullYear);\n                        customerObj.setValue(\"BirthdayMonth\", birthday.getMonth);\n                        customerObj.setValue(\"BirthdayDate\", birthday.getDate);\n                    }\n\n                    //set customer default column & value\n                    this.customerUtils.setCustomerDefaultValue(customerObj);\n\n                    //count Completeness\n                    this.customerUtils.countCompleteness(customerObj,item.phones.length,item.emails.length,item.address.length);\n\n                    //insert customer data\n                    dao.transactionInsert(customerObj);\n\n                    //save phone data\n                    for(let phone of item.phones) {\n                        let telType = 'TelHome';\n                        if(phone.type == 'work') {\n                            telType = 'TelWork';\n                        }\n                        else if(phone.type == 'mobile') {\n                            telType = 'TelMobile';\n                        }\n        \n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        if (phoneInsertObj) {\n\n                            phoneInsertObj = (<SQLiteTable>phoneInsertObj);\n                            phoneInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            phoneInsertObj.setValue('TelType', telType);\n                            phoneInsertObj.setValue('Tel', phone.number);\n\n                            //insert\n                            dao.transactionInsert(phoneInsertObj);\n                        }                   \n                    }\n        \n                    //save email data\n                    let maxEmailCount = 3;\n                    let importEmailCount = maxEmailCount;\n                    if(item.emails.length < 3) importEmailCount = item.emails.length;\n                    for(let i=0;i<importEmailCount;i++) {\n                        let email = item.emails[i];\n                                                \n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        if (emailInsertObj) {\n\n                            emailInsertObj = (<SQLiteTable>emailInsertObj);\n                            emailInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertObj.setValue('EmailType', 'MailHome');\n                            emailInsertObj.setValue('Email', email);\n\n                            //insert\n                            dao.transactionInsert(emailInsertObj);\n                        }\n                    }\n                    \n                    //save address data\n                    for(let address of item.address) {\n                        \n                        let addressType = 'AddressTypeHome';\n                        if(address.type == 'work') {\n                            addressType = 'AddressTypeWork';\n                        }\n        \n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        if (addressInsertObj) {\n\n                            addressInsertObj = (<SQLiteTable>addressInsertObj);\n                            addressInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            addressInsertObj.setValue('AddressType', addressType);\n                            addressInsertObj.setValue('Zipcode', address.code);\n                            addressInsertObj.setValue('Address', address.address);\n\n                            //insert\n                            dao.transactionInsert(addressInsertObj);\n                        }\n                    }\n        \n                    \n                }\n\n                dao.runTransaction().subscribe((resp) => {\n                    \n                    observer.next(resp);\n                    observer.complete();\n                });\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n\n    }\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { GreaterOrEqualRestriction, LessOrEqualRestriction,  OrderByRestriction, EqualRestriction, ORCompoundRestriction } from '@allianzSND/core';\nimport { getYear, getMonth, getDate, subDays, addDays, setYear } from 'date-fns';\n\nexport class CustomerBirthdayListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _targetDate: Date;\n\n  public isRangeCrossYear: boolean;\n  private _subN : number;\n  private _subNDayTimeStamp: number;\n\n  private _addN : number;\n  private _addNDayTimeStamp: number;\n\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n  set targetDate(targetDate: Date) {\n    this._targetDate = setYear(targetDate, 2000);\n    this._subNDayTimeStamp = subDays(this._targetDate, this._subN).getTime();\n    this._addNDayTimeStamp = addDays(this._targetDate, this._addN).getTime();\n\n\n    if((getYear(this._targetDate) == getYear(this._subNDayTimeStamp)) && (getYear(this._targetDate) == getYear(this._addNDayTimeStamp))) {\n      this.isRangeCrossYear = false;\n    }\n\n    else {\n      this._subNDayTimeStamp = (setYear(this._subNDayTimeStamp, 2000)).getTime();\n      this._addNDayTimeStamp = (setYear(this._addNDayTimeStamp, 2000)).getTime();\n      this.isRangeCrossYear = true;\n    }\n\n    console.warn(this._subN, \"  subDate:  \", this._subNDayTimeStamp);\n    console.warn(this._addN, \"  addDate:  \", this._addNDayTimeStamp);\n  }\n\n  set subN(subN: number) {\n    this._subN = subN;\n  }\n\n  set addN(addN: number) {\n    this._addN = addN;\n  }\n\n\n\n  getAPIName(): string {\n    return 'getCustomerBirthdayList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCustomerBirthday.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let customerObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (customerObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n\n        if(this.isRangeCrossYear) {\n          customerObj.addRestriction(new ORCompoundRestriction([new GreaterOrEqualRestriction('BirthDayTimeStamp', [this._subNDayTimeStamp]), new LessOrEqualRestriction('BirthDayTimeStamp', [this._addNDayTimeStamp])]));\n        }\n\n        else {\n          customerObj.addRestriction(new GreaterOrEqualRestriction('BirthDayTimeStamp', [this._subNDayTimeStamp]));\n          customerObj.addRestriction(new LessOrEqualRestriction('BirthDayTimeStamp', [this._addNDayTimeStamp]));\n        }\n\n        customerObj.addRestriction(new OrderByRestriction([{ column: 'LastName', order: 'ASC' }]))\n\n        //customerObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' }]));\n        // calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' },{ column: 'EndTime', order: 'DESC' }]));\n        dao.queryByTable(customerObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n\n      \n\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class DashboardUpdateToReadAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _messageType : string;\n    private _messageDataCategory : string;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    public setMessageType(type) {\n        this._messageType = type;\n    }\n\n    public setMessageDataCategory(dataCategory) {\n        this._messageDataCategory = dataCategory;\n    }\n\n\n\n    getAPIName(): string {\n        return 'updateDashboardToRead';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n                if (messageObj) {\n                    dao = new ClientCustomDao(dao);\n\n                    messageObj = (<SQLiteTable>messageObj);\n\n                    messageObj.addRestriction(new EqualRestriction('MessageCategory',[this._messageDataCategory]));\n                    messageObj.addRestriction(new EqualRestriction('MessageType',[this._messageType]));\n                    messageObj.setValue(\"Status\", 'Reading');\n\n                    dao.updateByTable(messageObj).subscribe((resp) => {\n                        \n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n"],"names":["StringUtils","Observable","ValidationResult","Injectable","APIDispatch","DateUtils","APIFactory","ProfileCodeService","InjectionToken","tslib_1.__values","SelectOption","differenceInCalendarDays","Language","PageInfo","Subject","EventEmitter","getYear","getMonth","getDate","getHours","getMinutes","addMinutes","addHours","CalendarEventDetail","subMinutes","addDays","Component","trigger","state","style","transition","animate","CalendarService","TranslateService","ChangeDetectorRef","DeviceService","ExtensionService","Optional","Inject","ViewChild","CalendarEditComponent","Input","Output","ElementRef","NgModule","CommonModule","NxFormfieldModule","NxDropdownModule","NxRadioModule","NxInputModule","NxMessageModule","NxDatefieldModule","NxNativeDateModule","NxProgressbarModule","NxModalModule","NxAccordionModule","NxGridModule","FormsModule","ReactiveFormsModule","CoreModule","CalendarModule","UIModule","DatePipe","ClientCustomDao","EqualRestriction","OrderByRestriction","LimitRestriction","OffsetRestriction","from","of","ORCompoundRestriction","LikeRestriction","AndCompoundRestriction","InRestriction","NotEqualRestriction","GreaterOrEqualRestriction","LessOrEqualRestriction","SQLCommand","setYear","subDays"],"mappings":"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"}
