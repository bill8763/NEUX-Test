import { OnInit, ElementRef, AfterViewInit, TemplateRef, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { SelectOption } from '@allianzSND/ui';
import { ProfileCodeService, ValidationResult, Language } from '@allianzSND/core';
import { CustomerService } from '../../service/customer-service.service';
import { CustomerDetail } from '../../service/model/CustomerDetail';
import { CustomerUtils } from '../../utils/customer-utils';
import { storeCustomer } from '../../interface/storeCustomer.interface';
import { customerAction } from '../../interface/customerAction.interface';
export declare class CustomerEditComponent implements OnInit, AfterViewInit {
    private customerService;
    private profileCodeService;
    private customerUtils;
    private changeDetector;
    private customCustomerAction;
    private customerStore;
    sendContentHeight: EventEmitter<{}>;
    contentHeight: any;
    content: ElementRef;
    editPreTemplate: TemplateRef<any>;
    editPostTemplate: TemplateRef<any>;
    editModel: EventEmitter<CustomerDetail>;
    validationResult: ValidationResult;
    customerDetail: CustomerDetail;
    pageTitle: string;
    optionTel: Array<SelectOption>;
    optionAddress: Array<SelectOption>;
    optionEmail: Array<SelectOption>;
    optionAge: Array<SelectOption>;
    optionGender: Array<SelectOption>;
    optionIncome: Array<SelectOption>;
    optionSource: Array<SelectOption>;
    optionMarriage: Array<SelectOption>;
    optionChildren: Array<SelectOption>;
    optionFamiliarity: Array<SelectOption>;
    optionRecentStatus: Array<SelectOption>;
    optionManpa: Array<SelectOption>;
    optionContactFrequancyPerYear: Array<SelectOption>;
    language: Language;
    disableAge: boolean;
    isDisplaySavePopup: boolean;
    btnSaveDisable: boolean;
    isShow: boolean;
    private _telLimit;
    private _emailLimit;
    private _addressLimit;
    private edit_type;
    constructor(customerService: CustomerService, profileCodeService: ProfileCodeService, customerUtils: CustomerUtils, changeDetector: ChangeDetectorRef, customCustomerAction: customerAction, customerStore: storeCustomer);
    ngOnInit(): void;
    validationForm(): void;
    saveProfile(event: any): void;
    ngAfterViewInit(): void;
    countAgeRange(birthday: any): void;
    getTelLimit(): number;
    getEmailLimit(): number;
    getAddressLimit(): number;
    onAddTelGroup(): void;
    onAddMailGroup(): void;
    onAddAddressGroup(): void;
    onRemoveTelGroup(index: any): void;
    onRemoveEmailGroup(index: any): void;
    onRemoveAddressGroup(index: any): void;
    scrollToError(): void;
}
