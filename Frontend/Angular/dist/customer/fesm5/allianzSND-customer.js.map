{"version":3,"file":"allianzSND-customer.js.map","sources":["ng://@allianzSND/customer/lib/service/model/CustomerDetail.ts","ng://@allianzSND/customer/lib/service/model/CustomerContactNote.ts","ng://@allianzSND/customer/lib/service/model/CustomerItem.ts","ng://@allianzSND/customer/lib/service/model/CustomerAlertItem.ts","ng://@allianzSND/customer/lib/service/model/CustomerAddress.ts","ng://@allianzSND/customer/lib/service/model/CustomerEmail.ts","ng://@allianzSND/customer/lib/service/model/CustomerTel.ts","ng://@allianzSND/customer/lib/service/model/CustomerBirthday.ts","ng://@allianzSND/customer/lib/service/customer-service.service.ts","ng://@allianzSND/customer/lib/components/bean/customer-filter-preset.ts","ng://@allianzSND/customer/lib/components/bean/customer-filter-criteria.ts","ng://@allianzSND/customer/lib/components/bean/customer-confirm-action.ts","ng://@allianzSND/customer/lib/components/bean/customer-import-group.ts","ng://@allianzSND/customer/lib/injectionToken/injection-token.ts","ng://@allianzSND/customer/lib/interface/storeCustomer.interface.ts","ng://@allianzSND/customer/lib/utils/customer-utils.ts","ng://@allianzSND/customer/lib/components/customers/customers.component.ts","ng://@allianzSND/customer/lib/components/bean/customer-detail-result.ts","ng://@allianzSND/customer/lib/components/customer-edit/customer-edit.component.ts","ng://@allianzSND/customer/lib/components/customer-list/customer-list.component.ts","ng://@allianzSND/customer/lib/components/customer-detail/customer-detail.component.ts","ng://@allianzSND/customer/lib/components/customer-contact-list/customer-contact-list.component.ts","ng://@allianzSND/customer/lib/components/customer-filter/customer-filter.component.ts","ng://@allianzSND/customer/lib/components/customer-import/customer-import.component.ts","ng://@allianzSND/customer/lib/customers.module.ts","ng://@allianzSND/customer/lib/service/model/CustomerList.ts","ng://@allianzSND/customer/lib/service/model/MobileCustomerItem.ts","ng://@allianzSND/customer/lib/service/model/MobileCustomerList.ts","ng://@allianzSND/customer/lib/api/CustomerAddContactNote.ts","ng://@allianzSND/customer/lib/api/CustomerAutoDeleteAPI.ts","ng://@allianzSND/customer/lib/api/CustomerContactNoteAPI.ts","ng://@allianzSND/customer/lib/api/CustomerDeleteAPI.ts","ng://@allianzSND/customer/lib/api/CustomerDeleteContactNote.ts","ng://@allianzSND/customer/lib/api/CustomerDetailAPI.ts","ng://@allianzSND/customer/lib/api/CustomerEditContactNote.ts","ng://@allianzSND/customer/lib/api/CustomerEditOvertimeAPI.ts","ng://@allianzSND/customer/lib/api/CustomerGetePresetAPI.ts","ng://@allianzSND/customer/lib/api/CustomerListAPI.ts","ng://@allianzSND/customer/lib/api/CustomerSaveDetailAPI.ts","ng://@allianzSND/customer/lib/api/CustomerSavePresetAPI.ts","ng://@allianzSND/customer/lib/api/CustomerTelAPI.ts","ng://@allianzSND/customer/lib/api/CustomerUpdateFollowAPI.ts","ng://@allianzSND/customer/lib/api/ImportContactAPI.ts","ng://@allianzSND/customer/lib/api/CustomerBirthdayListAPI.ts","ng://@allianzSND/customer/lib/api/DashboardUpdateToReadAPI.ts"],"sourcesContent":["import { StringUtils } from '@allianzSND/core';\nimport { CustomerAddress } from './CustomerAddress';\nimport { CustomerEmail } from './CustomerEmail';\nimport { CustomerTel } from './CustomerTel';\nexport class CustomerDetail{\n    private _clientID  : string;\n    private _lastName : string;\n    private _firstName : string;\n    private _occupation : string;\n    private _company : string;\n    private _birthday : Date;\n    private _ageRange : string;\n    private _gender : string;\n    private _income : string;\n    private _source : string;\n    private _marriage : string;\n    private _children : string;\n    private _familiarity : string;\n    private _recentStatus : string;\n    private _manpa : string;\n    private _contactFrequancy : string;\n    private _possibility : string;\n    private _isFollow : boolean;\n    private _dataSource : string;\n    private _isEmptyInfo : boolean;\n\n    private _emails : Array<CustomerEmail> = new Array<CustomerEmail>();\n    private _tels : Array<CustomerTel> = new Array<CustomerTel>();\n    private _addresses : Array<CustomerAddress> = new Array<CustomerAddress>();\n\n    constructor() {\n\n            if(StringUtils.isEmpty(this.firstName)) this.firstName = '';\n            if(StringUtils.isEmpty(this.occupation)) this.occupation = '';\n            if(StringUtils.isEmpty(this.company)) this.company = '';\n            if(StringUtils.isEmpty(this.ageRange)) this.ageRange = undefined;\n            if(StringUtils.isEmpty(this.gender)) this.gender = undefined;\n            if(StringUtils.isEmpty(this.income)) this.income = undefined;\n            if(StringUtils.isEmpty(this.source)) this.source = undefined;\n            if(StringUtils.isEmpty(this.marriage)) this.marriage = undefined;\n            if(StringUtils.isEmpty(this.children)) this.children = undefined;\n            if(StringUtils.isEmpty(this.familiarity)) this.familiarity = undefined;\n            if(StringUtils.isEmpty(this.recentStatus)) this.recentStatus = undefined;\n            if(StringUtils.isEmpty(this.manpa)) this.manpa = undefined;\n            if(StringUtils.isEmpty(this.contactFrequancy)) this._contactFrequancy = undefined;\n            if(StringUtils.isEmpty(this.possibility)) this.possibility = '';\n            if(StringUtils.isEmpty(this.clientID)) this.clientID = '';\n\n            this.updateEmptyStatus();\n    }\n\n    get dataSource() {\n        return this._dataSource;\n    }\n\n    get clientID() {\n        return this._clientID;\n    }    \n\n    get lastName(){\n        return this._lastName;\n    }\n\n    get firstName(){\n        return this._firstName;\n    }\n\n    get tels(){\n        return this._tels;\n    }\n\n    get emails(){\n        return this._emails;\n    }\n\n    get addresses(){\n        return this._addresses;\n    }\n\n    get birthday(){\n        return this._birthday;\n    }\n\n    get ageRange(){\n        return this._ageRange;\n    }\n\n    get gender(){\n        return this._gender;\n    }\n\n    get occupation(){\n        return this._occupation;\n    }\n\n    get company(){\n        return this._company;\n    }\n\n    get income(){\n        return this._income;\n    }\n\n    get source(){\n        return this._source;\n    }\n\n    get marriage(){\n        return this._marriage;\n    }\n\n    get children(){\n        return this._children;\n    }\n\n    get familiarity(){\n        return this._familiarity;\n    }\n\n    get recentStatus(){\n        return this._recentStatus;\n    }\n\n    get manpa(){\n        return this._manpa;\n    }\n\n    get contactFrequancy(){\n        return this._contactFrequancy;\n    }\n\n    get possibility(){\n        return this._possibility;\n    }\n\n    get isFollow() {\n        return this._isFollow;\n    }\n\n    get isEmptyInfo() {\n        return this._isEmptyInfo;\n    }\n\n\n    set dataSource(dataSource : string) {\n        this._dataSource = dataSource;\n    }\n    \n    set clientID(clientID : string) {\n        this._clientID = clientID;\n    }\n\n    set lastName(lastName : string){\n        this._lastName = lastName;\n    }\n\n    set firstName(firstName : string){\n        this._firstName = firstName;\n    }\n\n    set tels(tels : Array<CustomerTel>){\n        this._tels  = tels;\n    }\n\n    set emails(emails : Array<CustomerEmail>){\n        this._emails = emails;\n    }\n\n    set addresses(addresses : Array<CustomerAddress>){\n        this._addresses = addresses;\n    }\n\n    set birthday(birthday : Date){\n        this._birthday = birthday;\n       \n    }\n\n    set ageRange(ageRange : string){\n        this._ageRange = ageRange;\n    }\n\n    set gender(gender : string){\n        this._gender = gender;\n    }\n\n\n    set occupation(occupation : string){\n        this._occupation = occupation;\n    }\n\n    set company(company : string){\n        this._company = company;\n    }\n\n    set income(income : string){\n        this._income = income;\n    }\n\n    set source(source : string){\n        this._source = source;\n    }\n\n    set marriage(marriage : string){\n        this._marriage = marriage;\n    }\n\n    set children(children : string){\n        this._children = children;\n    }\n\n    set familiarity(familiarity : string){\n        this._familiarity = familiarity;\n    }\n\n    set recentStatus(recentStatus : string){\n        this._recentStatus = recentStatus;\n    }\n\n    set manpa(manpa : string){\n        this._manpa = manpa;\n    }\n\n    set contactFrequancy(contactFrequancy : string){\n        this._contactFrequancy = contactFrequancy;\n    }\n\n    set possibility(possibility : string){\n        this._possibility = possibility;   \n    }\n\n    set isFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    set isEmptyInfo(isEmptyInfo : boolean) {\n        this._isEmptyInfo = isEmptyInfo;\n    }\n\n\n    updateEmptyStatus() {\n        if(this.birthday == null && StringUtils.isEmpty(this.gender) && StringUtils.isEmpty(this.occupation)\n          && StringUtils.isEmpty(this.company) && StringUtils.isEmpty(this.income)\n          && StringUtils.isEmpty(this.source) && StringUtils.isEmpty(this.marriage)\n          && StringUtils.isEmpty(this.children) && StringUtils.isEmpty(this.familiarity)\n          && StringUtils.isEmpty(this.manpa) && StringUtils.isEmpty(this.recentStatus)) {\n            this.isEmptyInfo = true;\n          }\n          else {\n              this.isEmptyInfo = false;\n          }\n    }\n\n    updateFollowStatus(isFollow : boolean) {\n        this.isFollow = isFollow;\n    }\n\n    addEmail(email : CustomerEmail) {\n        this.emails.push(email);\n    }\n\n    addTel(tel : CustomerTel) {\n        this.tels.push(tel);\n    }\n\n    addAddress(address : CustomerAddress) {\n        this.addresses.push(address);\n    }\n\n    deleteTel(tel:CustomerTel,index:number){\n        this.tels.splice(index,1);\n    }\n    \n    deleteEmail(email:string,index:number){\n        this.emails.splice(index,1);\n    }\n    deleteAddress(addresses : CustomerAddress,index:number){\n        this.addresses.slice(index,1);\n    }\n\n    notOPUSTelNumber() : number{\n        let count = 0;\n\n        for(let i = 0 ; i < this.tels.length ; i++) {\n            if(this.tels[i].dataSource != 'OPUS') count++;\n        }\n\n        return count;\n    }\n}","export class CustomerContactNote{\n\n    private clientID : string;\n    public name : string;\n    public date : Date;\n    public noteMessage : string;\n\n    constructor(clientID:string,date : Date , noteMessage : string) {\n        this.clientID = clientID;\n        this.date = date;\n        this.noteMessage = noteMessage;\n    }\n\n    public getClientID() : string {\n        return this.clientID;\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerItem{\n    \n    private _clientID : string;\n    private _firstName : string;\n    private _lastName : string;\n    private _showName: string;\n    private _tag : string;\n    private _complementPercent : number;\n    private _isFollow : boolean;\n    private _isOtherSource : boolean;\n    private _isHighlight : boolean;\n\n    constructor(clientID : string,firstName : string ,lastName : string, possibility : string ,\n         complementPercent : number,isFollow : boolean , isOtherSource : boolean , isOverTimeAlert : string) {\n\n        this._clientID = clientID;\n        this._firstName = firstName;\n        this._lastName = lastName;\n        this._tag = possibility;\n        this._complementPercent = complementPercent;\n        this._isFollow = isFollow;\n        this._isOtherSource = isOtherSource;\n        \n        if(isOverTimeAlert == 'Y') {\n            this._isHighlight = true;\n        }\n\n        if(StringUtils.isEmpty(this._firstName)) this._firstName = '';\n    }\n\n\n    get isOtherSource() {\n        return this._isOtherSource;\n    }\n\n    get isFollow() {\n        return this._isFollow;\n    }\n\n    get clientID(){\n        return this._clientID;\n    }\n\n    get firstName(){\n        return this._firstName;\n    }\n\n    get lastName(){\n        return this._lastName;\n    }\n\n    get tag(){\n        return this._tag;\n    }\n\n    get complementPercent(){\n        return this._complementPercent;\n    }\n\n    set clientID(clientID : string){\n        this._clientID = clientID;\n    }    \n\n    set firstName(name : string){\n        this._firstName = name;\n    }\n\n    set lastName(name : string){\n        this._lastName = name;\n    }\n\n    set tag(tag : string){\n        this._tag = tag;\n    }\n\n    set complementPercent(complementPercent : number){\n        this._complementPercent = complementPercent;\n    }\n\n    set isFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    set isOtherSource(isOtherSource : boolean) {\n        this._isOtherSource = isOtherSource;\n    }\n\n    get isHighlight() {\n        return this._isHighlight;\n    }\n\n    set isHighLight(isHighLight : boolean) {\n        this._isHighlight = isHighLight;\n    }\n\n    get showName() {\n        return this._showName;\n    }\n    \n    set showName(showName: string) {\n        this._showName = showName;\n    }\n}","export class CustomerAlertItem {\n    private _clientID : string;\n    private _name : string;\n\n    constructor(clientID : string, name : string) {\n       this._clientID = clientID;\n       this._name = name;  \n    }\n\n   get clientID() {\n       return this._clientID;\n   }\n\n   get name(){\n    return this._name;\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerAddress{\n\n    public clientID : string;\n    public addressType : string;\n    public country : string;\n    public city : string;\n    public area : string;\n    public zipcode : string;\n    public address : string;\n    public dataSource : string;\n    \n\n    constructor(clientID:string,addressType : string,country : string,city : string,area : string,zipcode : string,address : string,dataSorce : string){\n        this.clientID = clientID;\n        this.addressType = addressType;\n        this.country = country;\n        this.city = city;\n        this.area = area;\n        this.zipcode = zipcode;\n        this.address = address;\n        this.dataSource = dataSorce;\n\n    }\n\n    toFullAddress() {        \n        \n        let array = [];\n        if(StringUtils.isNotEmpty(this.country)) array.push(this.country);\n        if(StringUtils.isNotEmpty(this.city)) array.push(this.city);\n        if(StringUtils.isNotEmpty(this.area)) array.push(this.area);\n        if(StringUtils.isNotEmpty(this.zipcode)) array.push(this.zipcode);\n        if(StringUtils.isNotEmpty(this.address)) array.push(this.address);\n\n        return array.join(', ');\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.country) \n        && StringUtils.isEmpty(this.city) && StringUtils.isEmpty(this.area)\n        && StringUtils.isEmpty(this.zipcode) && StringUtils.isEmpty(this.address);\n    }\n}\n","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerEmail {\n\n    public clientID : string;\n    public emailType :string;\n    public email : string;\n    public dataSource : string;\n\n    constructor(_clientID : string , _emailType : string , _email : string , _dataSource : string){\n        this.clientID = _clientID;\n        this.emailType = _emailType;\n        this.email = _email;\n        this.dataSource = _dataSource;\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.email);\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerTel{\n\n    public clientID : string;\n    public telType : string;\n    public tel : string;\n    public dataSource : string;\n\n    constructor(clientID : string,  telType : string, tel : string, dataSource : string) {\n        this.clientID = clientID;\n        this.telType = telType;\n        this.tel = tel;\n        this.dataSource = dataSource;\n    }\n\n    public isEmpty() {\n        return StringUtils.isEmpty(this.tel);\n    }\n\n}","import { StringUtils } from \"@allianzSND/core\";\nimport { getMonth, getDate } from 'date-fns';\n\nexport class CustomerBirthday{\n    \n    private _clientID : string;\n    public lastName : string;\n    public firstName : string;\n    public birthdayMonth : string;\n    public birthdayDate : string;\n\n    constructor(clientID : string,firstName : string ,lastName : string, birthdayMonth: string , birthdayDate : string) {\n\n        this._clientID = clientID;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.birthdayMonth = birthdayMonth;\n        this.birthdayDate =  birthdayDate;\n       \n\n         if(StringUtils.isEmpty(this.firstName)) this.firstName = '';\n\n    }\n\n\n   \n\n   \n}","import { APIFactory, APIDispatch, ProfileCodeService, ContactItem, PageInfo, ValidationResult, DateUtils, StringUtils} from '@allianzSND/core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { CustomerDetail } from './model/CustomerDetail';\nimport { CustomerListAPI } from '../api/CustomerListAPI';\nimport { CustomerBirthdayListAPI } from '../api/CustomerBirthdayListAPI';\nimport { CustomerDetailAPI } from '../api/CustomerDetailAPI';\nimport { CustomerContactNote } from './model/CustomerContactNote';\nimport { CustomerContactNoteAPI } from '../api/CustomerContactNoteAPI';\nimport { CustomerItem } from './model/CustomerItem';\nimport { CustomerAlertItem } from './model/CustomerAlertItem';\nimport { CustomerAddress } from './model/CustomerAddress';\nimport { CustomerEmail } from './model/CustomerEmail';\nimport { CustomerTel } from './model/CustomerTel';\nimport { CustomerTelAPI } from '../api/CustomerTelAPI';\nimport { ImportContactAPI } from '../api/ImportContactAPI';\nimport { CustomerAddContactNoteAPI } from '../api/CustomerAddContactNote';\nimport { CustomerEditContactNoteAPI } from '../api/CustomerEditContactNote';\nimport { CustomerDeleteContactNoteAPI } from '../api/CustomerDeleteContactNote';\nimport { CustomerFilterCriteria } from '../components/bean/customer-filter-criteria';\nimport { CustomerDeleteAPI } from '../api/CustomerDeleteAPI';\nimport { CustomerEditOvertimeAPI } from '../api/CustomerEditOvertimeAPI';\nimport { CustomerAutoDeleteAPI } from '../api/CustomerAutoDeleteAPI';\nimport { CustomerSavePresetAPI } from '../api/CustomerSavePresetAPI';\nimport { CustomerGetPresetAPI } from '../api/CustomerGetePresetAPI';\nimport { CustomerUpdateFollowAPI } from '../api/CustomerUpdateFollowAPI';\nimport { CustomerFilterPreset } from '../components/bean/customer-filter-preset';\nimport { CustomerDetailResult } from '../components/bean/customer-detail-result';\nimport { CustomerSaveDetailAPI } from '../api/CustomerSaveDetailAPI';\nimport { CustomerBirthday } from './model/CustomerBirthday';\nimport { DashboardUpdateToReadAPI } from '../api/DashboardUpdateToReadAPI';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  //is first time use customer function\n  private _isFirstTime = true;//TODO\n\n  //add/edit profile result\n  private _profileResult : CustomerDetailResult;\n  \n  constructor(private dispatcher: APIDispatch, private dateUtils : DateUtils, private APIFactory: APIFactory, private profileCodeService: ProfileCodeService) {\n    //register api\n  }\n  \n  isFirstTime() : boolean{\n    if(this._isFirstTime) {\n      this._isFirstTime = false;\n      return true;\n    }\n    else {\n      return this._isFirstTime;\n    }\n    \n  }\n\n  get profileResult() {return this._profileResult;}\n  set profileResult(result) {this._profileResult = result;}\n\n  updateMessageToRead(messageType: string, messageDataCategory: string): Observable<any> {\n    let dashboardUpdateToReadAPI : DashboardUpdateToReadAPI = <DashboardUpdateToReadAPI>this.APIFactory.getAPI('updateDashboardToRead');\n    dashboardUpdateToReadAPI.setMessageType(messageType);\n    dashboardUpdateToReadAPI.setMessageDataCategory(messageDataCategory);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(dashboardUpdateToReadAPI).subscribe((data) => {\n        \n        console.debug('dashboard-service-updateMessageToRead',data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getOverTimeCustomerList(clientID) : Observable<Array<CustomerAlertItem>>{\n    let customerOverTimeAPI: CustomerEditOvertimeAPI = <CustomerEditOvertimeAPI>this.APIFactory.getAPI('getCustomerOverTime');\n\n    customerOverTimeAPI.setClientID(clientID);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerOverTimeAPI).subscribe((data) => {\n        \n        console.debug('customer-service-getOverTimeList',data);\n\n        let returnList = new Array<CustomerAlertItem>();\n       \n        let messages = data['Body'];\n        //set body data\n        for (let i = 0; i < messages.length; i++) {\n          let message = messages[i];\n\n          let args = JSON.parse(message['Arguments']);\n          let customerList = args['customers'];\n\n          for(let j=0 ; j< customerList.length ; j++) {\n            let event = new CustomerAlertItem(customerList[j].id, customerList[j].name);\n            returnList.push(event);\n          }\n          \n        }\n        \n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  getAutoDeleteCustomerList(clientID) : Observable<Array<CustomerAlertItem>>{\n    let customerDeleteAPI: CustomerAutoDeleteAPI = <CustomerAutoDeleteAPI>this.APIFactory.getAPI('getCustomerAutoDelete');\n\n    customerDeleteAPI.setClientID(clientID);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerDeleteAPI).subscribe((data) => {\n        console.log('customer-service-getAutoDeleteCustomerList',data);\n\n        let returnList = new Array<CustomerAlertItem>();\n       \n        let messages = data['Body'];\n        //set body data\n        for (let i = 0; i < messages.length; i++) {\n          let message = messages[i];\n\n          let args = JSON.parse(message['Arguments']);\n          let customerList = args['customers'];\n\n          for(let j=0 ; j< customerList.length ; j++) {\n            let event = new CustomerAlertItem(customerList[j].id, customerList[j].name);\n            returnList.push(event);\n          }\n          \n        }\n        \n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  updateCustomerFollowStatus(clientID,isFollow) : Observable<any> {\n    let updateCustomerFollowStatus: CustomerUpdateFollowAPI = <CustomerUpdateFollowAPI>this.APIFactory.getAPI('updateCustomerFollowStatus');\n    updateCustomerFollowStatus.setClient(clientID);\n    updateCustomerFollowStatus.setIsFollow(isFollow);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(updateCustomerFollowStatus).subscribe((data) => {\n        \n        console.debug('customer-service-updateCustomerFollowStatus',data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  getFilterCriteriaPreset(): Observable<CustomerFilterPreset> {\n    let getFilterCriteria: CustomerGetPresetAPI = <CustomerGetPresetAPI>this.APIFactory.getAPI('getCustomerFilterPreset');\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(getFilterCriteria).subscribe((data) => {\n        \n        console.debug('customer-service-getFilterCriteria',data);\n\n        let settingArray = data['Body'];\n\n        let preset : CustomerFilterPreset;\n        if(settingArray.length =! 0) {\n          preset = JSON.parse(settingArray[0].SettingVal);\n        }\n        \n        console.debug('customer-service-getFilterCriteriaPreset',preset);\n\n        observer.next(preset);\n        observer.complete();\n      })\n    })\n  }\n\n  saveFilterCriteria(filterCriteria : CustomerFilterCriteria): Observable<any> {\n    let saveFilterCriteria: CustomerSavePresetAPI = <CustomerSavePresetAPI>this.APIFactory.getAPI('saveCustomerFilterPreset');\n\n    saveFilterCriteria.setFilterCriteria(filterCriteria);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(saveFilterCriteria).subscribe((data) => {\n        \n        console.debug('customer-service-saveFilterCriteria',data);\n\n        observer.next(data);\n        observer.complete();\n      })\n    })\n  }\n\n  checkInFilterCriteria(clientID : string,filterCriteria : CustomerFilterCriteria): Observable<boolean> {\n    let customerListAPI: CustomerListAPI = <CustomerListAPI>this.APIFactory.getAPI('getCustomerList');\n\n    customerListAPI.filterCriteria = filterCriteria;\n    customerListAPI.clientID = clientID;\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerListAPI).subscribe((data) => {\n        \n        console.debug('customer-service-checkInFilterCriteria',data);\n\n        observer.next(data['Body'].length != 0);\n        observer.complete();\n      })\n    })\n  }\n\n  //get customer datas\n  getCustomerList(filterCriteria : CustomerFilterCriteria,_pageInfo : PageInfo): Observable<Array<CustomerItem>> {\n    let customerListAPI: CustomerListAPI = <CustomerListAPI>this.APIFactory.getAPI('getCustomerList');\n\n    console.debug('customer-service-getCustomerList',filterCriteria,_pageInfo);\n\n    customerListAPI.filterCriteria = filterCriteria;\n    customerListAPI.pageInfo = _pageInfo;\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerListAPI).subscribe((data) => {\n        \n        console.debug('customer-service-getCustomerList',data);\n\n        let returnList = new Array<CustomerItem>();\n        let header = data['Header'];\n        let customerList = data['Body'];\n\n        //set header pageInfo\n        // _pageInfo.totalPage = header.PageInfo.totalPage;\n        // _pageInfo.totalRec = header.PageInfo.totalRec;\n\n        //set body data\n        for (let i = 0; i < customerList.length; i++) {\n          let json = customerList[i];\n          let isOtherSystem = json.DataSource != 'APP';\n          let isFollow = json.IsFollow == 'Y';\n          let completeness = json.Completeness;\n          let isOverTimeAlert = json.IsOverTimeAlert;\n    \n\n          let event = new CustomerItem(json.ClientID,json.FirstName,json.LastName,json.Possibility,completeness,isFollow,isOtherSystem,isOverTimeAlert);\n          returnList.push(event);\n        }\n        observer.next(returnList);\n        observer.complete();\n      })\n    })\n  }\n\n  getCustomerBirthdayList(targetDate, subN, addN): Observable<Array<CustomerBirthday>> {\n    let customerBirthdayListAPI: CustomerBirthdayListAPI = <CustomerBirthdayListAPI>this.APIFactory.getAPI('getCustomerBirthdayList');\n    customerBirthdayListAPI.subN = subN;\n    customerBirthdayListAPI.addN = addN;\n    customerBirthdayListAPI.targetDate = targetDate;\n  \n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerBirthdayListAPI).subscribe((data) => {\n        \n        console.debug('customer-service-getCustomerBirthdayList',data);\n\n        let returnList :Array<CustomerBirthday> = [];\n        // let header = data['Header'];\n        let birthdayList = data['Body'];\n\n\n        console.log(\"cusSer: \", birthdayList);\n\n        // //set body data\n        for (let i = 0; i < birthdayList.length; i++) {\n          let event = new CustomerBirthday(birthdayList[i]['ClientID'], birthdayList[i]['FirstName'], birthdayList[i]['LastName'], birthdayList[i]['BirthdayMonth'], birthdayList[i]['BirthdayDate']);\n          returnList.push(event);\n        }\n        observer.next(returnList);\n        observer.complete();\n      });\n\n      \n\n\n    });\n  }\n\n  convertCustomerDetailDisplayMode(customer : CustomerDetail) {\n    console.debug('convertCustomerDetailDisplayMode',customer);\n\n    customer.ageRange = this.profileCodeService.convertCode2Text('Customer_Age',customer.ageRange);\n    customer.gender = this.profileCodeService.convertCode2Text('Customer_Gender',customer.gender);\n    customer.income = this.profileCodeService.convertCode2Text('Customer_Income',customer.income);\n    customer.source = this.profileCodeService.convertCode2Text('Customer_Source',customer.source);\n    customer.marriage = this.profileCodeService.convertCode2Text('Customer_Marriage',customer.marriage);\n    customer.children = this.profileCodeService.convertCode2Text('Customer_Children',customer.children);\n    customer.familiarity = this.profileCodeService.convertCode2Text('Customer_Familiarity',customer.familiarity);\n    customer.recentStatus = this.profileCodeService.convertCode2Text('Customer_RecentStatus',customer.recentStatus);\n    customer.manpa = this.profileCodeService.convertCode2Text('Customer_Status',customer.manpa);\n    customer.contactFrequancy = this.profileCodeService.convertCode2Text('Customer_ContactFrequancy',customer.contactFrequancy);\n    customer.possibility = this.profileCodeService.convertCode2Text('Customer_Possibility',customer.possibility);\n        \n    customer.tels.forEach((tel) => {\n      tel.telType = this.profileCodeService.convertCode2Text('Customer_TelType',tel.telType);\n    });\n\n    customer.emails.forEach((email) => {\n      email.emailType = this.profileCodeService.convertCode2Text('Customer_EmailType',email.emailType);\n    });\n\n    customer.addresses.forEach((address) => {\n      address.addressType = this.profileCodeService.convertCode2Text('Customer_AddressType',address.addressType);\n    });\n\n  }\n\n  getCustomerDetail(clientID : string): Observable<CustomerDetail> {\n    if(StringUtils.isEmpty(clientID)) {\n      return Observable.create((observer) => {\n        observer.next(undefined);\n        observer.complete();\n      });\n    }\n    else {\n      let customerDetailAPI: CustomerDetailAPI = <CustomerDetailAPI>this.APIFactory.getAPI('getCustomerDetail');\n      customerDetailAPI.id = clientID;\n      \n      return Observable.create((observer)=>{\n        this.dispatcher.dispatch(customerDetailAPI).subscribe((data) => {\n          console.debug('customer-service-json',data);\n          let customer  = data['Body'][0];\n\n          console.debug('customer-service-getCustomerDetail',customer);\n\n          let ageRange : string = customer.AgeRange;\n          let gender : string = customer.Gender;\n          let income : string = customer.Income;\n          let source : string = customer.Source;\n          let marriage : string = customer.Marriage;\n          let children : string = customer.Children;\n          let familiarity : string = customer.Familiarity;\n          let recentStatus : string = customer.RecentStatus;\n          let manpa : string = customer.MANPA;\n          let contactFrequancy : string = customer.ContactFrequancy;\n          let possibility : string = customer.Possibility;\n          let isFollow : boolean = customer.IsFollow == 'Y';\n\n          let birthday : Date;\n\n          if(StringUtils.isNotEmpty(customer.BirthdayYear) && StringUtils.isNotEmpty(customer.BirthdayMonth) && StringUtils.isNotEmpty(customer.BirthdayDate)) {\n            birthday = new Date(Number(customer.BirthdayYear),Number(customer.BirthdayMonth) - 1,Number(customer.BirthdayDate));\n          }\n \n          \n          let customerDetail : CustomerDetail = new CustomerDetail();\n            customerDetail.clientID = customer.ClientID;\n            customerDetail.lastName = ( StringUtils.isNotEmpty(customer.LastName)? customer.LastName : '');\n            customerDetail.firstName = ( StringUtils.isNotEmpty(customer.FirstName)? customer.FirstName : '');\n            customerDetail.occupation = customer.Occupation;\n            customerDetail.company = customer.Company;\n            customerDetail.birthday = birthday;\n            customerDetail.ageRange = ageRange;\n            customerDetail.gender = gender;\n            customerDetail.income = income;\n            customerDetail.source = source;\n            customerDetail.marriage = marriage;\n            customerDetail.children = children;\n            customerDetail.familiarity = familiarity;\n            customerDetail.recentStatus = recentStatus;\n            customerDetail.manpa = manpa;\n            customerDetail.contactFrequancy = contactFrequancy;\n            customerDetail.possibility = possibility;\n            customerDetail.isFollow = isFollow;\n            customerDetail.dataSource = customer.DataSource;\n\n\n                  \n            \n            customer.tel.map(tel=> new CustomerTel(tel.ClientID,tel.TelType,tel.Tel,tel.DataSource)).forEach(element => {\n              customerDetail.addTel(element);\n            });\n\n            customer.email.map(email=> new CustomerEmail(email.ClientID,email.EmailType,email.Email,email.DataSource)).forEach(element => {\n              customerDetail.addEmail(element);\n            });\n\n            customer.address.map(address=> new CustomerAddress(address.ClientID,address.AddressType,address.Country,address.City,address.Area,address.Zipcode,address.Address,address.DataSource)).forEach(element => {\n              customerDetail.addAddress(element);\n            });\n\n            \n\n            console.debug('customer-service:',customerDetail);\n\n            \n            observer.next(customerDetail);\n            observer.complete();\n        })\n      })\n    }\n\n    \n  }\n\n  importContact(items : Array<ContactItem>) : Observable<string> {\n    let importContactAPI:  ImportContactAPI = <ImportContactAPI>this.APIFactory.getAPI('importContact');\n    \n    console.debug('customer-service-importContact',items);\n    importContactAPI.setItems(items);\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(importContactAPI).subscribe((data) => {\n        console.debug('customer-service-importContact',data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n  }\n\n\n\n  validProfile(customerDetail : CustomerDetail): ValidationResult {\n    let validationResult = new ValidationResult();\n\n    //valid required\n    if (StringUtils.isEmpty(customerDetail.lastName))\n      validationResult.setErrorMap('lastName', 'required');\n    // if (customerProfile.firstName == '')\n    //   validationResult.setErrorMap('firstName', 'required');\n    \n    //valid format      \n\n    //valid email\n    if(customerDetail.emails.length != 0 ) {\n      customerDetail.emails.forEach((email) => {\n        if(!email.isEmpty()) {\n          if(!this.isEmailFormat(email.email)) {\n            validationResult.setErrorMap('email','format');\n          }\n        }\n      });\n      \n    }\n\n    //valid date\n    // if(customerProfile.birthday == null) {\n    //   validationResult.setErrorMap('birthday', 'date');\n    // }\n\n    return validationResult;\n  }\n\n  private isEmailFormat(email) {\n    let regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n    return regexp.test(email);\n  }\n\n  saveCustomerDetail(customerDetail : CustomerDetail):Observable<any> {\n    console.log(\"saveCustomerProfile\",customerDetail);\n\n    //check tel/email/address default type\n    customerDetail.tels.forEach((tel) => {\n      if(StringUtils.isEmpty(tel.telType)) tel.telType = 'TelHome';\n    });\n\n    customerDetail.emails.forEach((email) => {\n      if(StringUtils.isEmpty(email.emailType)) email.emailType = 'MailHome';\n    });\n\n    customerDetail.addresses.forEach((address) => {\n      if(StringUtils.isEmpty(address.addressType)) address.addressType = 'AddressTypeHome';\n    });\n\n    let saveCustomerDetailAPI : CustomerSaveDetailAPI = <CustomerSaveDetailAPI>this.APIFactory.getAPI('saveCustomerDetail'); \n  \n    saveCustomerDetailAPI.setDetail(customerDetail);\n\n    let subject = Observable.create((observer)=>{\n      this.dispatcher.dispatch(saveCustomerDetailAPI).subscribe((data)=>{\n\n        console.debug('customer-service-saveCustomerDetail',data);\n\n        observer.next(data['Header']);\n        observer.complete(); \n      })\n    })\n    console.log(\"subject: \", subject);\n    return subject;\n\n  }\n\n  deleteCustomerProfile(clientID : string) : Observable<any> {\n    console.log(\"deleteCustomerProfile\",clientID);\n    let deleteAPI : CustomerDeleteAPI = <CustomerDeleteAPI>this.APIFactory.getAPI('deleteCustomer'); \n    deleteAPI.clientID = clientID;\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(deleteAPI).subscribe((data)=>{\n\n        console.debug('customer-service-deleteCustomerProfile',data);\n\n        observer.next(data['Header']);\n        observer.complete(); \n      })\n    })\n  }\n\n  getCustomerContactNote(clientID : string,pageInfo : PageInfo): Observable<Array<CustomerContactNote>>{\n    let customerContactNoteAPI : CustomerContactNoteAPI = <CustomerContactNoteAPI>this.APIFactory.getAPI('getCustomerContactNote');\n\n    customerContactNoteAPI.setClientID(clientID);\n    customerContactNoteAPI.setPageInfo(pageInfo);\n\n    console.debug('customer-service-getCustomerContactNote',customerContactNoteAPI);\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerContactNoteAPI).subscribe((data) => {\n\n\n        console.debug('customer-service-getCustomerContactNote',data);\n\n        let returnCustomerContactNote: Array<CustomerContactNote> = new Array<CustomerContactNote>();\n        let customerContactNoteList = data['Body'];\n\n        for (let i = 0; i < customerContactNoteList.length; i++) {\n          let json = customerContactNoteList[i];\n          let user = new CustomerContactNote(json.ClientID,new Date(json.NoteTime),json.Note);          \n          returnCustomerContactNote.push(user);\n        }\n\n        observer.next(returnCustomerContactNote);\n        observer.complete();\n      })\n    })\n  }\n\n  addCustomerContact(clientID : string,customerClientID : string,note : string,noteTime : Date) : Observable<any> {\n    console.log(\"addCustomerContact\");\n    let addCustomerContactAPI : CustomerAddContactNoteAPI = <CustomerAddContactNoteAPI>this.APIFactory.getAPI('addCustomerContactNote'); \n    addCustomerContactAPI.setClientID(clientID);\n    addCustomerContactAPI.setCustomerClientID(customerClientID);\n    addCustomerContactAPI.setNote(note);\n    addCustomerContactAPI.setNoteTime(noteTime)\n\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(addCustomerContactAPI).subscribe((data) => {\n        console.debug('customer-service-addCustomerContact',data);\n\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n\n  }\n\n  editCustomerContact(contactClientID : string,note : string,noteTime : Date) : Observable<string> {\n    console.log(\"editCustomerContact\");\n    let editCustomerContactAPI : CustomerEditContactNoteAPI = <CustomerEditContactNoteAPI>this.APIFactory.getAPI('editCustomerContactNote'); \n    editCustomerContactAPI.setContactClientID(contactClientID);\n    editCustomerContactAPI.setNote(note);\n    editCustomerContactAPI.setNoteTime(noteTime)\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(editCustomerContactAPI).subscribe((data)=>{\n\n        console.debug('customer-service-editCustomerContact',data);\n\n        observer.next(data['Header']);\n        observer.complete(); \n      })\n    })\n  }\n\n  deleteCustomerContact(contactClientID : string) : Observable<any> {\n    console.log(\"deleteCustomerContact\");\n    let deleteCustomerContactAPI : CustomerDeleteContactNoteAPI = <CustomerDeleteContactNoteAPI>this.APIFactory.getAPI('deleteCustomerContactNote'); \n    deleteCustomerContactAPI.setContactClientID(contactClientID);\n\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(deleteCustomerContactAPI).subscribe((data)=>{\n\n        console.debug('customer-service-editCustomerContact',data);\n\n        observer.next(data['Header']);\n        observer.complete(); \n      })\n    })\n  }\n\n  getCustomerContactTel(clientID : string) : Observable<Array<CustomerTel>>{\n    let customerTelAPI : CustomerTelAPI = <CustomerTelAPI>this.APIFactory.getAPI('getCustomerTel');\n\n    customerTelAPI.setClientID(clientID);\n\n    console.debug('customer-service-getCustomerContactTel',customerTelAPI);\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(customerTelAPI).subscribe((data) => {\n        console.debug('customer-service-getCustomerContactTel response',data);\n        let returnCustomerTel: Array<CustomerTel> = new Array<CustomerTel>();\n        let customerTelList = data['Body'];\n\n        customerTelList.map(tel=> new CustomerTel(tel.ClientID, this.profileCodeService.convertCode2Text('Customer_TelType',tel.TelType),tel.Tel,tel.DataSource)).forEach(element => {\n          returnCustomerTel.push(element);\n        });\n\n        observer.next(returnCustomerTel);\n        observer.complete();\n      })\n    })\n  }\n  \n}\n","export class CustomerFilterPreset{\n    \n    public addValues(column : string,values : Array<string>) {\n        this[column] = values;        \n        \n    }\n\n}","import { CustomerFilterPreset } from \"./customer-filter-preset\";\nimport { StringUtils } from \"@allianzSND/core\";\n\nexport class CustomerFilterCriteria {\n    private _keyword: string;\n    private filterMap: Map<string, Array<string>> = new Map<string, Array<string>>();\n    private _savePreset: boolean = false;\n\n    constructor(keyword = '', filterMap = new Map<string, Array<string>>(), savePreset = false) {\n        this._keyword = keyword;\n        this.filterMap = filterMap;\n        this._savePreset = savePreset;\n    }\n\n    addCriteria(filterCol: string, value: string) {\n        let values: Array<string> = this.filterMap.get(filterCol);\n        if (values == undefined) values = new Array<string>();\n\n        if (!values.includes(value)) {\n            values.push(value);\n\n            this.filterMap.set(filterCol, values);\n        }\n    }\n\n    addCriteriaCols(filterCol: string, values: string[]) {\n        this.filterMap.set(filterCol, values);\n    }\n\n    hasCriteria() {\n        return this.filterMap.size != 0 || StringUtils.isNotEmpty(this._keyword);\n    }\n\n    set keyword(keyword: string) { this._keyword = keyword }\n    get keyword() { return this._keyword }\n\n    set savePreset(isSave: boolean) {\n        this._savePreset = isSave;\n    }\n\n    get savePreset() { return this._savePreset }\n\n    getFilterMap() {\n        return this.filterMap;\n    }\n\n\n\n    toPresetJSON(): CustomerFilterPreset {\n        let preset = new CustomerFilterPreset();\n\n        this.filterMap.forEach((value: Array<string>, column: string) => {\n            preset.addValues(column, value);\n        });\n\n        console.debug('toPresetJSON', preset);\n\n        return preset;\n    }\n}","export class CustomerConfirmAction {\n    private _action : string;\n    private _optionObj : Array<string>;\n\n    constructor() {\n        \n    }\n\n    set action(action) {this._action = action}\n    set option(option) {this._optionObj = option}\n\n    get action() {return this._action}\n    get option() {return this._optionObj}\n}","import { ContactItem } from \"@allianzSND/core\";\n\nexport class CustomerImportGroup {\n    private _groupName : string;\n    private _isShow : boolean = true;\n    private _items : Array<ContactItem> = new Array<ContactItem>();\n\n    constructor(groupName : string) {\n        this._groupName = groupName;\n    }\n\n    public addItem(item : ContactItem) {\n        this._items.push(item);\n    }\n\n    public get getItems() {\n        return this._items;\n    }\n\n    public get groupName() {\n        return this._groupName;\n    }\n\n    public set groupName(groupName : string) {\n        this._groupName = groupName;\n    }\n\n    public get isShow() {\n        return this._isShow;\n    }\n\n    public set isShow(isShow : boolean) {\n        this._isShow = isShow;\n    }\n\n}","import { InjectionToken } from \"@angular/core\";\nimport { syncCustomer } from \"../interface/syncCustomer.interface\";\nimport { storeCustomer } from \"../interface/storeCustomer.interface\";\nimport { customerAction } from \"../interface/customerAction.interface\";\nimport { showCustomerRule } from \"../interface/showCustomerRule.interface\";\n\nexport const syncCustomerToken = new InjectionToken<syncCustomer>('syncCustomer');\nexport const storeCustomerToken = new InjectionToken<storeCustomer>(\"storeCustomer\");\nexport const customerActionToken = new InjectionToken<customerAction>(\"customerAction\");\nexport const showCustomerRuleToken = new InjectionToken<showCustomerRule>(\"showCustomerRule\");\n","import { Observable } from \"rxjs\";\nimport { CustomerDetail } from \"../service/model/CustomerDetail\";\nimport { CustomerItem } from '../service/model/CustomerItem';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport interface storeCustomer {\n    setState(state: CUSTOMER_STATE): void;\n    getState(): Observable<CUSTOMER_STATE>;\n    setCurrentCustomerDetail(detail: CustomerDetail): void;\n    getCurrentCustomerDetail(): Observable<CustomerDetail>;\n    setCustomerList(list: Array<CustomerItem>): void;\n    getCustomerList(): Observable<Array<CustomerItem>>;\n    setCriteria(criteria: CustomerFilterCriteria): void;\n    getCriteria(): Observable<CustomerFilterCriteria>;\n}\n\nexport enum CUSTOMER_STATE {\n    DISPLAY = 'display',\n    EDIT = 'edit',\n    ADD_SAVED = 'add saved',\n    EDIT_SAVED = 'edit saved',\n    FIRST = 'first'\n}","import { ProfileCode, ProfileCodeService, SQLiteTable, StringUtils } from \"@allianzSND/core\";\nimport { SelectOption } from \"@allianzSND/ui\";\nimport { differenceInCalendarDays } from 'date-fns';\nimport { CustomerDetail } from \"../service/model/CustomerDetail\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({providedIn:'root'})\nexport class CustomerUtils {\n\n    constructor(private profileCodeService: ProfileCodeService) { }\n\n    setCode2Option(codeArray: Array<ProfileCode>) {\n        let options: Array<SelectOption> = new Array();\n        if (codeArray != undefined) {\n            for (let code of codeArray) {\n                options.push(new SelectOption(code.getCode(), code.displayText));\n            }\n        }\n\n\n        return options;\n    }\n    \n    countCompletenessByProfile(customerDetail : CustomerDetail) {\n        console.debug('countCompletenessByDetail',customerDetail);\n\n        //count Completeness\n        let completeness: number = 0;\n        let countColumnName = ['FirstName', 'LastName', 'Occupation', 'Company', 'AgeRange', 'Gender',\n            'Income', 'Source', 'Marriage', 'Children', 'Familiarity', 'RecentStatus', 'MANPA',\n            'ContactFrequancy', 'Possibility'];\n\n            if(StringUtils.isNotEmpty(customerDetail.firstName)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.lastName)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.occupation)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.company)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.ageRange)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.gender)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.income)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.source)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.marriage)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.children)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.familiarity)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.recentStatus)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.manpa)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.contactFrequancy)) completeness++;\n            if(StringUtils.isNotEmpty(customerDetail.possibility)) completeness++;\n\n      \n\n        //count birthday\n        if (customerDetail.birthday != undefined) completeness++;\n\n        //count phone/email/address\n        if (customerDetail.tels.length != 0) completeness++;\n        if (customerDetail.emails.length != 0) completeness++;\n        if (customerDetail.addresses.length != 0) completeness++;\n\n        console.debug('orginal completeness',completeness,(countColumnName.length + 4));\n\n        completeness = (completeness / (countColumnName.length + 4));\n\n        console.debug('before round completeness', completeness);\n        completeness = Math.round(completeness * 100) / 100;\n        console.debug('after round completeness', completeness);\n\n        return completeness;\n    }\n\n    countCompleteness(customerObj : SQLiteTable,telArraySize : number,emailArraySize : number,addressAddressSize : number) {\n        console.debug('countCompleteness',customerObj,telArraySize,emailArraySize,addressAddressSize);\n        \n        //count Completeness\n        let completeness: number = 0;\n        let countColumnName = ['FirstName', 'LastName', 'Occupation', 'Company', 'AgeRange', 'Gender',\n            'Income', 'Source', 'Marriage', 'Children', 'Familiarity', 'RecentStatus', 'MANPA',\n            'ContactFrequancy', 'Possibility'];\n\n        for (let columnName of countColumnName) {\n            if (StringUtils.isNotEmpty(customerObj.getValue(columnName))) {\n                console.debug('hasData',columnName + '=>' + customerObj.getValue(columnName));\n                completeness++;\n            }\n        }\n\n        //count birthday\n        if (StringUtils.isNotEmpty(customerObj.getValue('BirthdayYear')) &&\n        StringUtils.isNotEmpty(customerObj.getValue('BirthdayMonth')) &&\n        StringUtils.isNotEmpty(customerObj.getValue('BirthdayDate'))) completeness++;\n\n        //count phone/email/address\n        if (telArraySize != 0) completeness++;\n        if (emailArraySize != 0) completeness++;\n        if (addressAddressSize != 0) completeness++;\n\n        console.debug('orginal completeness',completeness,(countColumnName.length + 4));\n\n        completeness = (completeness / (countColumnName.length + 4));\n\n        console.debug('before round completeness', completeness);\n        completeness = Math.round(completeness * 100) / 100;\n        console.debug('after round completeness', completeness);\n\n        customerObj.setValue('Completeness', completeness);\n    }\n\n    setCustomerDefaultValue(dataObject: SQLiteTable) {\n        \n        //count age\n        if (StringUtils.isNotEmpty(dataObject.getValue('BirthdayYear')) && \n        StringUtils.isNotEmpty(dataObject.getValue('BirthdayMonth')) && \n        StringUtils.isNotEmpty(dataObject.getValue('BirthdayDate'))) {\n            let birthday = new Date(Number(dataObject.getValue('BirthdayYear')),\n                Number(dataObject.getValue('BirthdayMonth') - 1),\n                Number(dataObject.getValue('BirthdayDate')));\n\n            let age = this.countAge(birthday);\n            dataObject.setValue('age', age);\n\n            //check age range\n            if (StringUtils.isEmpty(dataObject.getValue('AgeRange'))) {\n                let ageRange = this.countAgeRange(age);\n                if(ageRange != undefined) {\n                    dataObject.setValue('AgeRange', ageRange);\n                }\n            }\n\n        }\n\n    }\n\n    countAgeRange(age : number) {\n        console.debug('countAgeRange',age);\n        let rangeResult;\n        let ageRange: Array<ProfileCode> = this.profileCodeService.getCodeArray('Customer_Age');\n        ageRange.forEach(profileCode => {\n            let args = profileCode.getArguments();\n            console.debug('customer-utils countAgeRange args',args);\n            \n            let obj = JSON.parse(args);\n            console.debug('customer-utils countAgeRange obj',obj);\n            if (age >= obj.start && age <= obj.end) {\n                console.debug('match age range',profileCode.getCode());\n                rangeResult = profileCode.getCode();\n            }\n        });\n\n        console.debug('rangeResult',rangeResult);\n\n        return rangeResult;\n    }\n\n    countAge(birthday : Date) : number{\n        let dates = this.calCEIntervalDays(birthday, new Date());\n        console.debug('dates', dates);\n        let age = Math.floor(dates / 365);\n        console.debug('age', age);\n\n        return age;\n    }\n\n    /**\n     * javascriptå³å¥èµ·å§æ¥èçµæ\n     * æ¥ææ ¼å¼çºæ°åå¹´ææ¥(EX.1060802)\n     * å³å¥ 1060702,1060802 æåå³31å¤©\n     * å³å¥ 1060901,1061001 æåå³30å¤©\n     * @param  sDate \n     * @param  eDate \n     * @return å¤©æ¸\n     */\n    calRocIntervalDays(sDate, eDate) {\n        var msecPerMinute = 1000 * 60;\n        var msecPerHour = msecPerMinute * 60;\n        var msecPerDay = msecPerHour * 24;\n        sDate = this.leftPad(sDate, 7, '0');\n        eDate = this.leftPad(eDate, 7, '0');\n        var begDateStr = \"\" + sDate.substring(3, 5) + \"/\" + sDate.substring(5) + \"/\" + (Number(sDate.substring(0, 3)) + Number(1911));\n        var endDateStr = \"\" + eDate.substring(3, 5) + \"/\" + eDate.substring(5) + \"/\" + (Number(eDate.substring(0, 3)) + Number(1911));\n        var begDate = new Date(begDateStr);\n        var endDate = new Date(endDateStr);\n        var interval = endDate.getTime() - begDate.getTime();\n        var days = Math.floor(interval / msecPerDay);\n        return days;\n    }\n    /**\n     * javascriptå³å¥èµ·å§æ¥èçµæ\n     * æ¥ææ ¼å¼çºè¥¿åå¹´ææ¥(EX.20170801)\n     * å³å¥ 20170702,20170802 æåå³31å¤©\n     * å³å¥ 20170901,20171001 æåå³30å¤©\n     * @param  sDate \n     * @param  eDate \n     * @return å¤©æ¸\n     */\n    calCEIntervalDays(sDate, eDate) {\n        // var msecPerMinute = 1000 * 60;\n        // var msecPerHour = msecPerMinute * 60;\n        // var msecPerDay = msecPerHour * 24;\n        // var begDateStr = \"\" + sDate.substring(4, 6) + \"/\" + sDate.substring(6) + \"/\" + sDate.substring(0, 4);\n        // var endDateStr = \"\" + eDate.substring(4, 6) + \"/\" + eDate.substring(6) + \"/\" + eDate.substring(0, 4);\n        // var begDate = new Date(begDateStr);\n        // var endDate = new Date(endDateStr);\n        // var interval = endDate.getTime() - begDate.getTime();\n        // var days = Math.floor(interval / msecPerDay);\n\n        // return days;\n        return differenceInCalendarDays(eDate, sDate);\n\n    }\n    /**\n     * åå·¦è£é¶\n     * Ex:leftPad(3,3,'0')->003\n     * @param  val    [åå¼]\n     * @param  padLen [è£è¶³é·åº¦]\n     * @param  padVal [è£è¶³å¼]\n     * @return        [description]\n     */\n    leftPad(val, padLen, padVal) {\n        if (val.toString().length < padLen) {\n            for (var i = 1; i < padLen; i++) {\n                val = padVal + val;\n                if (val.toString().length >= padLen) {\n                    break;\n                }\n            }\n        }\n        return val;\n    }\n}","import { Component, OnInit, ViewChild, ChangeDetectorRef, Input, TemplateRef, EventEmitter, Output, Optional, Inject, OnDestroy } from '@angular/core';\nimport { trigger, state, style, animate, transition, } from '@angular/animations';\nimport { ExtensionService, Language, StringUtils, DateUtils, PageInfo, DeviceService, ProfileCode, ProfileCodeService, TranslateService, ContactItem } from '@allianzSND/core';\nimport { CalendarService, CalendarEventDetail, CalendarEditComponent } from '@allianzSND/calendar';\nimport { CustomerService } from '../../service/customer-service.service';\nimport { CustomerTel } from '../../service/model/CustomerTel';\nimport { CustomerFilterCriteria } from '../bean/customer-filter-criteria';\nimport { CustomerAlertItem } from '../../service/model/CustomerAlertItem';\nimport { CustomerConfirmAction } from '../bean/customer-confirm-action';\nimport { CustomerDetail } from '../../service/model/CustomerDetail';\nimport { CustomerItem } from '../../service/model/CustomerItem';\nimport { CustomerContactNote } from '../../service/model/CustomerContactNote';\nimport { CustomerImportGroup } from '../bean/customer-import-group';\nimport { addDays, addHours, addMinutes, getDate, getHours, getMinutes, getMonth, getYear, subMinutes } from 'date-fns';\nimport { syncCustomerToken, storeCustomerToken, customerActionToken } from '../../injectionToken/injection-token';\nimport { syncCustomer } from '../../interface';\nimport { storeCustomer, CUSTOMER_STATE } from '../../interface/storeCustomer.interface';\nimport { customerAction } from '../../interface/customerAction.interface';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss'],\n  animations: [\n    trigger('searchBlockAni', [\n      state('*', style({\n        width: '0',\n        opacity: 0\n      })),\n      state('open', style({\n        width: '100%',\n        opacity: 1\n      })),\n      state('closed', style({\n        width: '0',\n        opacity: 0\n      })),\n      transition('open => closed', animate('300ms ease-in')),\n      transition('closed => open', animate('300ms ease-in'))\n    ]),\n  ]\n})\nexport class CustomersComponent implements OnInit, OnDestroy {\n\n  //intergration Calendar Module\n  @ViewChild(CalendarEditComponent) calendarEditComponent;\n  public viewTypeIndex = 2; // 'month'\n  public viewType: string;\n  public viewDate = new Date();\n  public weekStartsOn = 1; // Monday \n\n\n\n  // control mobile show\n  public isShow = false;\n\n  // popup\n  public isExpandDetail = false;\n  public isRefreshDetail = false;\n  public isSaveClick = false;\n\n  public language: Language = new Language();\n\n  //å®¢æ¶æ¸å®çsearch block animate\n  public isOpen: boolean = false;\n  public classSearch: string = '';\n\n  //popup control\n  public isDisplayImportSavePopup = false; //import popup\n  public isDisplaySavePopup = false; //save popup\n  public isDisplayDelCustomerPopup = false; //delete customer popup\n  public isDisplayConfirmAlertPopup = false; //confirm alert popup\n  public isDisplayInfoAlertPopup = false; //info alert popup\n  public isDisplayUpdateRemind = false; //alert customer over 6 month popup\n  public isDisplayDeleteRemind = false; //alert customer over 6 month & 7day popup\n  public isPopupImport = false; //import popup\n  public isPopupFilter = false; //filter popup\n  public isExpandEdit = false; // appointment popup\n  public isPopupCallPhone = false; //call customer phone popup\n  public isPopupNoteDetail = false; //contact detail popup\n  public isPopupEditNote = false; //add/edit contact note popup\n  public isPopupDeleteNote = false; //delete contact note popup\n  public isPopupConfirmDisable = true; // confirmPopup btn is disable default\n  public isDisplayDeletePopup = false; //delete success popup\n\n  //control overtime customer list\n  public alertOverTimeList = new Array<CustomerAlertItem>();\n\n  //control auto delete customer list\n  public alertAutoDeleteCustomer = new Array<CustomerAlertItem>();\n\n  //cache confirm action\n  private _confirmAction: CustomerConfirmAction = new CustomerConfirmAction();\n\n  //control refresh  content\n  public isLoadingFinishContent: boolean = false;\n\n  //control\n  public isLazyLoading: boolean = true;\n\n  //intergration customer-detail used\n  //call phone obj\n  public callPhoneTelArray: Array<CustomerTel>;\n\n  //intergration customer-contact-list used\n  //customer contact detail obj\n  public customerContactDetail: CustomerContactNote;\n  public customerContactList: Array<CustomerContactNote> = [];\n  public contactListPageInfo = new PageInfo();\n\n  public calendarEventDetail: CalendarEventDetail;\n  public viewDateCalendarEventList: Array<CalendarEventDetail> = [];\n\n  //intergration customer-list\n  public customerList = new Array<CustomerItem>();\n  public clickItem: CustomerItem;\n  public customerListPageInfo = new PageInfo();\n  public filterCriteria = new CustomerFilterCriteria();\n  public filterType = '';\n\n  public optionMap: Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public translateMap: Map<string, string> = new Map<string, string>();\n\n  private dayTypesList: Array<string> = ['Cross_Day', 'All_Day'];\n  private noSchedule: string = 'No_Schedule';\n\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public alertTypeList: Array<ProfileCode> = [];\n\n\n  //intergration customer-import\n  public importContractMap = new Map<string, CustomerImportGroup>();\n  public mobileResultSize: number = 0;\n  public importData: boolean = false;\n  public importContactList: Array<ContactItem> = [];\n\n  //filter customer attribute\n  public isLoadCriteria: boolean = false;\n  public isClearCriteria: boolean = false;\n\n  //import result(success | fail);\n  public _onImportResult: boolean = false;\n\n\n  //intergration customer-edit used\n  //add/edit contact note attribute\n  private noteEditClientID: string;\n  public noteCurrentTime: Date = new Date();//add/edit Note current time\n  public noteMessage: string = '';//add/edit Note Message\n  private noteClientID: string = '';//edit/delete noteClientID\n  public isRefreshContactList: boolean = false;\n  public loadContactList: boolean = false;\n\n\n\n  // search animate in filter\n  public classBarMove: string = '';\n\n  //listener route back event\n  private _reloadData = false;\n\n  //intergration customer-detail used\n  public customerDetail: CustomerDetail = new CustomerDetail();\n\n  //current edit customer Id\n  private currentCustomer: CustomerDetail = null;\n\n  // current customer state\n  private customerState: CUSTOMER_STATE = CUSTOMER_STATE.FIRST;\n\n  //pre saved criteria\n  private pre_criteria: CustomerFilterCriteria = new CustomerFilterCriteria();\n\n  //pre saved customerlist\n  private pre_customerList: Array<CustomerItem>;\n\n  //subscribe of store\n  private criteriaChanges;\n  private customerDetailChanges;\n  private stateChanges;\n  private customerListChanges;\n\n  //subject of clear & save filter\n  public clearSubject = new Subject();\n  public saveFilterSubject = new Subject();\n\n\n  //for extension used\n  @Input() detailPreTemplate: TemplateRef<any>;\n  @Input() detailPostTemplate: TemplateRef<any>;\n  @Output() detailModel: EventEmitter<CustomerDetail> = new EventEmitter();\n\n  constructor(private customerService: CustomerService,\n    private calendarService: CalendarService,\n    private translateService: TranslateService,\n    private changeDetector: ChangeDetectorRef,\n    private deviceService: DeviceService,\n    private dateUtils: DateUtils,\n    private profileCodeService: ProfileCodeService,\n    private extensionService: ExtensionService,\n    private customerUtils: CustomerUtils,\n    @Optional() @Inject(storeCustomerToken) private customerStore: storeCustomer,\n    @Optional() @Inject(syncCustomerToken) private customerSync: syncCustomer,\n    @Optional() @Inject(customerActionToken) private customerAction: customerAction,\n\n\n  ) {\n\n  }\n\n  ngOnDestroy() {\n    if (this.customerStore) {\n      this.criteriaChanges.unsubscribe();\n      this.customerDetailChanges.unsubscribe();\n      this.stateChanges.unsubscribe();\n      this.customerListChanges.unsubscribe();\n    }\n  }\n\n\n  ngOnInit() {\n    this.activityTypeList = this.profileCodeService.getCodeArray('Calendar_Type');\n    this.alertTypeList = this.profileCodeService.getCodeArray('Calendar_RemindTime');\n    this.optionMap.set('Calendar_Type', this.activityTypeList);\n    this.optionMap.set('Calendar_RemindTime', this.alertTypeList);\n\n    this.dayTypesList.forEach((dayType) => {\n      this.translateMap.set(dayType, this.translateService.translate(dayType))\n    });\n    this.translateMap.set(this.noSchedule, this.translateService.translate(this.noSchedule));\n\n\n\n    if (this.customerStore) {\n      this.criteriaChanges = this.customerStore.getCriteria().subscribe((criteria) => {\n        this.pre_criteria = criteria;\n      })\n\n      this.customerDetailChanges = this.customerStore.getCurrentCustomerDetail().subscribe(detail => {\n        this.currentCustomer = detail;\n      });\n\n      this.customerListChanges = this.customerStore.getCustomerList().subscribe(list => {\n        this.pre_customerList = list;\n      })\n\n      this.stateChanges = this.customerStore.getState().subscribe((state) => {\n\n        console.log(\"main state: \", state);\n        //console.log(\"curreontCustomer: \", this.currentCustomer);\n        if (state == CUSTOMER_STATE.EDIT_SAVED && this.customerState != CUSTOMER_STATE.EDIT_SAVED) {\n\n          //after saved, check if current ID in criteria\n          console.log(\"state == CUSTOMER_STATE.EDIT_SAVED\");\n          console.log(\"currentCustomer: \", this.currentCustomer);\n          this.isDisplaySavePopup = true;\n          this.customerList = this.pre_customerList;\n          this.filterCriteria = this.pre_criteria;\n          if (this.pre_criteria.hasCriteria()) {\n            this.customerService.checkInFilterCriteria(this.currentCustomer.clientID, this.pre_criteria).subscribe(result => {\n              if (!result) {\n                this.customerList.forEach(item => {\n                  if (item.clientID == this.currentCustomer.clientID) {\n                    item.isHighLight = true;\n                  }\n                });\n                this.customerList = [...this.customerList];\n              }\n              else {\n                this.customerList.forEach(item => {\n                  if (item.clientID == this.currentCustomer.clientID) {\n                    console.debug('change isHighLight status');\n                    item.isHighLight = false;\n                  }\n                });\n              }\n              this.customerList.forEach(item => {\n                if (item.clientID == this.currentCustomer.clientID) {\n                  item.firstName = this.currentCustomer.firstName;\n                  item.lastName = this.currentCustomer.lastName;\n                  item.tag = this.currentCustomer.possibility;\n                  item.complementPercent = this.customerUtils.countCompletenessByProfile(this.currentCustomer);\n                }\n              });\n              this.customerList = [...this.customerList];\n\n              this.customerStore.setCustomerList(this.customerList);\n\n            })\n          }\n          else {\n            this.customerList.forEach((item) => {\n              if (item.clientID == this.currentCustomer.clientID) {\n                item.firstName = this.currentCustomer.firstName;\n                item.lastName = this.currentCustomer.lastName;\n                item.tag = this.currentCustomer.possibility;\n                item.complementPercent = this.customerUtils.countCompletenessByProfile(this.currentCustomer);\n              }\n            });\n            this.customerList = [...this.customerList];\n          }\n\n          this.onGetCustomerDetailByID(this.currentCustomer.clientID);\n          this.refreshContactNote(false);\n          // this.changeDetector.detectChanges();\n        }\n        else if (state == CUSTOMER_STATE.EDIT && this.customerState != CUSTOMER_STATE.EDIT && this.customerState == CUSTOMER_STATE.FIRST) {\n          // edit/click page click last page\n\n          this.customerList = this.pre_customerList;\n          this.filterCriteria = this.pre_criteria;\n          //this.onGetCustomerDetailByID(this.currentCustomer.clientID);\n          if (StringUtils.isEmpty(this.currentCustomer.clientID)) {\n            this.refreshCustomerList(false);\n          }\n          else {\n            this.onGetCustomerDetailByID(this.currentCustomer.clientID);\n            this.refreshContactNote(false);\n          }\n        }\n        else if (this.customerState == CUSTOMER_STATE.FIRST && state == CUSTOMER_STATE.DISPLAY) {\n          //firt in, fetch preset filter\n          console.log(\"this.customerState == CUSTOMER_STATE.FIRST && state == CUSTOMER_STATE.DISPLAY\");\n          this.loadPresetCriteria().then(() => {\n            this.refreshCustomerList(false);\n          });\n        }\n        else if (state == CUSTOMER_STATE.ADD_SAVED) {\n\n          //after add , get pre_criteria && refresh customerlist\n          console.log(\"state == CUSTOMER_STATE.ADD_SAVED\");\n          this.isDisplaySavePopup = true;\n          this.filterCriteria = this.pre_criteria;\n          this.refreshCustomerList(false);\n        }\n        this.customerState = state;\n      })\n      this.customerStore.setState(CUSTOMER_STATE.DISPLAY);\n\n    }\n    else {\n      this.refreshCustomerList(false);\n    }\n    this.refreshContactNote(false);\n\n\n\n    //check is first time open this function\n    if (this.customerService.isFirstTime()) {\n\n      console.log('customer is first time');\n\n      //check customer data over 6month\n\n      this.customerService.getOverTimeCustomerList(\"\").subscribe(data => {\n        this.alertOverTimeList = data;\n        if (this.alertOverTimeList.length != 0) {\n\n          this.customerService.updateMessageToRead('OverTime', 'Customer').subscribe(data => {\n            this.isDisplayUpdateRemind = true;\n          });\n\n        }\n      });\n\n\n\n\n      //check customer data over 6month & 7day\n      this.customerService.getAutoDeleteCustomerList(\"\").subscribe(data => {\n        console.log(\"customerAutoDelete: \", data);\n        this.alertAutoDeleteCustomer = data;\n        if (this.alertAutoDeleteCustomer.length != 0) {\n\n          this.customerService.updateMessageToRead('AutoDelete', 'Customer').subscribe(data => {\n            console.log(\"updateMessageToRead: \", data);\n            this.isDisplayDeleteRemind = true;\n          });\n\n\n        }\n      });\n\n\n      //check customer info alert\n      let timerObj = this.extensionService.getConfigValue('CustomerInfoAlertTimer');\n      console.debug('timerObj', timerObj);\n      this._checkIsInfoAlertTime(timerObj);\n\n\n\n    }\n  }\n\n\n  refreshCustomerList(isAppend: boolean) {\n    console.debug('refreshCustomerList append', isAppend);\n    console.debug(this.filterCriteria);\n    console.debug(this.customerListPageInfo);\n\n    //fetch customer-list data\n    if (!isAppend) this.customerListPageInfo.resetPage();\n\n    this.customerService.getCustomerList(this.filterCriteria, this.customerListPageInfo).subscribe(data => {\n      console.log(\"data in criteria: \", data);\n      if (!isAppend) this.customerList = [...data];\n      else this.customerList = [...this.customerList, ...data];\n\n      if ((!this.filterCriteria.hasCriteria())) {\n        this.filterType = 'NONE';\n      }\n      else {\n        this.filterType = StringUtils.isNotEmpty(this.filterCriteria.keyword) ? 'SEARCH' : 'FILTER';\n\n      }\n\n      if (this.customerStore) {\n        this.customerStore.setCustomerList(this.customerList);\n      }\n\n\n      if (this.customerList.length > 0) {\n        this.onGetCustomerDetailByID(this.customerList[0].clientID);\n      }\n      else {\n        this.customerDetail = new CustomerDetail();\n      }\n\n      // this.changeDetector.detectChanges();\n    });\n  }\n\n  /* integration contact-list */\n  refreshContactNote(isAppend: boolean) {\n\n\n    //if append data will next page\n    if (!isAppend) this.contactListPageInfo.resetPage();\n\n    this.customerService.getCustomerContactNote(this.customerDetail.clientID, this.contactListPageInfo).subscribe(data => {\n      if (isAppend) this.customerContactList = this.customerContactList.concat(data);\n      else this.customerContactList = data;\n\n      console.debug('refreshContactNote success isRefreshContactList status');\n\n    });\n\n  }\n\n  onGetCustomerContactListByID(clientID) {\n    this.customerService.getCustomerContactNote(clientID, this.contactListPageInfo).subscribe(data => {\n      this.customerContactList = data;\n    });\n  }\n\n  _checkIsInfoAlertTime(timerObj) {\n    let infoAlertDateRange: Array<Object> = timerObj.DateRange;\n    let infoAlertTimeRange: Object = timerObj.TimeRange;\n\n    let now = new Date();\n    console.debug('now', now);\n    console.debug('now month', now.getMonth() + 1);\n    console.debug('now date', now.getDate());\n    console.debug('now hours', now.getHours());\n    infoAlertDateRange.forEach(element => {\n      let month = element['month'];\n      let date = element['date'];\n\n      if ((now.getMonth() + 1 == Number.parseInt(month)) && now.getDate() == Number.parseInt(date)) {\n        if (now.getHours() >= Number.parseInt(infoAlertTimeRange['start'])\n          && now.getHours() <= Number.parseInt(infoAlertTimeRange['end'])) {\n          this.isDisplayInfoAlertPopup = true;\n          return;\n        }\n      }\n\n    });\n\n\n  }\n\n  onGetCustomerDetailByID(clientID) {\n    this.customerService.getCustomerDetail(clientID).subscribe(data => {\n      this.customerDetail = data;\n      this.customerService.convertCustomerDetailDisplayMode(this.customerDetail);\n\n    });\n\n\n  }\n\n  toggleSearch() {\n    this.isOpen = !this.isOpen;\n    this.classSearch = this.isOpen ? ' active' : ''\n    if (!this.isOpen) {\n      // this.filterCriteria = new CustomerFilterCriteria();\n      this.filterCriteria.keyword = '';\n      if (this.customerStore) {\n        this.customerStore.setCriteria(this.filterCriteria);\n      }\n      this.refreshCustomerList(false);\n    }\n\n  }\n\n  // search keypress\n  searchCustomerName(name) {\n    console.debug('searchCustomerName', name);\n\n    // this.filterCriteria = new CustomerFilterCriteria();\n    this.filterCriteria.keyword = name;\n    if (this.customerStore) {\n      this.customerStore.setCriteria(this.filterCriteria);\n    }\n    this.refreshCustomerList(false);\n\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n\n  //when customer-list click get click Item\n  onChangeCustomer(customerItem: CustomerItem) {\n\n    this.clickItem = customerItem;\n\n\n\n    //get CustomerDetail\n    this.onGetCustomerDetailByID(customerItem.clientID);\n\n    //get CustomerNote\n    this.onGetCustomerContactListByID(customerItem.clientID);\n    this.isShow = true;\n\n  }\n\n  //when customer-list fetch next record\n  onCustomerLoad() {\n    this.customerListPageInfo.nextPage();\n\n    this.refreshCustomerList(true);\n  }\n\n  //when customer-list sync data to backend\n  onCustomerRefresh() {\n    //sync & reload list\n    this.customerSync.sync().subscribe((resp) => {\n      this.refreshCustomerList(false);\n    })\n  }\n\n  deleteCustomer(customerClientID: string) {\n    this.isDisplayDelCustomerPopup = true;\n  }\n\n  doDeleteCustomer() {\n\n    this.customerList = this.customerList.filter(x => x.clientID != this.customerDetail.clientID);\n    this.onGetCustomerDetailByID(this.customerList[0].clientID);\n\n    this.customerService.deleteCustomerProfile(this.customerDetail.clientID).subscribe((data) => {\n      console.log(\"customerService.doDeleteCustomer()\", data);\n\n      if (data.status) {\n\n        if (this.customerStore) {\n          this.customerStore.setCustomerList(this.customerList);\n        }\n\n\n\n\n        this.isShow = false;\n        this.isDisplayDeletePopup = true;\n        // this.changeDetector.detectChanges();\n      }\n    });\n  }\n\n  addAppointment(customerClientID: string) {\n    let currentTime; // adjust time to next interval\n    currentTime = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), getHours(new Date()), getMinutes(new Date()));\n    currentTime = addMinutes(currentTime, (5 - getMinutes(currentTime) % 5));  // adjust minutes to next 5 minutes\n    currentTime = addHours(currentTime, 1);\n    this.calendarEventDetail = new CalendarEventDetail('', '', '', '', null, 'N', currentTime, addHours(currentTime, 1), 'Y', '8', null, '', '', null);\n    let queryDate = new Date(getYear(this.viewDate), getMonth(this.viewDate), getDate(this.viewDate), 0, 0, 0);\n    this.calendarService.getCalendarEventList(queryDate, subMinutes(addDays(this.viewDate, 1), 1), '').subscribe(data => {\n      this.viewDateCalendarEventList = data;\n      this.onToggleAppointmentModal(true);\n    });\n  }\n\n  onClickAppointmentSave() {\n    this.isSaveClick = true;\n  }\n\n  onToggleAppointmentModal(val) {\n    // console.log(\"X\");\n    this.isExpandEdit = val;\n  }\n\n  onSaveCalendarEvent(calendarEventDetail: CalendarEventDetail) {\n    //alert(calendarEventDetail);\n    this.isSaveClick = false;\n    if (calendarEventDetail) {\n      this.calendarService.addCalendarEvent(calendarEventDetail).subscribe(data => {\n\n        if (data.status) {\n          this.isDisplaySavePopup = true;\n          calendarEventDetail.clientID = data.clientID;\n          this.calendarEventDetail = calendarEventDetail;\n\n          this.onToggleAppointmentModal(false);\n        }\n\n      });\n    }\n\n  }\n\n  addCustomer() {\n\n    this.isDisplayConfirmAlertPopup = false;\n    // this.changeDetector.detectChanges();\n    let detail = new CustomerDetail();\n    if (this.customerStore) {\n      this.customerStore.setCurrentCustomerDetail(detail);\n      this.customerStore.setState(CUSTOMER_STATE.EDIT);\n    }\n    if (this.customerAction) {\n      this.customerAction.afterCustomerEdit(detail);\n    }\n  }\n\n  editCustomer(customerClientID: string) {\n    if (this.customerStore) {\n      this.customerStore.setState(CUSTOMER_STATE.EDIT);\n      this.customerService.getCustomerDetail(customerClientID).subscribe((detail: CustomerDetail) => {\n        this.customerStore.setCurrentCustomerDetail(detail);\n        if (this.customerAction)\n          this.customerAction.afterCustomerEdit(detail);\n      })\n\n\n    }\n\n\n  }\n\n  detailChange(customerDetail: CustomerDetail) {\n    console.log('detailChange', customerDetail);\n    this.detailModel.emit(customerDetail);\n\n  }\n\n  followChange(obj) {\n    this.customerService.updateCustomerFollowStatus(obj.clientID, obj.isFollow).subscribe((data) => {\n      //this.refreshCustomerList(false);\n      //console.log(JSON.stringify(this.customerList));\n      if (this.filterCriteria) {\n        this.customerService.checkInFilterCriteria(obj.clientID, this.filterCriteria).subscribe(result => {\n\n          this.customerList.forEach(item => {\n            if (item.clientID == obj.clientID) {\n              //console.debug('change isHighLight status in follow');\n              if (result) {\n                item.isHighLight = false;\n              }\n              else {\n                item.isHighLight = true;\n              }\n            }\n          });\n        })\n      }\n\n      this.customerList.filter(x => x.clientID == obj.clientID).forEach((value) => {\n        value.isFollow = obj.isFollow;\n      });\n    });\n\n\n    //this.followChangeClientID = obj.clientID;\n\n  }\n\n  addNote() {\n    console.debug('addNote');\n    this.noteCurrentTime = new Date();\n    this.noteMessage = '';\n    this.isPopupEditNote = true;\n  }\n\n  editNote(note: CustomerContactNote) {\n    console.debug('editNote', note);\n\n    this.noteEditClientID = note.getClientID();\n    this.noteCurrentTime = new Date();\n    this.noteMessage = note.noteMessage;\n    this.isPopupEditNote = true;\n\n  }\n\n  displayNote(note: CustomerContactNote) {\n    console.debug('displayNote', note);\n    this.customerContactDetail = note;\n\n    // add click customer name\n    this.customerContactDetail.name = this.customerDetail.lastName + this.customerDetail.firstName;\n\n    this.isPopupNoteDetail = true;\n  }\n\n\n  deleteNote(note: CustomerContactNote) {\n    console.debug('deleteNote', note);\n    this.noteClientID = note.getClientID();\n\n    this.isPopupDeleteNote = true;\n  }\n\n  doDeleteContact() {\n    this.customerService.deleteCustomerContact(this.noteClientID).subscribe(data => {\n\n      console.log(\"customerService.deleteNote()\", data);\n\n      if (data.status) {\n        this.customerContactList = this.customerContactList.filter(x => x.getClientID() != this.noteClientID);\n        this.noteClientID = '';\n        this.isDisplayDeletePopup = true;\n      }\n    });\n  }\n\n  onSaveNote(event) {\n\n    /* the same save btn for edit/add ,event also the same event, how to distinguish*/\n    //alert(JSON.stringify(this.noteMessage));\n\n    if (StringUtils.isEmpty(this.noteMessage)) {\n      alert('Message is required!!');\n    }\n    else {\n      this.customerService.addCustomerContact(this.noteEditClientID, this.customerDetail.clientID, this.noteMessage, this.noteCurrentTime).subscribe(data => {\n\n        console.log(\"customerService.saveNote()\", data);\n\n        if (data.status) {\n          console.debug('saveNote success , close popup & refresh list', this.isDisplaySavePopup, 'isRefreshContactList', this.isRefreshContactList);\n\n          // if(StringUtils.isNotEmpty(this.noteEditClientID)) {\n\n          //   let array = this.customerContactList.filter(x => x.getClientID() == this.noteEditClientID).forEach((value) =>{\n          //     value.noteMessage = this.noteMessage;\n          //   });\n\n          //   alert(array.length);\n          // }\n          // else {\n          //   this.refreshContactNote(false);\n          // }\n\n\n          this.noteEditClientID = undefined;\n          this.isPopupEditNote = false;\n          this.isDisplaySavePopup = true;\n          this.refreshContactNote(false);\n\n\n        }\n      });\n\n    }\n\n    // console.debug('saveNote', event);\n    //console.debug('clickClientID', this.noteEditClientID, this.noteEditClientID, 'noteCurrentTime', this.noteCurrentTime, 'noteMessage', this.noteMessage);\n    //alert(JSON.stringify(event));\n    // if (StringUtils.isEmpty(this.noteMessage)) {\n    //   alert('Message is required!!');\n    // }\n    // else {\n    //   this.customerService.addCustomerContact(this.noteEditClientID, this.customerDetail.clientID, this.noteMessage, this.noteCurrentTime).subscribe(data => {\n\n    //     console.log(\"customerService.saveNote()\", data);\n\n    //     if (data.status) {\n    //       console.debug('saveNote success , close popup & refresh list', this.isDisplaySavePopup, 'isRefreshContactList', this.isRefreshContactList);\n    //       this.noteEditClientID = undefined;\n    //       this.isPopupEditNote = false;\n    //       this.isDisplaySavePopup = true;\n    //       this.refreshContactNote(false);\n    //     }\n    //   });\n    // }\n\n  }\n\n  showConfirmPopup(action, optionArray) {\n\n    this._confirmAction.action = action;\n    this._confirmAction.option = optionArray;\n\n    this.isDisplayConfirmAlertPopup = true;\n    //default btn is disable\n    this.isPopupConfirmDisable = true; // true;\n  }\n\n  confirmPopup() {\n\n    if (this._confirmAction.action == 'add') {\n      this.addCustomer();\n    }\n\n    // 2019/03/25 Jeffery remove because edit not showpopup\n    // else if (this._confirmAction.action == 'edit') {\n    //   this.editCustomer(this._confirmAction.option[0]);\n    // }\n\n    else if (this._confirmAction.action == 'import') {\n      this.import();\n    }\n\n    this.isDisplayConfirmAlertPopup = false;\n  }\n\n  // detect confirm popup to content bottm and the btn can click\n  detectScroll(isBtm) {\n    console.log('in detect scroll===', isBtm);\n    if (isBtm) {\n      this.isPopupConfirmDisable = false\n    }\n  }\n\n\n\n  import() {\n\n    this.deviceService.searchContactsByName(\"\").subscribe(data => {\n      let importList = data;\n      console.debug('import result ', importList);\n\n      this.importContractMap.clear();\n\n      //regroup\n      importList.forEach(element => {\n\n        console.debug(element.lastname);\n\n        //if no lastname,use first name\n        if (StringUtils.isEmpty(element.lastname)) {\n          element.lastname = element.firstname;\n          element.firstname = '';\n        }\n\n        let name = element.lastname;\n\n        if (name != null && name.length > 0) {\n          let firstWord = name.substring(0, 1);\n          firstWord = firstWord.toLowerCase();\n          console.debug('firstWord =' + firstWord);\n\n          let group: CustomerImportGroup = this.importContractMap.get(firstWord);\n          if (group == undefined) group = new CustomerImportGroup(firstWord);\n\n          group.addItem(element);\n          this.importContractMap.set(firstWord, group);\n        }\n\n      });\n\n      console.debug('importContractMap', this.importContractMap);\n    });\n\n    this.isPopupImport = true;\n\n\n  }\n\n  //control import popup is display\n  displayImportPopup(isShow: boolean) {\n    this.isPopupImport = isShow;\n  }\n\n  //when keypress keyword refresh contract list\n  refreshImport(keyword) {\n    this.importContractMap.forEach((group: CustomerImportGroup, groupName: string) => {\n      // console.log(groupName, group);\n\n      group.isShow = false;\n      group.getItems.forEach((item: ContactItem) => {\n        // console.debug('item',item);\n        let name: string = item.lastname + item.firstname;\n        name = name.toLowerCase();\n        // console.debug(name);\n        if (name.indexOf(keyword) == -1) {\n          item.isShow = false;\n        }\n        else {\n          item.isShow = true;\n          group.isShow = true;\n        }\n      })\n    });\n  }\n\n  doImport() {\n    this.customerService.importContact(this.importContactList).subscribe(data => {\n      //alert(\"1\"+JSON.parse(JSON.stringify(data)).status);\n      let status = (JSON.parse(JSON.stringify(data))).status;\n\n      if (status) {\n\n        this.isPopupImport = false;\n        this.isDisplayImportSavePopup = true;\n        this.mobileResultSize = 0;\n\n        //refresh customer list\n        this.refreshCustomerList(false);\n      }\n    });\n  }\n\n\n\n\n  /* customer-import*/\n  onImportCustomer(importItems) {\n    console.debug('importItems', importItems);\n\n    this.importContactList = importItems;\n    this.mobileResultSize = importItems.length;\n  }\n\n  //call customer function\n  callCustomer(customerClientID: string) {\n    console.debug('callCustomer = ' + customerClientID);\n    this.customerService.getCustomerContactTel(customerClientID).subscribe(data => {\n      this.callPhoneTelArray = data;\n\n      //check number array is single\n      if (this.callPhoneTelArray.length != 0) {\n\n        //only one number just to call out\n        if (this.callPhoneTelArray.length == 1) {\n          this.callPhone(this.callPhoneTelArray[0].tel);\n        }\n        else {\n          this.isPopupCallPhone = true;\n        }\n      }\n\n    });\n\n  }\n\n  //cancel callphone popup\n  cancelCallPhone() {\n    this.isPopupCallPhone = !this.isPopupCallPhone;\n  }\n\n  //call number from phone\n  callPhone(telNumber: string) {\n    console.debug('callPhone', telNumber);\n\n\n    //call phone close popup\n    if (this.isPopupCallPhone) this.isPopupCallPhone = !this.isPopupCallPhone;\n\n\n    window.open('tel:' + telNumber, '_system');\n\n    //popup contact note\n    setTimeout((fun) => {\n      this.addNote();\n    }, 1000);\n  }\n\n\n  //open filter popup\n  filter() {\n    this.isPopupFilter = true;\n  }\n\n  //clear filter item\n  clearFilter() {\n    this.clearSubject.next();\n  }\n\n\n  //filter customer list and close popup\n  doFilter() {\n    this.saveFilterSubject.next();\n  }\n\n  doneCriteria(criteria: CustomerFilterCriteria) {\n    console.debug('doneCriteria', criteria);\n\n    this.filterCriteria = criteria;\n    this.isPopupFilter = false;\n    if (this.customerStore) {\n      this.customerStore.setCriteria(criteria);\n    }\n\n    if (criteria.savePreset) {\n      this.customerService.saveFilterCriteria(criteria).subscribe(data => {\n        console.debug('doneCriteria saveFilterCriteria', data);\n      });\n    }\n\n    this.refreshCustomerList(false);\n  }\n\n  loadPresetCriteria() {\n    //check has preset\n    let criteria = new CustomerFilterCriteria();\n    return new Promise((res) => {\n      this.customerService.getFilterCriteriaPreset().subscribe(data => {\n        console.debug('getfilterCriteriaPreset', data);\n\n        if (data != undefined) {\n\n          let count = 0;\n          for (let column in data) {\n            let values = data[column];\n            console.debug('column', column, 'arrays', values);\n            criteria.addCriteriaCols(column, values);\n            count++;\n          }\n\n          if (count != 0) {\n            criteria.savePreset = true;\n          }\n          this.filterCriteria = criteria;\n        }\n        res();\n      });\n    })\n\n  }\n\n\n  cancelDelete() {\n    console.log('cancelDelete');\n  }\n\n  // refreash content\n  refreshContent() {\n    console.log('content refresh:', this.customerSync);\n    let _this = this;\n    //set timeout for refresh animation\n    setTimeout(() => {\n      this.customerSync.sync().subscribe((resp) => {\n        if (resp) {\n          this.isLoadingFinishContent = true;\n          // this.triggerCustomerListQuery();\n        }\n      })\n    }, 800);\n\n  }\n\n\n  // loading content\n  loadContent(event) {\n    console.log('content loading');\n\n    if (!this.loadContactList) this.loadContactList = true;\n    else {\n      setTimeout(() => {\n        this.isLoadingFinishContent = true;\n      }, 0);\n    }\n\n  }\n\n  contactRefreshDone(val) {\n    console.debug('refresh done');\n    setTimeout(() => {\n      this.isLoadingFinishContent = !val;\n      this.loadContactList = val;\n    }, 0);\n  }\n\n\n  //isShowChange\n  isShowChange(val) {\n    if (this.isShow !== val) {\n      this.isShow = val;\n      // this.changeDetector.detectChanges();\n    }\n  }\n\n  public toNoteTime(time: Date) {\n    return this.dateUtils.toDateString(time, 'yyyy-MM-dd HH:mm');\n  }\n\n\n}\n","import { CustomerDetail } from \"../../service/model/CustomerDetail\";\n\nexport class CustomerDetailResult {\n    //edit profile result\n  private _detailSaveSuccess : boolean = false;\n\n  //edit profile result object\n  private _editDetail : CustomerDetail;\n\n  get detailSaveSuccess() {return this._detailSaveSuccess;}\n  set detailSaveSuccess(isSuccess : boolean) {this._detailSaveSuccess = isSuccess;}\n  \n  get editDetail() {return this._editDetail;}\n  set editDetail(detail) {this._editDetail = detail;}\n\n\n}","import { Component, OnInit, ElementRef, Output, AfterViewInit, ViewChild, Input, TemplateRef, EventEmitter, Optional, Inject, ChangeDetectorRef } from '@angular/core';\nimport { SelectOption } from '@allianzSND/ui';\nimport { ProfileCodeService, ValidationResult, Language, StringUtils } from '@allianzSND/core';\nimport { CustomerService } from '../../service/customer-service.service';\nimport { CustomerDetail } from '../../service/model/CustomerDetail';\nimport { CustomerUtils } from '../../utils/customer-utils';\nimport { CustomerTel } from '../../service/model/CustomerTel';\nimport { CustomerEmail } from '../../service/model/CustomerEmail';\nimport { CustomerAddress } from '../../service/model/CustomerAddress';\nimport { CustomerDetailResult } from '../bean/customer-detail-result';\nimport { storeCustomer, CUSTOMER_STATE } from '../../interface/storeCustomer.interface';\nimport { storeCustomerToken, customerActionToken } from '../../injectionToken/injection-token';\nimport { customerAction } from '../../interface/customerAction.interface';\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: ['./customer-edit.component.scss']\n})\nexport class CustomerEditComponent implements OnInit, AfterViewInit {\n\n  @Output() sendContentHeight = new EventEmitter();\n  public contentHeight;\n\n  @ViewChild('inpageMain') content: ElementRef;\n\n  @Input() editPreTemplate: TemplateRef<any>;\n  @Input() editPostTemplate: TemplateRef<any>;\n  @Output() editModel: EventEmitter<CustomerDetail> = new EventEmitter();\n\n\n  public validationResult = new ValidationResult();\n  public customerDetail: CustomerDetail = new CustomerDetail();\n  public pageTitle = 'Edit Profile'; //default\n\n  //select options\n  public optionTel: Array<SelectOption> = new Array();\n  public optionAddress: Array<SelectOption> = new Array();\n  public optionEmail: Array<SelectOption> = new Array();\n  public optionAge: Array<SelectOption> = new Array();\n  public optionGender: Array<SelectOption> = new Array();\n  public optionIncome: Array<SelectOption> = new Array();\n  public optionSource: Array<SelectOption> = new Array();\n  public optionMarriage: Array<SelectOption> = new Array();\n  public optionChildren: Array<SelectOption> = new Array();\n  public optionFamiliarity: Array<SelectOption> = new Array();\n  public optionRecentStatus: Array<SelectOption> = new Array();\n  public optionManpa: Array<SelectOption> = new Array();\n  public optionContactFrequancyPerYear: Array<SelectOption> = new Array();\n\n  public language: Language = new Language();\n\n  public disableAge: boolean = false;\n  public isDisplaySavePopup: boolean = false;\n  public btnSaveDisable: boolean = false;\n  public isShow : boolean = false;\n\n  private _telLimit = 6;\n  private _emailLimit = 3;\n  private _addressLimit = 3;\n  private edit_type = \"add\";\n\n\n  constructor(\n    private customerService: CustomerService,\n    private profileCodeService: ProfileCodeService,\n    private customerUtils: CustomerUtils,\n    private changeDetector: ChangeDetectorRef,\n    @Optional() @Inject(customerActionToken) private customCustomerAction: customerAction,\n    @Optional() @Inject(storeCustomerToken) private customerStore: storeCustomer,\n  ) {\n\n    let telCodeArray = this.profileCodeService.getCodeArray('Customer_TelType');\n    let emailCodeArray = this.profileCodeService.getCodeArray('Customer_EmailType');\n    let addressCodeArray = this.profileCodeService.getCodeArray('Customer_AddressType');\n    let ageCodeArray = this.profileCodeService.getCodeArray('Customer_Age');\n    let genderCodeArray = this.profileCodeService.getCodeArray('Customer_Gender');\n    let incomeCodeArray = this.profileCodeService.getCodeArray('Customer_Income');\n    let sourceCodeArray = this.profileCodeService.getCodeArray('Customer_Source');\n    let marriageCodeArray = this.profileCodeService.getCodeArray('Customer_Marriage');\n    let childrenCodeArray = this.profileCodeService.getCodeArray('Customer_Children');\n    let familiarityCodeArray = this.profileCodeService.getCodeArray('Customer_Familiarity');\n    let recentStatusCodeArray = this.profileCodeService.getCodeArray('Customer_RecentStatus');\n    let manpaCodeArray = this.profileCodeService.getCodeArray('Customer_Status');\n    let contactFrequancyCodeArray = this.profileCodeService.getCodeArray('Customer_ContactFrequancy');\n\n    this.optionTel = this.customerUtils.setCode2Option(telCodeArray);\n    this.optionEmail = this.customerUtils.setCode2Option(emailCodeArray);\n    this.optionAddress = this.customerUtils.setCode2Option(addressCodeArray);\n    this.optionAge = this.customerUtils.setCode2Option(ageCodeArray);\n    this.optionGender = this.customerUtils.setCode2Option(genderCodeArray);\n    this.optionIncome = this.customerUtils.setCode2Option(incomeCodeArray);\n    this.optionSource = this.customerUtils.setCode2Option(sourceCodeArray);\n    this.optionMarriage = this.customerUtils.setCode2Option(marriageCodeArray);\n    this.optionChildren = this.customerUtils.setCode2Option(childrenCodeArray);\n    this.optionFamiliarity = this.customerUtils.setCode2Option(familiarityCodeArray);\n    this.optionRecentStatus = this.customerUtils.setCode2Option(recentStatusCodeArray);\n    this.optionManpa = this.customerUtils.setCode2Option(manpaCodeArray);\n    this.optionContactFrequancyPerYear = this.customerUtils.setCode2Option(contactFrequancyCodeArray);\n\n  }\n\n  ngOnInit() {\n\n    if (this.customerStore) {\n      this.customerStore.getCurrentCustomerDetail().subscribe((data: CustomerDetail) => {\n\n        this.customerDetail = data;\n        if (StringUtils.isEmpty(this.customerDetail.clientID)) {\n          //ADD\n          console.log(\"add :\", this.customerDetail);\n          this.pageTitle = \"\";\n          this.disableAge = false;\n          this.customerDetail = new CustomerDetail();\n          this.customerDetail.ageRange = '';\n          this.edit_type = \"add\";\n        }\n        else {\n          //Edit\n          console.log(\"edit :\", this.customerDetail);\n          this.pageTitle = this.customerDetail.lastName + this.customerDetail.firstName;\n          if (StringUtils.isNotEmpty(this.customerDetail.birthday)) {\n            this.disableAge = true;\n          }\n          else {\n            this.customerDetail.ageRange = '';\n            this.disableAge = false;\n          }\n          this.edit_type = \"edit\";\n        }\n        this.editModel.emit(this.customerDetail);\n        this.changeDetector.detectChanges();\n\n        this.isShow = true;\n      })\n    }\n  }\n\n  validationForm() {\n    console.log(this.customerDetail);\n\n    //valid customer\n    this.validationResult = this.customerService.validProfile(this.customerDetail);\n    if (this.validationResult != null) {\n      setTimeout(() => {\n        this.scrollToError();\n      }, 200);\n    }\n\n  }\n\n\n  // Save btn click\n  saveProfile(event) {\n\n    //valid customer\n    this.validationForm();\n    console.log(this.validationResult.isTrue());\n\n    if (this.validationResult.isTrue()) {\n\n      this.btnSaveDisable = true;\n      //if tel/email/address all empty data , skip it\n      let tmpTelArray = [];\n      let tmpEmailArray = [];\n      let tmpAddressArray = [];\n\n      this.customerDetail.tels.forEach((tel) => {\n        if (!tel.isEmpty()) tmpTelArray.push(tel);\n      })\n\n      this.customerDetail.emails.forEach((email) => {\n        if (!email.isEmpty()) tmpEmailArray.push(email);\n      })\n\n      this.customerDetail.addresses.forEach((address) => {\n        if (!address.isEmpty()) tmpAddressArray.push(address);\n      })\n\n      this.customerDetail.tels = tmpTelArray;\n      this.customerDetail.emails = tmpEmailArray;\n      this.customerDetail.addresses = tmpAddressArray;\n\n      console.log(\"customer-edit-save: \", this.customerDetail);\n      this.customerService.saveCustomerDetail(this.customerDetail).subscribe((data) => {\n        console.debug('saveDetail', data);\n\n        //this.isDisplaySavePopup = true;\n\n        //set result\n        let result = new CustomerDetailResult();\n\n\n        result.detailSaveSuccess = data.status;\n        result.editDetail = this.customerDetail;\n        this.customerService.profileResult = result;\n\n        if (this.customerStore) {\n          this.customerStore.setCurrentCustomerDetail(this.customerDetail);\n          let state = this.edit_type == \"add\" ? CUSTOMER_STATE.ADD_SAVED : CUSTOMER_STATE.EDIT_SAVED;\n          this.customerStore.setState(state);\n        }\n        if (this.customCustomerAction) {\n          this.customCustomerAction.afterCustomerEditSave(this.customerDetail);\n        }\n        this.btnSaveDisable = false;\n      });\n    }\n\n  }\n\n  ngAfterViewInit() {\n    //ç²å¾å§å®¹é«\n    setTimeout(() => {\n      this.contentHeight = this.content.nativeElement.offsetHeight;\n      console.log('ele Height:', this.contentHeight)\n    }, 600);\n\n    this.sendContentHeight.emit(this.contentHeight);\n\n  }\n\n  countAgeRange(birthday) {\n    console.debug('birthday', birthday);\n\n    this.customerDetail.birthday = birthday;\n\n    if (StringUtils.isEmpty(birthday)) {\n      this.customerDetail.ageRange = '';\n      this.disableAge = false;\n    }\n    else {\n      let age = this.customerUtils.countAge(birthday);\n      let ageRange = this.customerUtils.countAgeRange(age);\n      console.debug('ageRange', ageRange);\n\n      if (ageRange != undefined) {\n        this.customerDetail.ageRange = ageRange;\n        this.changeDetector.detectChanges();\n        this.disableAge = true;\n      }\n    }\n    this.changeDetector.detectChanges();\n\n\n  }\n\n  getTelLimit() {\n    return this._telLimit;\n  }\n\n  getEmailLimit() {\n    return this._emailLimit;\n  }\n\n  getAddressLimit() {\n    return this._addressLimit;\n  }\n\n  onAddTelGroup() {\n    console.debug('onAddTelGroup');\n    this.customerDetail.tels.push(new CustomerTel('', 'TelHome', '', 'APP'));\n  }\n\n  onAddMailGroup() {\n    console.debug('onAddMailGroup');\n    this.customerDetail.addEmail(new CustomerEmail('', 'MailHome', '', 'APP'));\n  }\n\n  onAddAddressGroup() {\n    console.debug('onAddAddressGroup');\n    this.customerDetail.addAddress(new CustomerAddress('', 'AddressTypeHome', '', '', '', '', '', 'APP'));\n  }\n\n  onRemoveTelGroup(index) {\n    console.debug('onRemoveTelGroup', index);\n    this.customerDetail.tels.splice(index, 1);\n  }\n\n  onRemoveEmailGroup(index) {\n    console.debug('onRemoveEmailGroup', index);\n    this.customerDetail.emails.splice(index, 1);\n  }\n\n  onRemoveAddressGroup(index) {\n    console.debug('onRemoveAddressGroup', index);\n    this.customerDetail.addresses.splice(index, 1);\n  }\n\n\n  scrollToError() {\n    let errorBlock = document.body.getElementsByClassName('error-msg');\n    if (errorBlock.item(0)) {\n      errorBlock.item(0).parentElement.parentElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n    // if (errorBlock[0]) errorBlock[0].scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectorRef, ElementRef, Inject, Optional, Injectable } from '@angular/core';\nimport { StringUtils, Language } from '@allianzSND/core';\nimport { CustomerItem } from '../../service/model/CustomerItem';\nimport { showCustomerRuleToken } from '../../injectionToken/injection-token';\nimport { showCustomerRule } from '../../interface/showCustomerRule.interface';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\nexport class CustomerListComponent implements OnInit {\n\n  //Is Default Data(No Search Status)\n  public isDefaultData: boolean = true;\n  public showSearchNoData: boolean = false;\n\n  public loadingFinish: boolean = true;\n\n  constructor(\n    private changeDetecor: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Optional() @Inject(showCustomerRuleToken) private showCustomerRule: showCustomerRule,\n  ) { }\n\n  @Output()\n  public customerClick: EventEmitter<CustomerItem> = new EventEmitter();\n\n  @Output()\n  public customerLoad: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  public customerRefresh: EventEmitter<any> = new EventEmitter();\n\n  @Input()\n  get customerList() { return this._customerList; }\n  set customerList(customerList: Array<CustomerItem>) {\n    customerList.forEach(item => {\n      item.showName = this.convertNameToShow(item.firstName, item.lastName);\n    })\n    this._customerList = customerList;\n\n    this.loadingFinish = true;\n  }\n  private _customerList: Array<CustomerItem> = [];\n\n  @Input()\n  get filterType() { return this._filterType; }\n  set filterType(filterType) {\n    this._filterType = filterType;\n\n    if (this.customerList.length == 0 && StringUtils.isNotEmpty(this.filterType)) {\n      this.isDefaultData = this.filterType == 'NONE';\n      this.showSearchNoData = this.filterType == 'SEARCH';\n    }\n  }\n  private _filterType;\n\n  public language: Language = new Language();\n  public onClickCustomerID;\n\n\n  ngOnInit() {\n  }\n\n\n  trackByClientID(index, item) {\n    return item.clientID;\n  }\n\n\n\n  async closeSlidingItems() {\n    console.debug('list closeSlidingItems');\n\n    const item = this.elementRef.nativeElement.querySelector('ion-item-sliding');\n    if (item != null) {\n      /// console.debug('item size',item.length);\n      console.debug('item', item);\n      await item.close();\n      await item.closeOpened();\n    }\n\n  }\n\n  onClickCustomer(clientID: string) {\n\n    this.onClickCustomerID = clientID;\n\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 300);\n\n    let item = this.customerList.filter(item => item.clientID == clientID);\n\n    this.customerClick.emit(item[0]);\n  }\n\n\n  loadCustomer(e) {\n    console.log('lazy load customer:', e);\n\n    this.customerLoad.emit();\n\n  }\n\n  refreshCustomer() {\n    //set timeout for refresh animation\n    setTimeout(() => {\n        this.customerRefresh.emit();\n    }, 800);\n  }\n\n  convertNameToShow(firstName: string, lastName: string): string {\n    if(this.showCustomerRule) {\n      return this.showCustomerRule.convertName(firstName, lastName);\n    }\n    else {\n      return (firstName + lastName);\n    }\n  }\n}\n","import { Component, OnInit,Input, Output ,EventEmitter, ChangeDetectorRef, TemplateRef } from '@angular/core';\nimport { DateUtils, StringUtils, Language } from '@allianzSND/core'\nimport { CustomerDetail } from '../../service/model/CustomerDetail'; \n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.scss']\n})\nexport class CustomerDetailComponent implements OnInit {\n\n  @Output()\n  private onEditDetail: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onCallPhone: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onDeleteDetail: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private onAddAppointment: EventEmitter<string> = new EventEmitter();\n  @Output()\n  private followChange : EventEmitter<{'isFollow': boolean, 'clientID': string}> = new EventEmitter();\n \n  //for extension placeholder\n  @Input()\n  detailPreTemplate:TemplateRef<any>;\n\n  @Input()\n  detailPostTemplate:TemplateRef<any>;\n\n\n  private _customerDetail: CustomerDetail = new CustomerDetail();\n  @Input() \n  get customerDetail() { return this._customerDetail;}\n  set customerDetail(inputCustomerDetail) {\n      //check datasource is from OPUS\n      this._customerDetail = inputCustomerDetail;\n      console.log('inputCustomerDetail: ', inputCustomerDetail);\n      if(this._customerDetail.dataSource == 'OPUS') {\n        this.isEmptyDel = true;\n      }\n      else {\n        this.isEmptyDel = false;\n      }\n\n      this._customerDetail.updateEmptyStatus();\n      this.convertEmptyValToDisplayText(this._customerDetail);\n      this.checkInfoIsEmpty();\n      this.changeCollateButton();\n      \n      this.changeDetctor.detectChanges();\n  }\n\n\n  public language : Language = new Language();\n\n  // empty status\n  public isEmptyAppointment: boolean = false;\n  public isEmptyEdit: boolean = false;\n  public isEmptyDel: boolean = false;\n  public isEmptyDetailInfo: boolean = false;\n  public isEmptyContactNote: boolean = false;\n  public isCollapseBtnShow  : boolean = true;\n  public isHasAgeRange: boolean = false;\n  public isHasContactFrequancy: boolean = false;\n  \n\n  \n\n  constructor(private dateUtils : DateUtils, private changeDetctor:ChangeDetectorRef, \n   ) {\n   \n   }\n   \n\n  ngOnInit() {\n  }\n\n  private changeCollateButton() {\n    console.debug('changeCollateButton',this.customerDetail.tels.length,this.customerDetail.emails.length,this.customerDetail.addresses.length);\n    if(this.customerDetail.tels.length <= 2 && this.customerDetail.emails.length <= 1 && this.customerDetail.addresses.length <= 1) {\n      this.isCollapseBtnShow = false;\n    }\n    else {\n      this.isCollapseBtnShow = true;\n    }\n\n    console.debug('isCollapseBtnShow',this.isCollapseBtnShow);\n  }\n\n\n\n  private checkInfoIsEmpty() {\n    //if detail info is empty , display no data status      \n    if(this.customerDetail.isEmptyInfo) {\n      this.isEmptyDetailInfo = true;\n    }\n    else {\n      this.isEmptyDetailInfo = false;\n    }\n    \n  }\n\n  private convertEmptyValToDisplayText(customerDetail : CustomerDetail) {\n     //if not data set default value(?? or -- --)\n     console.log(\"convertEmptyValToDisplayText: \", customerDetail);\n     if(StringUtils.isEmpty(customerDetail.ageRange)) {\n       this.isHasAgeRange = false;\n     }\n     else {\n       this.isHasAgeRange = true;\n     }\n     if(StringUtils.isEmpty(customerDetail.contactFrequancy)) {\n       this.isHasContactFrequancy = false;\n     }\n     else {\n       this.isHasContactFrequancy = true;\n     }\n     if(StringUtils.isEmpty(customerDetail.gender)) customerDetail.gender = '- -';\n     if(StringUtils.isEmpty(customerDetail.occupation)) customerDetail.occupation = '- -';\n     if(StringUtils.isEmpty(customerDetail.company)) customerDetail.company = '- -';\n     if(StringUtils.isEmpty(customerDetail.income)) customerDetail.income = '- -';\n     if(StringUtils.isEmpty(customerDetail.source)) customerDetail.source = '- -';\n     if(StringUtils.isEmpty(customerDetail.marriage)) customerDetail.marriage = '- -';\n     if(StringUtils.isEmpty(customerDetail.children)) customerDetail.children = '- -';\n     if(StringUtils.isEmpty(customerDetail.familiarity)) customerDetail.familiarity = '- -';\n     if(StringUtils.isEmpty(customerDetail.recentStatus)) customerDetail.recentStatus = '- -';\n     if(StringUtils.isEmpty(customerDetail.manpa)) customerDetail.manpa = '- -';\n     if(StringUtils.isEmpty(customerDetail.children)) customerDetail.children = '- -';\n  }\n\n  public toBirthday() {\n   \n    if(this.customerDetail.birthday != undefined) {\n      return this.dateUtils.toDateString(this.customerDetail.birthday,'yyyy-MM-dd');\n    }\n    else {\n      return '- -';\n    }\n    \n  }\n\n  edit() {\n    this.onEditDetail.emit(this.customerDetail.clientID);\n  }\n\n  delete() {\n    this.onDeleteDetail.emit(this.customerDetail.clientID);\n  }  \n\n  callPhone() {\n    this.onCallPhone.emit(this.customerDetail.clientID);\n  }\n\n  addAppointment() {\n    this.onAddAppointment.emit(this.customerDetail.clientID);\n  }\n\n  trackByFn(index, item) {\n    return item.name;\n  }\n\n  \n  isFollowChange(isFollow : boolean) {\n    console.debug('isFollowChange',isFollow);\n    // display new follow state first\n    this.customerDetail.updateFollowStatus(isFollow);\n    this.changeDetctor.detectChanges();\n   \n    //ouput follow detail change status\n    this.followChange.emit({'isFollow': isFollow, \"clientID\": this.customerDetail.clientID});\n    \n\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, Inject } from '@angular/core';\nimport { DateUtils, Language} from '@allianzSND/core';\nimport { CustomerContactNote } from '../../service/model/CustomerContactNote';\n\n@Component({\n  selector: 'app-customer-contact-list',\n  templateUrl: './customer-contact-list.component.html',\n  styleUrls: ['./customer-contact-list.component.scss']\n})\nexport class CustomerContactListComponent implements OnInit {\n\n\n  public language: Language = new Language();\n\n  @Output()\n  private onAddNote: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  private onDisplayNote: EventEmitter<CustomerContactNote> = new EventEmitter();\n\n  @Output()\n  private onEditNote: EventEmitter<CustomerContactNote> = new EventEmitter();\n\n  @Output()\n  private onDeleteNote: EventEmitter<CustomerContactNote> = new EventEmitter();\n\n  @Output()\n  private contactListRefresh: EventEmitter<any> = new EventEmitter();\n\n \n\n\n  @Input()\n  get contactList() { return this._contactList; }\n  set contactList(contactList) {\n    \n    this._contactList = contactList;\n   \n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n  }\n  private _contactList: Array<CustomerContactNote>;\n\n  elementRef: ElementRef;\n  constructor(private dateUtils: DateUtils,\n    @Inject(ElementRef) elementRef: ElementRef) {\n    this.elementRef = elementRef;\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n\n  }\n\n  // ionic sliding need to call close event when every refresh\n  async closeSlidingItems() {\n    console.debug('closeSlidingItems');\n  \n\n    const item = this.elementRef.nativeElement.querySelector('ion-item-sliding');\n    if (item != null) {\n      /// console.debug('item size',item.length);\n      console.debug('item', item);\n      await item.close();\n      await item.closeOpened();\n    }\n\n  }\n\n  refreshContactNote() {\n    this.contactListRefresh.emit()\n   \n\n      // need to wait ion-item-sliding create at first from no data (when skelton interface)\n    setTimeout(() => {\n      this.closeSlidingItems();\n    }, 200)\n\n  }\n\n  addNote() {\n    this.onAddNote.emit();\n  }\n\n  displayNote(note : CustomerContactNote) {\n    this.onDisplayNote.emit(note);\n  }\n\n  editNote(note : CustomerContactNote) {\n    this.onEditNote.emit(note);\n  }\n\n  deleteNote(note : CustomerContactNote) {\n    this.onDeleteNote.emit(note);\n  }\n\n\n  trackByClientID(index, item) {\n    return item.getClientID();\n  }\n\n  public toNoteTime(time: Date) {\n    return this.dateUtils.toDateString(time, 'yyyy-MM-dd HH:mm');\n  }\n}\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { ProfileCode, ProfileCodeService, Language } from '@allianzSND/core';\nimport { CustomerFilterCriteria } from '../bean/customer-filter-criteria';\nimport { CustomerService } from '../../service/customer-service.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-customer-filter',\n  templateUrl: './customer-filter.component.html',\n  styleUrls: ['./customer-filter.component.scss']\n})\nexport class CustomerFilterComponent implements OnInit {\n\n  public customerType: Array<ProfileCode>;\n  public customerDataSource: Array<ProfileCode>;\n  public possibility: Array<ProfileCode>;\n  public source: Array<ProfileCode>;\n  public familiarity: Array<ProfileCode>;\n  public recentStatus: Array<ProfileCode>;\n  public manpa: Array<ProfileCode>;\n  public gender: Array<ProfileCode>;\n  public marriage: Array<ProfileCode>;\n  public children: Array<ProfileCode>;\n  public income: Array<ProfileCode>;\n  public age: Array<ProfileCode>;\n  public contactFrequency: Array<ProfileCode>;\n  public completeness: Array<ProfileCode>;\n  public birthday: Array<ProfileCode>;\n  public isAsPresent = false; //é¸å®æ¯å¦å°æ­¤æ¬¡é ç®è®æé è¨­\n\n  //control filter column mapping to profilecode array\n  private filterColumnMap: Map<string, Array<ProfileCode>> = new Map();\n\n  //subject to subscribe for open & save & clear\n  @Input()\n  public clear: Subject<any>;\n\n  @Input()\n  public save: Subject<any>;\n\n  @Input()\n  public open: Subject<any>;\n\n\n\n  //Input criteria\n  private _criteria = new CustomerFilterCriteria();\n  @Input()\n  get criteria() {\n    return this._criteria;\n  }\n\n  set criteria(criteria: CustomerFilterCriteria) {\n    console.log(\"set criteria:\", criteria);\n    this._criteria = criteria;\n    this.isAsPresent = criteria.savePreset;\n    this.refreshFilterMap();\n  }\n\n\n  @Output()\n  private doneCriteria: EventEmitter<CustomerFilterCriteria> = new EventEmitter();\n\n\n\n\n  constructor(private customerService: CustomerService, private profileCodeService: ProfileCodeService) {\n\n  }\n\n  public language: Language = new Language();\n\n  ngOnInit() {\n    this.customerType = this.profileCodeService.getCodeArray('Customer_Type');\n    this.customerDataSource = this.profileCodeService.getCodeArray('Customer_DataSource');\n    this.possibility = this.profileCodeService.getCodeArray('Customer_Possibility');\n    this.children = this.profileCodeService.getCodeArray('Customer_Children');\n    this.source = this.profileCodeService.getCodeArray('Customer_Source');\n    this.familiarity = this.profileCodeService.getCodeArray('Customer_Familiarity');\n    this.recentStatus = this.profileCodeService.getCodeArray('Customer_RecentStatus');\n    this.age = this.profileCodeService.getCodeArray('Customer_Age');\n    this.gender = this.profileCodeService.getCodeArray('Customer_Gender');\n    this.income = this.profileCodeService.getCodeArray('Customer_Income');\n    this.marriage = this.profileCodeService.getCodeArray('Customer_Marriage');\n    this.manpa = this.profileCodeService.getCodeArray('Customer_Status');\n    this.contactFrequency = this.profileCodeService.getCodeArray('Customer_ContactFrequancy');\n    this.birthday = this.profileCodeService.getCodeArray('Customer_Birthday');\n    this.completeness = this.profileCodeService.getCodeArray('Customer_Completeness');\n\n    this.filterColumnMap.set('IsFollow', this.customerType);\n    this.filterColumnMap.set('DataSource', this.customerDataSource);\n    this.filterColumnMap.set('Possibility', this.possibility);\n    this.filterColumnMap.set('Source', this.source);\n    this.filterColumnMap.set('Familiarity', this.familiarity);\n    this.filterColumnMap.set('RecentStatus', this.recentStatus);\n    this.filterColumnMap.set('MANPA', this.manpa);\n    this.filterColumnMap.set('Gender', this.gender);\n    this.filterColumnMap.set('Marriage', this.marriage);\n    this.filterColumnMap.set('Children', this.children);\n    this.filterColumnMap.set('Income', this.income);\n    this.filterColumnMap.set('AgeRange', this.age);\n    this.filterColumnMap.set('Birthday', this.birthday);\n    this.filterColumnMap.set('ContactFrequancy', this.contactFrequency);\n    this.filterColumnMap.set('Completeness', this.completeness);\n    if (this.criteria.getFilterMap().size == 0)\n      this.clearCriteria();\n\n    if (this.clear) {\n      this.clear.subscribe(() => {\n        this.clearCriteria();\n      })\n    }\n\n    if (this.save) {\n      this.save.subscribe(() => {\n        this.saveCriteria();\n      })\n    }\n\n\n\n  }\n\n\n  onClick() {\n    // console.debug(this.isAsPresent);\n    this.isAsPresent = false;\n  }\n\n  private _resetFilter(array: Array<ProfileCode>) {\n    for (let profileCode of array) {\n      profileCode.isCheck = false;\n    }\n  }\n\n  private _addDefaultChecked(defaultArray: Array<string>, array: Array<ProfileCode>) {\n    for (let profileCode of array) {\n      if (defaultArray.includes(profileCode.getCode())) {\n        profileCode.isCheck = true;\n      }\n\n    }\n  }\n\n  private _addCriteria(criteriaColumn: string, array: Array<ProfileCode>, criteria: CustomerFilterCriteria) {\n    for (let profileCode of array) {\n      if (profileCode.isCheck) {\n        criteria.addCriteria(criteriaColumn, profileCode.getCode());\n      }\n    }\n  }\n\n  private _addFilterMap(column: string, value: Array<string>) {\n    if (this.filterColumnMap.has(column)) {\n      this.filterColumnMap.get(column).forEach((code: ProfileCode) => {\n        if (value.includes(code.getCode())) {\n          code.isCheck = true;\n        }\n      });\n    }\n\n  }\n\n  private clearCriteria() {\n    this._resetFilter(this.customerType);\n    this._resetFilter(this.customerDataSource);\n    this._resetFilter(this.birthday);\n    this._resetFilter(this.age);\n    this._resetFilter(this.gender);\n    this._resetFilter(this.income);\n    this._resetFilter(this.source);\n    this._resetFilter(this.marriage);\n    this._resetFilter(this.children);\n    this._resetFilter(this.familiarity);\n    this._resetFilter(this.recentStatus);\n    this._resetFilter(this.manpa);\n    this._resetFilter(this.contactFrequency);\n    this._resetFilter(this.possibility);\n    this._resetFilter(this.completeness);\n\n  }\n\n  private refreshFilterMap() {\n    // this.clearCriteria();\n    if (this.criteria.hasCriteria() && this.criteria.getFilterMap().size > 0) {\n      this.criteria.getFilterMap().forEach((value: Array<string>, column: string) => {\n        this._addFilterMap(column, value);\n      });\n    }\n  }\n\n  private saveCriteria() {\n    let criteria = new CustomerFilterCriteria();\n\n    console.debug('filterColumnMap', this.filterColumnMap);\n    this.filterColumnMap.forEach((value: Array<ProfileCode>, column: string) => {\n      this._addCriteria(column, value, criteria);\n    });\n\n    criteria.savePreset = this.isAsPresent;\n\n    this.doneCriteria.emit(criteria);\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ContactItem, Language } from '@allianzSND/core';\nimport { CustomerImportGroup } from '../bean/customer-import-group';\n\n@Component({\n  selector: 'app-customer-import',\n  templateUrl: './customer-import.component.html',\n  styleUrls: ['./customer-import.component.scss']\n})\nexport class CustomerImportComponent implements OnInit {  \n\n  @Input()\n  public importContractMap = new Map<string,CustomerImportGroup>();\n  \n  @Output()\n  private importCustomer: EventEmitter<Array<ContactItem>> = new EventEmitter();\n\n  \n  public language: Language = new Language();\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n\n  doImport() {\n\n    let importItems : Array<ContactItem> = new Array<ContactItem>();\n\n    this.importContractMap.forEach((group: CustomerImportGroup,groupName: string) => {      \n      group.getItems.forEach((item : ContactItem) => {   \n        console.debug(item);     \n        if(item.isCheck) {\n          importItems.push(item);\n        }\n      })\n    });\n\n    this.importCustomer.emit(importItems);\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CalendarModule } from '@allianzSND/calendar';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { CustomerEditComponent } from './components/customer-edit/customer-edit.component';\nimport { CustomerListComponent } from './components/customer-list/customer-list.component';\nimport { CustomerDetailComponent } from './components/customer-detail/customer-detail.component';\nimport { CustomerContactListComponent } from './components/customer-contact-list/customer-contact-list.component';\nimport { CustomerFilterComponent } from './components/customer-filter/customer-filter.component';\nimport { CustomerImportComponent } from './components/customer-import/customer-import.component';\nimport { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield'; // allianz select\nimport { NxDropdownModule } from '@allianz/ngx-ndbx'; // allianz select\nimport { NxRadioModule } from '@allianz/ngx-ndbx';  // allianz radio btn\nimport { NxInputModule } from '@allianz/ngx-ndbx/input'; // è¼¸å¥æ¡\nimport { NxMessageModule } from '@allianz/ngx-ndbx'; // allianz message\nimport { NxDatefieldModule } from '@allianz/ngx-ndbx/datefield'; // allianz date\nimport { NxNativeDateModule } from '@allianz/ngx-ndbx/datefield'; //allianz datetime\nimport { NxProgressbarModule } from '@allianz/ngx-ndbx/progressbar'; // allianz progress\nimport { NxModalModule } from '@allianz/ngx-ndbx'; // allianz popup modal\nimport { NxAccordionModule } from '@allianz/ngx-ndbx'; //allianz accordion\nimport { NxGridModule } from '@allianz/ngx-ndbx/grid';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UIModule } from '@allianzSND/ui';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { CoreModule } from '@allianzSND/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxFormfieldModule,\n    NxDropdownModule,\n    NxRadioModule,\n    NxInputModule,\n    NxMessageModule,\n    NxDatefieldModule,\n    NxNativeDateModule,\n    NxProgressbarModule,\n    NxModalModule,\n    NxAccordionModule,\n    NxGridModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    CalendarModule,\n    UIModule,\n  ],\n  declarations: [CustomersComponent, CustomerEditComponent, CustomerListComponent ,\n    CustomerDetailComponent, CustomerContactListComponent , CustomerFilterComponent, CustomerImportComponent\n  ],\n  providers:[DatePipe],\n  exports:[CustomersComponent,CustomerEditComponent]\n})\nexport class CustomersModule { }\n","import { CustomerItem } from './CustomerItem';\nexport class CustomerList {\n\n    private _customerList : Array<CustomerItem> = [];\n    \n    get length(){\n        return this._customerList.length;\n    }\n\n    constructor() {\n    }\n\n    get customerList(){\n        return this._customerList;\n    }\n\n    set customerList(customerList : Array<CustomerItem>){\n        this._customerList = customerList;\n    }\n    \n    addCustomerItem(customerEvent: CustomerItem) {\n        this._customerList.push(customerEvent);\n    }\n    \n    \n}","export class MobileCustomerItem{\n\n    private lastName : string;\n    private firstName : string;\n    private phoneNumber : Array<{id:number,text:string}>;\n    private email : Array<string>;\n    private address : Array<{id:number,city:string,area:string,code:number,address:string}>;\n    private birthday : string;\n\n    constructor(lastName : string,firstName : string,phoneNumber : Array<{id:number,text:string}>,email : Array<string>,address : Array<{id:number,city:string,area:string,code:number,address:string}>,birthday : string){\n        \n        this.lastName = lastName;\n        this.firstName = firstName;\n        this.phoneNumber = phoneNumber;\n        this.email = email;\n        this.address = address;\n        this.birthday = birthday;\n    }\n\n}","import { MobileCustomerItem } from \"./MobileCustomerItem\";\nexport class MobileCustomerList{\n\n    private mobileCustomerList : Array<MobileCustomerItem>;\n\n    constructor(mobileCustomerList : Array<MobileCustomerItem>){\n        this.mobileCustomerList = mobileCustomerList;\n    }\n\n}","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerAddContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private clientID : string;\n  private customerClientID:  string;\n  private note : string;\n  private noteTime : Date;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n  \n  setClientID(clientID : string) {\n    this.clientID = clientID;\n  }\n\n  setCustomerClientID(customerClientID : string) {\n    this.customerClientID = customerClientID;\n  }\n\n  setNote(note : string) {\n    this.note = note;\n  }\n\n  setNoteTime(noteTime : Date) {\n    this.noteTime = noteTime;\n  }\n\n  getAPIName() : string {\n    return 'addCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.setValue('CustomerClientID', this.customerClientID);\n        contactObj.setValue('Note', this.note);\n        contactObj.setValue('NoteTime', this.noteTime.getTime());\n      \n        if(this.clientID != undefined) {\n          contactObj.addRestriction(new EqualRestriction('ClientID',[this.clientID]));\n          dao.updateByTable(contactObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n        }\n        else {\n          dao.insertByTable(contactObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n        }\n\n        \n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, SQLiteTable, SQLCommand, InRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable, from, of } from 'rxjs';\n\nexport class CustomerAutoDeleteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n    \n  private _clientID: string;\n  private _status: string;\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  \n  setClientID(id) {\n    this._clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerAutoDelete';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerAutoDelete.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (messageObj != undefined && dao != undefined) {\n          \n          dao = new ClientCustomDao(dao);\n          \n          if(StringUtils.isNotEmpty(this._clientID)) {\n            messageObj.addRestriction(new EqualRestriction(\"ClientID\", [this._clientID]));\n          }\n          else {\n            messageObj.addRestriction(new EqualRestriction(\"Status\", ['UnRead']));\n          }\n\n          messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", ['Customer']));\n          messageObj.addRestriction(new EqualRestriction(\"MessageType\",['AutoDelete']));\n\n          dao.queryByTable(messageObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n\n      }\n\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n\n    });\n      //   return from(dao.queryByTable(messageObj).toPromise().then( resp => {\n\n\n      //     let messageArgument = JSON.parse(resp['Body'][0]['customers']);\n      //     let customerIDList = messageArgument['ids'];\n\n      //     let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      //     console.log(\"customerIDListInAPI: \", customerIDList);\n      //     customerObj.addRestriction(new InRestriction(\"ClientID\", customerIDList));\n      //     return dao.queryByTable(customerObj).toPromise().then(resp => {\n          \n      //       return resp;\n      //     })\n        \n      \n          \n      // }));\n      \n  } \n\n    \n  \n    \n}\n","import { PageInfo, IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, OrderByRestriction, LimitRestriction, OffsetRestriction } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\n\nexport class CustomerContactNoteAPI implements IAPI , IMockAPI , ISQLiteAPI {\n\n  private customerClientID:  string;\n  private pageInfo : PageInfo;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id : string) {\n      this.customerClientID = id;\n  }\n\n  setPageInfo(pageInfo : PageInfo) {\n    this.pageInfo = pageInfo;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerContactNote';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerContactNote.json';\n  }\n  \n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('CustomerClientID',[this.customerClientID]));\n        contactObj.addRestriction(new OrderByRestriction([{ column: 'NoteTime', order: 'DESC' }]))\n\n        //add page limit\n        contactObj.addRestriction(new LimitRestriction([this.pageInfo.pageSize]));\n        contactObj.addRestriction(new OffsetRestriction([(this.pageInfo.page - 1) * 5]));\n\n        console.debug(contactObj);\n        dao.queryByTable(contactObj).subscribe((resp) => {\n          console.debug(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerDeleteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n  \n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName() : string {\n    return 'deleteCustomer';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (customerObj != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n        customerObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n        dao.deleteByTable(customerObj).subscribe((resp) => {    \n          observer.next(resp);\n          observer.complete();\n        });\n\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerDeleteContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private contactClientID:  string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setContactClientID(contactClientID : string) {\n    this.contactClientID = contactClientID;\n  }\n\n  getAPIName() : string {\n    return 'deleteCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('ClientID',[this.contactClientID]));\n      \n        dao.deleteByTable(contactObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, SQLiteTable, EqualRestriction } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable, of, from } from \"rxjs\";\n\nexport class CustomerDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private _id;\n\n    constructor(private daoFactory: DaoFactory){\n\n    }\n    public get id() {\n        return this._id;\n    }\n    public set id(value) {\n        this._id = value;\n    }\n    getAPIName(): string {\n        return 'getCustomerDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getCustomerDetail.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n        let defaultDao = this.daoFactory.getDefaultDao();\n        if (customerObj != undefined && defaultDao != undefined) {\n            let dao = new ClientCustomDao(defaultDao);\n            customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n            return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                let customer = resp;\n                let clientID = customer['Body'][0].ClientID;\n                let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                if (customerTelObj) {\n                    customerTelObj = (<SQLiteTable>customerTelObj);\n                    customerTelObj.addRestriction( new EqualRestriction('CustomerClientID', [clientID]));\n                    return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                        let telList = resp['Body'];\n                        customer['Body'][0]['tel'] = telList;\n                        return { customer, clientID };\n                    });\n                }\n                else\n                    return of({ customer, clientID }).toPromise();\n            }).then(({ customer, clientID }) => {\n                let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                if (customerEmailObj) {\n                    customerEmailObj = (<SQLiteTable>customerEmailObj);\n                    customerEmailObj.addRestriction( new EqualRestriction('CustomerClientID', [clientID]));\n\n                    return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                        let telList = resp['Body'];\n                        customer['Body'][0]['email'] = telList;\n                        return { customer, clientID };\n                    });\n                }\n                else\n                    return of({ customer, clientID }).toPromise();\n\n            }).then(({ customer, clientID }) => {\n                let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                if (customerAddrObj) {\n                    customerAddrObj = (<SQLiteTable>customerAddrObj);\n                    customerAddrObj.addRestriction( new EqualRestriction('CustomerClientID', [clientID]));\n\n                    return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                        let telList = resp['Body'];\n                        customer['Body'][0]['address'] = telList;\n                        return customer;\n                    });\n                }\n                else\n                    return of(customer).toPromise();\n            }))\n        }\n        else {\n            return of(false);\n        }\n    }\n\n\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerEditContactNoteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private contactClientID:  string;\n  private note : string;\n  private noteTime : Date;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setContactClientID(contactClientID : string) {\n    this.contactClientID = contactClientID;\n  }\n\n  setNote(note : string) {\n    this.note = note;\n  }\n\n  setNoteTime(noteTime : Date) {\n    this.noteTime = noteTime;\n  }\n\n  getAPIName() : string {\n    return 'editCustomerContactNote';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/saveSuccess.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let contactObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Contact\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (contactObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        contactObj.addRestriction(new EqualRestriction('ClientID',[this.contactClientID]));\n        contactObj.setValue('Note', this.note);\n        contactObj.setValue('NoteTime', this.noteTime.getTime());\n      \n        dao.updateByTable(contactObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction, InRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable, of, from } from 'rxjs';\n\nexport class CustomerEditOvertimeAPI implements IAPI , IMockAPI, ISQLiteAPI {\n    \n  private _clientID: string;\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id) {\n    this._clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerOverTime';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerOverTime.json';\n  }\n\n  executeSQL(): Observable<any> {\n    \n    return Observable.create((observer) => {\n      let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (messageObj != undefined && dao != undefined) {\n          \n          dao = new ClientCustomDao(dao);\n          \n          if(StringUtils.isNotEmpty(this._clientID)) {\n            messageObj.addRestriction(new EqualRestriction(\"ClientID\", [this._clientID]));\n          }\n          else {\n            messageObj.addRestriction(new EqualRestriction(\"Status\", ['UnRead']));\n          }\n\n          messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", ['Customer']));\n          messageObj.addRestriction(new EqualRestriction(\"MessageType\",['OverTime']));\n\n          \n          dao.queryByTable(messageObj).subscribe((resp) => {\n            observer.next(resp);\n            observer.complete();\n          });\n\n      }\n\n      else {\n        observer.next(false);\n        observer.complete();\n      }\n\n    });\n    \n  }\n    \n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nexport class CustomerGetPresetAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName(): string {\n        return 'getCustomerFilterPreset';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getCustomerFilterPreset.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let setting = this.daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n                if (setting) {\n                    dao = new ClientCustomDao(dao);\n\n                    setting = (<SQLiteTable>setting);\n\n                    setting.addRestriction(new EqualRestriction('SettingID',['CustomerFilterSetting']));\n\n                    dao.queryByTable(setting).subscribe((resp) => {\n                        console.debug(resp);\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, ISQLiteAPI, DaoFactory, ClientCustomDao, InRestriction, LikeRestriction, ORCompoundRestriction, EqualRestriction, IRestriction, LimitRestriction, OffsetRestriction, AndCompoundRestriction, PageInfo, OrderByRestriction, ProfileCodeService, LessOrEqualRestriction, GreaterOrEqualRestriction, NotEqualRestriction, StringUtils } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport class CustomerListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _filterCriteria: CustomerFilterCriteria;\n  private _pageInfo: PageInfo = new PageInfo();\n\n  private _queryClientID: string;\n\n  constructor(private daoFactory: DaoFactory, private profileCodeService: ProfileCodeService) {\n\n  }\n  set clientID(clientID: string) {\n    this._queryClientID = clientID;\n  }\n\n  set filterCriteria(criteria: CustomerFilterCriteria) {\n    this._filterCriteria = criteria;\n  }\n\n  set pageInfo(pageInfo: PageInfo) {\n    this._pageInfo = pageInfo;\n  }\n\n  getAPIName(): string {\n    return 'getCustomerList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCustomerList.json';\n  }\n\n  executeSQL(): Observable<any> {\n\n    return Observable.create((observer) => {\n      let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (customerObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n\n        if (this._filterCriteria != undefined) {\n\n          console.debug('CustomerListAPI _filterCriteria', this._filterCriteria);\n\n          let keyword = this._filterCriteria.keyword;\n\n          console.debug('customerListAPI keyword', keyword);\n          if (StringUtils.isNotEmpty(keyword)) {\n            let compoundRestriction = new ORCompoundRestriction([new LikeRestriction('FirstName', [keyword]), new LikeRestriction('LastName', [keyword])]);\n            customerObj.addRestriction(compoundRestriction);\n          }\n\n          let filterMap: Map<string, Array<string>> = this._filterCriteria.getFilterMap();\n\n          filterMap.forEach((array: Array<string>, key: string) => {\n            console.log(key, array);\n\n            if (key == 'Birthday') {\n              let birthdayRestriction = new Array<IRestriction>();\n              let monthArray = new Array<string>();\n              for (let birthday of array) {\n                if (birthday == 'Today') {\n                  let today = new Date();\n                  let startNum = today.getMonth() + 1;\n                  let endNum = today.getDate();\n                  let start = String(startNum);\n                  let end = String(endNum);\n                  if (start.length == 1) start = '0' + start;\n                  if (end.length == 1) end = '0' + end;\n\n                  birthdayRestriction.push(new AndCompoundRestriction([new EqualRestriction('BirthdayMonth', [start]),\n                  new EqualRestriction('BirthdayDate', [end])]));\n                }\n                else {\n                  if (birthday.length == 1) birthday = '0' + birthday;\n                  monthArray.push(birthday);\n                }\n              }\n\n              if (monthArray.length != 0) {\n                birthdayRestriction.push(new InRestriction('BirthdayMonth', monthArray));\n              }\n\n              customerObj.addRestriction(new ORCompoundRestriction(birthdayRestriction));\n            }\n            else if (key == 'DataSource') {\n              if (array.length != 2) {\n                let datasource = array[0];\n                if (datasource == 'E') {\n                  customerObj.addRestriction(new EqualRestriction('DataSource', ['OPUS']));\n                }\n                else {\n                  customerObj.addRestriction(new NotEqualRestriction('DataSource', ['OPUS']));\n                }\n\n              }\n            }\n            else if (key == 'Completeness') {\n              let completenessOption = this.profileCodeService.getCodeArray('Customer_Completeness');\n              let completenessRestriction = new Array<IRestriction>();\n              completenessOption.forEach(profileCode => {\n                let code = profileCode.getCode();\n\n                if (array.includes(code)) {\n                  let obj = JSON.parse(profileCode.getArguments());\n                  let start = obj.start;\n                  let end = obj.end;\n\n                  start = start / 100;\n                  end = end / 100;\n\n                  completenessRestriction.push(new AndCompoundRestriction([new GreaterOrEqualRestriction('Completeness', [start]), new LessOrEqualRestriction('Completeness', [end])]));\n                }\n              })\n\n              console.debug('completenessRestriction length', completenessRestriction.length);\n              console.log('completenessRestriction:', completenessRestriction);\n              if (completenessRestriction.length != 0) {\n                customerObj.addRestriction(new ORCompoundRestriction(completenessRestriction));\n                console.log('customerObj:', customerObj);\n              }\n\n            }\n            else {\n              customerObj.addRestriction(new InRestriction(key, array));\n            }\n\n          });\n\n        }\n\n\n        //add order by\n        customerObj.addRestriction(new OrderByRestriction([{ column: 'LastName', order: 'ASC' }]))\n\n        //add page limit\n        customerObj.addRestriction(new LimitRestriction([this._pageInfo.pageSize]));\n        customerObj.addRestriction(new OffsetRestriction([(this._pageInfo.page - 1) * 10]));\n\n        //if has edit profile will has clientID\n        if (StringUtils.isNotEmpty(this._queryClientID)) {\n          customerObj.addRestriction(new EqualRestriction('ClientID', [this._queryClientID]));\n        }\n\n        dao.queryByTable(customerObj).subscribe((resp) => {\n\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction, SQLCommand } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerDetail } from \"../service/model/CustomerDetail\";\nimport { CustomerUtils } from \"../utils/customer-utils\";\n\n\nexport class CustomerSaveDetailAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private customerDetail: CustomerDetail;\n\n    constructor(private daoFactory: DaoFactory,private customerUtils : CustomerUtils) {\n\n    }\n\n    setDetail(detail: CustomerDetail) {\n        this.customerDetail = detail;\n    }\n\n    getAPIName(): string {\n        return 'saveCustomerDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        // let returnObj = {\n        //     \"status\": true,\n        //     \"msg\": ''\n        // };\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                if (customerObj) {\n                    dao = new ClientCustomDao(dao);\n\n                    customerObj = (<SQLiteTable>customerObj);\n\n                    let birthday = this.customerDetail.birthday;\n                    if (birthday != null && birthday != undefined) {\n                        customerObj.setValue(\"BirthdayYear\", birthday.getFullYear());\n                        let month = (birthday.getMonth() + 1).toString();\n                        if(month.length < 2) {\n                            month = '0' + month.toString();\n                        }\n                        customerObj.setValue(\"BirthdayMonth\", month);\n\n                        let date = (birthday.getDate()).toString();\n                        if(date.length < 2) {\n                            date = '0' + date.toString();\n                        }\n                        customerObj.setValue(\"BirthdayDate\", date);\n                    \n                        customerObj.setValue(\"BirthDayTimeStamp\", (new Date(2000, birthday.getMonth(), birthday.getDate())).getTime());\n                        \n                    }\n\n                    customerObj.setValue('ClientID', this.customerDetail.clientID);\n                    customerObj.setValue(\"LastName\", this.customerDetail.lastName);\n                    customerObj.setValue(\"FirstName\", this.customerDetail.firstName);\n                    customerObj.setValue(\"Occupation\", this.customerDetail.occupation);\n                    customerObj.setValue(\"Company\", this.customerDetail.company);\n                    customerObj.setValue(\"AgeRange\", this.customerDetail.ageRange);\n                    customerObj.setValue(\"Gender\", this.customerDetail.gender);\n                    customerObj.setValue(\"Income\", this.customerDetail.income);\n                    customerObj.setValue(\"Source\", this.customerDetail.source);\n                    customerObj.setValue(\"Marriage\", this.customerDetail.marriage);\n                    customerObj.setValue(\"Children\", this.customerDetail.children);\n                    customerObj.setValue(\"Familiarity\", this.customerDetail.familiarity);\n                    customerObj.setValue(\"RecentStatus\", this.customerDetail.recentStatus);\n                    customerObj.setValue(\"MANPA\", this.customerDetail.manpa);\n                    customerObj.setValue(\"ContactFrequancy\", this.customerDetail.contactFrequancy);\n                    customerObj.setValue(\"Possibility\", this.customerDetail.possibility);\n                    customerObj.setValue(\"IsFollow\", this.customerDetail.isFollow ? 'Y' : 'N');\n\n\n                    //set customer default column & value\n                    this.customerUtils.setCustomerDefaultValue(customerObj);\n\n                    //count Completeness\n                    this.customerUtils.countCompleteness(customerObj,this.customerDetail.tels.length,this.customerDetail.emails.length,this.customerDetail.addresses.length);\n\n                    console.debug('insertCustomer', customerObj);\n                    // console.log('clientID:', customerObj.getValue('ClientID'));\n                    if (customerObj.getValue('ClientID') == '') {\n                        dao.transactionInsert(customerObj);\n                    }\n                    else {\n                        customerObj.addRestriction(new EqualRestriction('ClientID',[customerObj.getValue('ClientID')]))\n                        dao.transactionUpdate(customerObj);\n\n                        //delete relation data\n                        dao.transactionSqlCommand(new SQLCommand('delete from TW_LH_SD_Customer_Tel where CustomerClientID = ? ', [customerObj.getValue('ClientID')]));\n                        dao.transactionSqlCommand(new SQLCommand('delete from TW_LH_SD_Customer_Email where CustomerClientID = ? ', [customerObj.getValue('ClientID')]));\n                        dao.transactionSqlCommand(new SQLCommand('delete from TW_LH_SD_Customer_Address where CustomerClientID = ? ', [customerObj.getValue('ClientID')]));\n                    }\n\n                    //save phone data              \n                    for (let phone of this.customerDetail.tels) {\n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        if (phoneInsertObj) {\n\n                            if (phone.telType == '') phone.telType = 'TelHome';\n\n                            phoneInsertObj = (<SQLiteTable>phoneInsertObj);\n                            phoneInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            phoneInsertObj.setValue('TelType', phone.telType);\n                            phoneInsertObj.setValue('Tel', phone.tel);\n\n                            //insert\n                            dao.transactionInsert(phoneInsertObj);\n                        }\n                    }\n\n                    //save email data\n                    for (let email of this.customerDetail.emails) {\n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        if (emailInsertObj) {\n                            if (email.emailType == '') email.emailType = 'MailHome';\n\n                            emailInsertObj = (<SQLiteTable>emailInsertObj);\n                            emailInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertObj.setValue('EmailType', email.emailType);\n                            emailInsertObj.setValue('Email', email.email);\n\n                            //insert\n                            dao.transactionInsert(emailInsertObj);\n                        }\n                    }\n\n                    //save address data\n                    for (let address of this.customerDetail.addresses) {\n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        if (addressInsertObj) {\n                            if (address.addressType == '') address.addressType = 'AddressTypeHome';\n\n                            addressInsertObj = (<SQLiteTable>addressInsertObj);\n                            addressInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            addressInsertObj.setValue('AddressType', address.addressType);\n                            addressInsertObj.setValue('Country',address.country);\n                            addressInsertObj.setValue('City',address.city);\n                            addressInsertObj.setValue('Area',address.area);\n                            \n                            \n                            addressInsertObj.setValue('Zipcode', address.zipcode);\n                            addressInsertObj.setValue('Address', address.address);\n\n                            //insert\n                            dao.transactionInsert(addressInsertObj);\n                        }\n                    }\n                    dao.runTransaction().subscribe((resp) => {\n                        // let header = resp['Header'];\n                        // if (!header.status) {\n                        //     returnObj['status'] = false;\n                        //     returnObj['msg'] = header.msg;\n                        // }\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\nimport { CustomerFilterCriteria } from \"../components/bean/customer-filter-criteria\";\n\nexport class CustomerSavePresetAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _criteria: CustomerFilterCriteria;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    setFilterCriteria(criteria: CustomerFilterCriteria) {\n        this._criteria = criteria;\n    }\n\n    getAPIName(): string {\n        return 'saveCustomerFilterPreset';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let setting = this.daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n                if (setting) {\n                    dao = new ClientCustomDao(dao);\n\n                    setting = (<SQLiteTable>setting);\n\n                    setting.addRestriction(new EqualRestriction('SettingID',['CustomerFilterSetting']));\n                    setting.setValue(\"SettingVal\",JSON.stringify(this._criteria.toPresetJSON()));\n\n                    dao.updateByTable(setting).subscribe((resp) => {\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { IAPI, IMockAPI, DaoFactory, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\n\nexport class CustomerTelAPI implements IAPI , IMockAPI , ISQLiteAPI {\n\n  private clientID : string;\n\n  constructor(private daoFactory: DaoFactory) {\n\n  }\n\n  setClientID(id : string) {\n      this.clientID = id;\n  }\n\n  getAPIName() : string {\n      return 'getCustomerTel';\n  }\n\n  getMockPath() : string {\n      return './assets/mock/getCustomerTel.json';\n  }\n  \n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let telObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n      let dao = this.daoFactory.getDefaultDao();\n      if (telObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n\n        telObj.addRestriction(new EqualRestriction('CustomerClientID',[this.clientID]));\n      \n        dao.queryByTable(telObj).subscribe((resp) => {\n          console.debug(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class CustomerUpdateFollowAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID : string;\n    private _isFollow : boolean;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    setClient(clientID : string) {\n        this._clientID = clientID;\n    }\n\n    setIsFollow(isFollow : boolean) {\n        this._isFollow = isFollow;\n    }\n\n    getAPIName(): string {\n        return 'updateCustomerFollowStatus';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let customer = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n                if (customer) {\n                    dao = new ClientCustomDao(dao);\n\n                    customer = (<SQLiteTable>customer);\n\n                    customer.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n                    customer.setValue(\"IsFollow\",this._isFollow ? 'Y' : 'N');\n\n                    dao.updateByTable(customer).subscribe((resp) => {\n                        \n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { ContactItem, IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI } from \"@allianzSND/core\";\nimport { Observable } from \"rxjs\";\nimport { CustomerUtils } from \"../utils/customer-utils\";\n\n\nexport class ImportContactAPI implements IAPI, IMockAPI,ISQLiteAPI {\n    private items : Array<ContactItem>;\n    \n    public setItems(items : Array<ContactItem>) {\n        this.items = items;\n    }\n\n    constructor(private daoFactory: DaoFactory, private customerUtils : CustomerUtils) {\n\n    }\n\n    getAPIName(): string {\n        return 'importContact';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n    \n\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                dao = new ClientCustomDao(dao);\n\n                for(let item of this.items) {\n\n                    let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n\n                    customerObj.setValue(\"LastName\", item.lastname);\n                    customerObj.setValue(\"FirstName\", item.firstname);\n                    customerObj.setValue(\"IsFollow\", \"N\");\n\n                    let birthday = item.birthday;\n                    if (birthday != null) {\n                        customerObj.setValue(\"BirthdayYear\", birthday.getFullYear);\n                        customerObj.setValue(\"BirthdayMonth\", birthday.getMonth);\n                        customerObj.setValue(\"BirthdayDate\", birthday.getDate);\n                    }\n\n                    //set customer default column & value\n                    this.customerUtils.setCustomerDefaultValue(customerObj);\n\n                    //count Completeness\n                    this.customerUtils.countCompleteness(customerObj,item.phones.length,item.emails.length,item.address.length);\n\n                    //insert customer data\n                    dao.transactionInsert(customerObj);\n\n                    //save phone data\n                    for(let phone of item.phones) {\n                        let telType = 'TelHome';\n                        if(phone.type == 'work') {\n                            telType = 'TelWork';\n                        }\n                        else if(phone.type == 'mobile') {\n                            telType = 'TelMobile';\n                        }\n        \n                        let phoneInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                        if (phoneInsertObj) {\n\n                            phoneInsertObj = (<SQLiteTable>phoneInsertObj);\n                            phoneInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            phoneInsertObj.setValue('TelType', telType);\n                            phoneInsertObj.setValue('Tel', phone.number);\n\n                            //insert\n                            dao.transactionInsert(phoneInsertObj);\n                        }                   \n                    }\n        \n                    //save email data\n                    let maxEmailCount = 3;\n                    let importEmailCount = maxEmailCount;\n                    if(item.emails.length < 3) importEmailCount = item.emails.length;\n                    for(let i=0;i<importEmailCount;i++) {\n                        let email = item.emails[i];\n                                                \n                        let emailInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                        if (emailInsertObj) {\n\n                            emailInsertObj = (<SQLiteTable>emailInsertObj);\n                            emailInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n                            emailInsertObj.setValue('EmailType', 'MailHome');\n                            emailInsertObj.setValue('Email', email);\n\n                            //insert\n                            dao.transactionInsert(emailInsertObj);\n                        }\n                    }\n                    \n                    //save address data\n                    for(let address of item.address) {\n                        \n                        let addressType = 'AddressTypeHome';\n                        if(address.type == 'work') {\n                            addressType = 'AddressTypeWork';\n                        }\n        \n                        let addressInsertObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                        if (addressInsertObj) {\n\n                            addressInsertObj = (<SQLiteTable>addressInsertObj);\n                            addressInsertObj.setValue('CustomerClientID', customerObj.getValue('ClientID'));\n\n                            addressInsertObj.setValue('AddressType', addressType);\n                            addressInsertObj.setValue('Zipcode', address.code);\n                            addressInsertObj.setValue('Address', address.address);\n\n                            //insert\n                            dao.transactionInsert(addressInsertObj);\n                        }\n                    }\n        \n                    \n                }\n\n                dao.runTransaction().subscribe((resp) => {\n                    \n                    observer.next(resp);\n                    observer.complete();\n                });\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n\n    }\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { GreaterOrEqualRestriction, LessOrEqualRestriction,  OrderByRestriction, EqualRestriction, ORCompoundRestriction } from '@allianzSND/core';\nimport { getYear, getMonth, getDate, subDays, addDays, setYear } from 'date-fns';\n\nexport class CustomerBirthdayListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _targetDate: Date;\n\n  public isRangeCrossYear: boolean;\n  private _subN : number;\n  private _subNDayTimeStamp: number;\n\n  private _addN : number;\n  private _addNDayTimeStamp: number;\n\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n  set targetDate(targetDate: Date) {\n    this._targetDate = setYear(targetDate, 2000);\n    this._subNDayTimeStamp = subDays(this._targetDate, this._subN).getTime();\n    this._addNDayTimeStamp = addDays(this._targetDate, this._addN).getTime();\n\n\n    if((getYear(this._targetDate) == getYear(this._subNDayTimeStamp)) && (getYear(this._targetDate) == getYear(this._addNDayTimeStamp))) {\n      this.isRangeCrossYear = false;\n    }\n\n    else {\n      this._subNDayTimeStamp = (setYear(this._subNDayTimeStamp, 2000)).getTime();\n      this._addNDayTimeStamp = (setYear(this._addNDayTimeStamp, 2000)).getTime();\n      this.isRangeCrossYear = true;\n    }\n\n    console.warn(this._subN, \"  subDate:  \", this._subNDayTimeStamp);\n    console.warn(this._addN, \"  addDate:  \", this._addNDayTimeStamp);\n  }\n\n  set subN(subN: number) {\n    this._subN = subN;\n  }\n\n  set addN(addN: number) {\n    this._addN = addN;\n  }\n\n\n\n  getAPIName(): string {\n    return 'getCustomerBirthdayList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCustomerBirthday.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let customerObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Customer\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (customerObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n\n        if(this.isRangeCrossYear) {\n          customerObj.addRestriction(new ORCompoundRestriction([new GreaterOrEqualRestriction('BirthDayTimeStamp', [this._subNDayTimeStamp]), new LessOrEqualRestriction('BirthDayTimeStamp', [this._addNDayTimeStamp])]));\n        }\n\n        else {\n          customerObj.addRestriction(new GreaterOrEqualRestriction('BirthDayTimeStamp', [this._subNDayTimeStamp]));\n          customerObj.addRestriction(new LessOrEqualRestriction('BirthDayTimeStamp', [this._addNDayTimeStamp]));\n        }\n\n        customerObj.addRestriction(new OrderByRestriction([{ column: 'LastName', order: 'ASC' }]))\n\n        //customerObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' }]));\n        // calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' },{ column: 'EndTime', order: 'DESC' }]));\n        dao.queryByTable(customerObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n\n      \n\n    });\n  }\n}\n","import { IAPI, IMockAPI, DaoFactory, SQLiteTable, ClientCustomDao, ISQLiteAPI, EqualRestriction } from \"@allianzSND/core\";\nimport { Observable } from 'rxjs';\n\nexport class DashboardUpdateToReadAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _messageType : string;\n    private _messageDataCategory : string;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    public setMessageType(type) {\n        this._messageType = type;\n    }\n\n    public setMessageDataCategory(dataCategory) {\n        this._messageDataCategory = dataCategory;\n    }\n\n\n\n    getAPIName(): string {\n        return 'updateDashboardToRead';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n        \n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n                if (messageObj) {\n                    dao = new ClientCustomDao(dao);\n\n                    messageObj = (<SQLiteTable>messageObj);\n\n                    messageObj.addRestriction(new EqualRestriction('MessageCategory',[this._messageDataCategory]));\n                    messageObj.addRestriction(new EqualRestriction('MessageType',[this._messageType]));\n                    messageObj.setValue(\"Status\", 'Reading');\n\n                    dao.updateByTable(messageObj).subscribe((resp) => {\n                        \n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n"],"names":["APIFactory","tslib_1.__values","state"],"mappings":"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"}
