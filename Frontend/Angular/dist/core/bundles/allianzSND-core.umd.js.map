{"version":3,"file":"allianzSND-core.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@allianzSND/core/lib/bean/LanguageCode.ts","ng://@allianzSND/core/lib/errorHandler/APPError.ts","ng://@allianzSND/core/lib/api/APIFactory.ts","ng://@allianzSND/core/lib/api/APIInvokeMethod.ts","ng://@allianzSND/core/lib/api/impl/MockAPIAccess.ts","ng://@allianzSND/core/lib/injectionToken/injection-token.ts","ng://@allianzSND/core/lib/injectionToken/AOPToken.service.ts","ng://@allianzSND/core/lib/utils/StringUtils.ts","ng://@allianzSND/core/lib/utils/DateUtils.ts","ng://@allianzSND/core/lib/utils/pageInfo.ts","ng://@allianzSND/core/lib/utils/ValidationResult.ts","ng://@allianzSND/core/lib/utils/NumberUtils.ts","ng://@allianzSND/core/lib/utils/TableUtils.ts","ng://@allianzSND/core/lib/device/contact/Address.ts","ng://@allianzSND/core/lib/device/contact/Phone.ts","ng://@allianzSND/core/lib/device/contact/ContactItem.ts","ng://@allianzSND/core/lib/device/CordovaDeviceDao.ts","ng://@allianzSND/core/lib/device/DeviceFactory.ts","ng://@allianzSND/core/lib/device/device.service.ts","ng://@allianzSND/core/lib/auth/login/LoginTokenStore.ts","ng://@allianzSND/core/lib/api/DefaultHeader.ts","ng://@allianzSND/core/lib/notification/INotificationProvider.interface.ts","ng://@allianzSND/core/lib/notification/NotificationObject.ts","ng://@allianzSND/core/lib/notification/NotificationProvider.ts","ng://@allianzSND/core/lib/notification/NotificationMgr.ts","ng://@allianzSND/core/lib/api/impl/RestfulAPIAccess.ts","ng://@allianzSND/core/lib/api/impl/SQLiteAPIAccess.ts","ng://@allianzSND/core/lib/api/impl/DeviceAPIAccess.ts","ng://@allianzSND/core/lib/auth/AuthObject.ts","ng://@allianzSND/core/lib/auth/timeout/timeout.service.ts","ng://@allianzSND/core/lib/api/APIDispatch.ts","ng://@allianzSND/core/lib/device/sqlite/SQLiteResponse.ts","ng://@allianzSND/core/lib/language/translate.service.ts","ng://@allianzSND/core/lib/language/translate.pipe.ts","ng://@allianzSND/core/lib/numberFormat/numberFormat.pipe.ts","ng://@allianzSND/core/lib/auth/login/LoginInfo.ts","ng://@allianzSND/core/lib/auth/login/LoginResponse.ts","ng://@allianzSND/core/lib/utils/routeUtils.ts","ng://@allianzSND/core/lib/route/AppRouter.ts","ng://@allianzSND/core/lib/bean/CommonEnum.ts","ng://@allianzSND/core/lib/auth/login/DefaultLoginMgr.ts","ng://@allianzSND/core/lib/auth/permission/check-permission.service.ts","ng://@allianzSND/core/lib/auth/action/action.service.ts","ng://@allianzSND/core/lib/auth/auth.service.ts","ng://@allianzSND/core/lib/auth/action/action.directive.ts","ng://@allianzSND/core/lib/device/sqlite/SQLiteDatabase.ts","ng://@allianzSND/core/lib/device/sqlite/SQLiteColumn.ts","ng://@allianzSND/core/lib/device/sqlite/SQLiteTable.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/LimitRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/OffsetRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/SQLCommand.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/OrderByRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/SQLiteDao.ts","ng://@allianzSND/core/lib/device/sqlite/WebSQLDao.ts","ng://@allianzSND/core/lib/device/sqlite/DaoFactory.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/NotEqualRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/ClientCustomDao.ts","ng://@allianzSND/core/lib/component/sqlite-executor/sqlite-executor.component.ts","ng://@allianzSND/core/lib/price/translate-price.service.ts","ng://@allianzSND/core/lib/price/translatePrice.pipe.ts","ng://@allianzSND/core/lib/core.module.ts","ng://@allianzSND/core/lib/language/LanguageClass.ts","ng://@allianzSND/core/lib/initTask/tasks/DataSyncTask.ts","ng://@allianzSND/core/lib/bean/Setting.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/AndCompoundRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/EqualRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/GreaterOrEqualRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/GreaterRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/InRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/LessOrEqualRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/LikeRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/NotNullRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/NullRestriction.ts","ng://@allianzSND/core/lib/device/sqlite/restrictions/ORCompoundRestriction.ts","ng://@allianzSND/core/lib/service/setting/setting.service.ts","ng://@allianzSND/core/lib/bean/view-date-change.ts","ng://@allianzSND/core/lib/bean/ProfileCode.ts","ng://@allianzSND/core/lib/bean/versionInfo.ts","ng://@allianzSND/core/lib/bean/SelectOption.ts","ng://@allianzSND/core/lib/bean/SuccessStatus.ts","ng://@allianzSND/core/lib/bean/GoalExtension.ts","ng://@allianzSND/core/lib/bean/SubmitGoalData.ts","ng://@allianzSND/core/lib/bean/SubmitGoalPlan.ts","ng://@allianzSND/core/lib/bean/SubmitGoalPlanInfo.ts","ng://@allianzSND/core/lib/bean/SubmitGoalSettingValue.ts","ng://@allianzSND/core/lib/bean/SubmitGoalInfo.ts","ng://@allianzSND/core/lib/initTask/tasks/ConfigTask.ts","ng://@allianzSND/core/lib/initTask/tasks/DeviceTask.ts","ng://@allianzSND/core/lib/api/register/ProfileCode.ts","ng://@allianzSND/core/lib/api/register/SettingAPI.ts","ng://@allianzSND/core/lib/api/register/ExtensionConfigAPI.ts","ng://@allianzSND/core/lib/api/register/offineAuthAPI.ts","ng://@allianzSND/core/lib/api/register/loginTokenAPI.ts","ng://@allianzSND/core/lib/api/APIRequest.ts","ng://@allianzSND/core/lib/api/register/CheckVersionAPI.ts","ng://@allianzSND/core/lib/api/register/menuAPI.ts","ng://@allianzSND/core/lib/api/register/SettingUpdateAPI.ts","ng://@allianzSND/core/lib/api/register/ContactsSearchAPI.ts","ng://@allianzSND/core/lib/api/register/SyncPushAPI.ts","ng://@allianzSND/core/lib/api/register/SyncPullAPI.ts","ng://@allianzSND/core/lib/api/register/CurrentLanguageListAPI.ts","ng://@allianzSND/core/lib/api/register/BindingAccountAPI.ts","ng://@allianzSND/core/lib/api/register/DeviceAccountAPI.ts","ng://@allianzSND/core/lib/api/register/UpdatePushIDAPI.ts","ng://@allianzSND/core/lib/api/register/syncSequenceIDAPI.ts","ng://@allianzSND/core/lib/api/register/logErrorAPI.ts","ng://@allianzSND/core/lib/api/register/logActionAPI.ts","ng://@allianzSND/core/lib/api/register/pushErrorLogAPI.ts","ng://@allianzSND/core/lib/api/register/PushActionLogAPI.ts","ng://@allianzSND/core/lib/api/register/RouterMapAPI.ts","ng://@allianzSND/core/lib/api/register/getYearConfigAPI.ts","ng://@allianzSND/core/lib/api/register/saveYearConfigAPI.ts","ng://@allianzSND/core/lib/api/register/getAgencyPlanAPI.ts","ng://@allianzSND/core/lib/api/register/saveAgencyPlanAPI.ts","ng://@allianzSND/core/lib/api/register/saveProgressAPI.ts","ng://@allianzSND/core/lib/api/register/getProgressAPI.ts","ng://@allianzSND/core/lib/api/register/MetaConfigAPI.ts","ng://@allianzSND/core/lib/api/register/SettingValueAPI.ts","ng://@allianzSND/core/lib/api/register/getGoalAPI.ts","ng://@allianzSND/core/lib/api/register/saveGoalAPI.ts","ng://@allianzSND/core/lib/api/register/saveActual.ts","ng://@allianzSND/core/lib/api/register/getActual.ts","ng://@allianzSND/core/lib/api/register/pushGoalSettingDataAPI.ts","ng://@allianzSND/core/lib/api/register/pushApproveGoalAPI.ts","ng://@allianzSND/core/lib/api/register/GetDeviceInfoAPI.ts","ng://@allianzSND/core/lib/api/register/LoginAPI.ts","ng://@allianzSND/core/lib/api/register/DashboardGetMessageListAPI.ts","ng://@allianzSND/core/lib/api/register/DashboardUpdateMessageStatusAPI.ts","ng://@allianzSND/core/lib/api/register/changeMessageStatusAPI.ts","ng://@allianzSND/core/lib/api/register/UnbindDeviceAPI.ts","ng://@allianzSND/core/lib/api/register/UpdateTimeListAPI.ts","ng://@allianzSND/core/lib/initTask/tasks/RegisterAPITask.ts","ng://@allianzSND/core/lib/initTask/initial.service.ts","ng://@allianzSND/core/lib/api/APIResponse.ts","ng://@allianzSND/core/lib/api/register/LogoutAPI.ts","ng://@allianzSND/core/lib/api/register/GetOtherParameterAPI.ts","ng://@allianzSND/core/lib/dataSync/version-check.service.ts","ng://@allianzSND/core/lib/dataSync/function/IFunctionSync.ts","ng://@allianzSND/core/lib/dataSync/data-sync.service.ts","ng://@allianzSND/core/lib/service/log/log.service.ts","ng://@allianzSND/core/lib/service/profile/profile-code.service.ts","ng://@allianzSND/core/lib/auth/login/DefaultLoadingApp.ts","ng://@allianzSND/core/lib/interface/routeObject.ts","ng://@allianzSND/core/lib/dataSync/function/CalendarSync.ts","ng://@allianzSND/core/lib/dataSync/function/ContactSync.ts","ng://@allianzSND/core/lib/dataSync/function/CustomerSync.ts","ng://@allianzSND/core/lib/dataSync/function/MessageSync.ts","ng://@allianzSND/core/lib/dataSync/function/GoalExpectedSync.ts","ng://@allianzSND/core/lib/dataSync/function/GoalSync.ts","ng://@allianzSND/core/lib/dataSync/function/ActualSync.ts","ng://@allianzSND/core/lib/dataSync/function/AgencyPlanSync.ts","ng://@allianzSND/core/lib/dataSync/function/ProgressSync.ts","ng://@allianzSND/core/lib/dataSync/function/YearConfigSync.ts","ng://@allianzSND/core/lib/dataSync/function/ProfileCodeSync.ts","ng://@allianzSND/core/lib/route/customRouterReuseStrategy.ts","ng://@allianzSND/core/lib/errorHandler/ErrorsHandler.ts","ng://@allianzSND/core/lib/meta/Meta.service.ts","ng://@allianzSND/core/lib/meta/controller/DisplayMetaController.ts","ng://@allianzSND/core/lib/meta/executor/implements/APIExecutor.ts","ng://@allianzSND/core/lib/meta/executor/implements/InputExecutor.ts","ng://@allianzSND/core/lib/meta/parser/bean/MetaColumn.ts","ng://@allianzSND/core/lib/meta/parser/bean/MetaConfig.ts","ng://@allianzSND/core/lib/meta/parser/bean/MetaSource.ts","ng://@allianzSND/core/lib/meta/parser/bean/MetaGrid.ts","ng://@allianzSND/core/lib/meta/parser/DefaultMetaParser.ts","ng://@allianzSND/core/lib/meta/parser/bean/MetaValid.ts","ng://@allianzSND/core/lib/meta/components/BaseMetaComponent.ts","ng://@allianzSND/core/lib/meta/components/DisplayMetaComponent.ts","ng://@allianzSND/core/lib/meta/components/FormMetaComponent.ts","ng://@allianzSND/core/lib/valid/ValidController.ts","ng://@allianzSND/core/lib/valid/ValidProperty.ts","ng://@allianzSND/core/lib/valid/ValidBean.ts","ng://@allianzSND/core/lib/valid/decorator/Bean.ts","ng://@allianzSND/core/lib/valid/condition/ValidCondition.interface.ts","ng://@allianzSND/core/lib/valid/condition/RequiredCondition.ts","ng://@allianzSND/core/lib/valid/decorator/Required.ts","ng://@allianzSND/core/lib/valid/decorator/Valid.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class LanguageCode{\n  private _languageID : string;\n  private _name : string;\n  private _isDefault : string;\n\n  constructor(id,name,isDefault) {\n    this._languageID = id;\n    this._name = name;\n    this._isDefault = isDefault;\n  }\n\n  get getLanguageID() {\n    return this._languageID;\n  }\n\n  get getName() {\n    return this._name;\n  }\n\n  get getIsDefault() {\n    return this._isDefault;\n  }\n}\n","export class APPError extends Error {\n    constructor(code: string, message: string) {\n        super(message);\n        this.message = `CODE ${code} - ${message}`;\n        this.name = `APPError`;\n        this.code = code;\n    }\n    public name = '';\n    public message = '';\n    public code = '';\n}","import { IAPI } from './API.interface';\nimport { Injectable, ErrorHandler } from '@angular/core';\nimport { APPError } from '../errorHandler/APPError';\n\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class APIFactory {\n\n    private apiMap: Map<string, IAPI>;\n\n    private constructor(\n        private errorHandler: ErrorHandler\n    ) {\n        this.apiMap = new Map();\n    }\n\n\n    registerAPI(api: IAPI) {\n        this.apiMap.set(api.getAPIName(), api);\n    }\n\n    unRegisterAPI(api: IAPI) {\n        this.apiMap.delete(api.getAPIName());\n    }\n\n    getAPI(apiName: string): IAPI {\n        let target = this.apiMap.get(apiName);\n        if (target) {\n            console.group(\"get API:\")\n            console.log(\"target:\", target);\n            let newInstance = Object.create(Object.getPrototypeOf(target));\n            newInstance.constructor.apply(newInstance);\n            newInstance = Object.assign(newInstance, target);\n            console.log(\"new instance:\", newInstance);\n            console.groupEnd();\n            return newInstance;\n        }\n        else {\n            console.log(`API ${apiName} not found!`);\n            this.errorHandler.handleError(new APPError(\"F00013\", `Cannot find API ${apiName}.`));\n            return null;\n        }\n    }\n\n}","export enum APIInvokeMethod{\n    MOCK,\n    SQLite,\n    Restful,\n    ONOFFSwitch,\n    Device\n}","import { Injectable, ErrorHandler } from '@angular/core';\n\nimport { IAPIAccess } from '../APIAccess.interface';\nimport { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Observer, throwError } from 'rxjs';\nimport { APPError } from '../../errorHandler/APPError';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MockAPIAccess implements IAPIAccess {\n\n    constructor(\n        private httpService: HttpClient,\n        private errorHandler: ErrorHandler\n    ) { }\n\n    access(api: IAPI): Observable<any> {\n        return this.httpService.get((<IMockAPI>api).getMockPath()).pipe\n            (catchError(error => { this.errorHandler.handleError(new APPError(\"F00016\", error.message)); return throwError(error) })\n            )\n    }\n}","import { InjectionToken } from '@angular/core';\nimport { IInitTask } from '../initTask/interface/InitialTask.interface';\nimport { checkTimeout } from '../auth/timeout/checkTimeout.interface';\nimport { checkPermission } from '../auth/permission/checkPermission.interface';\nimport { ILoginMgr } from '../auth/login/LoginMgr.interface';\nimport { IregisterDataSyncFunc } from '../initTask/interface/registerDataSyncFunc.interface';\nimport { fetchLanguageFinish } from '../initTask/interface/fetchLanguageFinish.interface';\nimport { fetchSettingFinish } from '../initTask/interface/fetchSettingFinish.interface';\nimport { fetchConfigFinish } from '../initTask/interface/fetchConfigFinish.interface';\nimport { checkRoot } from '../initTask/interface/checkRoot.interface';\nimport { AfterLogin } from '../auth/login/AfterLogin.interface';\nimport { IAuthAction, IAuthRoute, LoadingApp, PushIDMgr } from '../auth';\nimport { GoalSettingInterface } from '../interface/goal-setting.interface';\nimport { RestHeader } from '../api/RestHeader.interface';\nimport { ILanguageAccess } from '../language/ILanguageAccess';\nimport { NetworkChange } from '../device/NetworkChange.interface';\nimport { timeoutAction } from '../auth/timeout/timeoutAction.interface';\nimport { ILanguageUpdate } from '../language/ILanguageUpdate';\nimport { changeFontSize } from '../interface/changeFontSize.interface';\nimport { showRule } from \"../interface/showRule.interface\";\nimport { IFontSizeAccess } from '../interface/IFontSizeAccess.interface';\nimport { initialFinish } from '../initTask/interface/initialFinish.interface';\nimport { INotificationAction } from '../notification/INotificationAction.interface';\nimport { INotificationProvider } from '../notification';\nimport { ExtensionData } from '../interface/ExtensionData.interface';\nimport { ExtensionFactory } from '../interface';\nimport { IActionDirectiveTask } from '../interface/ActionDirectiveTask.interface';\n\n\nexport const ConfigToken = new InjectionToken<Object>('APP_CONFIG');\nexport const GoalSettingInterfaceToken = new InjectionToken<GoalSettingInterface>('');\n\n\n//Initial Task Token\nexport const configTaskToken = new InjectionToken<IInitTask>('configTask');\nexport const registerAPITaskToken = new InjectionToken<IInitTask>('registerAPITask');\nexport const dataSyncTaskToken = new InjectionToken<IInitTask>('dataSyncTask');\nexport const customTaskToken = new InjectionToken<IInitTask>('customTaskToken');\n\n//Config finsish token\nexport const fetchLanguageFinishToken = new InjectionToken<fetchLanguageFinish>('fetchLanguageFinish');\nexport const fetchSettingFinishToken = new InjectionToken<fetchSettingFinish>('fetchSettingFInish');\nexport const fetchConfigFinishToken = new InjectionToken<fetchConfigFinish>('fetchConfigFinish');\n//Data sync register Func Token\nexport const registerDataSyncFuncToken = new InjectionToken<IregisterDataSyncFunc>('registerDataSyncFunc');\n//check timeout token\nexport const checkTimeoutToken = new InjectionToken<checkTimeout>('checkTimeout');\n//timeout action token\nexport const timeoutActionToken = new InjectionToken<timeoutAction>('timeoutAction');\n//check permission token\nexport const checkPermissionToken = new InjectionToken<checkPermission>('checkPermission');\n//auth action token\nexport const authActionToken = new InjectionToken<IAuthAction>('authAction');\n//auth route token\nexport const authRouteToken = new InjectionToken<IAuthRoute>('authRoute');\n//after login action token\nexport const AfterLoginToken = new InjectionToken<AfterLogin>(\"AfterLogin\");\n//do loading token\nexport const LoadingAppToken = new InjectionToken<LoadingApp>(\"LoadingApp\");\n//Login Manager token\nexport const LoginMgrToken = new InjectionToken<ILoginMgr>('LoginMgr');\n//PushID Manager token\nexport const PushIDMgrToken = new InjectionToken<PushIDMgr>('PushIDMgrToken');\n//check root token\nexport const checkForRootToken = new InjectionToken<checkRoot>(\"CheckForRoot\");\n//get header token\nexport const RestHeaderToken = new InjectionToken<RestHeader>(\"RestHeader\");\n//access language\nexport const LanguageAccessToken = new InjectionToken<ILanguageAccess>('LanguageAccess');\n//update language\nexport const LanguageUpdateToken = new InjectionToken<ILanguageUpdate>('LanguageUpdate');\n//network change token\nexport const NetworkChangeToken = new InjectionToken<NetworkChange>('NetworkChange');\n//change font size token\nexport const FontSizeAccessToken = new InjectionToken<IFontSizeAccess>('FontSizeAccess');\nexport const changeFontSizeToken = new InjectionToken<changeFontSize>('changeFontSize');\n//showrule\nexport const showRuleToken = new InjectionToken<showRule>(\"showRule\");\n\n//initialFinish\nexport const initialFinishToken = new InjectionToken<initialFinish>(\"initialFinish\");\n\nexport const NotificationProviderToken = new InjectionToken<INotificationProvider>(\"NotificationProvider\");\n// Notification Action\nexport const GoalSettingNotStartFirstMessageActionToken = new InjectionToken<INotificationAction>('GoalSettingNotStartMessageAction');\nexport const GoalSettingNotStartMessageActionToken = new InjectionToken<INotificationAction>('GoalSettingNotStartMessageAction');\nexport const NeedGoalSettingMessageActionToken = new InjectionToken<INotificationAction>('NeedGoalSettingMessage');\nexport const GoalPromoSettingMessageActionToken = new InjectionToken<INotificationAction>('GoalPromoSettingMessageAction');\nexport const GoalAutoApproveMessageActionToken = new InjectionToken<INotificationAction>('GoalAutoApproveMessageAction');\nexport const GoalAutoApproveLeaderMessageActionToken = new InjectionToken<INotificationAction>('GoalAutoApproveLeaderMessageAction');\nexport const ApproveGoalIsRejectMessageActionToken = new InjectionToken<INotificationAction>('ApproveGoalIsRejectMessageAction');\nexport const ApproveGoalIsApproveMessageActionToken = new InjectionToken<INotificationAction>('ApproveGoalIsApproveMessageAction');\nexport const PendingReviewMessageActionToken = new InjectionToken<INotificationAction>('PendingReviewMessageAction');\nexport const SupervisorHaveChangeAgentMessageActionToken = new InjectionToken<INotificationAction>('SupervisorHaveChangeAgentMessageAction');\nexport const SupervisorHaveChangeOldMessageActionToken = new InjectionToken<INotificationAction>('SupervisorHaveChangeOldMessageAction');\nexport const SupervisorHaveChangeNewMessageActionToken = new InjectionToken<INotificationAction>('SupervisorHaveChangeNewMessageAction');\nexport const GoalAutoRejectMessageActionToken = new InjectionToken<INotificationAction>('GoalAutoRejectMessageAction');\nexport const GoalAutoRejectLeaderMessageActionToken = new InjectionToken<INotificationAction>('GoalAutoRejectLeaderMessageAction');\nexport const ActivityArriveTenPointMessageActionToken = new InjectionToken<INotificationAction>('ActivityArriveTenPointMessageAction');\nexport const ActivityArriveTwentyPointMessageActionToken = new InjectionToken<INotificationAction>('ActivityArriveTwentyPointMessageAction');\nexport const ActivityNotArriveTwentyPointMessageActionToken = new InjectionToken<INotificationAction>('ActivityNotArriveTwentyPointMessageAction');\nexport const ReminderEventsMessageActionToken = new InjectionToken<INotificationAction>('ReminderEventsMessageAction');\nexport const DataPrivacyProtectionMessageActionToken = new InjectionToken<INotificationAction>('DataPrivacyProtectionMessageAction');\nexport const OvertimeMessageActionToken = new InjectionToken<INotificationAction>('OvertimeMessageAction');\nexport const AutoDeleteMessageActionToken = new InjectionToken<INotificationAction>('AutoDeleteMessageAction');\nexport const OfflineMessageActionToken = new InjectionToken<INotificationAction>('OfflineMessageAction');\nexport const VersionCheckMessageActionToken = new InjectionToken<INotificationAction>('VersionCheckMessageAction');\nexport const TimoutMessageActionToken = new InjectionToken<INotificationAction>('TimoutMessageAction');\nexport const DataCollectionMessageActionToken = new InjectionToken<INotificationAction>('DataCollectionMessageAction');\nexport const ContactPermissionActionToken = new InjectionToken<INotificationAction>('ContactPermissionAction');\n\n//Extension Data \nexport const yearConfigExtensionDataToken = new InjectionToken<ExtensionFactory>(\"ExtensionFactory\");\nexport const goalSettingExtensionDataToken = new InjectionToken<ExtensionFactory>(\"ExtensionFactory\");\nexport const agencyPlanExtensionDataToken = new InjectionToken<ExtensionFactory>(\"ExtensionFactory\");\n//export const goalSettingValueExtensionDataToken = new InjectionToken<ExtensionFactory>(\"ExtensionFactory\");\n\n//actionDirectiveTask\nexport const actionDirectiveTaskToken = new InjectionToken<IActionDirectiveTask>(\"IActionDirectiveTask\")\n","import { Injectable, InjectionToken } from \"@angular/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AOPTokenService {\n    private tokenMap: Map<string, InjectionToken<any>>;\n    constructor() {\n        this.tokenMap = new Map();\n    }\n\n    registerToken(name: string, token: InjectionToken<any>) {\n        this.tokenMap.set(name, token);\n    }\n\n    getToken(name: string): InjectionToken<any> {\n        return this.tokenMap.get(name);\n    }\n}","export class StringUtils {\n  private static readonly matchEnglishRegExp = \"[a-zA-Z]+\";\n  private static readonly matchChineseRegExp = \"[\\\\u4e00-\\\\u9fa5]+|['ã§']+\";\n  private static readonly matchNumberRegExp = \"[0-9]+\";\n  constructor() {\n  }\n\n  public static isNotEmpty(val): boolean {\n    return val !== '' && val !== null && val !== undefined && val !== 'null' && val !== 'NULL';\n  }\n\n  public static trim(val): string {\n    if (this.isEmpty(val)) return '';\n    else return val.trim();\n  }\n\n  public static isEmpty(val): boolean {\n    if (this.isNotEmpty(val))\n      return false;\n    else\n      return true;\n  }\n\n  public static convertEmptyVal(val): string {\n    if (this.isNotEmpty(val))\n      return val;\n    else\n      return '';\n  }\n\n  public static byteLength(val): number {\n    let byteLen = 0;\n    if (val && val.length) {\n      for (let i = 0; i < val.length; i++) {\n        if ((val.charCodeAt(i) & 0xff00) != 0) {\n          byteLen++;\n        }\n        byteLen++;\n      }\n    }\n    return byteLen;\n  }\n\n  public static isHasEnglish(val: string): boolean {\n    return !!val && val.match(this.matchEnglishRegExp) !== null;\n  }\n\n  public static isAllEnglish(val: string): boolean {\n    let result = val && val.match(this.matchEnglishRegExp);\n    return !!result && result[0].length === val.length;\n  }\n\n  public static isHasChinese(val: string): boolean {\n    return !!val && val.match(this.matchChineseRegExp) !== null;\n  }\n\n  public static isAllChinese(val: string): boolean {\n    let result = val && val.match(this.matchChineseRegExp);\n    return !!result && result[0].length === val.length;\n  }\n\n  public static getEnglishCharCount(val: string): number {\n    let result = val && val.match(this.matchEnglishRegExp);\n    return result ? result[0].length : 0;\n  }\n\n  public static getChineseCharCount(val: string): number {\n    let result = val && val.match(this.matchChineseRegExp);\n    return result ? result[0].length : 0;\n  }\n\n  public static getNumberCharCount(val: string): number {\n    let result = val && val.match(this.matchNumberRegExp);\n    return result ? result[0].length : 0;\n  }\n\n  public static isHasThai(val: string): boolean {\n    if (!val) {\n      val = '';\n    }\n    let count = 0;\n    val.split('').forEach(item => {\n      if (item.charCodeAt(0) > 3584 && item.charCodeAt(0) < 3711) {\n        count++;\n      }\n    });\n\n    return count > 0;\n\n  }\n\n\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class DateUtils{\n\n    constructor(private datePipe : DatePipe) {}\n\n    toDateString(date : Date, format : string) {\n        if(date != undefined) {\n          return this.datePipe.transform(date,format);\n        }\n    }\n}","export class PageInfo{\n    private _pageSize : number = 10;\n    private _page : number = 1;\n    private _totalRec: number;\n    \n\n    private _totalPage : number;\n\n    resetPage() {\n        this._page = 1;\n    }\n\n    get pageSize() {\n        return this._pageSize;\n    }\n\n    set pageSize(pageSize : number) {\n        this._pageSize = pageSize;\n    }\n\n    get totalRec(): number {\n        return this._totalRec;\n    }\n\n    set totalRec(totalRec : number) {\n        this._totalRec = totalRec;\n    }\n\n    get totalPage() {\n        return this._totalPage;\n    }\n\n    set totalPage(totalPage : number) {\n        this._totalPage = totalPage;\n    }\n\n    get page() {return this._page}\n\n    nextPage() {\n        this._page++;\n    }\n}","export class ValidationResult{\n    private errorMap : Map<string,string> = new Map<string,string>();\n\n    setErrorMap(name: string,errorMsg: string) {\n      this.errorMap.set(name, errorMsg);\n    }\n\n    deleteError(name: string) {\n      this.errorMap.delete(name);\n    }\n\n    isTrue() : boolean {\n      return (this.errorMap.size == 0)\n    }\n\n    isError(name : string) : boolean {\n        return this.errorMap.get(name) != undefined;\n    }\n\n    getErrorMsg(name:string) : string {\n        return this.errorMap.get(name);\n    }\n\n    clearErrorMap() {\n      this.errorMap.clear();\n    }\n}\n","import { StringUtils } from \"./StringUtils\";\n\nexport class NumberUtils {\n    constructor() {\n    }\n\n    public static isNumber(val) {\n        if(StringUtils.isNotEmpty(val)){\n            return !isNaN(Number(val));\n        }else{\n            return false;\n        }\n    }\n\n    public static isDecimal(val) {\n        let result = false;\n        if (this.isNumber(val)) {\n            if (val.toString().indexOf('.') != -1) {\n                result = true;\n            }\n        }\n        return result;\n    }\n\n    public static isPositive(val) {\n        let result = false;\n        console.log('this.isNumber(val)', this.isNumber(val));\n        if (this.isNumber(val)) {\n            if (Number(val) > 0 || Number(val) == 0) {\n                console.log('val', val);\n                result = true;\n            }\n        }\n        return result;\n    }\n\n    public static isPositiveInt(val) {\n        let result = false;\n        if (!this.isDecimal(val)) {\n            if (Number(val) >= 0) {\n                result = true;\n            }\n        }\n        return result;\n    }\n\n    static numberToFix(n: number, toFix: number): number {\n        let fix10 = Math.pow(10, toFix);\n        return Math.round(this.strip(n) * fix10) / fix10;\n    }\n\n    static strip(num, precision = 12) {\n        return Number(num.toPrecision(precision));\n    }\n\n}","import { SQLiteTable } from \"../device/sqlite/SQLiteTable\";\n\nexport class TableUtils {\n    static fillTableColumn(tableObject: SQLiteTable, data: any): SQLiteTable {\n        let columns = tableObject.getColumns().map(x => x.getName()).filter(x => x !== 'ClientID');\n        if (data != undefined) {\n            if (columns.length > 0) {\n                for (let col of columns) {\n                    if (data[col] != undefined)\n                        tableObject.setValue(col, data[col]);\n                }\n            }\n        }\n        return tableObject;\n    }\n}\n\n","export class Address {\n    private _type: string;\n    private _city: string;\n    private _area: string;\n    private _code: string;\n    private _address: string;\n\n    constructor(type, city, area, code, address) {\n        this._type = type;\n        this._city = city;\n        this._area = area;\n        this._code = code;\n        this._address = address;\n    }\n\n    public get type(): string {\n        return this._type;\n    }\n    public set type(value: string) {\n        this._type = value;\n    }\n    public get city(): string {\n        return this._city;\n    }\n    public set city(value: string) {\n        this._city = value;\n    }\n    public get area(): string {\n        return this._area;\n    }\n    public set area(value: string) {\n        this._area = value;\n    }\n    public get code(): string {\n        return this._code;\n    }\n    public set code(value: string) {\n        this._code = value;\n    }\n    public get address(): string {\n        return this._address;\n    }\n    public set address(value: string) {\n        this._address = value;\n    }\n}","export class Phone {\n    private _type: string;\n    private _number: string;\n    public get number(): string {\n        return this._number;\n    }\n    public set number(value: string) {\n        this._number = value;\n    }\n    public get type(): string {\n        return this._type;\n    }\n    public set type(value: string) {\n        this._type = value;\n    }\n\n    constructor(type, number) {\n        this._type = type;\n        this._number = number;\n    }\n\n}","import { Address } from \"./Address\";\nimport { Phone } from \"./Phone\";\n\nexport class ContactItem {\n    private _firstname: string;\n    private _lastname: string;\n    private _phones: Array<Phone>;\n    private _emails: Array<string>;\n    private _address: Array<Address>;\n    private _birthday : Date;\n    \n    public _isCheck : boolean = false;\n    public _isShow : boolean = false;\n    constructor(firstname, lastname,birthday, phones, emails, address) {\n        this._firstname = firstname;\n        this._lastname = lastname;\n        this._birthday = birthday;\n        this._phones = phones;\n        this._emails = emails;\n        this._address = address;\n        this._isShow = true;\n    }\n\n    public set Birthday(birthday:Date) {\n        this._birthday = birthday;\n    }\n\n    public get Birthday() {\n        return this._birthday;\n    }\n\n    public set isCheck(check : boolean) {\n        this._isCheck = check;\n    }\n\n    public get isCheck() {\n        return this._isCheck;\n    }\n\n    public set isShow(show : boolean) {\n        this._isShow = show;\n    }\n    public get isShow() {\n        return this._isShow;\n    }    \n    public get FirstName(): string {\n        return this._firstname;\n    }\n    public set FirstName(value: string) {\n        this._firstname = value;\n    }\n    public get LastName(): string {\n        return this._lastname;\n    }\n    public set LastName(value: string) {\n        this._lastname = value;\n    }\n    public get tel(): Array<Phone> {\n        return this._phones;\n    }\n    public set tel(value: Array<Phone>) {\n        this._phones = value;\n    }\n    public get email(): Array<string> {\n        return this._emails;\n    }\n    public set email(value: Array<string>) {\n        this._emails = value;\n    }\n    public get address(): Array<Address> {\n        return this._address;\n    }\n    public set address(value: Array<Address>) {\n        this._address = value;\n    }\n\n    public get fullname(): string {\n        return this.FirstName + ' ' + this.LastName;\n    }\n\n}","import { IDeviceDao } from \"./DeviceDao.interface\";\nimport { Observable } from \"rxjs\";\nimport { Address } from \"./contact/Address\";\nimport { Phone } from \"./contact/Phone\";\nimport { ContactItem } from \"./contact/ContactItem\";\ndeclare var ContactFindOptions;\ndeclare var window;\n\nexport class CordovaDeviceDao implements IDeviceDao {\n    constructor() { }\n\n    public searchcontactsByName(name: string): Observable<any> {\n        var _navigator = (<any>navigator);\n        var fields = [_navigator.contacts.fieldType.displayName, _navigator.contacts.fieldType.name];\n        var options = new ContactFindOptions();\n        options.filter = name;\n        options.multiple = true;\n        options.desiredFields = [_navigator.contacts.fieldType.name, _navigator.contacts.fieldType.emails, _navigator.contacts.fieldType.addresses, _navigator.contacts.fieldType.phoneNumbers];\n        return Observable.create((observer) => {\n            _navigator.contacts.find(fields, (contacts) => {\n                console.log('find contacts results:', contacts);\n                var returnObj = {\n                    \"Body\": []\n                }\n                // var results = [];\n                for (let contact of contacts) {\n                    let firstName = contact.name.givenName || '';\n                    let lastName = contact.name.familyName || '';\n                    let birthday = contact.name.birthday || null;\n                    let emails = contact.emails == null ? [] : contact.emails.map(x => x.value);\n                    let phones = contact.phoneNumbers == null ? [] : contact.phoneNumbers.map(x => new Phone(x.type, x.value.trim()));\n                    let address = contact.addresses == null ? [] : contact.addresses.map(this.convertAddress);\n\n                    returnObj['Body'].push(new ContactItem(firstName, lastName, birthday, phones, emails, address));\n                }\n                observer.next(returnObj);\n                observer.complete();\n            }, (contactError) => {\n                console.log('contacts error:', contactError, options);\n                observer.error(contactError);\n                observer.complete();\n            }, options);\n        })\n    }\n\n    private convertAddress(item): Address {\n        let type = item.type || null;\n        let address = item.streetAddress || null;\n        let area = item.locality || null;\n        let city = item.reigon || null;\n        let code = item.postalCode || null;\n        return new Address(type, city, area, code, address);\n    }\n\n    public async registerNotfiy(): Promise<any> {\n        this.checkNotifyPermission();\n        let token = await this.getFirbaseToken();\n        while (token === null) {\n            await this.waitnseconds(2000);\n            token = await this.getFirbaseToken();\n        }\n        return token;\n    }\n\n    public onNotifyTokenRefresh(callback): void {\n        return window.FirebasePlugin.onTokenRefresh((token) => {\n            callback(token);\n        }, (err) => {\n            console.warn('token refresh error:', err.message);\n        });;\n    }\n\n    public onNotificationOpen(callback): void {\n        window.FirebasePlugin.onMessageReceived((notification) => {\n            callback(notification);\n        }, (err) => {\n            console.warn('notification open error:', err.message);\n        });\n    }\n\n    public subscribeSubject(subject: string): void {\n        window.FirebasePlugin.subscribe(subject);\n    }\n\n    public unsubscribeSubject(subject: string): void {\n        window.FirebasePlugin.unsubscribe(subject);\n    }\n\n    private checkNotifyPermission(): void {\n        window.FirebasePlugin.hasPermission(function (data) {\n            if (!data.isEnabled) {\n                window.FirebasePlugin.grantPermission();\n            }\n        });\n    }\n\n    private getFirbaseToken(): Promise<any> {\n        return new Promise((res, rej) => {\n            window.FirebasePlugin.getToken((token) => {\n                console.log(\"firebase gettoken:\", token);\n                res(token);\n            }, (err) => {\n                console.warn('get token error:', err.message);\n                rej(err);\n            });\n        })\n    }\n\n    private waitnseconds(second): Promise<any> {\n        return new Promise((res, rej) => {\n            setTimeout(() => {\n                res();\n            }, second);\n        })\n    }\n}","import { IDeviceDao } from \"./DeviceDao.interface\";\nimport { CordovaDeviceDao } from \"./CordovaDeviceDao\";\nimport { Injectable } from \"@angular/core\";\n\n\n@Injectable({\n    providedIn:'root'\n})\nexport class DeviceFactory {\n    private daoMap: Map<string, IDeviceDao> = new Map();\n    private constructor() {\n        this.daoMap.set(\"cordova\", new CordovaDeviceDao());\n    }\n    public getDefaultDao(): IDeviceDao {\n        return this.getDao(\"cordova\");\n    }\n\n    public getDao(name: string): IDeviceDao {\n        return this.daoMap.get(name);\n    }\n\n\n\n}","import { Injectable, Injector, Optional, Inject, ErrorHandler } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { StringUtils } from '../utils'\nimport { ConfigToken } from '../injectionToken';\nimport { DeviceFactory } from './DeviceFactory';\nimport { v4 as uuid } from 'uuid';\nimport { UnbindDeviceAPI } from '../api/register/UnbindDeviceAPI';\nimport { APIFactory } from '../api/APIFactory';\nimport { APIDispatch } from '../api/APIDispatch';\n\ndeclare var device;\ndeclare var navigator;\ndeclare var cordova;\ndeclare var IRoot;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceService {\n\n  constructor(\n    private injector: Injector,\n    private deviceFactory: DeviceFactory,\n    @Optional() @Inject(ConfigToken) private APP_CONFIG: any) {\n    let env = this.APP_CONFIG.ENV;\n    this.SSL_fingerprints = this.APP_CONFIG[env].SSL_FINGERPRINTS;\n    if (env === 'DEV_WebSQL')\n      this.initDeviceID().then((id) => {\n        this.deviceID = id;\n      });\n  };\n\n  private SSL_fingerprints = [];\n  private _isPad: boolean;\n  private deviceID: string = null;\n  private mock_deviceID: string = uuid();\n\n  public async initDeviceAPI() {\n    window.open = cordova.InAppBrowser.open;\n    this._isPad = this.judgePad();\n    this.lockScreenOrient();\n    this.disableBackBtn();\n    this.deviceID = await this.initDeviceID();\n  }\n  public getDevicePlatform(): string {\n    let platform = null;\n    try {\n      platform = device.platform;\n    }\n    catch (error) {\n      console.log('cannot get platform, beacause maynot on device.');\n      platform = 'PC';\n      //this.errorHandler.handleError(error);\n    }\n    finally {\n      return platform;\n    }\n  }\n\n  public getDeviceUUID(): string {\n    if (this.deviceID)\n      return this.deviceID;\n  }\n\n  private _getDeviceUUID(): string {\n    let uuid = null;\n    try {\n      uuid = device.uuid;\n    }\n    catch (error) {\n      console.log('cannot get UUID, beacause maynot on device.');\n      uuid = this.mock_deviceID;\n      //this.errorHandler.handleError(error);\n    }\n    finally {\n      return uuid;\n    }\n\n  }\n\n  private async initDeviceID(): Promise<string> {\n    let deviceID = this._getDeviceUUID();\n    try {\n      let resp = await this.getSecureStorage(\"deviceID\").toPromise();\n      console.log(\"getDeviceID from KeyStore resp:\", resp);\n      if (resp.includes(\"Device is not secure\")) { //which Device is not secure\n        throw new Error(resp);\n      } else if (resp) { // if have key in keyStore/keyChain\n        return resp;\n      } else {\n        let setKeyResp = await this.setSecureStorage(\"deviceID\", deviceID).toPromise();\n        if (setKeyResp) {\n          let key = await this.getSecureStorage(\"deviceID\").toPromise();\n          return key;\n        }\n      }\n    } catch (error) {\n      console.log(\"getDeviceID error, use localStorage\");\n      if (this.getLocalStorage(\"deviceID\")) {\n        return this.getLocalStorage(\"deviceID\");\n      } else {\n        this.setLocalStorage(\"deviceID\", deviceID);\n        return deviceID;\n      }\n    }\n  }\n\n  public getDeviceManufacturer(): string {\n    let manufacturer = null;\n    try {\n      manufacturer = `${device.manufacturer} ${device.model}`;\n    }\n    catch (error) {\n      console.log('cannot get Manufacturer, beacause maynot on device.');\n      manufacturer = \"PC Browser\";\n      // this.errorHandler.handleError(error);\n    }\n    finally {\n      return manufacturer;\n    }\n  }\n\n  public restartApp() {\n    try {\n      // navigator.splashscreen.show();\n      window.location.reload(true);\n      window.location.assign('index.html');\n      // navigator.splashscreen.hide();\n    }\n    catch (error) {\n      console.log('restart error');\n      //this.errorHandler.handleError(error);\n    }\n  }\n\n  public getNetworkState(): boolean {\n    if (navigator && navigator.connection) {\n      let networkState = navigator.connection.type;\n      console.log('networkState:', networkState);\n      return networkState != 'none';\n    }\n    else\n      return true;\n  }\n\n  public async searchContactsByName(word: string) {\n    let dao = this.deviceFactory.getDefaultDao();\n    try {\n      let resp = await dao.searchcontactsByName('').toPromise();\n      console.log('search Contact result:', resp);\n      let contacts = resp['Body'];\n\n      for (let item of contacts) {\n        if (StringUtils.isEmpty(item.l))\n          item.isCheck = false;\n      }\n      return contacts;\n    } catch (error) {\n      console.log('error:', error);\n      return error\n    }\n  }\n\n  public dialNumber(num: string): void {\n    window.open('tel:' + num.replace(/\\s/g, ''), '_system');\n  }\n\n  public checkIfRoot(): Promise<boolean> {\n\n    return new Promise((res, rej) => {\n      try {\n        console.log(\"iroot:\", IRoot);\n        if (IRoot !== undefined) {\n          IRoot.isRooted((result) => {\n            res(result);\n          }, (error) => {\n            rej(error);\n          });\n        }\n        else {\n          throw new Error(\"iRoot plugin error.\");\n        }\n      } catch (error) {\n        res(false);\n      }\n    })\n  }\n\n  public exitApp(): void {\n    cordova.plugins.exit();\n    // navigator.app.exitApp();\n  }\n\n  public getAppVersion(): Promise<string> {\n    try {\n      return cordova.getAppVersion.getVersionNumber();\n    }\n    catch (error) {\n      //this.errorHandler.handleError(error);\n      return Promise.resolve(\"1.0.3\");//1.0.0\n    }\n  }\n\n  public getIsFirstLaunch() {\n    return this.getLocalStorage(\"AppFirstLaunch\") === 'N' ? false : true;\n  }\n\n  public setLocalStorage(key: string, value: string) {\n    window.localStorage.setItem(key, value);\n  }\n\n  public getLocalStorage(key: string): string {\n    return window.localStorage.getItem(key);\n  }\n\n\n\n  private lockScreenOrient(): void {\n    let orientation = this.isPad() ? 'landscape' : 'portrait-primary';\n    (<any>window).screen.orientation.lock(orientation);\n  }\n\n  public judgePad(): boolean {\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    console.log('width:', width);\n    console.log('height:', height);\n    if (width < 700 || height < 700) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n  public isPad() {\n    return this._isPad;\n  }\n\n\n  public setSecureStorage(key: string, value: string): Observable<boolean> {\n    return Observable.create((observer) => {\n      let ss = new cordova.plugins.SecureStorage(\n        function () {\n          ss.set(\n            function () {\n              observer.next(true);\n              observer.complete();\n            },\n            function (error) {\n              observer.next(false);\n              observer.complete();\n            },\n            key,\n            value\n          );\n        },\n        function (error) {\n          observer.next(false);\n          observer.complete();\n        },\n        \"Allianz_SND\"\n      );\n    });\n  }\n\n  public getSecureStorage(key: string): Observable<string> {\n    return Observable.create((observer) => {\n      let ss = new cordova.plugins.SecureStorage(\n        function () {\n          ss.get(\n            function (key) {\n              observer.next(key);\n              observer.complete();\n            },\n            function () {\n              observer.next(null);\n              observer.complete();\n            },\n            key\n          )\n        },\n        function (error) {\n          observer.next(error.message);\n          observer.complete();\n        },\n        \"Allianz_SND\"\n      )\n    })\n  }\n\n  public checkSSL(url): Promise<any> {\n    if (this.SSL_fingerprints.length == 0)\n      return Promise.resolve(true);\n    else\n      return new Promise((res, rej) => {\n        (<any>window).plugins.sslCertificateChecker.check(\n          (message) => {\n            if (message === 'CONNECTION_SECURE')\n              res(true);\n          },\n          (error) => {\n            rej(error);\n          },\n          url,\n          this.SSL_fingerprints);\n      })\n  }\n\n  public takeScreenShot() {\n    let _this = this;\n    (<any>navigator).screenshot.save(function (error, res) {\n      if (error) {\n        //todo throw error\n        console.warn(error);\n      } else {\n        console.log('testScreenShot success', res.filePath);\n        console.warn('getDevicePlatform', _this.getDevicePlatform());\n        if (_this.getDevicePlatform() == \"iOS\")\n          (<any>cordova).plugins.imagesaver.saveImageToGallery(res.filePath, function () { console.log(\"success\") }, function (err) { console.log(err) });\n      }\n    });\n  }\n\n  public disableBackBtn() {\n    document.addEventListener(\"backbutton\", function (e) {\n      e.preventDefault();\n    }, false);\n  }\n\n  public checkContactPermission(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      (<any>cordova).plugins.CheckPermission.checkContactPermission('contact',\n        function (msg) {\n          resolve(msg)\n        },\n        function (error) {\n          reject(error);\n        })\n    });\n  }\n\n  public grantContactPermission() {\n    (<any>cordova).plugins.CheckPermission.grantContactPermission()\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Subject, BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginTokenStore {\n\n    private token = '';\n    private tokenSubject: Subject<string> = new BehaviorSubject(this.token);\n    constructor() { }\n\n    setToken(token: string): void {\n        this.token = token;\n        this.tokenSubject.next(this.token);\n    }\n\n    getToken(): Observable<string> {\n        return this.tokenSubject.asObservable();\n    }\n}","\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { Injectable, Optional, Inject } from \"@angular/core\";\nimport { DefaultLoginMgr } from \"../auth/login/DefaultLoginMgr\";\nimport { ILoginMgr } from \"../auth/login/LoginMgr.interface\";\nimport { RestHeader } from \"./RestHeader.interface\";\nimport { DeviceService } from \"../device/device.service\";\nimport { LoginMgrToken } from \"../injectionToken/injection-token\";\nimport { LoginTokenStore } from \"../auth/login/LoginTokenStore\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class defaultHeader implements RestHeader {\n\n    private token = '';\n    private version = '';\n    constructor(\n        private deviceService: DeviceService,\n        private tokenStore: LoginTokenStore,\n        @Optional() @Inject(LoginMgrToken) private customLoginMgr: ILoginMgr\n    ) {\n        if (this.customLoginMgr) {\n            this.customLoginMgr.getToken().subscribe((token) => {\n                this.token = token;\n            })\n        }\n        else {\n            this.tokenStore.getToken().subscribe((token) => {\n                this.token = token;\n            })\n        }\n        this.deviceService.getAppVersion().then((ver) => {\n            this.version = ver;\n        })\n    }\n\n    getHeader(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + this.token,\n            'X-Date': new Date().toUTCString(),\n            'X-Request-ID': Date.now().toString(),\n            'X-Organization': '1',\n            'X-Organization-Branch': '1',\n            'X-Organization-User': '1',\n            'X-API-Version': this.version,\n        })\n    }\n}","import { NotificationObject } from \"./NotificationObject\";\n\nexport enum NotificationType {\n    GoalSettingNotStartFirst = \"GoalSettingNotStartFirst\",\n    GoalSettingNotStart = \"GoalSettingNotStart\",\n    NeedGoalSetting = \"NeedGoalSetting\",\n    GoalPromoSetting = \"GoalPromoSetting\",\n    GoalAutoApprove = \"GoalAutoApprove\",\n    GoalAutoApproveLeader = \"GoalAutoApproveLeader\",\n    ApproveGoalIsReject = \"ApproveGoalIsReject\",\n    ApproveGoalIsApprove = \"ApproveGoalIsApprove\",\n    PendingReview = \"PendingReview\",\n    SupervisorHaveChangeAgent = \"SupervisorHaveChangeAgent\",\n    SupervisorHaveChangeOld = \"SupervisorHaveChangeOld\",\n    SupervisorHaveChangeNew = \"SupervisorHaveChangeNew\",\n    GoalAutoReject = \"GoalAutoReject\",\n    GoalAutoRejectLeader = \"GoalAutoRejectLeader\",\n    ActivityArriveTenPoint = \"ActivityArriveTenPoint\",\n    ActivityArriveTwentyPoint = \"ActivityArriveTwentyPoint\",\n    ActivityLessThanTwentyPoint = \"ActivityLessThanTwentyPoint\",\n    ReminderEvent = \"ReminderEvent\",\n    DataPrivacyProtection = \"DataPrivacyProtection\",\n    Overtime = \"Overtime\",\n    AutoDelete = \"AutoDelete\",\n    Offline = \"Offline\",\n    OnlineCheck = \"OnlineCheck\",\n    NewVersion = \"NewVersion\",\n    Timeout = \"Timeout\",\n    DataCollection = \"DataCollection\",\n    NewVersionLogin = \"NewVersionLogin\",\n    HTTPError = \"HTTPError\",\n    ContactPermissionError = \"ContactPermissionError\",\n    ScreenShotAlert = \"ScreenShotAlert\",\n    SubmitFail = \"SubmitFail\"\n}\n\nexport enum NotificationCategory {\n    GoalSetting = \"GoalSetting\",\n    Progress = \"Progress\",\n    Calendar = \"Calendar\",\n    Customer = \"Customer\",\n    System = \"System\"\n}\n\nexport interface INotificationProvider {\n    getNotificationObject(type: NotificationType, data: any): NotificationObject\n}","import { v4 as uuid } from 'uuid';\nimport { INotificationAction } from './INotificationAction.interface';\n\nexport class NotificationObject {\n    constructor() {\n        this.category = '';\n        this.type = '';\n        this.id = uuid();\n        this.data = {};\n        this.order = -1;\n        this.action = null;\n    }\n    private _category: string;\n    public get category(): string {\n        return this._category;\n    }\n    public set category(value: string) {\n        this._category = value;\n    }\n    private _type: string;\n    public get type(): string {\n        return this._type;\n    }\n    public set type(value: string) {\n        this._type = value;\n    }\n    private _id: string;\n    public get id(): string {\n        return this._id;\n    }\n    public set id(value: string) {\n        this._id = value;\n    }\n    private _data: any;\n    public get data(): any {\n        return this._data;\n    }\n    public set data(value: any) {\n        this._data = value;\n    }\n    private _order: number;\n    public get order(): number {\n        return this._order;\n    }\n    public set order(value: number) {\n        this._order = value;\n    }\n    private _action: INotificationAction;\n    public get action(): INotificationAction {\n        return this._action;\n    }\n    public set action(value: INotificationAction) {\n        this._action = value;\n    }\n\n}","import { Injectable, Injector, InjectionToken, Optional, Inject } from \"@angular/core\";\nimport { INotificationProvider, NotificationType, NotificationCategory } from \"./INotificationProvider.interface\";\nimport { NotificationObject } from \"./NotificationObject\";\nimport { GoalSettingNotStartMessageActionToken, NeedGoalSettingMessageActionToken, GoalPromoSettingMessageActionToken, GoalAutoApproveMessageActionToken, GoalAutoApproveLeaderMessageActionToken, ApproveGoalIsRejectMessageActionToken, ApproveGoalIsApproveMessageActionToken, PendingReviewMessageActionToken, SupervisorHaveChangeAgentMessageActionToken, SupervisorHaveChangeOldMessageActionToken, SupervisorHaveChangeNewMessageActionToken, GoalAutoRejectMessageActionToken, GoalAutoRejectLeaderMessageActionToken, ActivityArriveTenPointMessageActionToken, ActivityArriveTwentyPointMessageActionToken, ActivityNotArriveTwentyPointMessageActionToken, ReminderEventsMessageActionToken, DataPrivacyProtectionMessageActionToken, OvertimeMessageActionToken, AutoDeleteMessageActionToken, OfflineMessageActionToken, VersionCheckMessageActionToken, TimoutMessageActionToken, NotificationProviderToken, DataCollectionMessageActionToken, GoalSettingNotStartFirstMessageActionToken, ContactPermissionActionToken } from \"../injectionToken/injection-token\";\nimport { INotificationAction } from \"./INotificationAction.interface\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationProvider implements INotificationProvider {\n    constructor(\n        private injector: Injector,\n        @Optional() @Inject(NotificationProviderToken) private customNotificationProvider: INotificationProvider\n    ) {\n\n    }\n\n    private actionMap = [{\n        type: NotificationType.GoalSettingNotStartFirst,\n        category: NotificationCategory.GoalSetting,\n        order: 1,\n        action: GoalSettingNotStartFirstMessageActionToken\n    }, {\n        type: NotificationType.GoalSettingNotStart,\n        category: NotificationCategory.GoalSetting,\n        order: 1,\n        action: GoalSettingNotStartMessageActionToken\n    }, {\n        type: NotificationType.NeedGoalSetting,\n        category: NotificationCategory.GoalSetting,\n        order: 2,\n        action: NeedGoalSettingMessageActionToken\n    }, {\n        type: NotificationType.GoalPromoSetting,\n        category: NotificationCategory.GoalSetting,\n        order: 3,\n        action: GoalPromoSettingMessageActionToken\n    }, {\n        type: NotificationType.GoalAutoApprove,\n        category: NotificationCategory.GoalSetting,\n        order: 4,\n        action: GoalAutoApproveMessageActionToken\n    }, {\n        type: NotificationType.GoalAutoApproveLeader,\n        category: NotificationCategory.GoalSetting,\n        order: 5,\n        action: GoalAutoApproveLeaderMessageActionToken\n    }, {\n        type: NotificationType.ApproveGoalIsReject,\n        category: NotificationCategory.GoalSetting,\n        order: 6,\n        action: ApproveGoalIsRejectMessageActionToken\n    }, {\n        type: NotificationType.ApproveGoalIsApprove,\n        category: NotificationCategory.GoalSetting,\n        order: 7,\n        action: ApproveGoalIsApproveMessageActionToken\n    }, {\n        type: NotificationType.PendingReview,\n        category: NotificationCategory.GoalSetting,\n        order: 8,\n        action: PendingReviewMessageActionToken\n    }, {\n        type: NotificationType.SupervisorHaveChangeAgent,\n        category: NotificationCategory.GoalSetting,\n        order: 9,\n        action: SupervisorHaveChangeAgentMessageActionToken\n    }, {\n        type: NotificationType.SupervisorHaveChangeOld,\n        category: NotificationCategory.GoalSetting,\n        order: 10,\n        action: SupervisorHaveChangeOldMessageActionToken\n    }, {\n        type: NotificationType.SupervisorHaveChangeNew,\n        category: NotificationCategory.GoalSetting,\n        order: 11,\n        action: SupervisorHaveChangeNewMessageActionToken\n    }, {\n        type: NotificationType.GoalAutoReject,\n        category: NotificationCategory.GoalSetting,\n        order: 12,\n        action: GoalAutoRejectMessageActionToken\n    }, {\n        type: NotificationType.GoalAutoRejectLeader,\n        category: NotificationCategory.GoalSetting,\n        order: 13,\n        action: GoalAutoRejectLeaderMessageActionToken\n    }, {\n        type: NotificationType.ActivityArriveTenPoint,\n        category: NotificationCategory.Progress,\n        order: 14,\n        action: ActivityArriveTenPointMessageActionToken\n    }, {\n        type: NotificationType.ActivityArriveTwentyPoint,\n        category: NotificationCategory.Progress,\n        order: 15,\n        action: ActivityArriveTwentyPointMessageActionToken\n    }, {\n        type: NotificationType.ActivityLessThanTwentyPoint,\n        category: NotificationCategory.Progress,\n        order: 16,\n        action: ActivityNotArriveTwentyPointMessageActionToken\n    }, {\n        type: NotificationType.ReminderEvent,\n        category: NotificationCategory.Calendar,\n        order: 17,\n        action: ReminderEventsMessageActionToken\n    }, {\n        type: NotificationType.DataPrivacyProtection,\n        category: NotificationCategory.Customer,\n        order: 18,\n        action: DataPrivacyProtectionMessageActionToken\n    }, {\n        type: NotificationType.Overtime,\n        category: NotificationCategory.Customer,\n        order: 19,\n        action: OvertimeMessageActionToken\n    }, {\n        type: NotificationType.AutoDelete,\n        category: NotificationCategory.Customer,\n        order: 20,\n        action: AutoDeleteMessageActionToken\n    }, {\n        type: NotificationType.Offline,\n        category: NotificationCategory.System,\n        order: 21,\n        action: OfflineMessageActionToken\n    }, {\n        type: NotificationType.OnlineCheck,\n        category: NotificationCategory.System,\n        order: 22,\n        action: null\n    }, {\n        type: NotificationType.NewVersion,\n        category: NotificationCategory.System,\n        order: 23,\n        action: VersionCheckMessageActionToken\n    }, {\n        type: NotificationType.NewVersionLogin,\n        category: NotificationCategory.System,\n        order: 24,\n        action: VersionCheckMessageActionToken\n    }, {\n        type: NotificationType.Timeout,\n        category: NotificationCategory.System,\n        order: 25,\n        action: TimoutMessageActionToken\n    }, {\n        type: NotificationType.DataCollection,\n        category: NotificationCategory.System,\n        order: 26,\n        action: DataCollectionMessageActionToken\n    }, {\n        type: NotificationType.HTTPError,\n        category: NotificationCategory.System,\n        order: 27,\n        action: null\n    }, {\n        type: NotificationType.ContactPermissionError,\n        category: NotificationCategory.System,\n        order: 28,\n        action: ContactPermissionActionToken\n    }, {\n        type: NotificationType.ScreenShotAlert,\n        category: NotificationCategory.System,\n        order: 29,\n        action: null\n    }, {\n        type: NotificationType.SubmitFail,\n        category: NotificationCategory.System,\n        order: 30,\n        action: null\n    }]\n\n    getNotificationObject(type: NotificationType, data: any, id: string = null): NotificationObject {\n        if (this.customNotificationProvider) {\n            return this.customNotificationProvider.getNotificationObject(type, data);\n        }\n        else {\n            let obj = new NotificationObject();\n            if (id)\n                obj.id = id;\n            obj.data = data;\n            let findedType = this.actionMap.filter(x => x.type === type);\n            if (findedType.length > 0) {\n                obj.order = findedType[0].order;\n                obj.category = findedType[0].category;\n                obj.type = findedType[0].type;\n                obj.action = this.getAction(findedType[0].action);\n            }\n            return obj;\n        }\n    }\n\n    private getAction(token: InjectionToken<INotificationAction>): INotificationAction {\n        let action: INotificationAction;\n        if (token) {\n            try {\n                action = this.injector.get(token);\n            } catch {\n                action = null;\n            }\n        }\n        else {\n            action = null;\n        }\n        return action;\n    }\n}","import { Injectable, ErrorHandler, Injector } from \"@angular/core\";\nimport { Observable, Subject, BehaviorSubject } from \"rxjs\";\nimport { NotificationObject } from \"./NotificationObject\";\nimport { APIFactory } from \"../api/APIFactory\";\nimport { APIDispatch } from \"../api/APIDispatch\";\nimport { DashboardGetMessageListAPI } from \"../api/register/DashboardGetMessageListAPI\";\nimport { APPError } from \"../errorHandler/APPError\";\nimport { DashboardUpdateMessageStatusAPI } from \"../api/register/DashboardUpdateMessageStatusAPI\";\nimport { NotificationProvider } from \"./NotificationProvider\";\nimport { NotificationType } from \"./INotificationProvider.interface\";\nimport * as _ from 'lodash';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationMgr {\n\n    private DBMessage: Array<NotificationObject> = [];\n    private notificationList: Array<NotificationObject> = [];\n    private notificationSubject: Subject<Array<NotificationObject>> = new BehaviorSubject(this.notificationList);\n    constructor(\n        private injector: Injector,\n        private errorHandler: ErrorHandler,\n        private notificationProvider: NotificationProvider\n    ) {\n\n    }\n\n    async init() {\n        console.log(\"NotificationMgr init\");\n        await this.fetchMessageData();\n    }\n\n    public getNotificationList(): Observable<Array<NotificationObject>> {\n        console.log(\"NotificationMgr getNotificationList\");\n        return this.notificationSubject.asObservable();\n    }\n\n    public pushNotification(type: NotificationType, data: any) {\n        let notify = this.notificationProvider.getNotificationObject(type, data);\n        console.log(\"NotificationMgr pushNotification:\", notify);\n        // èç\breminder message\n        if (notify.action) {\n            let duplicateList = this.notificationList.filter(x => x.category === notify.category && x.type === notify.type);\n            let conflictResult = notify.action.onConflict(duplicateList, notify);\n            this.notificationList = [...conflictResult, ...this.notificationList.filter(x => x.category !== notify.category || x.type !== notify.type)]\n        }\n        else {\n            this.notificationList.push(notify);\n        }\n\n\n        this.notificationList = this.notificationList.sort((a, b) => a.order - b.order);\n        this.notificationSubject.next(this.notificationList);\n    }\n\n    public popNotification(notification: NotificationObject) {\n        console.log(\"NotificationMgr popNotification:\", notification);\n        try {\n            let popped = this.notificationList.filter(x => x.id === notification.id).length > 0;\n            console.log(\"popNotification:\", popped);\n            if (popped) {\n                this.notificationList = this.notificationList.filter(x => x.id !== notification.id);\n                this.notificationSubject.next(this.notificationList);\n                console.log(\"after popped:\", this.notificationList);\n            }\n        } catch (error) {\n            this.errorHandler.handleError(new APPError(\"F00021\", error.message));\n        }\n    }\n\n    public getUnreadMessageNumber() {\n        return this.DBMessage.length;\n    }\n\n    public popAllNotification() {\n        this.notificationList = [];\n        this.notificationSubject.next(this.notificationList);\n    }\n\n    public showCategoryMessage(category: string = null, type: string = null) {\n        console.log(\"NotificationMgr ShowCategoryMessage:\", category, type);\n        let selected = this.DBMessage.filter(x =>\n            ((x.category === category) || (!category)) && ((x.type === type) || (!type)))\n        let selected_id = selected.map(x => x.id);\n        if (selected.length > 0) {\n            this.notificationList = [...this.notificationList, ...selected];\n            this.notificationSubject.next(this.notificationList);\n            this.DBMessage = this.DBMessage.filter(x => selected_id.indexOf(x.id) < 0);\n\n            // update db message status\n            let APIFactory = this.getAPIFactory();\n            let dispatcher = this.getAPIDispatch();\n            let updateMessageStatusAPI = APIFactory.getAPI('updateDashboardMessageStatus');\n            (<DashboardUpdateMessageStatusAPI>updateMessageStatusAPI).setClientIDList(selected_id);\n            (<DashboardUpdateMessageStatusAPI>updateMessageStatusAPI).setStatus('Reading');\n            dispatcher.dispatch(updateMessageStatusAPI).subscribe((resp) => {\n                console.log(\"NotificationMgr popNotification updateMessageStatusAPI resp:\", resp);\n            })\n        }\n    }\n\n    public async fetchMessageData() {\n        console.log(\"NotificationMgr fetchMessageData\");\n        let fetched_messages = [];\n        try {\n            let APIFactory = this.getAPIFactory();\n            let dispatcher = this.getAPIDispatch();\n            let getMessageAPI = APIFactory.getAPI(\"getDashboardMessageList\");\n            (<DashboardGetMessageListAPI>getMessageAPI).setKeyword(\"UnRead\");\n            (<DashboardGetMessageListAPI>getMessageAPI).setIsPopup(true);\n            let resp = await dispatcher.dispatch(getMessageAPI).toPromise();\n            let messageList = resp['Body'];\n            fetched_messages = messageList.map(x => {\n                return this.notificationProvider.getNotificationObject(x.MessageType, Object.assign({\n                    \"Source\": \"DB\",\n                    \"Title\": x.Title,\n                    \"Description\": x.Description,\n                }, JSON.parse(x.Arguments)), x.ClientID);\n            });\n        }\n        catch (err) {\n            this.errorHandler.handleError(new APPError(\"F00020\", err.message));\n        }\n        this.DBMessage = fetched_messages;\n        console.log(\"NotificationMgr fetchMessageData end\", this.DBMessage);\n    }\n\n    private getAPIFactory(): APIFactory {\n        try {\n            let factory = this.injector.get(APIFactory);\n            return factory;\n        }\n        catch{\n            return null;\n        }\n    }\n\n    private getAPIDispatch(): APIDispatch {\n        try {\n            let dispatcher = this.injector.get(APIDispatch);\n            return dispatcher;\n        } catch  {\n            return null;\n        }\n    }\n}","import { Injectable, Inject, Optional, ErrorHandler } from '@angular/core';\nimport { IAPIAccess } from '../APIAccess.interface';\nimport { IAPI } from '../API.interface';\nimport { APIResponse } from '../APIResponse';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { APIRequest } from '../APIRequest';\nimport { RestHeaderToken, ConfigToken } from '../../injectionToken';\nimport { RestHeader } from '../RestHeader.interface';\nimport { Observable } from 'rxjs';\nimport { DeviceService } from '../../device/device.service';\nimport { APPError } from '../../errorHandler/APPError';\nimport { defaultHeader } from '../DefaultHeader';\nimport { timeout } from 'rxjs/operators';\nimport { ICustomRestfulHeaderAPI } from '../CustomRestfulHeaderAPI.interface';\nimport { NotificationMgr } from '../../notification/NotificationMgr';\nimport { NotificationType } from '../../notification/INotificationProvider.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RestfulAPIAccess implements IAPIAccess {\n    constructor(\n        private httpService: HttpClient,\n        @Inject(ConfigToken) private APP_CONFIG: any,\n        private deviceService: DeviceService,\n        private errorHandler: ErrorHandler,\n        private defaultHeader: defaultHeader,\n        private notificationMgr: NotificationMgr,\n        @Optional() @Inject(RestHeaderToken) private customHeader: RestHeader\n    ) { }\n    //private _timeout = 15000;\n    access(api: IRestfulAPI): Observable<any> {\n        let requestData: APIRequest = api.getRequestData();\n        console.log('restful API requestData:', requestData);\n        let options = {\n            headers: this.getHeader()\n        }\n\n        if (this.isCustomHeaderAPI(api)) {\n            options.headers = api.getHeader();\n        }\n\n        if (requestData.url == '') {\n            requestData.url = this.APP_CONFIG[this.APP_CONFIG.ENV].API_URL[api.getAPIName()];\n        }\n        //check SSL\n        return Observable.create((observer) => {\n            this.deviceService.checkSSL(requestData.url).then(\n                () => {\n                    if (requestData.params != null)\n                        options['params'] = requestData.params;\n                    if (requestData.type == 'GET') {\n                        this.httpService.get(requestData.url, options).pipe(timeout(requestData.timeout)).subscribe(resp => {\n                            observer.next(resp);\n                            observer.complete();\n                        }, error => {\n                            this.handleHTTPError(error);\n                            observer.error(error.error);\n                            observer.complete();\n                        })\n                    }\n                    else if (requestData.type == 'POST') {\n\n                        this.httpService.post(requestData.url, requestData.body, options).pipe(timeout(requestData.timeout)).subscribe(resp => {\n                            observer.next(resp);\n                            observer.complete();\n                        }, error => {\n                            this.handleHTTPError(error);\n                            observer.error(error.error);\n                            observer.complete();\n                        })\n                    }\n\n                    else if (requestData.type == 'PUT') {\n                        this.httpService.put(requestData.url, requestData.body, options).pipe(timeout(requestData.timeout)).subscribe(resp => {\n                            observer.next(resp);\n                            observer.complete();\n                        }, error => {\n                            this.handleHTTPError(error);\n                            observer.error(error.error);\n                            observer.complete();\n                        })\n                    }\n                },\n                (error) => {\n                    console.log(\"check SSL fingerprint error:\", error.message);\n                    this.errorHandler.handleError(new APPError(\"C00004\", error.message))\n                    observer.error(error);\n                    observer.complete();\n                })\n        })\n    }\n\n\n    // TODO: User HTTP interceptor\n    private handleHTTPError(error) {\n        console.log('handle HTTP error:', error);\n        if (error.status == 400)\n            this.errorHandler.handleError(new APPError(\"C00001\", error.message));\n        else if (error.status == 401)\n            this.errorHandler.handleError(new APPError(\"C00003\", error.message));\n        else if (error.status == 500)\n            this.errorHandler.handleError(new APPError(\"C00002\", error.message));\n        else\n            this.errorHandler.handleError(new APPError(\"C00005\", error.message));\n        let errMsg = error.message;\n        if (error.error && error.error.code) {\n            errMsg = `Error Code:${error.error.code}\\n Msg:${error.error.message}`;\n        }\n        this.notificationMgr.pushNotification(NotificationType.HTTPError, {\n            code: error.status,\n            message: `url:${error.url}\\n${errMsg}`\n        })\n    }\n\n    private getHeader() {\n        if (this.customHeader) {\n            return this.customHeader.getHeader();\n        }\n        else\n            return this.defaultHeader.getHeader();\n    }\n\n    private isCustomHeaderAPI(api: any): api is ICustomRestfulHeaderAPI {\n        return \"getHeader\" in api;\n    }\n}","import { Injectable } from '@angular/core';\nimport { IAPIAccess } from '../APIAccess.interface';\nimport { IAPI } from '../API.interface';\nimport { APIResponse } from '../APIResponse';\nimport { of, Observable } from 'rxjs';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SQLiteAPIAccess implements IAPIAccess {\n    access(api: IAPI): Observable<any> {\n        console.log('sqlite access');\n        return (<ISQLiteAPI>api).executeSQL();\n    }\n}","import { Injectable } from '@angular/core';\nimport { IAPIAccess } from '../APIAccess.interface';\nimport { IAPI } from '../API.interface';\nimport { IDeviceAPI } from '../DeviceAPI.interface';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DeviceAPIAccess implements IAPIAccess {\n    access(api: IAPI): Observable<any> {\n        return (<IDeviceAPI>api).runDeviceAPI();\n    }\n}","export class AuthObject {\n    public payload;\n    public status: boolean;\n    public error: string;\n    constructor(payload: any = {}, status: boolean = true) {\n        this.payload = payload;\n        this.status = status;\n        this.error = '';\n    }\n}\n\nexport enum AuthError {\n    PERMISSION_DENIED = 'Permission Denied',\n    TIMEOUT = 'Timeout',\n    NOT_LOGIN = 'Not Login',\n    PENDING_ACTION = 'Other Action Pending'\n}","import { Injectable, Inject, NgZone, Optional } from '@angular/core';\nimport { IAuthRoute } from '../AuthRoute.interface';\nimport { IAuthAction } from '../AuthAction.interface';\nimport { AuthObject, AuthError } from '../AuthObject';\nimport { checkTimeoutToken, ConfigToken, timeoutActionToken } from '../../injectionToken';\nimport { checkTimeout } from './checkTimeout.interface';\nimport { timeoutAction } from './timeoutAction.interface';\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeoutService implements IAuthRoute, IAuthAction {\n\n  private seconds: number = 0;\n  private reset_seconds: number;\n  private reaminingSubject: Subject<number> = new BehaviorSubject(this.seconds);\n  private _interval = null;\n\n  constructor(\n    @Inject(ConfigToken) private APP_CONFIG: any,\n    @Optional() @Inject(checkTimeoutToken) private timeoutCheck: checkTimeout,\n    @Optional() @Inject(timeoutActionToken) private timeoutAction: timeoutAction,\n    private zone: NgZone) {\n    this.reset_seconds = this.APP_CONFIG[this.APP_CONFIG.ENV].TIMEOUT;\n    this.seconds = this.reset_seconds;\n  }\n\n  reset() {\n    if (this.timeoutCheck)\n      this.timeoutCheck.reset();\n    else {\n      this.seconds = this.reset_seconds;\n    }\n  }\n\n  init() {\n    if (this.timeoutCheck) {\n      this.timeoutCheck.init();\n    }\n    else {\n      if (this._interval != null) {\n        clearInterval(this._interval);\n      }\n      this.zone.runOutsideAngular(() => {\n        this._interval = setInterval(() => {\n          this.seconds--;\n          this.reaminingSubject.next(this.seconds);\n          if (this.seconds <= 0) {\n            this.zone.run(() => {\n              clearInterval(this._interval);\n              this._interval = null;\n              console.log('timeout!!');\n              if (this.timeoutAction) {\n                this.timeoutAction.timeoutAction();\n              }\n            })\n          }\n        }, 1000);\n      });\n    }\n\n  }\n\n  clear() {\n    if (this.timeoutCheck)\n      this.timeoutCheck.clear();\n    else {\n      if (this._interval != null) {\n        clearInterval(this._interval);\n        this._interval = null;\n      }\n    }\n  }\n\n  authRoute(payload: AuthObject) {\n    if (!payload.status)\n      return payload;\n    payload.status = !this.isTimeout();\n    if (!payload.status) {\n      payload.error = AuthError.TIMEOUT;\n    }\n    return payload;\n  }\n  authAction(payload: AuthObject) {\n    if (!payload.status)\n      return payload;\n    payload.status = !this.isTimeout();\n    if (!payload.status) {\n      payload.error = AuthError.TIMEOUT;\n    }\n    return payload;\n  }\n\n  getTimeoutRemainingSecond(): Observable<number> {\n    return this.reaminingSubject.asObservable();\n  }\n  private isTimeout() {\n    if (this.timeoutCheck)\n      return this.timeoutCheck.checkTimeout();\n    else\n      return this.seconds <= 0;\n  }\n}\n","import { IAPI } from './API.interface';\nimport { APIInvokeMethod } from './APIInvokeMethod';\nimport { IAPIAccess } from './APIAccess.interface';\nimport { MockAPIAccess } from './impl/MockAPIAccess';\nimport { RestfulAPIAccess } from './impl/RestfulAPIAccess';\nimport { SQLiteAPIAccess } from './impl/SQLiteAPIAccess';\nimport { Observable, of } from 'rxjs';\nimport { Injectable, Inject, Optional, ErrorHandler } from '@angular/core';\nimport { DeviceAPIAccess } from './impl/DeviceAPIAccess';\nimport { TimeoutService } from '../auth/timeout/timeout.service';\nimport { ConfigToken } from '../injectionToken';\nimport { APPError } from '../errorHandler/APPError';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class APIDispatch {\n\n    constructor(\n        private mockAPIAccess: MockAPIAccess,\n        private sqliteAPIAcces: SQLiteAPIAccess,\n        private restfulAPIAccess: RestfulAPIAccess,\n        private deviceAPIAccess: DeviceAPIAccess,\n        private timeoutService: TimeoutService,\n        private errorHandler: ErrorHandler,\n        @Inject(ConfigToken) private APP_CONFIG: any) { }\n\n    dispatch(api: IAPI): Observable<any> {\n\n        this.timeoutService.reset();\n        if (api != undefined) {\n            let env = this.APP_CONFIG.ENV;\n            let apiInvokeMethod = this.APP_CONFIG[env].API_TYPE[api.getAPIName()];\n\n            let apiAccess: IAPIAccess;\n            if (apiInvokeMethod == APIInvokeMethod.MOCK) {\n                apiAccess = this.mockAPIAccess;\n            }\n            else if (apiInvokeMethod == APIInvokeMethod.Restful) {\n                apiAccess = this.restfulAPIAccess;\n            }\n            else if (apiInvokeMethod == APIInvokeMethod.SQLite) {\n                apiAccess = this.sqliteAPIAcces;\n            }\n\n            else if (apiInvokeMethod == APIInvokeMethod.Device) {\n                apiAccess = this.deviceAPIAccess;\n            }\n\n            if (apiAccess != undefined) {\n                return apiAccess.access(api);\n            }\n            else {\n                this.errorHandler.handleError(new APPError(\"F00014\", `API ${api.getAPIName()} doesn't assign access method.`))\n            }\n        }\n        this.errorHandler.handleError(new APPError(\"F00015\", `API object is null.`))\n        return of(null);\n\n    }\n}","export class SQLiteResponse {\n    private _header = {};\n    private _body = [];\n    constructor(info, data) {\n        this._header = info;\n        this._body = data;\n    }\n\n    get Header(){\n      return this._header;\n    }\n\n    set Header(val:any){\n      this._header = val;\n    }\n\n    get Body(){\n      return this._body;\n    }\n\n    set Body(val:any){\n      this._body = val;\n    }\n\n}\n","import { Inject, Injectable, Injector, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CurrentLanguageListAPI } from '../api/register/CurrentLanguageListAPI';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport { LanguageCode } from '../bean/LanguageCode';\nimport { APIFactory } from '../api/APIFactory';\nimport { APIDispatch } from '../api/APIDispatch'\nimport { LanguageAccessToken, LanguageUpdateToken } from '../injectionToken';\nimport { ILanguageAccess } from './ILanguageAccess';\nimport { ILanguageUpdate } from './ILanguageUpdate';\nimport { DeviceService } from '../device/device.service';\nimport { SQLiteResponse } from '../device/sqlite/SQLiteResponse';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TranslateService {\n  private language_map = {};\n  private languageMap = new Map<string, Array<LanguageCode>>();\n  private current_language = \"\";\n  private updateLanguageSubject: Subject<any> = new BehaviorSubject<any>(0);\n  constructor(private httpService: HttpClient,\n    private dispatcher: APIDispatch,\n    private APIFactory: APIFactory,\n    private deviceService: DeviceService,\n    @Optional() @Inject(LanguageAccessToken) private LanguageAccess: ILanguageAccess,\n    @Optional() @Inject(LanguageUpdateToken) private LanguageUpdate: ILanguageUpdate) {\n  }\n\n  async init() {\n    await this.loadJson();\n    await this._fetchCurrentLanguage().toPromise();\n  }\n\n  loadJson() {\n    let _this = this;\n    console.debug('translate.service.loadjson');\n\n    return new Promise((res, rej) => {\n      //start of for mappingID\n      // let languageJSON = window.localStorage.getItem('LanguageJSON');\n      // if (languageJSON) {\n      //   _this.language_map = JSON.parse(languageJSON);\n      //   res();\n      // }\n      // else {\n      //   _this.httpService.get(\"./assets/config/language.json\").subscribe((json) => {\n      //     console.debug('translate.service.loadjson success', json);\n      //     _this.language_map = json;\n      //     res();\n      //   });\n      // }\n      // end of for mappingID\n      _this.httpService.get(\"./assets/config/language.json\").subscribe((json) => {\n        console.debug('translate.service.loadjson success', json);\n        _this.language_map = json;\n        res();\n      });\n    })\n\n  }\n\n  translate(key) {\n    //for test language\n    if (this.current_language === 'MappingID') {\n      return '${' + key + '}';\n    }\n    // console.log(\"==============translate start==============\");\n    // console.log(\"Current Language :  \" + this.current_language);\n    // console.log(\"Translate Key (Mapping ID) : \" + key);\n    // console.log(\"Translate (Text) \" + this.language_map[this.current_language][key]);\n    // console.log(\"==============translate end==============\");\n    let translateResult = this.language_map[this.current_language][key];\n    if (translateResult === null || translateResult === undefined) {\n      return key;\n    }\n    else {\n      return translateResult;\n    }\n  }\n\n  public translateWithVariable(mappingID: string, map: any) {\n    let displayText = this.translate(mappingID);\n\n    Object.keys(map).forEach((key) => {\n      if (map[key] == null || map[key] == undefined) {\n        map[key] = '';\n      }\n      displayText = displayText.replace(new RegExp(`\\\\$\\\\{${key}\\\\}`, 'g'), map[key].toString());\n    })\n\n    return displayText;\n\n  }\n\n  public _fetchCurrentLanguage(): Observable<any> {\n    return Observable.create((observer) => {\n      if (this.LanguageAccess) {\n        this.LanguageAccess.getCurrentLanguage().subscribe((language) => {\n          this.current_language = language;\n          observer.next(language);\n          observer.complete();\n        });\n      } else {\n        console.log(\"Default _fetchCurrentLanguage\");\n        let currentLanguage = this.deviceService.getLocalStorage(\"SNDLanguage\") || 'en';\n        this.current_language = currentLanguage;\n        this.deviceService.setLocalStorage(\"SNDLanguage\", currentLanguage);\n        observer.next(this.current_language);\n        observer.complete();\n      }\n    });\n  }\n\n  public _fetchCodeData(): Observable<any> {\n    let currentLanguageListAPI: any = <CurrentLanguageListAPI>this.APIFactory.getAPI('getCurrentLanguageList');\n    let codeArray: Array<LanguageCode> = [];\n\n    console.debug('setting.service fetchCodeData', currentLanguageListAPI);\n    return Observable.create((observer) => {\n      this.dispatcher.dispatch(currentLanguageListAPI).subscribe((data) => {\n\n        let bodyDatas = data['Body'];\n        console.log('<--- Datas --->');\n        console.log(data);\n        for (let i = 0; i < bodyDatas.length; i++) {\n          let json = bodyDatas[i];\n          let language = new LanguageCode(json.LanguageID, json.Name, json.IsDefault);\n          codeArray.push(language);\n\n          this.languageMap.set('TW_LH_SD_Language', codeArray);\n        }\n\n        console.debug('languageMap', this.languageMap);\n        observer.next(true);\n        observer.complete();\n\n      })\n    })\n  }\n\n  public getCodeArray() {\n    if (this.languageMap.size != 0) {\n      let codeArray: Array<LanguageCode> = this.languageMap.get('TW_LH_SD_Language');\n      if (codeArray == undefined) codeArray = new Array<LanguageCode>();\n      return codeArray;\n    }\n    return new Array<LanguageCode>();\n  }\n\n\n\n  public updateLanguage(newLanguage: string): Observable<any> {\n    return Observable.create((observer) => {\n\n      if (this.LanguageUpdate) {\n        this.LanguageUpdate.UpdateLanguage(newLanguage).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      }\n      else {\n        this.deviceService.setLocalStorage(\"SNDLanguage\", newLanguage);\n        observer.next(new SQLiteResponse({ status: true }, []));\n        observer.complete();\n\n      }\n      this._fetchCurrentLanguage().subscribe((language) => {\n        this.current_language = language;\n        this.updateLanguageSubject.next();\n      });\n    });\n  }\n\n  public getCurrentLanguage(): string {\n    return this.current_language;\n  }\n\n  public getUpdateSubject(): Subject<any> {\n    return this.updateLanguageSubject;\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from './translate.service';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform {\n\n  constructor(private translate: TranslateService) { }\n\n  transform(value: any, args?: any): any {\n    return this.translate.translate(value);\n  }\n\n}\n","import { Pipe, PipeTransform, Optional, Inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Pipe({\n  name: 'numberFormat',\n  pure: false\n})\nexport class NumberFormatPipe implements PipeTransform {\n\n  constructor() { }\n\n  transform(value: any, decimalPlaces: number = -1): string {\n    let valueToNumber = Number(value);\n    if (isNaN(valueToNumber)) { //ä¸è½è½ææ¸å­\n      return value;\n    }\n    else {\n      if (decimalPlaces >= 0) {\n        const decimal = '.';\n        const thousands = ',';\n        let amount: string = '';\n        try {\n          decimalPlaces = Math.abs(decimalPlaces);\n          decimalPlaces = isNaN(decimalPlaces) ? 1 : decimalPlaces;\n\n          const negativeSign = valueToNumber < 0 ? \"-\" : \"\";\n          let i = parseInt(amount = Math.abs(valueToNumber || 0).toFixed(decimalPlaces)).toString();\n          let j = (i.length > 3) ? i.length % 3 : 0;\n          // if (Math.abs(Number(amount) - parseInt(i))) {\n          //   return this._valueAddMark(negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalPlaces ? decimal + Math.abs(Number(amount) - parseInt(i)).toFixed(decimalPlaces).slice(2) : \"\"));\n          // } else {\n          //   return this._valueAddMark(negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands));\n          // }\n          return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalPlaces ? decimal + Math.abs(Number(amount) - parseInt(i)).toFixed(decimalPlaces).slice(2) : \"\");\n\n        } catch (e) {\n          console.log(e)\n        }\n      } \n      else {\n        const thousands = ',';\n        let amount: string = '';\n        try {\n          const negativeSign = valueToNumber < 0 ? \"-\" : \"\";\n          let i = Math.abs(valueToNumber || 0).toString();\n          let j = (i.length > 3) ? i.length % 3 : 0;\n\n          return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands);\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n  }\n\n  // private _valueAddMark(value) {\n  //   return '###' + value + '###';\n  // }\n}\n","export class LoginInfo {\n    private _AgentId: string;\n    public get AgentId(): string {\n        return this._AgentId;\n    }\n    public set AgentId(value: string) {\n        this._AgentId = value;\n    }\n    private _AppUseMode: Array<any>;\n    public get AppUseMode(): Array<any> {\n        return this._AppUseMode;\n    }\n    public set AppUseMode(value: Array<any>) {\n        this._AppUseMode = value;\n    }\n    private _AgentName: string;\n    public get AgentName(): string {\n        return this._AgentName;\n    }\n    public set AgentName(value: string) {\n        this._AgentName = value;\n    }\n    private _Gender: string;\n    public get Gender(): string {\n        return this._Gender;\n    }\n    public set Gender(value: string) {\n        this._Gender = value;\n    }\n\n    private _exp: number;\n    public get exp(): number {\n        return this._exp;\n    }\n    public set exp(value: number) {\n        this._exp = value;\n    }\n    private _GoalSigningSupervisor: number;\n    public get GoalSigningSupervisor(): number {\n        return this._GoalSigningSupervisor;\n    }\n    public set GoalSigningSupervisor(value: number) {\n        this._GoalSigningSupervisor = value;\n    }\n    private _CurrentJobSeniorityMonth;\n    public get CurrentJobSeniorityMonth() {\n        return this._CurrentJobSeniorityMonth;\n    }\n    public set CurrentJobSeniorityMonth(value) {\n        this._CurrentJobSeniorityMonth = value;\n    }\n    private _JobGrade;\n    public get JobGrade() {\n        return this._JobGrade;\n    }\n    public set JobGrade(value) {\n        this._JobGrade = value;\n    }\n    private _CurrentJobOBMonth;\n    public get CurrentJobOBMonth() {\n        return this._CurrentJobOBMonth;\n    }\n    public set CurrentJobOBMonth(value) {\n        this._CurrentJobOBMonth = value;\n    }\n    private _OfficeName;\n    public get OfficeName() {\n        return this._OfficeName;\n    }\n    public set OfficeName(value) {\n        this._OfficeName = value;\n    }\n\n    private _ReferenceToken;\n    public get ReferenceToken() {\n        return this._ReferenceToken;\n    }\n\n    public set ReferenceToken(value) {\n        this._ReferenceToken = value;\n    }\n\n    constructor(info) {\n        console.log(\"LoginInfo custructor:\", info);\n        this._AgentId = info.AgentId || '';\n        this._AgentName = info.AgentName || '';\n        this._Gender = info.Gender || '';\n        this._AppUseMode = [info.AppUseMode] || [];\n        this._exp = info.exp || null;\n        this._GoalSigningSupervisor = info.GoalSigningSupervisor || null;\n        this._CurrentJobSeniorityMonth = info.CurrentJobSeniorityMonth || null;\n        this._JobGrade = info.JobGrade || null;\n        this._CurrentJobOBMonth = info.CurrentJobOBMonth || null;\n        this._OfficeName = info.OfficeName || null;\n        this._ReferenceToken = info.ReferenceToken || null;\n    }\n\n}","export class LoginResponse {\n    isSuccess: boolean;\n    errorMsg: string;\n    type: LOGIN_TYPE;\n    token: string;\n    failCount: number;\n    constructor(resp: { isSuccess: boolean, type: LOGIN_TYPE, errorMsg: string, token: string, failCount?: number }) {\n        this.isSuccess = resp.isSuccess;\n        this.errorMsg = resp.errorMsg;\n        this.type = resp.type;\n        this.token = resp.token;\n        this.failCount = resp.failCount || -1;\n    }\n}\nexport enum LOGIN_TYPE {\n    ONLINE,\n    OFFLINE\n}","export class RouteUtils {\n\n    public static convertJsonToRouterMap(data: any): any {\n        let map = {};\n        let funcList = Object.keys(data);\n        funcList.forEach(func_name => {\n            Object.keys(data[func_name]).forEach(pageName => {\n                data[func_name][pageName] = Object.assign(data[func_name][pageName], {\n                    Function: func_name\n                })\n                map[pageName] = data[func_name][pageName];\n            })\n        })\n        return map;\n    }\n}","import { Injectable, Optional, Injector } from \"@angular/core\";\nimport { Router, NavigationEnd, RouteReuseStrategy } from \"@angular/router\";\nimport { APIFactory } from \"../api/APIFactory\";\nimport { APIDispatch } from \"../api/APIDispatch\";\nimport { RouteUtils } from \"../utils/routeUtils\";\nimport { CustomRouterReuseStrategy } from \"./customRouterReuseStrategy\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AppRouter {\n\n    private routeMap: Object = {};\n    private currentMenuObject: any = null;\n    private previousUrl: string = null;\n    private currentUrl: string = null;\n\n    constructor(\n        private injector: Injector,\n        private APIFactory: APIFactory,\n        private dispatcher: APIDispatch,\n        private routeReuseStrategy: RouteReuseStrategy\n    ) {\n    }\n\n    public init() {\n        //call api to get route map\n        let routerMapAPI = this.APIFactory.getAPI(\"getRouterMap\");\n        if (routerMapAPI) {\n            this.dispatcher.dispatch(routerMapAPI).subscribe((map) => {\n                console.log(\"routeMapAPI:\", map);\n                this.routeMap = RouteUtils.convertJsonToRouterMap(map);\n                console.log(\"router map:\", this.routeMap);\n            })\n        }\n        this.listenRouterEvent();\n    }\n\n    public navigate(func: string, ...extras: Array<string>) {\n        let router = this.injector.get(Router);\n        console.log(\"navigate:\", router, func, this.routeMap[func].Path);\n        if (router && this.routeMap[func]) {\n            if ((<any>window).FirebasePlugin)\n                (<any>window).FirebasePlugin.setScreenName(this.routeMap[func].Function);\n            // this.currentFunction = this.routeMap[func].Function;\n            if (extras)\n                router.navigate([this.routeMap[func].Path, ...extras]);\n            else\n                router.navigate([this.routeMap[func].Path]);\n        }\n    }\n\n    public getUrl(page: string) {\n        return this.routeMap[page] ? this.routeMap[page].Path : '';\n    }\n\n    public getCurrentFunction() {\n        let router = this.injector.get(Router);\n        let filtered = Object.keys(this.routeMap).filter(x => router.isActive(this.routeMap[x].Path, false))\n            .map(x => this.routeMap[x].Function);\n        if (filtered.length > 0) {\n            return filtered[0];\n        }\n        else {\n            return \"Not Found\";\n        }\n    }\n    public getRouteMap(): any {\n        return this.routeMap;\n    }\n\n    public back(clearCache: boolean = true) {\n        console.log(\"router back to:\", this.previousUrl);\n        if (this.previousUrl) {\n            if (clearCache && this.routeReuseStrategy[\"deleteRouteSnapshot\"]) {\n                (<CustomRouterReuseStrategy>this.routeReuseStrategy).deleteRouteSnapshot();\n            }\n            let router = this.injector.get(Router);\n            router.navigate([this.previousUrl]);\n        }\n    }\n\n    public getCurrentMenuObject(): any {\n        return this.currentMenuObject;\n    }\n\n    public setCurrentMenuObject(val: any): void {\n        this.currentMenuObject = val;\n    }\n\n    private listenRouterEvent() {\n        let router = this.injector.get(Router);\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            };\n        });\n    }\n}\n","export enum YESNO {\n    YES = 'Y',\n    NO = 'N'\n}\n\nexport enum TIMEBASE{\n    DAY = 'Day',\n    WEEK = 'Week',\n    MONTH = 'Month',\n    QUARTER = 'Quarter',\n    YEAR = 'Year'\n}\n\nexport enum SUBMITGOALTYPE{\n    ALL = 'All',\n    PLAN = 'Plan'\n}\n\nexport enum PERFORMANCETYPE {\n    PERSONAL = 'P',\n    TEAM = 'T'\n}\n\nexport enum APPMODE {\n    Standalone,\n    Integration\n}","import { Injectable, Optional, Inject, Injector } from \"@angular/core\";\nimport { ILoginMgr } from \"./LoginMgr.interface\";\nimport { LoginInfo } from \"./LoginInfo\";\nimport { BehaviorSubject, Observable, Subject, from } from \"rxjs\";\nimport { LoginResponse, LOGIN_TYPE } from \"./LoginResponse\";\nimport { DeviceService } from \"../../device/device.service\";\nimport { APIFactory } from \"../../api/APIFactory\";\nimport { APIDispatch } from \"../../api/APIDispatch\";\nimport { LoginAPI } from \"../../api/register/LoginAPI\";\nimport * as _jwt_decode from \"jwt-decode\";\nimport { PushIDMgrToken, LoginMgrToken, ConfigToken } from \"../../injectionToken/injection-token\";\nimport { PushIDMgr } from \"./PushIDMgr.interface\";\nimport { LoginTokenStore } from \"./LoginTokenStore\";\nimport { AppRouter } from \"../../route/AppRouter\";\nimport { APPMODE } from \"../../bean/CommonEnum\";\n\n\nconst jwt_decode = _jwt_decode;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DefaultLoginMgr implements ILoginMgr {\n\n    private appMode: APPMODE = null;\n    private token: string = '';\n    private loginInfo: LoginInfo = null;\n    private infoSubject: BehaviorSubject<LoginInfo> = new BehaviorSubject<LoginInfo>(this.loginInfo);\n    private logoutSubject: Subject<any> = new Subject();\n\n    constructor(\n        private deviceService: DeviceService,\n        private APIFactory: APIFactory,\n        private dispatcher: APIDispatch,\n        private injector: Injector,\n        private tokenStore: LoginTokenStore,\n        private router: AppRouter,\n        @Inject(ConfigToken) private APP_CONFIG: any,\n        @Optional() @Inject(LoginMgrToken) private customLoginMgr: ILoginMgr,\n        @Optional() @Inject(PushIDMgrToken) private pushIDMgr: PushIDMgr\n    ) {\n        if (this.customLoginMgr) {\n            this.customLoginMgr.getToken().subscribe((token) => {\n                this.token = token;\n            })\n        }\n        else {\n            this.tokenStore.getToken().subscribe((token) => {\n                this.token = token;\n            });\n        }\n        this.appMode = this.APP_CONFIG.APP_MODE;\n        this.checkLogin();\n    }\n\n    public getLoginInfo(): Observable<LoginInfo> {\n        console.log(\"loginMgr getLoginInfo\");\n        if (this.customLoginMgr)\n            return this.customLoginMgr.getLoginInfo();\n        else\n            return this.infoSubject.asObservable();\n    }\n\n    public getToken(): Observable<string> {\n        if (this.customLoginMgr)\n            return this.customLoginMgr.getToken();\n        else\n            return this.tokenStore.getToken();\n    }\n\n    public checkLogin() {\n        if (this.customLoginMgr)\n            return this.customLoginMgr.checkLogin();\n        else {\n            if (this.appMode === APPMODE.Integration) {\n                let storage_token = this.deviceService.getLocalStorage(\"SNDToken\");\n                if (storage_token) {\n                    this.token = storage_token;\n                    this.updateToken(storage_token);\n                }\n            }\n            return !!this.token;\n        }\n    }\n\n    public subscribeLogout(): Observable<any> {\n        return this.logoutSubject.asObservable();\n    }\n\n    public login(payload): Observable<LoginResponse> {\n        if (this.customLoginMgr)\n            return this.customLoginMgr.login(payload);\n        else {\n            let loginBody = {\n                PushId: this.pushIDMgr.getPushID(),\n                Username: payload.username,\n                Password: payload.password,\n                DeviceSystem: this.deviceService.getDevicePlatform(),\n                DeviceId: this.deviceService.getDeviceUUID(),\n                DeviceModel: this.deviceService.getDeviceManufacturer(),\n                DeviceType: this.deviceService.isPad() ? \"Pad\" : \"Phone\"\n            }\n            let factory = this.getAPIFactory();\n            let dispatcher = this.getAPIDispatch();\n            let loginAPI = factory.getAPI(\"onlineLogin\");\n            (<LoginAPI>loginAPI).body = loginBody;\n            return from(this._login(loginAPI));\n        }\n\n    }\n\n    private async _login(loginAPI: LoginAPI) {\n        try {\n            let dispatcher = this.getAPIDispatch();\n            let resp = await dispatcher.dispatch(loginAPI).toPromise();\n            if (resp.success) {\n                let decoded = jwt_decode(resp['token']);\n                console.log(\"decoded:\", decoded);\n                this.updateToken(resp['token']);\n                return new LoginResponse({ isSuccess: true, type: LOGIN_TYPE.ONLINE, errorMsg: '', token: resp['token'] });\n            }\n            else {\n                return new LoginResponse({ isSuccess: false, type: LOGIN_TYPE.ONLINE, errorMsg: 'some error happen on login', token: '' });\n            }\n        } catch (error) {\n            console.log(\"login error handler:\", error);\n            let msg = error.message ? error.message : 'System_Maintenance';\n            return new LoginResponse({ isSuccess: false, type: LOGIN_TYPE.ONLINE, errorMsg: msg, token: '' });\n        }\n    }\n\n    public logout() {\n        this.logoutSubject.next();\n        if (this.customLoginMgr)\n            return this.customLoginMgr.logout();\n        else {\n            if (this.appMode === APPMODE.Integration) {\n                window.location.assign(this.APP_CONFIG.INTEGRATION_BACK_URL);\n            }\n            else {\n                this.updateToken(null);\n                this.router.navigate(\"Login\");\n            }\n        }\n    }\n\n    public updateToken(token: string) {\n        console.log(\"updateToken:\", token);\n        this.token = token;\n        this.tokenStore.setToken(token);\n        if (token) {\n            let info = new LoginInfo(jwt_decode(token));\n            this.loginInfo = info;\n        }\n        else {\n            this.loginInfo = null;\n        }\n        this.infoSubject.next(this.loginInfo);\n    }\n\n    private getAPIFactory() {\n        return this.APIFactory ? this.APIFactory : this.injector.get(APIFactory);\n    }\n    private getAPIDispatch() {\n        return this.dispatcher ? this.dispatcher : this.injector.get(APIDispatch);\n    }\n}","import { Injectable, Optional, Inject, Injector } from '@angular/core';\nimport { IAuthRoute } from '../AuthRoute.interface';\nimport { IAuthAction } from '../AuthAction.interface';\nimport { AuthObject, AuthError } from '../AuthObject';\nimport { HttpClient } from '@angular/common/http';\nimport { checkPermission } from './checkPermission.interface';\nimport { checkPermissionToken } from '../../injectionToken';\nimport { LoginInfo } from '../login/LoginInfo';\nimport { DefaultLoginMgr } from '../login/DefaultLoginMgr';\nimport { APIFactory } from \"../../api/APIFactory\";\nimport { APIDispatch } from '../../api/APIDispatch';\nimport { RouteUtils } from '../../utils/routeUtils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckPermissionService implements IAuthRoute {\n\n  private permissionMap = {};\n  private userRole = [];\n  constructor(\n    private injector: Injector,\n    private loginMgr: DefaultLoginMgr,\n    @Optional() @Inject(checkPermissionToken) private permissionCheck: checkPermission\n  ) {\n\n  }\n\n  init() {\n    console.log('init check permission service');\n    if (!this.permissionCheck) {\n      this.loadJson();\n      this.loginMgr.getLoginInfo().subscribe((info: LoginInfo) => {\n        console.log('check permission subscribe:', info);\n        if (info)\n          this.userRole = info.AppUseMode;\n      })\n    }\n    else\n      this.permissionCheck.init();\n\n\n  }\n\n  private loadJson() {\n    //call api to get route map\n    let apiFactory = this.injector.get(APIFactory);\n    let apiDispatcher = this.injector.get(APIDispatch)\n    if (apiFactory && apiDispatcher) {\n      let routerMapAPI = apiFactory.getAPI(\"getRouterMap\");\n      if (routerMapAPI) {\n        apiDispatcher.dispatch(routerMapAPI).subscribe((map) => {\n          this.permissionMap = RouteUtils.convertJsonToRouterMap(map);\n          console.log(\"page permission map:\", this.permissionMap);\n        })\n      }\n    }\n    else {\n      console.log(\"Check-permission init error: apiFactory or Dispatcher not found.\");\n    }\n  }\n\n  authRoute(authObj: AuthObject) {\n    if (!authObj.status)\n      return authObj;\n\n    let pageId = authObj.payload.func;\n    console.log(this.permissionMap);\n    if (pageId in Object.keys(this.permissionMap)) {\n      authObj.status = this.checkPagePermission(pageId)\n      if (!authObj.status) {\n        authObj.error = AuthError.PERMISSION_DENIED;\n      }\n    }\n    return authObj;\n  }\n\n  authMenu(menuList: Array<string>): Array<string> {\n    if (this.permissionCheck) {\n      return this.permissionCheck.checkMenuPermission(menuList, this.userRole);\n    }\n    else {\n      //default permission check\n      console.log(\"check menu permission:\", menuList, this.permissionMap);\n      return menuList.filter(x => {\n        if (Object.keys(this.permissionMap).includes(x)) {\n          return this.checkPagePermission(x);\n        }\n        else return true;\n      })\n    }\n  }\n\n  public checkPagePermission(name: string): boolean {\n    if (this.permissionCheck)\n      return this.permissionCheck.checkPagePermission(name, this.userRole);\n    else\n      return this.userRole\n        .map(x => !this.permissionMap[name][\"Role\"] || (this.permissionMap[name][\"Role\"].indexOf(x) > -1))\n        .reduce((acc, current) => acc || current, false);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { IAuthAction } from '../AuthAction.interface';\nimport { AuthObject, AuthError } from '../AuthObject';\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\nimport { ConfigToken } from '../../injectionToken/injection-token';\n\nexport enum ACTION_STATUS {\n  AVAILABLE,\n  PENDING\n}\n\nexport class ActionEvent {\n  public action: string;\n  public event: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionService implements IAuthAction {\n\n  constructor(\n    @Inject(ConfigToken) private APP_CONFIG: any\n  ) {\n    this.actionIntervalSec = this.APP_CONFIG.ACTION_INTERVAL;\n  }\n\n  private currentAction = null;\n  private actionIntervalSec = 800;\n  private status = ACTION_STATUS.AVAILABLE;\n  private statusSubject: Subject<ACTION_STATUS> = new BehaviorSubject(this.status);\n  private actionSuscribe: Subject<ActionEvent> = new Subject();\n\n  authAction(payload: AuthObject): AuthObject {\n    if (this.status === ACTION_STATUS.AVAILABLE) {\n      this.status = ACTION_STATUS.PENDING;\n      this.statusSubject.next(this.status);\n      //Prevent fast click\n      setTimeout(() => {\n        this.status = ACTION_STATUS.AVAILABLE;\n        this.statusSubject.next(this.status);\n      }, this.actionIntervalSec);\n    }\n    else {\n      //Other Action is active\n      payload.status = false;\n      payload.error = AuthError.PENDING_ACTION;\n    }\n    return payload;\n  }\n\n  getCurrentAction(): string {\n    return this.currentAction;\n  }\n\n  getActionStatus(): Observable<ACTION_STATUS> {\n    return this.statusSubject.asObservable();\n  }\n\n  onActionClick(): Observable<ActionEvent> {\n    return this.actionSuscribe.asObservable();\n  }\n\n  actionClick(event: ActionEvent) {\n    this.actionSuscribe.next(event);\n  }\n\n\n}\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { AuthObject } from './AuthObject';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CheckPermissionService } from './permission/check-permission.service';\nimport { ActionService } from './action/action.service';\nimport { authActionToken, authRouteToken } from '../injectionToken';\nimport { IAuthAction } from './AuthAction.interface';\nimport { IAuthRoute } from './AuthRoute.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private checkPermissionService: CheckPermissionService,\n    private actionService: ActionService,\n    @Optional() @Inject(authActionToken) private customAuthAction: IAuthAction,\n    @Optional() @Inject(authRouteToken) private customAuthRoute: IAuthRoute,\n  ) { }\n\n  async authRoute(data) {\n    let result = of(new AuthObject(data)).pipe(\n      map(x => this.checkPermissionService.authRoute(x))\n    );\n    if (this.customAuthRoute) {\n      result.pipe(\n        map(x => this.customAuthRoute.authRoute(x))\n      )\n    }\n    return result.pipe(\n      map(x => { return { status: x.status, error: x.error } })\n    ).toPromise();\n  }\n\n  async authAction(payload) {\n    let result = of(new AuthObject(payload)).pipe(\n      map(x => this.actionService.authAction(x))\n    );\n    if (this.customAuthAction) {\n      result.pipe(\n        map(x => this.customAuthAction.authAction(x))\n      );\n    }\n    return result.pipe(\n      map(x => { return { status: x.status, error: x.error } })\n    ).toPromise();\n\n  }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter, HostBinding, OnInit, ElementRef, AfterViewInit, Optional, Inject } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { APIDispatch } from '../../api/APIDispatch';\nimport { APIFactory } from '../../api/APIFactory';\nimport { logActionAPI } from '../../api/register/logActionAPI';\nimport { DeviceService } from '../../device/device.service';\nimport { AppRouter } from '../../route/AppRouter';\nimport { ActionService, ACTION_STATUS, ActionEvent } from './action.service';\nimport { actionDirectiveTaskToken } from '../../injectionToken/injection-token';\nimport { IActionDirectiveTask } from '../../interface/ActionDirectiveTask.interface';\n\n\n@Directive({\n  selector: '[Action]'\n})\nexport class ActionDirective implements AfterViewInit {\n\n  constructor(\n    private authService: AuthService,\n    private APIFactory: APIFactory,\n    private dispatcher: APIDispatch,\n    private deviceService: DeviceService,\n    private actionService: ActionService,\n    private appRouter: AppRouter,\n    private elRef: ElementRef,\n    @Optional() @Inject(actionDirectiveTaskToken) private actionDirectiveTask: IActionDirectiveTask\n  ) {\n    this.actionService.getActionStatus().subscribe((status: ACTION_STATUS) => {\n      this.isDisabled = status === ACTION_STATUS.PENDING;\n    })\n\n\n  }\n\n  // start of highlight digital track\n  ngAfterViewInit() {\n\n    // this.settingService.getDebugMode().subscribe((debugMode: boolean) => {\n\n    //   let elementTagName = this.elRef.nativeElement.localName;\n    //   let targetElement = null;\n    //   if (elementTagName === 'app-ui-btn') {\n    //     targetElement = this.elRef.nativeElement.children[0];\n    //     console.log('app-ui-btn targetElement: ', targetElement);\n    //   }\n    //   else if (elementTagName === 'app-ui-link') {\n    //     targetElement = this.elRef.nativeElement.children[0].children[0];\n    //     console.log('app-ui-link targetElement: ', targetElement);\n    //   }\n    //   else {\n    //     targetElement = this.elRef.nativeElement;\n    //   }\n\n\n    //   if (targetElement) {\n    //     if (debugMode) {\n    //       targetElement.setAttribute('style', \"border: 3px solid #ff0000 !important\");\n    //     }\n    //     else {\n    //       targetElement.setAttribute('style', \"\");\n    //     }\n    //   }\n\n    // })\n\n\n  }\n  // @HostListener('mouseenter') onMouseenter(e) {\n  //   this.elRef.nativeElement.innerText = this.action;\n  // }\n\n  //end of highlight digital track\n\n  @Input() action;\n  @Output() actionClick: EventEmitter<any> = new EventEmitter();\n  @HostBinding('class.disabled') isDisabled = false;\n  // @HostBinding('class.hightlightDigitalTrack') isHightight = true;\n  @HostListener('onClick', ['$event'])\n  @HostListener('onClickLink', ['$event'])\n  @HostListener('onTabChildClick', ['$event'])\n  @HostListener('ClickBtn', ['$event'])\n  @HostListener('click', ['$event'])\n  async onclick(e) {\n    console.log('action click:', this.action, e);\n    if (e.stopPropagation) { e.stopPropagation(); }\n    if (e.preventDefault) { e.preventDefault(); }\n    console.log(\"actionClick after output: \", e);\n    let event = new ActionEvent();\n    event.action = this.action;\n    event.event = e;\n    this.actionService.actionClick(event);\n    let isAuth = await this.authService.authAction({ action: this.action });\n    if (isAuth.status) {\n      this.actionClick.emit(e);\n      console.log(\"actionClick output: \", e);\n      if (this.actionDirectiveTask) {\n        await this.actionDirectiveTask.doTask(this.action);\n      }\n    }\n    else {\n      console.log(`action: ${this.action} auth failed.`);\n    }\n    let ActionAPI = this.APIFactory.getAPI(\"LogAction\");\n    (<logActionAPI>ActionAPI).action = this.action;\n    (<logActionAPI>ActionAPI).time = new Date();\n    (<logActionAPI>ActionAPI).valid = isAuth.status;\n    (<logActionAPI>ActionAPI).message = isAuth.error;\n    (<logActionAPI>ActionAPI).Function = this.appRouter.getCurrentFunction();\n    (<logActionAPI>ActionAPI).DeviceModel = this.deviceService.getDeviceManufacturer();\n    (<logActionAPI>ActionAPI).DeviceSystem = this.deviceService.getDevicePlatform();\n    let resp = await this.dispatcher.dispatch(ActionAPI).toPromise();\n    console.log(\"log Action resp:\", resp);\n  }\n}\n","export class SQLiteDatabase {\n  private dbName : string;\n  private key : string;\n\n  constructor(name, key) {\n    this.dbName = name;\n    this.key = key;\n  }\n  getName() {\n    return this.dbName;\n  }\n  getKey() {\n    return this.key;\n  }\n  setName(name : string) {\n    this.dbName = name\n  }\n  setkey(key : string) {\n    this.key = key\n  }\n}\n","export class SQLiteColumn {\n  private colName: string;\n  private colValue: any;\n  private isPrimaryKey: boolean;\n  private isAutoincrement: boolean;\n  private type: string;\n  constructor(name: string, value: string, type: string, isPrimaryKey: boolean, isAutoincrement: boolean) {\n    this.colName = name;\n    this.colValue = value;\n    this.isPrimaryKey = isPrimaryKey;\n    this.isAutoincrement = isAutoincrement;\n    this.type = type;\n  }\n\n  getName() {\n    return this.colName;\n  }\n\n  getValue() {\n    return this.colValue;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  setValue(val: any) {\n    if (this.type == 'text')\n      this.colValue = val.toString();\n    else if (this.type == 'integer')\n      this.colValue = parseInt(val);\n    else if (this.type == 'real')\n      this.colValue = parseFloat(val);\n    else\n      this.colValue = val;\n  }\n\n  getIsPrimaryKey() {\n    return this.isPrimaryKey;\n  }\n\n  getIsAutoincrement() {\n    return this.isAutoincrement;\n  }\n}\n","import { SQLiteColumn } from './SQLiteColumn';\nimport { IRestriction } from './Restriction.interface';\n\nexport class SQLiteTable {\n  private tableName: string;\n  private columns: Array<SQLiteColumn>;\n  private restrictions: Array<IRestriction>;\n  constructor(name: string, columns: Array<SQLiteColumn>) {\n    this.tableName = name;\n    this.columns = columns;\n    this.restrictions = [];\n  }\n  setValue(col: string, value: any) {\n    this.columns.filter(x => x.getName() == col).forEach((col) => {\n      col.setValue(value);\n    })\n  }\n  getValue(col: string) {\n    let cols = this.columns.filter(x => x.getName() == col);\n    return col.length > 0 ? cols[0].getValue() : null;\n  }\n\n  hasColumn(col: string) {\n    let cols = this.columns.filter(x => x.getName() == col);\n    return cols.length > 0;\n  }\n\n  getTableName() {\n    return this.tableName;\n  }\n  getColumns() {\n    return this.columns;\n  }\n\n  addRestriction(restriction: IRestriction) {\n    this.restrictions.push(restriction);\n  }\n  getRestrictions() {\n    return this.restrictions;\n  }\n\n  cloneTable(): SQLiteTable {\n    var colArray = [];\n    for (var column of this.columns) {\n      var clone_obj = Object.create(SQLiteColumn.prototype);\n      clone_obj = Object.assign(clone_obj, column);\n      colArray.push(clone_obj);\n    }\n    return new SQLiteTable(this.tableName, colArray);\n  }\n\n  isSetted() {\n    return this.getColumns().map(x => x.getValue() !== undefined).length > 0;\n  }\n\n}\n","import { IRestriction } from '../Restriction.interface';\nexport class LimitRestriction implements IRestriction {\n    private values: Array<string>;\n    constructor(values = []) {\n        this.values = values;\n    }\n    sqlString(): string {\n        return `LIMIT ${this.values[0].toString()} `;\n    }\n\n    getValues() {\n        return this.values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class OffsetRestriction implements IRestriction {\n    private values: Array<string>;\n    constructor(values = []) {\n        this.values = values;\n    }\n    sqlString(): string {\n        return `OFFSET ${this.values[0]} `;\n    }\n\n    getValues() {\n        return this.values;\n    }\n}","export class SQLCommand {\n  private sql: string;\n  private params: Array<any> = new Array<any>();\n\n\n  constructor(instruction: string, params: Array<any>) {\n    this.sql = instruction;\n    this.params = params;\n  }\n  setSql(instruction: string) {\n    this.sql = instruction\n  }\n  setParam(param: string) {\n    this.params.push(param);\n  }\n  getSql() {\n    return this.sql;\n  }\n  getParams() {\n    return this.params;\n  }\n}\n","import { IRestriction } from '../Restriction.interface';\nexport class OrderByRestriction implements IRestriction {\n    private values: Array<any>;\n    constructor(values = []) {\n        this.values = values;\n    }\n    sqlString(): string {\n        let str = this.values.map(x => `${x.column} ${x.order}`).reduce((prev, current) => prev + ',' + current);\n        return `ORDER BY ${str} `;\n    }\n\n    getValues() {\n        return this.values;\n    }\n}","import { IDao } from \"./Dao.interface\";\nimport { SQLiteTable } from \"./SQLiteTable\";\nimport { SQLiteColumn } from \"./SQLiteColumn\";\nimport { Observable, of } from \"rxjs\";\nimport { LimitRestriction } from \"./restrictions/LimitRestriction\";\nimport { OffsetRestriction } from \"./restrictions/OffsetRestriction\";\nimport { SQLiteResponse } from \"./SQLiteResponse\";\nimport { SQLCommand } from \"./SQLCommand\";\nimport { OrderByRestriction } from \"./restrictions/OrderByRestriction\";\nimport { DaoFactory } from \"./DaoFactory\";\nimport { APPError } from \"../../errorHandler/APPError\";\nimport { SQLiteDatabase } from \"./SQLiteDatabase\";\n\nexport class SQLiteDao implements IDao {\n    protected connection: any;\n    protected transactionArr: Array<any>;\n    protected config: SQLiteDatabase;\n    constructor(config: SQLiteDatabase) {\n        this.transactionArr = [];\n        this.config = config;\n    }\n\n    public openDataBase(): Promise<any> {\n        let dbObj = this.config;\n        return new Promise((res, rej) => {\n            (<any>window).sqlitePlugin.openDatabase({\n                name: dbObj.getName() + '.db',\n                location: 'default',\n                key: dbObj.getKey(),\n                androidDatabaseImplementation: 'system'\n            }, db => {\n                this.connection = db;\n                res(db);\n            }, () => {\n                let error = new Error(\"Sqlite DB open error.\");\n                rej(error);\n            });\n        })\n    }\n\n    public queryByTable(tableObject: SQLiteTable): Observable<SQLiteResponse> {\n        var restrictions = tableObject.getRestrictions();\n        var conditon_str = restrictions.filter(x => !(x instanceof LimitRestriction || x instanceof OffsetRestriction || x instanceof OrderByRestriction)).map(x => `AND ${x.sqlString()}`).join('');\n        var conditon_val = restrictions.filter(x => !(x instanceof LimitRestriction || x instanceof OffsetRestriction || x instanceof OrderByRestriction)).map(x => x.getValues()).reduce((prev, x) => [...prev, ...x], []);\n        var order_str = restrictions.filter(x => x instanceof OrderByRestriction).map(x => x.sqlString()).join('');\n        var limit_str = restrictions.filter(x => x instanceof LimitRestriction).map(x => x.sqlString()).join('');\n        var offset_str = restrictions.filter(x => x instanceof OffsetRestriction).map(x => x.sqlString()).join('');\n        var sql_count_command = `SELECT count(*) FROM ${tableObject.getTableName()} WHERE 1=1 ${conditon_str}`;\n        var sql_command = `SELECT * FROM ${tableObject.getTableName()} WHERE 1=1 ${conditon_str}${order_str}${limit_str}${offset_str}`;\n        var sql_obj = new SQLCommand(sql_command, conditon_val);\n        var sqlcount_obj = new SQLCommand(sql_count_command, conditon_val);\n        console.group(\"run select sql command\");\n        console.log(sql_command);\n        console.log('params', conditon_val);\n        console.groupEnd();\n        return this.runQuerySqlcommand(sql_obj, sqlcount_obj);\n    }\n\n    public insertByTable(tableObject: SQLiteTable): Observable<SQLiteResponse> {\n        let sql_obj = this.transformInsert(tableObject);\n        console.group(\"run insert sql command\");\n        console.log(sql_obj.getSql());\n        console.log('params', sql_obj.getParams());\n        console.groupEnd();\n        return Observable.create((observer) => {\n            this.runSqlCommand(observer, sql_obj);\n        })\n    }\n\n    public updateByTable(tableObject: SQLiteTable): Observable<SQLiteResponse> {\n        let sql_obj = this.transformUpdate(tableObject);\n        console.group(\"run update sql command\");\n        console.log(sql_obj.getSql());\n        console.log('params', sql_obj.getParams());\n        console.groupEnd();\n        return Observable.create((observer) => {\n            this.runSqlCommand(observer, sql_obj);\n        })\n    }\n\n    public deleteByTable(tableObject: SQLiteTable): Observable<SQLiteResponse> {\n        let sql_obj = this.transformDelete(tableObject);\n        console.group(\"run delete sql command\");\n        console.log(sql_obj.getSql());\n        console.log('params', sql_obj.getParams());\n        console.groupEnd();\n        return Observable.create((observer) => {\n            this.runSqlCommand(observer, sql_obj);\n        })\n    }\n\n    public transactionInsert(tableObject: SQLiteTable) {\n        this.addTransactionCommand(this.transformInsert(tableObject));\n    }\n    public transactionUpdate(tableObject: SQLiteTable) {\n        this.addTransactionCommand(this.transformUpdate(tableObject));\n    }\n    public transactionDelete(tableObject: SQLiteTable) {\n        this.addTransactionCommand(this.transformDelete(tableObject));\n    }\n\n    public transactionSqlCommand(command: SQLCommand) {\n        this.addTransactionCommand(command);\n    }\n\n    public excuteSqlCommand(sql_command: Array<SQLCommand>) {\n        console.log('excuteSqlCommand:', sql_command);\n        return Observable.create((observer) => {\n            this.connection.transaction(tr => {\n                for (let command of sql_command) {\n                    tr.executeSql(command.getSql(), command.getParams(), () => { }, (_, error) => {\n                        console.log('execute sql error:', error);\n                    });\n                }\n            }, (error) => {\n                observer.next(new SQLiteResponse({ status: false, msg: error.message }, []));\n                observer.complete();\n                throw new APPError(\"F00017\", error.message);\n            }, () => {\n                observer.next(new SQLiteResponse({ status: true }, []));\n                observer.complete();\n            })\n        });\n    }\n\n    public getSchema() {\n        var schema = new Map();\n        return Observable.create((observer) => {\n            this.connection.transaction(tr => {\n                tr.executeSql('SELECT name,sql FROM sqlite_master WHERE type=\"table\" OR type=\"view\"', [], (tx, res) => {\n                    //æ¿å°TABLEåç¨±ï¼query table schema\n                    for (var len = 0; len < res.rows.length; len++) {\n                        var table_name = res.rows.item(len).name;\n                        var table_sql = res.rows.item(len).sql;\n                        this.getColumns(tx, schema, table_name, table_sql);\n                    }\n                }, (tx, error) => {\n                    console.log('select table name error:', error.message);\n                });\n            }, (_, error) => {\n                observer.next(new SQLiteResponse({ status: false, msg: error.message }, []));\n                observer.complete();\n                throw new APPError(\"F00017\", error.message);\n            }, () => {\n                observer.next(schema);\n                observer.complete();\n            });\n        })\n\n    }\n\n    public runTransaction() {\n        return Observable.create((observer => {\n            let batchArr = this.transactionArr.map((cmd) => [cmd.getSql(), cmd.getParams()]);\n            console.group('run transaction SQL:');\n            console.log('command:', batchArr);\n            console.groupEnd();\n            this.connection.sqlBatch(batchArr, () => {\n                observer.next(new SQLiteResponse({ status: true }, []));\n                observer.complete();\n            }, (error) => {\n                observer.next(new SQLiteResponse({ status: false, msg: error.message }, []));\n                observer.complete();\n                throw new APPError(\"F00018\", error.message);\n            });\n        }))\n    }\n\n    public clearTransaction() {\n        this.transactionArr = [];\n    }\n\n    protected getColumns(tx, schema, table_name, table_sql) {\n        var tmp_colArray = [];\n        console.log(\"getColumns:\", table_name, table_sql);\n        tx.executeSql('PRAGMA table_info(' + table_name + ')', [], (tx, info_res) => {\n            //æ¿å°tableçæ¯åæ¬ä½\n            for (var i = 0; i < info_res.rows.length; i++) {\n                var isPK = !!info_res.rows.item(i).pk;\n                var name = info_res.rows.item(i).name;\n                var isAutoIncrement = isPK && (table_sql.toUpperCase().indexOf(\"AUTOINCREMENT\") > -1);\n                var type = info_res.rows.item(i).type;\n                tmp_colArray.push(new SQLiteColumn(name, undefined, type, isPK, isAutoIncrement));\n            }\n            var tableObj = new SQLiteTable(table_name, tmp_colArray);\n            schema.set(table_name, tableObj);\n        }, (tx, error) => {\n            console.log('Get table column list error:', error.message);\n            throw new APPError(\"F00019\", error.message);\n        });\n    }\n\n    private runSqlCommand(observer, sql_command) {\n        this.connection.transaction(tr => {\n            tr.executeSql(sql_command.getSql(), sql_command.getParams(), (tx, res) => {\n                observer.next(new SQLiteResponse({ status: true }, []));\n                observer.complete();\n            }, (_, error) => {\n                observer.next(new SQLiteResponse({ status: false, msg: error.message }, []));\n                observer.complete();\n                throw new APPError(\"F00017\", error.message);\n            });\n        });\n    }\n\n    private runQuerySqlcommand(sql_obj, sql_count_obj) {\n        console.log(\"runQuerySqlcommand\", sql_obj);\n        return Observable.create((observer) => {\n            this.connection.transaction(tr => {\n                tr.executeSql(sql_obj.getSql(), sql_obj.getParams(), (tx, res) => {\n                    tx.executeSql(sql_count_obj.getSql(), sql_count_obj.getParams(), (tx, res_count) => {\n                        var data = [];\n                        for (var i = 0; i < res.rows.length; i++) {\n                            data.push(res.rows.item(i));\n                        }\n                        console.log(\"run query sql finish!\", data);\n                        observer.next(new SQLiteResponse({\n                            record_length: res_count.rows.item(0)['count(*)'],\n                            status: true\n                        }, data));\n                        observer.complete();\n                    }, (_, error) => {\n                        console.log(error.message);\n                        observer.next(new SQLiteResponse({ status: false, message: error.message }, []));\n                        observer.complete();\n                        throw new APPError(\"F00017\", error.message);\n                    })\n                }, (_, error) => {\n                    console.log(error.message);\n                    observer.next(new SQLiteResponse({ status: false, message: error.message }, []));\n                    observer.complete();\n                    throw new APPError(\"F00017\", error.message);\n                });\n            });\n        })\n\n    }\n\n    private transformInsert(tableObject: SQLiteTable) {\n        var setted_cols = tableObject.getColumns().filter(x => x.getValue() !== undefined);\n        var setted_vals = setted_cols.map(x => x.getValue());\n        var sql_command = `INSERT INTO ${tableObject.getTableName()} (${setted_cols.map(x => x.getName()).join(',')}) VALUES (${setted_cols.map(x => '?').join(',')})`;\n        return new SQLCommand(sql_command, setted_vals);\n    }\n\n    private transformUpdate(tableObject: SQLiteTable) {\n        var setted_cols = tableObject.getColumns().filter(x => x.getValue() !== undefined);\n        var setted_vals = setted_cols.map(x => x.getValue());\n        var set_str = setted_cols.map(x => ` ${x.getName()}=?`).join(',');\n        var restrictions = tableObject.getRestrictions();\n        var conditon_str = restrictions.filter(x => !(x instanceof LimitRestriction || x instanceof OffsetRestriction)).map(x => `AND ${x.sqlString()}`).join('');\n        var conditon_val = restrictions.filter(x => !(x instanceof LimitRestriction || x instanceof OffsetRestriction)).map(x => x.getValues()).reduce((prev, x) => [...prev, ...x], []);\n        var sql_command = `UPDATE ${tableObject.getTableName()} SET ${set_str} WHERE 1=1 ${conditon_str}`;\n        return new SQLCommand(sql_command, [...setted_vals, ...conditon_val]);\n    }\n\n    private transformDelete(tableObject: SQLiteTable) {\n        var restrictions = tableObject.getRestrictions();\n        var conditon_str = restrictions.filter(x => !(x instanceof LimitRestriction || x instanceof OffsetRestriction)).map(x => `AND ${x.sqlString()}`).join('');\n        var conditon_val = restrictions.filter(x => !(x instanceof LimitRestriction || x instanceof OffsetRestriction)).map(x => x.getValues()).reduce((prev, x) => [...prev, ...x], []);\n        var sql_command = `DELETE FROM ${tableObject.getTableName()} WHERE 1=1 ${conditon_str}`;\n        return new SQLCommand(sql_command, conditon_val);\n    }\n\n    private addTransactionCommand(sql_command: SQLCommand) {\n        this.transactionArr.push(sql_command);\n    }\n\n\n}\n","import { IDao } from \"./Dao.interface\";\nimport { SQLiteTable } from \"./SQLiteTable\";\nimport { SQLiteColumn } from \"./SQLiteColumn\";\nimport { Observable } from \"rxjs\";\nimport { LimitRestriction } from \"./restrictions/LimitRestriction\";\nimport { OffsetRestriction } from \"./restrictions/OffsetRestriction\";\nimport { SQLiteResponse } from \"./SQLiteResponse\";\nimport { SQLCommand } from \"./SQLCommand\";\nimport { OrderByRestriction } from \"./restrictions/OrderByRestriction\";\nimport { APPError } from \"../../errorHandler/APPError\";\nimport { SQLiteDatabase } from \"./SQLiteDatabase\";\nimport { SQLiteDao } from \"./SQLiteDao\";\n\ndeclare var window;\n\nexport class WebSQLDao extends SQLiteDao implements IDao {\n    constructor(config: SQLiteDatabase) {\n        super(config);\n    }\n\n    public async openDataBase(): Promise<any> {\n        function timeout(ms) {\n            return new Promise(resolve => setTimeout(resolve, ms));\n        }\n\n        this.connection = window.openDatabase(this.config.getName(), '1.0', this.config.getName(), 2 * 1024 * 1024);\n        console.log(\"OpenDataBase:\", this.connection);\n        return this.connection;\n    }\n\n    protected getColumns(tx, schema: Map<string, SQLiteTable>, table_name, table_sql) {\n        let tmp_colArray = [];\n        let columnStr = [];\n        let isView = table_sql.indexOf('CREATE VIEW') > -1;\n        if (!isView) {\n            columnStr = table_sql.split('(')[1].split(',');\n            tmp_colArray = columnStr.map(x => {\n                let isPK = x.toUpperCase().indexOf(\"PRIMARY KEY\") > -1;\n                let name = x.trim().split(' ')[0];\n                let isAutoIncrement = isPK && (x.toUpperCase().indexOf(\"AUTOINCREMENT\") > -1);\n                let type = x.toUpperCase().indexOf(\"INTEGER\") > -1 ? 'Integer' : 'Text';\n                return new SQLiteColumn(name, undefined, type, isPK, isAutoIncrement);\n            })\n        }\n        else {\n            // VIEW\n            let mainTableIndex = table_sql.split(' ').indexOf(\"LEFT\") - 1;\n            let extTableIndex = mainTableIndex + 3;\n            let mainTableName = table_sql.split(' ')[mainTableIndex];\n            let extTableName = table_sql.split(' ')[extTableIndex];\n            let mainTable = schema.get(mainTableName);\n            let extTable = schema.get(extTableName);\n            tmp_colArray = [...mainTable.getColumns(), ...extTable.getColumns()];\n            tmp_colArray = tmp_colArray.reduce((unique, o) => {\n                if (!unique.some(obj => obj.getName() === o.getName())) {\n                    unique.push(o);\n                }\n                return unique;\n            }, []);\n        }\n        let tableObj = new SQLiteTable(table_name, tmp_colArray);\n        schema.set(table_name, tableObj);\n    }\n\n    public runTransaction() {\n        return Observable.create((observer => {\n            let batchArr = this.transactionArr.map((cmd) => [cmd.getSql(), cmd.getParams()]);\n            console.group('run transaction SQL:');\n            console.log('command:', batchArr);\n            console.groupEnd();\n            this.connection.transaction((tx) => {\n                this.transactionArr.forEach(cmd => {\n                    tx.executeSql(cmd.getSql(), cmd.getParams());\n                })\n            }, (error) => {\n                observer.next(new SQLiteResponse({ status: false, msg: error.message }, []));\n                observer.complete();\n                throw new APPError(\"F00018\", error.message);\n            }, () => {\n                observer.next(new SQLiteResponse({ status: true }, []));\n                observer.complete();\n            });\n        }))\n    }\n\n    public clearTransaction() {\n        this.transactionArr = [];\n    }\n}\n","import { SQLiteTable } from \"./SQLiteTable\";\nimport { SQLiteDatabase } from \"./SQLiteDatabase\";\nimport { IDao } from \"./Dao.interface\";\nimport { SQLiteDao } from \"./SQLiteDao\";\nimport { Optional, Inject, Injectable, ErrorHandler } from \"@angular/core\";\nimport { ConfigToken } from \"../../injectionToken/injection-token\";\nimport { DeviceService } from '../device.service';\nimport { v4 as uuid } from 'uuid';\nimport { APPError } from \"../../errorHandler/APPError\";\nimport { WebSQLDao } from \"./WebSQLDao\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaoFactory {\n  private tableMapping: Map<string, Map<string, SQLiteTable>>;\n  private dbMapping: Map<string, IDao>;\n  private constructor(\n    private deviceService: DeviceService,\n    private errorHandler: ErrorHandler,\n    @Optional() @Inject(ConfigToken) private APP_CONFIG) {\n    this.tableMapping = new Map();\n    this.dbMapping = new Map();\n  }\n\n  public getTable(dbName, tableName): SQLiteTable {\n    if (this.tableMapping.has(dbName)) {\n      if (this.tableMapping.get(dbName).has(tableName)) {\n        return this.tableMapping.get(dbName).get(tableName).cloneTable();\n      }\n      else {\n        this.errorHandler.handleError(new APPError(\"F00012\", `Cannot Find table ${tableName} in DB ${dbName}.`))\n        return undefined;\n      }\n    }\n    this.errorHandler.handleError(new APPError(\"F00012\", `Cannot Find table ${tableName} in DB ${dbName}.`));\n    return undefined;\n  }\n\n  public getDefaultTable(tableName): SQLiteTable {\n    return this.getTable(\"Main\", tableName);\n  }\n\n  public getDao(dbName): IDao {\n    console.log('get Dao:', dbName);\n    if (this.dbMapping.has(dbName)) {\n      this.dbMapping.get(dbName).clearTransaction();\n      return this.dbMapping.get(dbName);\n    }\n    else {\n      this.errorHandler.handleError(new APPError(\"F00011\", `Cannot Find Sqlite DB ${dbName} Dao.`))\n      return undefined;\n    }\n\n  }\n\n  public getDefaultDao(): IDao {\n    return this.getDao(\"Main\");\n  }\n\n\n  public async init() {\n    //get each db dao\n    if (this.APP_CONFIG.ENV == 'DEV')\n      return;\n    else {\n      await this.mappingDB();\n    }\n\n  }\n\n  public async refreshTableSchema() {\n    let db_config = this.APP_CONFIG[this.APP_CONFIG.ENV].DATABASE;\n    let db_names = Object.keys(db_config);\n    for (var name of db_names) {\n      await this.getTableSchema(name, db_config);\n    }\n    setTimeout(() => {\n      console.group(\"refreshTableSchema\");\n      console.log(this.dbMapping);\n      console.log(this.tableMapping);\n      console.groupEnd();\n    }, 5000);\n  }\n\n  private async mappingDB() {\n    let db_config = this.APP_CONFIG[this.APP_CONFIG.ENV].DATABASE;\n    let db_names = Object.keys(db_config);\n    for (var name of db_names) {\n      console.log('getSchema:', name);\n      await this.getSchema(name, db_config);\n    }\n\n    setTimeout(() => {\n      console.group(\"mappingDB\");\n      console.log(this.dbMapping);\n      console.log(this.tableMapping);\n      console.groupEnd();\n    }, 5000);\n  }\n\n  private async getSchema(dbname, config): Promise<any> {\n    try {\n      let key = await this.getDatabaseKey(dbname, config);\n      await this.openDatabase(dbname, config, key);\n    } catch (error) {\n      console.warn(\"getSchema error:\", error.message);\n      let err = new APPError(\"F00010\", \"Sqlite DB open error.\");\n      this.errorHandler.handleError(err);\n    };\n  }\n\n  private async getDatabaseKey(dbname, config) {\n    try {\n      let resp = await this.deviceService.getSecureStorage(config[dbname].name).toPromise();\n      console.log(\"getDatabaseKey resp:\", resp);\n      if (resp.includes(\"Device is not secure\")) { //which Device is not secure\n        throw new Error(resp);\n      } else if (resp) { // if have key in keyStore/keyChain\n        return resp;\n      } else {\n        let setKeyResp = await this.deviceService.setSecureStorage(config[dbname].name, uuid()).toPromise();\n        if (setKeyResp) {\n          let key = await this.deviceService.getSecureStorage(config[dbname].name).toPromise();\n          return key;\n        }\n      }\n    } catch (error) {\n      console.log(\"getDatabaseKey error, use localStorage\");\n      if (this.deviceService.getLocalStorage(config[dbname].name)) {\n        return this.deviceService.getLocalStorage(config[dbname].name);\n      } else {\n        let key = uuid();\n        this.deviceService.setLocalStorage(config[dbname].name, key);\n        return key;\n      }\n    }\n\n  }\n\n  private async openDatabase(dbname, config, key: string): Promise<any> {\n    try {\n      let db_config = new SQLiteDatabase(config[dbname].name, key);\n      let dao = await this.createDao(db_config);\n      this.dbMapping.set(config[dbname].name, dao);\n      // await this.getTableSchema(dbname, config);\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError(\"F00010\", error.message));\n    }\n  }\n\n  private async createDao(config: SQLiteDatabase): Promise<IDao> {\n    let dao: IDao;\n    if (this.APP_CONFIG.ENV === 'DEV_WebSQL') {\n      dao = new WebSQLDao(config);\n    }\n    else {\n      dao = new SQLiteDao(config);\n    }\n    await dao.openDataBase();\n    return dao;\n  }\n\n\n  private async getTableSchema(dbname, config): Promise<any> {\n    let tableMap = await this.dbMapping.get(config[dbname].name).getSchema().toPromise();\n    this.tableMapping.set(config[dbname].name, tableMap);\n  }\n\n  public async clearDatabaseData(dbname): Promise<any> {\n    try {\n      let dao = this.dbMapping.get(dbname);\n      if (dao) {\n        let tableMap = this.tableMapping.get(dbname);\n        tableMap.forEach((table, table_name) => {\n          // Not View\n          if (table_name.indexOf('TW_LH_SD') !== -1 && table_name.indexOf('TW_LH_SD_VW') == -1) {\n            dao.transactionDelete(table);\n          }\n        });\n        let resp = await dao.runTransaction().toPromise();\n        console.log(\"clearDatabaseData resp:\", resp);\n      }\n      else {\n        throw new Error(`Cannot find dao ${dbname}.`);\n      }\n    } catch (error) {\n      throw new APPError('F00022', `Clear database error, ${error.message}`);\n    }\n  }\n}\n","import { IRestriction } from '../Restriction.interface';\nexport class NotEqualRestriction implements IRestriction {\n    private column: string;\n    private values: Array<string>;\n    constructor(column, values = []) {\n        this.column = column;\n        this.values = values;\n    }\n    sqlString(): string {\n        return `${this.column} <> ? `;\n    }\n    getValues() {\n        return this.values;\n    }\n}","import { IDao } from \"./Dao.interface\";\nimport { SQLiteTable } from \"./SQLiteTable\";\nimport { Observable, observable } from \"rxjs\";\nimport { NotEqualRestriction } from \"./restrictions/NotEqualRestriction\";\nimport { v4 as uuid } from 'uuid';\nimport { SQLCommand } from \"./SQLCommand\";\nimport { SQLiteResponse } from \"./SQLiteResponse\";\n\n\n\n\nexport class ClientCustomDao implements IDao {\n    private baseDao: IDao;\n    constructor(dao) {\n        this.baseDao = dao;\n    }\n    public openDataBase() {\n        return this.baseDao.openDataBase();\n    }\n\n    public queryByTable(tableObject: SQLiteTable): Observable<SQLiteResponse> {\n        if (tableObject.hasColumn('IsDelete')) {\n            tableObject.addRestriction(new NotEqualRestriction(\"IsDelete\", [\"Y\"]));\n        }\n\n        return this.baseDao.queryByTable(tableObject);\n    }\n\n    public insertByTable(tableObject: SQLiteTable) {\n        let clientID = uuid();\n        if (tableObject.getValue('ClientID') == ''\n            || tableObject.getValue('ClientID') == undefined) {\n            tableObject.setValue(\"ClientID\", clientID);\n        }\n\n        tableObject.setValue(\"ClientTime\", new Date().getTime());\n        tableObject.setValue(\"DataSource\", \"APP\");\n        tableObject.setValue(\"IsDelete\", \"N\");\n        return Observable.create((observer) => {\n            this.baseDao.insertByTable(tableObject).subscribe((resp) => {\n                resp.Header.clientID = clientID;\n                observer.next(resp);\n                observer.complete();\n            });\n        })\n    }\n\n    public updateByTable(tableObject: SQLiteTable): Observable<SQLiteResponse> {\n        tableObject.setValue(\"ClientTime\", new Date().getTime());\n        return this.baseDao.updateByTable(tableObject);\n    }\n\n    public deleteByTable(tableObject: SQLiteTable): Observable<SQLiteResponse> {\n        tableObject.setValue(\"IsDelete\", \"Y\");\n        tableObject.setValue(\"ClientTime\", new Date().getTime());\n        return this.baseDao.updateByTable(tableObject);\n    }\n\n    public excuteSqlCommand(sql_command: Array<SQLCommand>) {\n        return this.baseDao.excuteSqlCommand(sql_command);\n    }\n\n    public getSchema() {\n        return this.baseDao.getSchema();\n    }\n\n    public transactionInsert(tableObject: SQLiteTable) {\n        if (tableObject.getValue('ClientID') == ''\n            || tableObject.getValue('ClientID') == undefined) {\n            tableObject.setValue(\"ClientID\", uuid());\n        }\n\n        tableObject.setValue(\"ClientTime\", new Date().getTime());\n        tableObject.setValue(\"DataSource\", \"APP\");\n        tableObject.setValue(\"IsDelete\", \"N\");\n\n        this.baseDao.transactionInsert(tableObject);\n    }\n\n    public transactionUpdate(tableObject: SQLiteTable) {\n        tableObject.setValue(\"ClientTime\", new Date().getTime());\n        this.baseDao.transactionUpdate(tableObject);\n    }\n\n    public transactionDelete(tableObject: SQLiteTable) {\n        tableObject.setValue(\"IsDelete\", \"Y\");\n        tableObject.setValue(\"ClientTime\", new Date().getTime());\n        this.baseDao.transactionUpdate(tableObject);\n    }\n\n    public transactionSqlCommand(command: SQLCommand) {\n        this.baseDao.transactionSqlCommand(command);\n    }\n\n    public runTransaction() {\n        return this.baseDao.runTransaction();\n    }\n\n    public clearTransaction() {\n        return this.baseDao.clearTransaction();\n    }\n}\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { DaoFactory } from '../../device/sqlite/DaoFactory';\nimport { Location } from '@angular/common';\nimport { IDao } from '../../device/sqlite/Dao.interface';\nimport { SQLiteTable } from '../../device/sqlite/SQLiteTable';\nimport { ClientCustomDao } from '../../device/sqlite/ClientCustomDao';\nimport { SQLiteResponse } from '../../device/sqlite/SQLiteResponse';\n\n\n@Component({\n  selector: 'snd-sqlite-executor',\n  templateUrl: './sqlite-executor.component.html',\n  styleUrls: ['./sqlite-executor.component.scss']\n})\nexport class SqliteExecutorComponent implements OnInit {\n\n  public isHasData: boolean = false;\n  public selectTablesOptionList: Array<SelectOption>;\n  public selectTable: string;\n  public recordLength: number = 0;\n  public responseBody;\n  public tableColumns: Array<string>;\n  public currentDbName: string;\n  public currentTable: string;\n  constructor(\n    private daoFactory: DaoFactory,\n    @Optional() private _location: Location\n  ) { }\n\n  ngOnInit() {\n    let selectOption: Array<SelectOption> = [];\n    for (let item in DATABASE_TABLES) {\n      if (isNaN(Number(item))) {\n          console.log('value:',item ,'  name:' ,DATABASE_TABLES[item]);\n          selectOption.push(new SelectOption(item, DATABASE_TABLES[item]));\n      }\n    }\n\n    this.selectTablesOptionList = selectOption;\n    this.selectTableChange(this.selectTablesOptionList[0].getValue());\n\n  }\n\n  goToLastPage() {\n    this._location.back();\n  }\n\n  refresh() {\n    this.queryBytable(this.currentDbName,this.currentTable);\n  }\n\n  selectTableChange(event: string){\n    console.log(\"selectTableKey: \", event);\n    this.selectTable = event;\n    this.currentTable = DATABASE_TABLES[event]\n    console.log(\"selectTable: \", this.selectTable);\n\n\n    if(event.substring(0,7) == 'Profile') {\n\n      this.currentDbName = 'Profile';\n      this.queryBytable(this.currentDbName, this.currentTable);\n\n    }\n\n    else {\n\n      this.currentDbName = 'Main';\n      this.queryBytable(this.currentDbName, this.currentTable);\n\n    }\n  }\n\n  queryBytable(dbName: string, tableName: string) {\n    console.log(\"dbName: \",dbName, \" tableName: \", tableName);\n    let dao: IDao;\n    let tableObj: SQLiteTable;\n    dao = this.daoFactory.getDao(dbName);\n    dao = new ClientCustomDao(dao);\n    tableObj = this.daoFactory.getTable(dbName, tableName);\n    this.tableColumns = tableObj.getColumns().map(x => x.getName());\n    console.log(\"dao: \",dao);\n    console.log(\"tableObj: \",tableObj);\n    dao.queryByTable(tableObj).subscribe((data: SQLiteResponse)=>{\n    console.log(\"response data: \", data);\n      if(data.Header['status']) {\n        this.recordLength = data.Header['record_length'];\n\n        this.responseBody = data.Body;\n        console.log(\"responseBody: \", this.responseBody);\n        this.responseBody.forEach(element => {\n\n          // console.log(\"element key: \", Object.keys(element));\n          // console.log(\"element values: \", Object.values(element));\n          console.log(\"element: \", element);\n          element.values = Object.values(element);\n        });\n\n        this.isHasData = true;\n      }\n      else {\n        this.isHasData = false;\n        alert(\"fail\");\n      }\n      console.log(\"Sqlite data: \", data);\n    });\n\n    \n\n  }\n\n  \n}\n\nenum DATABASE_TABLES {\n  //TW_LH_SD_Code_Type,\n  Profile_TW_LH_SD_Code = 'TW_LH_SD_Code',\n  Profile_TW_LH_SD_DeviceInfo = 'TW_LH_SD_DeviceInfo',\n  Profile_TW_LH_SD_DataSync_Time = 'TW_LH_SD_DataSync_Time',\n  //Profile_TW_LH_SD_DataSync_Function = 'TW_LH_SD_DataSync_Function',\n  Profile_TW_LH_SD_VW_FuncSync_Time = 'TW_LH_SD_VW_FuncSync_Time',\n  Profile_TW_LH_SD_Language = 'TW_LH_SD_Language',\n  Profile_TW_LH_SD_Error_Log = 'TW_LH_SD_Error_Log',\n  Profile_TW_LH_SD_Action_Log = 'TW_LH_SD_Action_Log',\n  TW_LH_SD_Calendar_Extension = 'TW_LH_SD_Calendar_Extension',\n  TW_LH_SD_Calendar = 'TW_LH_SD_Calendar',\n  TW_LH_SD_Customer_Address_Extension = 'TW_LH_SD_Customer_Address_Extension',\n  TW_LH_SD_Customer_Email_Extension = 'TW_LH_SD_Customer_Email_Extension',\n  TW_LH_SD_Customer_Tel_Extension = 'TW_LH_SD_Customer_Tel_Extension',\n  TW_LH_SD_Customer_Contact_Extension = 'TW_LH_SD_Customer_Contact_Extension',\n  TW_LH_SD_Customer_Extension = 'TW_LH_SD_Customer_Extension',\n  TW_LH_SD_Customer_Address = 'TW_LH_SD_Customer_Address',\n  TW_LH_SD_Customer_Email = 'TW_LH_SD_Customer_Email',\n  TW_LH_SD_Customer_Tel = 'TW_LH_SD_Customer_Tel',\n  TW_LH_SD_Customer_Contact = 'TW_LH_SD_Customer_Contact',\n  TW_LH_SD_Customer = 'TW_LH_SD_Customer',\n  TW_LH_SD_Personal_Setting = 'TW_LH_SD_Personal_Setting',\n  TW_LH_SD_VW_Customer = 'TW_LH_SD_VW_Customer',\n  TW_LH_SD_Message = 'TW_LH_SD_Message',\n\n  //goal-setting & progress table \n  TW_LH_SD_Year_Config = 'TW_LH_SD_Year_Config',\n  TW_LH_SD_Goal_Setting = 'TW_LH_SD_Goal_Setting',\n  TW_LH_SD_Goal_Setting_Value = 'TW_LH_SD_Goal_Setting_Value',\n  TW_LH_SD_Goal_Setting_Plan_Value = 'TW_LH_SD_Goal_Setting_Plan_Value',\n  TW_LH_SD_Goal_Setting_Expected = 'TW_LH_SD_Goal_Setting_Expected',\n  TW_LH_SD_Actual_Value = 'TW_LH_SD_Actual_Value',\n  TW_LH_SD_Agency_Plan_Main = 'TW_LH_SD_Agency_Plan_Main',\n  TW_LH_SD_Agency_Detail_Data = 'TW_LH_SD_Agency_Detail_Data',\n  TW_LH_SD_Personal_Progress = 'TW_LH_SD_Personal_Progress',\n  TW_LH_SD_Team_Progress_Main = 'TW_LH_SD_Team_Progress_Main',\n  TW_LH_SD_Team_Progress_Detail = 'TW_LH_SD_Team_Progress_Detail',\n  TW_LH_SD_Other_Parameter = 'TW_LH_SD_Other_Parameter'\n\n}\n\nclass SelectOption{\n    \n  private _name: string;\n  private _value: string;\n  constructor(value : string, name : string) { \n    this._value = value;\n    this._name = name;\n  }\n\n  public getName(): string {\n      return this._name;\n  }\n\n  public getValue(): string {\n      return this._value;\n  }\n}","import { Injectable, OnInit, Inject, Optional } from '@angular/core';\nimport { DefaultLoginMgr } from '../auth/login/DefaultLoginMgr';\nimport { ILoginMgr } from '../auth/login/LoginMgr.interface';\nimport { LoginMgrToken } from '../injectionToken';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslatePriceService {\n\n  private _role: string = '';\n  private _million: number = 1000000;\n\n\n  constructor(\n    private loginMgr: DefaultLoginMgr,\n  ) {\n\n    this.loginMgr.getLoginInfo().subscribe((info) => {\n      if (info.AppUseMode && info.AppUseMode.length > 0)\n        this._role = info.AppUseMode[info.AppUseMode.length - 1];\n    })\n  }\n\n\n\n\n\n  translatePrice(value: any):string {\n    let isCAOorZONEHEAD = (this._role == 'Manager' || this._role == 'Supervisor');\n    let isValueLegal = !isNaN(Number(value));\n    if (isValueLegal) {\n      return isCAOorZONEHEAD ? this._numberToFix(value / this._million, 1) : value;\n    }\n    else {\n      return value;\n    }\n  }\n\n  private _numberToFix(n: number, toFix: number): number {\n    let powNum = Math.pow(10,toFix);\n    return Math.round(n*powNum)/powNum;\n  }\n\n\n\n\n\n\n}\n","import { Pipe, PipeTransform} from '@angular/core';\nimport { TranslatePriceService } from './translate-price.service';\n\n\n@Pipe({\n  name: 'translatePrice',\n  pure: false\n})\nexport class TranslatePricePipe implements PipeTransform {\n\n  public role: string = '';\n  public million: number = 1000000;\n  constructor(\n    private translatePriceService: TranslatePriceService,\n  ) {\n  }\n\n\n\n  transform(value: any, args?: any): string {\n    return this.translatePriceService.translatePrice(value);\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { TranslatePipe } from './language/translate.pipe';\nimport { NumberFormatPipe } from './numberFormat/numberFormat.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActionDirective } from './auth/action/action.directive';\nimport { SqliteExecutorComponent } from './component/sqlite-executor/sqlite-executor.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TranslatePricePipe } from './price/translatePrice.pipe';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [TranslatePipe, TranslatePricePipe, NumberFormatPipe, ActionDirective, SqliteExecutorComponent],\n  exports: [TranslatePipe, TranslatePricePipe, NumberFormatPipe, ActionDirective, HttpClientModule]\n})\nexport class CoreModule { }\n","export class Language {\n\n    //dashboard \n    performance: string = \"Performance\";\n    team: string = \"Team\";\n    personal: string = \"Personal\";\n    activitiesPoints: string = \"Activities_Points\";\n    monthlyProgress: string = \"Monthly_Progress\";\n    yearlyProgress: string = \"Yearly_Progress\";\n    message: string = \"Message\";\n    progress: string = \"Progress\";\n    goalSettingMsgType: string = \"Goal_Setting\";\n    all: string = \"All\";\n    unread: string = \"Unread\";\n    noMessage: string = \"No_Message\";\n    schedule: string = \"Schedule\";\n    noBirthday: string = \"No_Birthday\";\n\n\n    customerType: string = \"Customer_Type\";\n    customerSource: string = \"Customer_Source\";\n    birthday: string = \"Birthday\";\n    ageRange: string = \"Age_range\";\n    gender: string = \"Gender\";\n    //annualIncome : string = \"Annual_Income(Year/NTD)\";\n    source: string = \"Source\";\n    marriage: string = \"Marriage\";\n    children: string = \"Children\";\n    familiarity: string = \"Familiarity\";\n    recentStatus: string = \"Recent_status\";\n    customerStatus: string = \"Customer_Status\";\n    contactFrequencyMonth: string = \"Contact_Frequency_Month\";\n    possibility: string = \"Possibility\";\n    completeness: string = \"Completeness\";\n\n    contactFrequency: string = \"Contact_Frequency\";\n    timePerYear: string = \"Time_Per_Year\";\n    appointment: string = \"Appointment\";\n    contact: string = \"Contact\";\n    edit: string = \"Edit\";\n    delete: string = \"Delete\";\n    home: string = \"Home\";\n    homepage: string = \"Homepage\";\n    work: string = \"Work\";\n    mobile: string = \"Mobile\";\n    detail: string = \"Detail\";\n    occupation: string = \"Occupation\";\n    company: string = \"Company\";\n    annualIncome: string = \"Annual_Income\";\n    // extraItem : string = \"ExtraItem\";\n    contactNote: string = \"Contact_Note\";\n    add: string = \"Add\";\n    noRecord: string = \"No_Record\";\n    customerList: string = \"Customer_List\";\n    importPhone: string = \"Import_Phone\";\n    people: string = \"People\";\n\n\n    // customer-edit page\n\n    lastName: string = \"Last_name\";\n    firstName: string = \"First_name\";\n    phone: string = \"Phone\";\n    email: string = \"Email\";\n    address: string = \"Address\";\n    country: string = \"Country\";\n    city: string = \"City\";\n    area: string = \"Area\";\n    code: string = \"Code\";\n    // birthday : string = \"Birthday\";\n    age: string = \"Age\";\n    // gender : string = \"Gender\";\n    // occupation : string = \"Occupation\";\n    // company : string =\"Company\";\n    // annualIncome : string =  \"Annual_Income\";\n    select: string = \"Select\";\n    // source : string = \"Source\";\n    // marriage : string = \"Marriage\";\n    // children : string = \"Children\";\n    // familiarity : string = \"Familiarity\";\n    // occupation : string = \"Occupation\";\n    // recentStatus : string = \"Recent_status\";\n    // customerStatus : string = \"Customer_Status\";\n    contactFrequencyYear: string = \"Contact_Frequency_Year\";\n    // possibility : string = \"Possibility\";\n    save: string = \"Save\";\n\n    lastNamePlaceholder: string = \"Last_Name_Placeholder\";\n    firstNamePlaceholder: string = \"First_Name_Placeholder\";\n\n    wrongLastName: string = \"Wrong_Lastname\";\n    wrongEmail: string = \"Wrong_Email\";\n    wrongBirthday: string = \"Wrong_Birthday\";\n\n    // custermer-filter page\n\n    // customerType : string = \"Customer_Type\";\n    // customerSource : string = \"Customer_Source\";\n    // birthday : string = \"Birthday\";\n    // ageRange : string = \"Age_range\";\n    // gender : string = \"Gender\";\n    annualIncomeYearNTD: string = \"Annual_Income(Year/NTD)\";\n    // source : string = \"Source\";\n    // marriage : string = \"Marriage\";\n    // familiarity : string = \"Familiarity\";\n    // customerStatus : string = \"Customer_Status\";\n    // contactFrequencyMonth : string = \"Contact_Frequency_Month\";\n    preset: string = \"Preset\";\n    day: string = \"Day\";\n    week: string = \"Week\";\n    month: string = \"Month\";\n    year: string = \"Year\";\n    today: string = \"Today\";\n    filter: string = \"Filter\";\n    appointmentDetail: string = \"Appointment_Details\";\n    saved: string = \"Saved\";\n    loading: string = \"Loading\";\n    title: string = \"Title\";\n    location: string = \"Location\";\n    activity: string = \"Activity\";\n    date: string = \"Date\";\n    allDay: string = \"All_Day\";\n    from: string = \"From\";\n    to: string = \"To\";\n    alert: string = \"Alert\";\n    remark: string = \"Remark\";\n    yes: string = \"Yes\";\n    no: string = \"No\";\n    deleteAppointment: string = \"Delete_Appointment\";\n    wrongTitle: string = \"wrong_Title\";\n    wrongAlert: string = \"Wrong_Alert\";\n    alertPlaceholder: string = \"Alert_Placeholder\";\n    wrongTitleRequired: string = \"Wrong_Title_Require\";\n    wrongActivityRequired: string = \"Wrong_Activity_Required\";\n    wrongDate: string = \"Wrong_Date\";\n    wrongTime: string = \"Wrong_Time\";\n    wrongStartTime: string = \"Wrong_Start_Time\";\n    wrongEndTime: string = \"Wrong_End_Time\";\n    wrongAlertRequired: string = \"Wrong_Alert_Require\";\n    noSchedule: string = \"No_Schedule\";\n\n\n    // customer-list page\n\n    customerInformation: string = \"Customer_Information\";\n    click: string = \"Click\";\n    noEdit: string = \"No_Edit\";\n    noSearch: string = \"No_Search\";\n    noFilter: string = \"No_Filter\";\n\n    // customer page \n\n    import: string = \"Import\";\n    customerFilter: string = \"Customer_Filter\";\n    clear: string = \"CLEAR\";\n    selectNumber: string = \"Select_Number\";\n    // save : string = \"Save\";\n    // contactNote : string = \"Contact_Note\";\n    cancel: string = \"Cancel\";\n    protectionTitle: string = \"Protection_Title\";\n    deleteMessage: string = \"Delete_Message\";\n    customer: string = \"Customer\";\n    deleteProtectionTitle: string = \"Delete_Protection_Title\";\n    updateProtectionTitle: string = \"Update_Protection_Title\";\n    commentRemindTitle: string = \"Comment_Remind_Title\";\n    confirm: string = \"Confirm\";\n    completed: string = \"Completed\";\n    searchPlaceholder: string = \"Search_Placeholder\";\n    notePlaceholder: string = \"Note_Placeholder\";\n    logOut: string = \"Log_Out\";\n    noClick: string = \"No_Click\";\n    noInformation: string = \"No_Information\";\n    moreOption: string = \"More_Option\";\n    empty: string = \"Empty\";\n    calendarMore: string = \"Calendar_More\";\n    mainMenu: string = \"Main_Menu\";\n    have: string = \"Have\";\n    appointments: string = \"Appointments\";\n    anAppointment: string = \"An_Appointment\";\n    notification: string = \"Notification\";\n    language: string = \"Language\";\n    version: string = \"Version\";\n    contactMessage: string = \"Contact_Message\";\n    welcome: string = \"Welcome\";\n    accountPassword: string = \"Account_Password\";\n    nationalID: string = \"National_ID\";\n    password: string = \"Password\";\n    forgotPassword: string = \"Forgot_Password\";\n    login: string = \"Login\";\n    pleaseWait: string = \"Please_Wait\";\n    changeLanguage: string = \"Change_Language\";\n    fontSize: string = \"Font_Size\";\n    changeFontSize: string = \"Change_Font_Size\";\n    updateTime: string = \"Update_Time\";\n    seeDetails: string = \"See_Details\";\n    fileDownload: string = \"File_Download\";\n    signIn: string = \"Sign_In\";\n    loadingMessage: string = \"Landing_Message\";\n    load: string = \"Load\";\n    agencyPlanSubtitle: string = \"Agency_Plan_Subtitle\";\n    agencyPlanOverviewTitle: string = \"Agency_Plan_Overview_Title\";\n    FYFCForecast: string = \"FYFC_Forecast\";\n    FYFCActual: string = \"FYFC_Actual\";\n    FYFCMonthPlan: string = \"FYFC_Month_Plan\";\n    ANPForecast: string = \"ANP_Forecast\";\n    ANPActual: string = \"ANP_Actual\";\n    ANPMonthPlan: string = \"ANP_Month_Plan\";\n    manpowerPlan: string = \"Manpower_Plan\";\n    recruitmentPlan: string = \"Recruitment_Plan\";\n    manpower: string = \"Manpower\";\n    recruitment: string = \"Recruitment\";\n    FYFCGoal: string = \"FYFC_Goal\";\n    directUnit: string = \"Direct_Unit\";\n    agencyPlanInformationTitle: string = \"Agency_Plan_Information_Title\";\n    yellow: string = \"Yellow\";\n    agencyPlanInformation: string = \"Agency_Plan_Information\";\n    agencyPlanExpected: string = \"Agency_Plan_Expected\";\n    teamGoal: string = 'Team_Goal';\n    Q1: string = \"Q1\";\n    Q2: string = \"Q2\";\n    Q3: string = \"Q3\";\n    Q4: string = \"Q4\";\n    recruitmentTotal: string = \"Recruitment_Total\";\n    indirectUnit: string = \"Indirect_Unit\";\n    ANPGoal: string = \"ANP_Goal\";\n    saveFile: string = \"Save_File\";\n    agencyPlan: string = \"Agency_Plan\";\n    FYFC: string = \"FYFC\";\n    ANP: string = \"ANP\";\n    recruitmentCommitment: string = \"Recruitment_Commitment\";\n    caseCount: string = \"Case_Count\";\n    averageFYFCPerCase: string = \"Average_FYFC_Per_Case\";\n    averageANPPerCase: string = \"Average_ANP_Per_Case\";\n    manpowerGoal: string = \"Manpower_Goal\";\n    reset: string = \"Reset\";\n\n\n    thisYearTitle: string = \"This_Year_Title\";\n    variableYearTitle: string = \"Variable_Year_Title\";\n    yourAgencyGoal: string = \"Your_Agency_Goal\";\n\n    annualConvention: string = \"Annual_Convention\";\n    promotionPlan: string = \"Promotion_Plan\";\n    MDRT: string = \"MDRT\";\n    goalEffectiveMonth: string = \"Goal_Effective_Month\";\n    allYearGoal: string = \"All_Year_Goal\";\n    monthGoal: string = \"Month_Goal\";\n    allianzStarClub: string = \"Allianz_Star_Club\";\n    summitTrip: string = \"Summit_Trip\";\n    longTermIncentiveTripProgram: string = \"Long_Term_Incentive_Trip_Program\";\n    COT: string = \"COT\";\n    TOT: string = \"TOT\";\n    SP: string = \"SP\";\n    AM: string = \"AM\";\n    SM: string = \"SM\";\n    dashDash: string = \"Dash_Dash\";\n    personalMonthlyPlanFYFC: string = \"Personal_Monthly_Plan_FYFC\";\n    plan: string = \"Plan\";\n    actual: string = \"Actual\";\n    overviewStep3Title: string = \"Overview_Step3_Title\";\n    find: string = \"Find\";\n    meet: string = \"Meet\";\n    submit: string = \"Submit\";\n    inforce: string = \"Inforce\";\n    daily: string = \"Daily\";\n    weekly: string = \"Weekly\";\n    monthly: string = \"Monthly\";\n    approvalStatus: string = \"Approval_Status\";\n    goalBeenApproval: string = \"Goal_Been_Approval\";\n    adjustYourGoal: string = \"Adjust_Your_Goal\";\n    proceedToProgress: string = \"Proceed_To_Progress\";\n    teamMonthlyPlanFYFCTitle: string = \"Team_Monthly_Plan_FYFC_Title\";\n    completionRate: string = \"Completion_Rate\";\n    editPersonalPlanFYFCTitle: string = \"Edit_Personal_Plan_FYFC_Title\";\n    goalBeenReject: string = \"Goal_Been_Reject\";\n    goalBeenPend: string = \"Goal_Been_Pend\";\n    needToBeRecommentTitle: string = \"Need_To_Be_Recomment_Title\";\n    needToBeRecommentContent: string = \"Need_To_Be_Recomment_Content\";\n    workingExperience: string = \"Working_Experience\";\n    goalSettingStep1Title: string = \"Goal_Setting_Step1_Title\";\n    goalSettingStep2Title: string = \"Goal_Setting_Step2_Title\";\n    goalSettingStep3Title: string = \"Goal_Setting_Step3_Title\";\n    goalSettingStep4Title: string = \"Goal_Setting_Step4_Title\";\n    goalSettingStep5Title: string = \"Goal_Setting_Step5_Title\";\n    statusBarStep1: string = \"Status_Bar_Step1\";\n    statusBarStep2: string = \"Status_Bar_Step2\";\n    statusBarStep3: string = \"Status_Bar_Step3\";\n    statusBarStep4: string = \"Status_Bar_Step4\";\n    statusBarStep5: string = \"Status_Bar_Step5\";\n    FYFCAllYear: string = \"FYFC_All_Year\";\n    FYFCNowToYearEnd: string = \"FYFC_Now_To_Year_End\";\n    NowToYearEnd: string = \"Now_To_Year_End\";\n    yourGoal: string = \"Your_Goal\";\n    comment: string = \"Comment\";\n    findSubtitle: string = \"Find_Subtitle\";\n    scheduleSubtitle: string = \"Schedule_Subtitle\";\n    meetSubtitle: string = \"Meet_Subtitle\";\n    submitSubtitle: string = \"Submit_Subtitle\";\n    inforceSubtitle: string = \"Inforce_Subtitle\";\n    reject: string = \"Reject\";\n    approve: string = \"Approve\";\n    commitmentTeamGoalTitle: string = \"Commitment_Team_Goal_Title\";\n    CommitmentPlaceholder: string = \"Commitment_Placeholder\";\n    progressCongratulationsMessage: string = \"Progress_Congratulations_Message\";\n    month1: string = 'Month_1';\n    month2: string = 'Month_2';\n    month3: string = 'Month_3';\n    month4: string = 'Month_4';\n    month5: string = 'Month_5';\n    month6: string = 'Month_6';\n    month7: string = 'Month_7';\n    month8: string = 'Month_8';\n    month9: string = 'Month_9';\n    month10: string = 'Month_10';\n    month11: string = 'Month_11';\n    month12: string = 'Month_12';\n    times: string = \"Times\";\n    hi: string = \"Hi\";\n    go: string = \"Go\";\n    goalSettingExcel: string = \"Goal_Setting_Excel\";\n    setGoalThisYear: string = \"Set_Goal_This_Year\";\n    next: string = \"Next\";\n    case: string = \"Case\";\n    ok: string = \"Ok\";\n    skip: string = \"Skip\";\n    goalSettingCreateCustomer: string = \"Goal_Setting_Create_Customer\";\n    goalSettingCustomerJournal: string = \"Goal_Setting_Customer_Journal\";\n    goalSettingActivityType: string = \"Goal_Setting_Activity_Type\";\n    goalSettingFastQuotation: string = \"Goal_Setting_Fast_Quotation\";\n    submission: string = \"Submission\";\n    goalSettingInforcePolicy: string = \"Goal_Setting_Inforce_Policy\";\n    FYFCShortfall: string = \"FYFC_Shortfall\";\n    ANPActualVariable: string = \"ANP_Actual_Variable\";\n    ANPAllYear: string = \"ANP_All_Year\";\n    ANPNowToYearEnd: string = \"ANP_Now_To_Year_End\";\n    pendingApproval: string = \"Pending_Approval\";\n    dashboardMonth7: string = \"Dashboard_Month_7\";\n\n    //progress\n    points: string = \"Points\";\n    congratulationsMsg: string = 'Progress_Congratulations_Message';\n    almostMadeItMsg: string = 'Progress_Almost_Made_It_Message';\n    wellDoneMsg: string = 'Progress_Well_Done_Message';\n    greatJobMsg: string = 'Progress_Great_Job_Message';\n    quarter: string = 'Quarter';\n    backToProgressBtnText: string = 'Back_To_Progress';\n    goal: string = 'Goal';\n    forecast: string = 'Forecast';\n    shortfall: string = 'Shortfall';\n\n    //progres activity\n    activitiesText = 'Activities';\n    achieveText = 'Achieve';\n    actualGoal = 'Actual_Goal';//\n    actualPlan = 'Actual_Plan';//\n    meetPresentText = 'Meet_Present';\n    monthlyPlanFYFCTitleText = 'Monthly_Plan_FYFC_Title';\n    totalForecastTitle = 'Total_Forecast';\n    totalYTDActualTitle = 'Total_YTD_Actual';\n    directUnitTitle = 'Direct_Unit_Title';\n    indirectUnitTitle = 'Indirect_Unit_Title';\n    agencyTitle = 'Agency_Title';\n    allZoneTitle = 'All_Zone_Title';\n\n    //infomation\n    informationDescriptionText: string = 'Info_Information_Description';\n    infoTitle: string = 'Info_Title';\n    infoMonthDetailText: string = 'Info_Month_Detail';\n    infoQuarterDetailText: string = 'Info_Quarter_Detail';\n    infoYearDetailText: string = 'Info_Year_Detail';\n    infoForecastRecruitmentDetailText: string = 'Info_Forecast_Recruitment_Detail';\n    infoHowToReadThisTitle: string = 'Info_How_To_Read_This';\n    infoConversionRateText: string = 'Info_Conversion_Rate';\n    infoConversionRateDetailText: string = 'Info_Conversion_Rate_Detail';\n    infoActivityLabelText: string = 'Info_Activity_Label';\n    infoRedMeanText: string = 'Info_Red_Mean';\n    infoGreyMeanText: string = 'Info_Grey_Mean';\n    infoIfAnActivity1Text: string = 'Info_If_An_Activity_1';\n    infoIfAnActivity2Text: string = 'Info_If_An_Activity_2';\n    infoToFindText: string = 'Info_To_Find';\n    infoTryTo1Text: string = 'Info_Try_To_1';\n    infoTryTo2Text: string = 'Info_Try_To_2';\n    infoTryTo3Text: string = 'Info_Try_To_3';\n    infoMoreActive1Text: string = 'Info_More_Active_1';\n    infoMoreActive2Text: string = 'Info_More_Active_2';\n    infoMoreActive3Text: string = 'Info_More_Active_3';\n    infoMoreActive4Text: string = 'Info_More_Active_4';\n    infoTryHard1Text: string = 'Info_Try_Hard_1';\n    infoTryHard2Text: string = 'Info_Try_Hard_2';\n    infoTryHard3Text: string = 'Info_Try_Hard_3';\n    infoHighQuality1Text: string = 'Info_High_Quality_1';\n    infoHighQuality2Text: string = 'Info_High_Quality_2';\n    infoAllAmountCountsByMillion: string = \"Info_All_Amount_Counts_By_Million\";\n    waitingApproval: string = \"Waiting_Approval\";\n    complete: string = \"Complete\";\n\n    //notification\n    needToGoalSettingTitle: string = \"Need_To_Goal_Setting_Title\";\n    goalAutoApproveMessageTitle: string = \"Goal_Auto_Approve_Message_Title\";\n    goalAutoApproveMessageDesc: string = \"Goal_Auto_Approve_Message_Desc\";\n    goalAutoApproveLeaderMessageTitle: string = \"Goal_Auto_Approve_Leader_Message_Title\";\n    goalAutoApproveLeaderMessageDesc: string = \"Goal_Auto_Approve_Leader_Message_Desc\";\n    approveGoalIsRejectTitle: string = \"Approve_Goal_Is_Reject_Title\";\n    approveGoalIsRejectBody: string = \"Approve_Goal_Is_Reject_Body\";\n    approveGoalIsApprovedTitle: string = \"Approve_Goal_Is_Approved_Title\";\n    approveGoalIsApprovedBody: string = \"Approve_Goal_Is_Approved_Body\";\n    pendingReviewTitle: string = \"Pending_Review_Title\";\n    supervisorHaveChangeAgentTitle: string = \"Supervisor_Have_Change_Agent_Title\";\n    supervisorHaveChangeAgentBody: string = \"Supervisor_Have_Change_Agent_Body\";\n    supervisorHaveChangeOldTitle: string = \"Supervisor_Have_Change_Old_Title\";\n    supervisorHaveChangeOldBody: string = \"Supervisor_Have_Change_Old_Body\";\n    supervisorHaveChangeNewTitle: string = \"Supervisor_Have_Change_New_Title\";\n    supervisorHaveChangeNewBody: string = \"Supervisor_Have_Change_New_Body\";\n    goalAutoRejectMessageTitle: string = \"Goal_Auto_Reject_Message_Title\";\n    goalAutoRejectMessageDescription: string = \"Goal_Auto_Reject_Message_Description\";\n    goalAutoRejectLeaderMessageTitle: string = \"Goal_Auto_Reject_Leader_Message_Title\";\n    goalAutoRejectLeaderMessageDescription: string = \"Goal_Auto_Reject_Leader_Message_Description\";\n    activityTenPointTitle: string = \"Activity_Ten_Point_Title\";\n    activityTenPointBody: string = \"Activity_Ten_Point_Body\";\n    activityTwentyPointTitle: string = \"Activity_Twenty_Point_Title\";\n    activityTwentyPointBody: string = \"Activity_Twenty_Point_Body\";\n    activityMiniPointTitle: string = \"Activity_Mini_Point_Title\";\n    activityMiniPointBody: string = \"Activity_Mini_Point_Body\";\n    customerOvertimeTitle: string = \"Customer_Overtime_Title\";\n    customerAutoDeleteTitle: string = \"Customer_Auto_Delete_Title\";\n    goalPeriodNotStartTitle: string = \"Goal_Period_Not_Start_Title\";\n    goalPeriodNotStartBody: string = \"Goal_Period_Not_Start_Body\";\n    adjustGoal: string = \"Adjust_Goal\";\n    seeProgress: string = \"See_Progress\";\n    IGotIt: string = \"I_Got_It\";\n    dataPrivacyProtectionTitle: string = \"Data_Privacy_Protection_Title\";\n    dataPrivacyProtectionBody: string = \"Data_Privacy_Protection_Body\";\n    pleaseReconnectInternet: string = \"Please_Reconnect_Internet\";\n    dataCollectionProcessAndUsageTitle: string = \"Data_Collection_Process_And_Usage_Title\";\n    dataCollectionProcessAndUsageBody: string = \"Data_Collection_Process_And_Usage_Body\";\n    versionMessage: string = \"Version_Message\";\n    timeOut: string = \"Time_Out\";\n    versionUpdate: string = \"Version_Update\";\n    later: string = \"Later\";\n    noWifiConnected: string = \"No_Wifi_Connected\";\n    pleaseConnectInternet: string = \"Please_Connect_Internet\";\n    deleteDataTitle: string = \"Delete_Data_Title\";\n    deleteDataBody: string = \"Delete_Data_Body\";\n    notShowMessage: string = \"Not_Show_Message\";\n    languageConversionTitle: string = \"Language_Conversion_Title\";\n    languageConversionBody: string = \"Language_Conversion_Body\";\n    customersUnit:string = \"Customers_Unit\";\n    casesUnit:string = \"Cases_Unit\";\n    todayScheduleBirthday: string = \"Today_Schedule_Birthday\";\n    yearUnit: string = \"Year_Unit\";\n    vertical: string = \"Vertical\";\n    horizonal: string = \"Horizonal\";\n    addProtection: string = \"Add_Protection\";\n    more: string = \"More\";\n    submitDeal: string = \"Submit_Deal\";\n    progressGoToCalendar: string = \"Progress_Go_To_Calendar\";\n\n    homeHi: string = \"Home_Hi\";\n    homeAppointmentDetails: string = \"Home_Appointment_Details\";\n    homeEdit: string = \"Home_Edit\";\n    homeDelete: string = \"Home_Delete\";\n    homeAppointment: string = \"Home_Appointment\";\n    homeSave: string = \"Home_Save\";\n    homeFYFC: string = \"Home_FYFC\";\n    homeANP: string = \"Home_ANP\";\n    homeConfirm: string = \"Home_Confirm\";\n    homePersonal: string = \"Home_Personal\";\n    homeTeam: string = \"Home_Team\";\n    homeDetails: string = \"Home_Details\";\n    homeToday: string = \"Home_Today\";\n    homeSchedule: string = \"Home_Schedule\";\n    homeBirthday: string = \"Home_Birthday\";\n\n    customerClear: string = \"Customer_Clear\";\n    customerAppointment: string = \"Customer_Appointment\";\n    customerContact: string = \"Customer_Contact\";\n    customerEdit: string = \"Customer_Edit\";\n    customerDelete: string = \"Customer_Delete\";\n    customerAdd: string = \"Customer_Add\";\n    addProfile: string = \"Add_Profile\";\n    customerSave: string = \"Customer_Save\";\n    customerConfirm: string = \"Customer_Confirm\";\n    customerDetail: string = \"Customer_Detail\";\n\n    unbindDevice: string = \"Unbind_Device\";\n    unbind: string = \"Unbind\";\n    settingSeeDetails: string = \"Setting_See_Details\";\n\n    goalSettingReset: string = \"Goal_Setting_Reset\";\n    goalSettingNext: string = \"Goal_Setting_Next\";\n    goalSettingSubmit: string = \"Goal_Setting_Submit\";\n    goalSettingFind: string = \"Goal_Setting_Find\";\n    goalSettingFindSubtitle: string = \"Goal_Setting_Find_Subtitle\";\n    goalSettingSchedule: string = \"Goal_Setting_Schedule\";\n    goalSettingScheduleSubtitle: string = \"Goal_Setting_Schedule_Subtitle\";\n    goalSettingMeetPresent: string = \"Goal_Setting_Meet_Present\";\n    goalSettingMeetPresentSubtitle: string = \"Goal_Setting_Meet_Present_Subtitle\";\n    goalSettingSubmitDeal: string = \"Goal_Setting_Submit_Deal\";\n    goalSettingSubmitDealSubtitle: string = \"Goal_Setting_Submit_Deal_Subtitle\";\n    goalSettingInforce: string = \"Goal_Setting_Inforce\";\n    goalSettingInforceSubtitle: string = \"Goal_Setting_Inforce_Subtitle\";\n    goalSettingDaily: string = \"Goal_Setting_Daily\";\n    goalSettingWeekly: string = \"Goal_Setting_Weekly\";\n    goalSettingMonthly: string = \"Goal_Setting_Monthly\";\n    goalSettingDay: string = \"Goal_Setting_Day\";\n    goalSettingWeek: string = \"Goal_Setting_Week\";\n    goalSettingMonth: string = \"Goal_Setting_Month\";\n    goalSettingActual: string = \"Goal_Setting_Actual\";\n    goalSettingFYFC: string = \"Goal_Setting_FYFC\";\n    goalSettingANP: string = \"Goal_Setting_ANP\";\n    goalSettingManpower: string = \"Goal_Setting_Manpower\";\n    goalSettingRecruitment: string = \"Goal_Setting_Recruitment\";\n    goalSettingPersonal: string = \"Goal_Setting_Personal\";\n    goalSettingTeam: string = \"Goal_Setting_Team\";\n    goalSettingClear: string = \"Goal_Setting_Clear\";\n    goalSettingSave: string = \"Goal_Setting_Save\";\n    goalSettingPlan: string = \"Goal_Setting_Plan\";\n    goalSettingSeeDetails: string = \"Goal_Setting_See_Details\";\n    goalSettingLandingHi: string = \"Goal_Setting_Landing_Hi\";\n    goalSettingCalendarJournal: string = \"Goal_Setting_Calendar_Journal\";\n\n    calendarFilter: string = \"Calendar_Filter\";\n    calendarActivity: string = \"Calendar_Activity\";\n    calendarCustomerName: string = \"Calendar_Customer_Name\";\n    calendarAppointmentDetails: string = \"Calendar_Appointment_Details\";\n    calendarEdit: string = \"Calendar_Edit\";\n    calendarDelete: string = \"Calendar_Delete\";\n    calendarAppointment: string = \"Calendar_Appointment\";\n    calendarSave: string = \"Calendar_Save\";\n    calendarDay: string = \"Calendar_Day\";\n    calendarWeek: string = \"Calendar_Week\";\n    calendarMonth: string = \"Calendar_Month\";\n    calendarYear: string = \"Calendar_Year\";\n    calendarToday: string = \"Calendar_Today\";\n\n    progressWeek: string = \"Progress_Week\";\n    progressToday: string = \"Progress_Today\";\n\n    progressPersonal: string = \"Progress_Personal\";\n    progressTeam: string = \"Progress_Team\";\n    progressMonth: string = \"Progress_Month\";\n    progressQuarter: string = \"Progress_Quarter\";\n    progressYear: string = \"Progress_Year\";\n    progressFYFC: string = \"Progress_FYFC\";\n    progressANP: string = \"Progress_ANP\";\n    progressFind: string = \"Progress_Find\";\n    progressFindSubtitle: string = \"Progress_Find_Subtitle\";\n    progressSchedule: string = \"Progress_Schedule\";\n    progressScheduleSubtitle: string = \"Progress_Schedule_Subtitle\";\n    progressMeetPresent: string = \"Progress_Meet_Present\";\n    progressMeetPresentSubtitle: string = \"Progress_Meet_Present_Subtitle\";\n    progressSubmitDeal: string = \"Progress_Submit_Deal\";\n    progressSubmitDealSubtitle: string = \"Progress_Submit_Deal_Subtitle\";\n    progressInforce: string = \"Progress_Inforce\";\n    progressInforceSubtitle: string = \"Progress_Inforce_Subtitle\";\n    progressPlan: string = \"Progress_Plan\";\n    progressActual: string = \"Progress_Actual\";\n    progressGoal: string = \"Progress_Goal\";\n    progressForecast: string = \"Progress_Forecast\";\n    progressShortfall: string = \"Progress_Shortfall\";\n    progressManpower: string = \"Progress_Manpower\";\n    progressRecruitment: string = \"Progress_Recruitment\";\n    progressCurrentMonth: string = \"Progress_Current_Month\";\n    progressCurrentQuarter: string = \"Progress_Current_Quarter\";\n    progressCurrentYear: string = \"Progress_Current_Year\";\n    progressForecastRecruitment: string = \"Progress_Forecast_Recruitment\";\n    progressClose: string = \"Progress_Close\";\n    progressSeeDetails: string = \"Progress_See_Details\";\n    progressDetail: string = \"Progress_Detail\";\n\n    settingYes: string = \"Setting_Yes\";\n    settingNo: string = \"Setting_No\";\n\n    detectScreenshotTitle: string = \"Detect_Screenshot_Title\";\n    detectScreenshotContent: string = \"Detect_Screenshot_Content\";\n    noContactPermissionTitle: string = \"No_Contact_Permission_Title\";\n    noContactPermissionContent: string = \"No_Contact_Permission_Content\";\n    submitFailTitle: string = \"Submit_Fail_Title\";\n    submitFailContent: string = \"Submit_Fail_Content\";\n    notificationSeeProgress: string = \"Notification_See_Progress\";\n    notificationSaveFeedback: string = \"Notification_Save_Feedback\";\n    notificationDeleteFeedback: string = \"Notification_Delete_Feedback\";\n    notificationCompleteFeedback: string = \"Notification_Complete_Feedback\";\n\n\n    //message 1, 2\n    goalPeriodNotStartOk: string = \"Goal_Period_Not_Start_Ok\";\n\n    //message 3 \n    goalPeriodIsBeginOk: string = \"Goal_Period_Is_Begin_Ok\";\n\n    //message 5 \n    needToGoalSettingAdjustGoal: string = \"Need_To_Goal_Setting_Adjust_Goal\";\n\n    //message 6 \n    goalAutoApproveAdjustGoal: string = \"Goal_Auto_Approve_Adjust_Goal\";\n\n    //messsage 7 \n    goalAutoApproveLeaderOk: string = \"Goal_Auto_Approve_Leader_Ok\";\n\n    //messaage 8\n    approveGoalIsRejectAdjustGoal: string = \"Approve_Goal_Is_Reject_Adjust_Goal\";\n\n    //message 9\n    approveGoalIsApprovedOk: string = \"Approve_Goal_Is_Approved_Ok\";\n\n    //message 11\n    pendingReviewAgencyPlan: string = \"Pending_Review_Agency_Plan\";\n\n    //message 12\n    supervisorHaveChangeAgentOk: string = \"Supervisor_Have_Change_Agent_Ok\";\n\n    //message 13\n    supervisorHaveChangeOldOk: string = \"Supervisor_Have_Change_Old_Ok\";\n\n    //message 14\n    supervisorHaveChangeNewAgencyPlan: string = \"Supervisor_Have_Change_New_Agency_Plan\";\n\n    //message 15\n    goalAutoRejectAdjustGoal: string = \"Goal_Auto_Reject_Adjust_Goal\";\n\n    //message 16\n    goalAutoRejectLeaderOk: string = \"Goal_Auto_Reject_Leader_Ok\";\n\n    //message 21\n    dataPrivacyProtectionConfirm: string = \"Data_Privacy_Protection_Confirm\";\n\n    // message 23\n    customerOvertimeConfirm: string = \"Customer_Overtime_Confirm\";\n\n    //message 24\n    customerAutoDeleteConfirm: string = \"Customer_Auto_Delete_Confirm\";\n\n    //message 28\n    noWifiConnectedOk: string = \"No_Wifi_Connected_Ok\";\n\n    //message 29\n    versionUpdateYes: string = \"Version_Update_Yes\";\n    versionUpdateLater: string = \"Version_Update_Later\";\n\n    //message 30\n    timeOutOk: string = \"Time_Out_Ok\";\n\n    //message 31\n    dataCollectionProcessAndUsageReject: string = \"Data_Collection_Process_And_Usage_Reject\";\n    dataCollectionProcessAndUsageConfirm: string = \"Data_Collection_Process_And_Usage_Confirm\";\n\n    //message 38\n    detectScreenshotOk: string = \"Detect_Screenshot_Ok\";\n\n    //not on master file\n    submitFailOk: string = \"Submit_Fail_Ok\";\n    noContactPermissionOk: string = \"No_Contact_Permission_Ok\";\n    httpErrorOk: string = \"HTTP_Error_Ok\";\n\n\n\n\n\n\n\n\n}\n","import { Injectable, ErrorHandler, Optional, Inject } from \"@angular/core\";\nimport { IInitTask } from \"../interface/InitialTask.interface\";\nimport { SQLCommand } from \"../../device/sqlite/SQLCommand\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { registerDataSyncFuncToken } from \"../../injectionToken\";\nimport { IregisterDataSyncFunc } from \"../interface/registerDataSyncFunc.interface\";\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DataSyncTask implements IInitTask {\n\n    constructor(\n        private errorHandler: ErrorHandler,\n        private DaoFactory: DaoFactory,\n        @Inject(registerDataSyncFuncToken) private registerDataSyncFunc: IregisterDataSyncFunc\n    ) { }\n    public async doTask(): Promise<any> {\n        try {\n            await this.createTable();\n        } catch (error) {\n            console.warn('cannot run datasync!');\n            this.errorHandler.handleError(error);\n        }\n    }\n\n    public async refreshSchema() {\n        await this.DaoFactory.refreshTableSchema();\n    }\n\n    private async createTable(): Promise<any> {\n        console.log('create table task')\n        let factory = this.DaoFactory;\n        //initial DB\n        await factory.init();\n        console.log('factory init finish!');\n        let ProfileDao = factory.getDao(\"Profile\");\n        let MainDao = factory.getDefaultDao();\n        if (ProfileDao && MainDao) {\n            await Promise.all([this.runSql(ProfileDao, this.createProfileTableCommand()), this.runSql(MainDao, this.createMainTableCommand())]);\n            await factory.refreshTableSchema();\n        }\n    }\n\n    private runSql(dao, cmd: Array<string>): Promise<any> {\n        let SqlCommandArray = [];\n        for (let command of cmd) {\n            SqlCommandArray.push(new SQLCommand(command, []));\n        }\n        return new Promise((res, rej) => {\n            dao.excuteSqlCommand(SqlCommandArray).subscribe((resp) => {\n                console.log('create table res:', resp);\n                res();\n            });\n        })\n    }\n\n    public createProfileTableCommand(): Array<string> {\n        let cmd = [];\n        // cmd.push(\"DROP TABLE IF EXISTS TW_LH_SD_Code;\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Code (TypeID TEXT,Code TEXT,MappingID TEXT,Orders INT NOT NULL,Arguments TEXT,ValidityPeriod INT NOT NULL,PRIMARY KEY (TypeID, Code, MappingID));\");\n\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Type\\' , \\'N\\' , \\'NormalType\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Type\\' , \\'Y\\' , \\'FavoriteType\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'Today\\' , \\'Today\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'1\\' , \\'Jan\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'2\\' , \\'Feb\\' , 3 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'3\\' , \\'Mar\\' , 4 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'4\\' , \\'Apr\\' , 5 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'5\\' , \\'May\\' , 6 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'6\\' , \\'Jun\\' , 7 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'7\\' , \\'Jul\\' , 8 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'8\\' , \\'Aug\\' , 9 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'9\\' , \\'Sep\\' , 10 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'10\\' , \\'Oct\\' , 11 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'11\\' , \\'Nov\\' , 12 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Birthday\\' , \\'12\\' , \\'Dec\\' , 13 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'1\\' , \\'Completeness1_10\\' , 1 , \\'{\\\"start\\\":1,\\\"end\\\":10}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'2\\' , \\'Completeness11_20\\' , 2 , \\'{\\\"start\\\":11,\\\"end\\\":20}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'3\\' , \\'Completeness21_30\\' , 3 , \\'{\\\"start\\\":21,\\\"end\\\":30}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'4\\' , \\'Completeness31_40\\' , 4 , \\'{\\\"start\\\":31,\\\"end\\\":40}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'5\\' , \\'Completeness41_50\\' , 5 , \\'{\\\"start\\\":41,\\\"end\\\":50}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'6\\' , \\'Completeness51_60\\' , 6 , \\'{\\\"start\\\":51,\\\"end\\\":60}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'7\\' , \\'Completeness61_70\\' , 7 , \\'{\\\"start\\\":61,\\\"end\\\":70}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'8\\' , \\'Completeness71_80\\' , 8 , \\'{\\\"start\\\":71,\\\"end\\\":80}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'9\\' , \\'Completeness81_90\\' , 9 , \\'{\\\"start\\\":81,\\\"end\\\":90}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Completeness\\' , \\'10\\' , \\'Completeness91_100\\' , 10 , \\'{\\\"start\\\":91,\\\"end\\\":100}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Age\\' , \\'1\\' , \\'AgeRange0_15\\' , 1 , \\'{\\\"start\\\":0,\\\"end\\\":15}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Age\\' , \\'2\\' , \\'AgeRange16_24\\' , 2 , \\'{\\\"start\\\":16,\\\"end\\\":24}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Age\\' , \\'3\\' , \\'AgeRange25_34\\' , 3 , \\'{\\\"start\\\":25,\\\"end\\\":34}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Age\\' , \\'4\\' , \\'AgeRange35_44\\' , 4 , \\'{\\\"start\\\":35,\\\"end\\\":44}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Age\\' , \\'5\\' , \\'AgeRange45_54\\' , 5 , \\'{\\\"start\\\":45,\\\"end\\\":54}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Age\\' , \\'6\\' , \\'AgeRange55_More\\' , 6 , \\'{\\\"start\\\":55,\\\"end\\\":999}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Gender\\' , \\'1\\' , \\'Male\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Gender\\' , \\'2\\' , \\'Female\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Income\\' , \\'1\\' , \\'Income40\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Income\\' , \\'2\\' , \\'Income41_60\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Income\\' , \\'3\\' , \\'Income61_90\\' , 3 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Income\\' , \\'4\\' , \\'Income91_120\\' , 4 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Income\\' , \\'5\\' , \\'Income121_220\\' , 5 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Income\\' , \\'6\\' , \\'Income221_300\\' , 6 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Income\\' , \\'7\\' , \\'Income300\\' , 7 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'1\\' , \\'Relatives\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'2\\' , \\'Friends\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'3\\' , \\'Classmate\\' , 3 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'4\\' , \\'Alumni\\' , 4 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'5\\' , \\'Neighbors\\' , 5 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'6\\' , \\'Community_tenants\\' , 6 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'7\\' , \\'Work\\' , 7 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'8\\' , \\'Business_related\\' , 8 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'9\\' , \\'Persons_who_provide_service\\' , 9 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'10\\' , \\'Professional\\' , 10 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'11\\' , \\'Social\\' , 11 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'12\\' , \\'Religious_group\\' , 12 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'13\\' , \\'Leisure\\' , 13 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'14\\' , \\'hobbies\\' , 14 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'15\\' , \\'Known_by_family\\' , 15 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'16\\' , \\'Engage_Experience\\' , 16 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Source\\' , \\'17\\' , \\'Discovery_Experience\\' , 17 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Marriage\\' , \\'1\\' , \\'Single\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Marriage\\' , \\'2\\' , \\'Married\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Children\\' , \\'1\\' , \\'Children0\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Children\\' , \\'2\\' , \\'Children1_2\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Children\\' , \\'3\\' , \\'Children3_4\\' , 3 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Children\\' , \\'4\\' , \\'Children5\\' , 4 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Familiarity\\' , \\'1\\' , \\'Close\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Familiarity\\' , \\'2\\' , \\'Known(acquaintance)\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Familiarity\\' , \\'3\\' , \\'Nodding_acquaintance\\' , 3 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_RecentStatus\\' , \\'1\\' , \\'Newly_married\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_RecentStatus\\' , \\'2\\' , \\'child_get_birth\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_RecentStatus\\' , \\'3\\' , \\'Get_promoted\\' , 3 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_RecentStatus\\' , \\'4\\' , \\'change_work\\' , 4 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_RecentStatus\\' , \\'5\\' , \\'Become_a_boss\\' , 5 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_RecentStatus\\' , \\'6\\' , \\'Property\\' , 6 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_RecentStatus\\' , \\'7\\' , \\'Investment\\' , 7 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_RecentStatus\\' , \\'8\\' , \\'Burden_family\\' , 8 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Status\\' , \\'1\\' , \\'Ability_to_pay_the_premium\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Status\\' , \\'2\\' , \\'Accessible_to_contact\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Status\\' , \\'3\\' , \\'Have_Insurance_Needs\\' , 3 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Status\\' , \\'4\\' , \\'Could_be_pass_underwriting_check\\' , 4 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Status\\' , \\'5\\' , \\'Key_person_to_decide_to_buy_policy\\' , 5 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_ContactFrequancy\\' , \\'1\\' , \\'ContactFrequancy1_2\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_ContactFrequancy\\' , \\'2\\' , \\'ContactFrequancy3_5\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_ContactFrequancy\\' , \\'3\\' , \\'ContactFrequancy5_More\\' , 3 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Possibility\\' , \\'HOT\\' , \\'HOT\\' , 1 , \\'{\\\"color\\\":\\\"#dc3149\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Possibility\\' , \\'WARM\\' , \\'WARM\\' , 2 , \\'{\\\"color\\\":\\\"#f86200\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_Possibility\\' , \\'COLD\\' , \\'COLD\\' , 3 , \\'{\\\"color\\\":\\\"#7fe4e0\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_TelType\\' , \\'TelHome\\' , \\'Home\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_TelType\\' , \\'TelMobile\\' , \\'Mobile\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_TelType\\' , \\'TelWork\\' , \\'Work\\' , 3 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_EmailType\\' , \\'MailHome\\' , \\'Home\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_EmailType\\' , \\'MailWork\\' , \\'Work\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_AddressType\\' , \\'AddressTypeHome\\' , \\'Home\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_AddressType\\' , \\'AddressTypeWork\\' , \\'Work\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_DataSource\\' , \\'E\\' , \\'Existing_customer\\' , 1 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Customer_DataSource\\' , \\'P\\' , \\'Potential_customer\\' , 2 , \\'{}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'1\\' , \\'Build_relationship\\' , 1 , \\'{\\\"color\\\": \\\"#496EBD\\\", \\\"backgroundColor\\\": \\\"#CFE9EE\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'2\\' , \\'Sell\\' , 2 , \\'{\\\"color\\\": \\\"#FF934F\\\", \\\"backgroundColor\\\": \\\"#EBE1BF\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'3\\' , \\'Customer_service\\' , 3 , \\'{\\\"color\\\": \\\"#7FE4E0\\\", \\\"backgroundColor\\\": \\\"#EFF6EE\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'4\\' , \\'PRP\\' , 4 , \\'{\\\"color\\\": \\\"#FDD25C\\\", \\\"backgroundColor\\\": \\\"#F5F0E0\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'5\\' , \\'Cultivate\\' , 5 , \\'{\\\"color\\\": \\\"#CCDD61\\\", \\\"backgroundColor\\\": \\\"#DFEEDE\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'6\\' , \\'Meeting\\' , 6 , \\'{\\\"color\\\": \\\"#96DCFA\\\", \\\"backgroundColor\\\": \\\"#E6F4F6\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'7\\' , \\'Private_Birthday\\' , 7 , \\'{\\\"color\\\": \\\"#8A679C\\\", \\\"backgroundColor\\\": \\\"#E1CFEB\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'8\\' , \\'Private\\' , 8 , \\'{\\\"color\\\": \\\"#E4003A\\\", \\\"backgroundColor\\\": \\\"#F1C8D0\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'9\\' , \\'Marketing\\' , 9 , \\'{\\\"color\\\": \\\"#DAD0E1\\\", \\\"backgroundColor\\\": \\\"#F9F2EF\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_Type\\' , \\'10\\' , \\'Workshop\\' , 10 , \\'{\\\"color\\\": \\\"#F7C7C3\\\", \\\"backgroundColor\\\": \\\"#FBF2F4\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'1\\' , \\'On_day_of_event\\' , 1 , \\'{\\\"isAllDay\\\": true, \\\"day\\\": 0}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'2\\' , \\'1_day_before(T)\\' , 2 , \\'{\\\"isAllDay\\\": true, \\\"day\\\": 1}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'3\\' , \\'2_days_before(T)\\' , 3 , \\'{\\\"isAllDay\\\": true, \\\"day\\\": 2}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'4\\' , \\'1_week_before(T)\\' , 4 , \\'{\\\"isAllDay\\\": true, \\\"day\\\": 7}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'5\\' , \\'At_time_of_event\\' , 5 , \\'{\\\"isAllDay\\\": false, \\\"min\\\": 0}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'6\\' , \\'5_minutes_before\\' , 6 , \\'{\\\"isAllDay\\\": false, \\\"min\\\": 5}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'7\\' , \\'15_minutes_before\\' , 7 , \\'{\\\"isAllDay\\\": false, \\\"min\\\": 15}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'8\\' , \\'30_minutes_before\\' , 8 , \\'{\\\"isAllDay\\\": false, \\\"min\\\": 30}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'9\\' , \\'1_hour_before\\' , 9 , \\'{\\\"isAllDay\\\": false, \\\"min\\\": 60}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'10\\' , \\'2_hours_before\\' , 10 , \\'{\\\"isAllDay\\\": false, \\\"min\\\": 120}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'11\\' , \\'1_day_before(F)\\' , 11 , \\'{\\\"isAllDay\\\": false,\\\"min\\\": 1440}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'12\\' , \\'2_days_before(F)\\' , 12 , \\'{\\\"isAllDay\\\": false, \\\"min\\\": 2880}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Calendar_RemindTime\\' , \\'13\\' , \\'1_week_before(F)\\' , 13 , \\'{\\\"isAllDay\\\": false, \\\"min\\\": 10080}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Font_Size\\' , \\'1\\' , \\'Small\\' , 1 , '{}' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Font_Size\\' , \\'2\\' , \\'Midden\\' , 2 , '{}' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Font_Size\\' , \\'3\\' , \\'Large\\' , 3 , '{}' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'GoalSetting_AnnualConvention\\' , \\'1\\' , \\'Allianz_Star_Club\\' , 1 , '{}' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'GoalSetting_AnnualConvention\\' , \\'2\\' , \\'Summit_Trip\\' , 2 , '{}' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'GoalSetting_AnnualConvention\\' , \\'3\\' , \\'Long_Term_Incentive_Trip_Program\\' , 3 , '{}' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'GoalSetting_MDRT\\' , \\'1\\' , \\'MDRT\\' , 1 , '{}' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'GoalSetting_MDRT\\' , \\'2\\' , \\'COT\\' , 2 , '{}' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'GoalSetting_MDRT\\' , \\'3\\' , \\'TOT\\' , 3 , '{}' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Promotion_Plan\\' , \\'1\\' , \\'JobGrade_SP\\' , 1 , \\'{\\\"MappingJobGrade\\\": \\\"SA\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Promotion_Plan\\' , \\'2\\' , \\'JobGrade_AM\\' , 2 , \\'{\\\"MappingJobGrade\\\": \\\"SP\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n        // cmd.push(\"INSERT INTO TW_LH_SD_Code (TypeID , Code , MappingID , Orders , Arguments , CreateBy , CreateTime , UpdateBy , UpdateTime) VALUES ( \\'Promotion_Plan\\' , \\'3\\' , \\'JobGrade_SM\\' , 3 , \\'{\\\"MappingJobGrade\\\": \\\"AM\\\"}\\' ,\\'admin\\',\\'2019/01/23 12:00:00\\',\\'admin\\',\\'2019/01/23 12:00:00\\');\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_DeviceInfo (Category TEXT PRIMARY KEY,CategoryVal TEXT NOT NULL,UpdateTime NUMBER NOT NULL);\");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DeviceInfo VALUES ('OfflineLoginFailCount','{\\\"count\\\":0}',1553855173876);\");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DeviceInfo VALUES ('OfflineValidationToken','{\\\"token\\\":\\\"\\\"}',1553855173876);\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_DataSync_Time (FuncID TEXT PRIMARY KEY,BackendTime INT,FrontendTime INT,LastUpdate INT);\");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('MESSAGE',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('YEAR_CONFIG',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('AGENCY_PLAN',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('GOAL',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('ACTUAL',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('CUSTOMER',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('CUSTOMER_CONTACT',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('CALENDAR',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('PROGRESS',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('GOAL_EXPECTED',0,0,1); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Time VALUES ('PROFILE_CODE',0,0,1); \");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_DataSync_Function (FuncID TEXT PRIMARY KEY,MainFunc TEXT NOT NULL);\");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('MESSAGE','Homepage'); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('GOAL','Goal_Setting'); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('YEAR_CONFIG','Goal_Setting'); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('AGENCY_PLAN','Goal_Setting'); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('ACTUAL','Goal_Setting'); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('GOAL_EXPECTED','Goal_Setting'); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('CUSTOMER','Customer'); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('CUSTOMER_CONTACT','Customer'); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('CALENDAR','Calendar'); \");\n        cmd.push(\"INSERT OR IGNORE INTO TW_LH_SD_DataSync_Function VALUES ('PROGRESS','Progress'); \");\n\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_FuncSync_Time AS SELECT * FROM TW_LH_SD_DataSync_Function LEFT JOIN TW_LH_SD_DataSync_Time ON TW_LH_SD_DataSync_Function.FuncID = TW_LH_SD_DataSync_Time.FuncID GROUP BY TW_LH_SD_DataSync_Function.MainFunc;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Language (LanguageID TEXT PRIMARY KEY,Name TEXT,IsDefault TEXT);\");\n        // cmd.push('INSERT OR IGNORE INTO TW_LH_SD_Language (LanguageID ,Name,IsDefault) VALUES (\\'en\\',\\'English\\',\\'Y\\')');\n        // cmd.push('INSERT OR IGNORE INTO TW_LH_SD_Language (LanguageID ,Name,IsDefault) VALUES (\\'zh_TW\\',\\'ä¸­æ\\',\\'N\\')');\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Error_Log (ErrorID TEXT PRIMARY KEY, Message TEXT, Time NUMBER, Stack TEXT, DeviceModel TEXT, DeviceSystem TEXT, IsSend TEXT)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Action_Log (ActionID TEXT PRIMARY KEY, Action TEXT, Function TEXT, Time NUMBER, Valid TEXT, Message TEXT, DeviceModel TEXT, DeviceSystem TEXT, IsSend TEXT)\");\n\n        return cmd;\n    }\n    public createMainTableCommand(): Array<string> {\n        let cmd = [];\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Calendar_Extension (ClientID TEXT PRIMARY KEY,CalendarID INT);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Calendar (ClientID TEXT PRIMARY KEY,CalendarID INT,CustomerClientID TEXT,Title TEXT NOT NULL,Location TEXT,CalendarType TEXT NOT NULL,IsAllDay TEXT NOT NULL,StartTime INT NOT NULL,EndTime INT NOT NULL,IsAlert TEXT NOT NULL,Alert1 TEXT,Alert2 TEXT,Alert3 TEXT,Remark TEXT,DataSource TEXT NOT NULL,ClientTime INT NOT NULL,IsDelete TEXT NOT NULL,DataTime INT DEFAULT NULL);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer_Address_Extension (ClientID TEXT PRIMARY KEY,CustomerClientID INT);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer_Email_Extension (ClientID TEXT PRIMARY KEY,CustomerClientID INT);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer_Tel_Extension (ClientID TEXT PRIMARY KEY,CustomerClientID INT);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer_Contact_Extension (ClientID TEXT PRIMARY KEY,CustomerClientID INT,ContactID INT);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer_Extension (ClientID TEXT PRIMARY KEY,CustomerID INT,RecentStatus TEXT,MANPA TEXT);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer_Address (ClientID TEXT PRIMARY KEY,CustomerClientID TEXT NOT NULL,AddressType TEXT,Country TEXT , City TEXT,Area TEXT,Zipcode TEXT,Address TEXT,DataSource TEXT NOT NULL);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer_Email (ClientID TEXT PRIMARY KEY,CustomerClientID TEXT NOT NULL,EmailType TEXT,Email TEXT,DataSource TEXT NOT NULL);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer_Tel (ClientID TEXT PRIMARY KEY,CustomerClientID TEXT NOT NULL,TelType TEXT,Tel TEXT,DataSource TEXT NOT NULL);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer_Contact (ClientID TEXT PRIMARY KEY,CustomerClientID TEXT NOT NULL,ContactID INT,Note TEXT NOT NULL,NoteTime INT NOT NULL,DataTime INT,ClientTime INT NOT NULL,IsDelete TEXT);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Customer (ClientID TEXT PRIMARY KEY,CustomerID INT,FirstName TEXT,LastName TEXT,Occupation TEXT,Company TEXT,BirthdayYear TEXT,BirthdayMonth TEXT,BirthdayDate TEXT,Age INT,AgeRange TEXT,Gender TEXT,Income TEXT,Source TEXT,Marriage TEXT,Children TEXT,Familiarity TEXT,ContactFrequancy TEXT,Possibility TEXT,IsFollow TEXT NOT NULL,DataTime INT,DataTimeBackend INT,DataSource TEXT,ClientTime INT NOT NULL,PartId INT,IsDelete TEXT,Completeness INT NOT NULL,IsOverTimeAlert TEXT);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Personal_Setting (SettingID TEXT PRIMARY KEY,SettingName TEXT NOT NULL , SettingVal Text NOT NULL);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Customer AS SELECT * FROM TW_LH_SD_Customer LEFT JOIN TW_LH_SD_Customer_Extension ON TW_LH_SD_Customer.ClientID = TW_LH_SD_Customer_Extension.ClientID;\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Calendar AS SELECT * FROM TW_LH_SD_Calendar LEFT JOIN TW_LH_SD_Calendar_Extension ON TW_LH_SD_Calendar.ClientID = TW_LH_SD_Calendar_Extension.ClientID;\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Customer_Contact AS SELECT * FROM TW_LH_SD_Customer_Contact LEFT JOIN TW_LH_SD_Customer_Contact_Extension ON TW_LH_SD_Customer_Contact.ClientID = TW_LH_SD_Customer_Contact_Extension.ClientID;\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Customer_Address AS SELECT * FROM TW_LH_SD_Customer_Address LEFT JOIN TW_LH_SD_Customer_Address_Extension ON TW_LH_SD_Customer_Address.ClientID = TW_LH_SD_Customer_Address_Extension.ClientID;\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Customer_Tel AS SELECT * FROM TW_LH_SD_Customer_Tel LEFT JOIN TW_LH_SD_Customer_Tel_Extension ON TW_LH_SD_Customer_Tel.ClientID = TW_LH_SD_Customer_Tel_Extension.ClientID;\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Customer_Email AS SELECT * FROM TW_LH_SD_Customer_Email LEFT JOIN TW_LH_SD_Customer_Email_Extension ON TW_LH_SD_Customer_Email.ClientID = TW_LH_SD_Customer_Email_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Message (ClientID TEXT NOT NULL PRIMARY KEY, MessageID INT NOT NULL , MessageCategory TEXT NOT NULL, MessageType TEXT NOT NULL, Title TEXT NOT NULL, Description TEXT, Arguments TEXT, Status TEXT NOT NULL, IsClick TEXT NOT NULL, IsPopup TEXT NOT NULL, IsShow TEXT NOT NULL, LinkStatus TEXT NOT NULL, MessageTime INT NOT NULL, Extensions TEXT, IsDelete TEXT NOT NULL, ClientTime INT NOT NULL, DataTime INT);\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Message_Extension (ClientID TEXT NOT NULL PRIMARY KEY, MessageID INT NOT NULL);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Message AS SELECT * FROM TW_LH_SD_Message LEFT JOIN TW_LH_SD_Message_Extension ON TW_LH_SD_Message.ClientID = TW_LH_SD_Message_Extension.ClientID;\");\n\n\n        cmd.push('INSERT OR IGNORE INTO TW_LH_SD_Personal_Setting (SettingID ,SettingName,SettingVal) VALUES (\\'CustomerFilterSetting\\',\\'å®¢æ¶Filteré è¨­æ¢ä»¶\\',\\'{}\\')');\n        cmd.push('INSERT OR IGNORE INTO TW_LH_SD_Personal_Setting (SettingID ,SettingName,SettingVal) VALUES (\\'CalendarFilterSetting\\',\\'æ¥æFilteré è¨­æ¢ä»¶\\',\\'{}\\')');\n        cmd.push('INSERT OR IGNORE INTO TW_LH_SD_Personal_Setting (SettingID ,SettingName,SettingVal) VALUES (\\'FontSizeSetting\\',\\'å­é«å¤§å°é è¨­æ¢ä»¶\\',\\'{}\\')');\n\n\n        //goal-setting & progress table \n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Year_Config (ClientID TEXT PRIMARY KEY, DataYear INTEGER, IsCurrent TEXT, PerformanceSettlementMonth INTEGER, WorkingQuarter INTEGER, WorkingMonth INTEGER, QuarterStartMonth INTEGER, QuarterEndMonth INTEGER, InitialPreCaseFyfc INTEGER, FyfcCovertAnpRate REAL, InforceConvertFindRate REAL, InforceConvertScheduleRate REAL, InforceConvertMeetRate REAL, InforceConvertSubmitRate REAL, ProgressDayPointsLimit INTEGER, InforceConvertPointBase REAL, FindConvertPointBase REAL, ScheduleConvertPointBase REAL, MeetConvertPointBase REAL, SubmitConvertPointBase REAL, GoalSettingActivityProcMode TEXT, ProgressBarControlMode TEXT, GoalAndPlanDifferenceLimit REAL, NowToYearEndDays INTEGER, MonthQuantityOfYear INTEGER)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Year_Config_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Year_Config AS SELECT * FROM TW_LH_SD_Year_Config LEFT JOIN TW_LH_SD_Year_Config_Extension ON TW_LH_SD_Year_Config.ClientID = TW_LH_SD_Year_Config_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Goal_Setting (ClientID TEXT PRIMARY KEY, DataYear INTEGER, IsNeedSetting TEXT, IsFirstTime TEXT, ApproveStatus TEXT, Remainingdays INTEGER, GoalSetMonth INTEGER, PersonnelGoalApplicableYM INTEGER, TeamGoalApplicableYM INTEGER, SupervisorComment TEXT)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Goal_Setting_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Goal_Setting AS SELECT * FROM TW_LH_SD_Goal_Setting LEFT JOIN TW_LH_SD_Goal_Setting_Extension ON TW_LH_SD_Goal_Setting.ClientID = TW_LH_SD_Goal_Setting_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Goal_Setting_Value (ClientID TEXT PRIMARY KEY, DataYear INTEGER, DataType TEXT, Value TEXT)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Goal_Setting_Plan_Value (ClientID TEXT PRIMARY KEY, DataYear INTEGER, PerformanceType TEXT, Month INTEGER, Value INTEGER)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Goal_Setting_Plan_Value_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Goal_Setting_Plan_Value AS SELECT * FROM TW_LH_SD_Goal_Setting_Plan_Value LEFT JOIN TW_LH_SD_Goal_Setting_Plan_Value_Extension ON TW_LH_SD_Goal_Setting_Plan_Value.ClientID = TW_LH_SD_Goal_Setting_Plan_Value_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Goal_Setting_Expected (ClientID TEXT PRIMARY KEY, DataYear INTEGER, Q1 INTEGER, Q2 INTEGER, Q3 INTEGER, Q4 INTEGER, FYFC INTEGER, ANP INTEGER, ClientTime INTEGER, DataTime INTEGER)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Goal_Setting_Expected_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Goal_Setting_Expected AS SELECT * FROM TW_LH_SD_Goal_Setting_Expected LEFT JOIN TW_LH_SD_Goal_Setting_Expected_Extension ON TW_LH_SD_Goal_Setting_Expected.ClientID = TW_LH_SD_Goal_Setting_Expected_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Actual_Value (ClientID TEXT PRIMARY KEY, DataYear INTEGER, PerformanceType TEXT, DataType TEXT, Month INTEGER, Value REAL)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Actual_Value_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Actual_Value AS SELECT * FROM TW_LH_SD_Actual_Value LEFT JOIN TW_LH_SD_Actual_Value_Extension ON TW_LH_SD_Actual_Value.ClientID = TW_LH_SD_Actual_Value_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Agency_Plan_Main (ClientID TEXT PRIMARY KEY, DataYear INTEGER , DataType TEXT, Forecast INTEGER, Actual INTEGER, MonthPlan INTEGER)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Agency_Plan_Main_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Agency_Plan_Main AS SELECT * FROM TW_LH_SD_Agency_Plan_Main LEFT JOIN TW_LH_SD_Agency_Plan_Main_Extension ON TW_LH_SD_Agency_Plan_Main.ClientID = TW_LH_SD_Agency_Plan_Main_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Agency_Detail_Data (ClientID TEXT PRIMARY KEY, DataYear INTEGER, DirectUnitType TEXT, DataType TEXT, AgentID TEXT, AgentName TEXT, JobGrade TEXT, IsApprove TEXT, Drilldown TEXT, AppUseMode TEXT,Goal INTEGER, Forecast INTEGER, Actual REAL, MonthPlan INTEGER, Manpower INTEGER, Recruitment INTEGER, CaseCount INTEGER, PerCase INTEGER, Orders INTEGER)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Agency_Detail_Data_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Agency_Detail_Data AS SELECT * FROM TW_LH_SD_Agency_Detail_Data LEFT JOIN TW_LH_SD_Agency_Detail_Data_Extension ON TW_LH_SD_Agency_Detail_Data.ClientID = TW_LH_SD_Agency_Detail_Data_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Personal_Progress (ClientID TEXT PRIMARY KEY, DataYear INTEGER, TimeBase TEXT, DataType TEXT, Find INTEGER, Schedule INTEGER, Meet INTEGER, Submit INTEGER, Inforce INTEGER, FYFC INTEGER)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Personal_Progress_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Personal_Progress AS SELECT * FROM TW_LH_SD_Personal_Progress LEFT JOIN TW_LH_SD_Personal_Progress_Extension ON TW_LH_SD_Personal_Progress.ClientID = TW_LH_SD_Personal_Progress_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Team_Progress_Main (ClientID TEXT PRIMARY KEY, DataYear INTEGER, TimeBase TEXT, DataType TEXT, Goal INTEGER, Forecast INTEGER, Actual INTEGER, Shortfall INTEGER)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Team_Progress_Main_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Team_Progress_Main AS SELECT * FROM TW_LH_SD_Team_Progress_Main LEFT JOIN TW_LH_SD_Team_Progress_Main_Extension ON TW_LH_SD_Team_Progress_Main.ClientID = TW_LH_SD_Team_Progress_Main_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Team_Progress_Detail (ClientID TEXT PRIMARY KEY, DataYear INTEGER, TimeBase TEXT, DirectUnitType TEXT, AgentID TEXT, AgentName TEXT, JobGrade TEXT, TeamName TEXT, Drilldown TEXT, AppUseMode TEXT, DataType TEXT, Activities TEXT, Goal INTEGER, Forecast INTEGER, Actual INTEGER, Shortfall INTEGER, Orders INTEGER)\");\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Team_Progress_Detail_Extension (ClientID TEXT PRIMARY KEY);\");\n        cmd.push(\"CREATE VIEW IF NOT EXISTS TW_LH_SD_VW_Team_Progress_Detail AS SELECT * FROM TW_LH_SD_Team_Progress_Detail LEFT JOIN TW_LH_SD_Team_Progress_Detail_Extension ON TW_LH_SD_Team_Progress_Detail.ClientID = TW_LH_SD_Team_Progress_Detail_Extension.ClientID;\");\n\n        cmd.push(\"CREATE TABLE IF NOT EXISTS TW_LH_SD_Other_Parameter (ClientID TEXT PRIMARY KEY, DataYear INTEGER , MappingID TEXT, SetValue TEXT)\");\n\n        return cmd;\n\n    }\n}\n","export class Setting{\n    private _settingID : string;\n    private _settingName : string;\n    private _settingVal : string;\n\n    constructor(id,name,val) {\n        this._settingID = id;\n        this._settingName = name;\n        this._settingVal = val;\n    }\n\n    get SettingID() {\n        return this._settingID;\n    }\n\n    get SettingName() {\n        return this._settingName;\n    }\n\n    get SettingVal() {\n        return this._settingVal;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class AndCompoundRestriction implements IRestriction {\n    private restrictions : Array<IRestriction>;    \n    constructor(restrictions) {\n        this.restrictions = restrictions;\n    }\n    sqlString(): string {\n\n        let sqlString = '';\n        \n        this.restrictions.forEach(function(restriction , i){\n            if(i != 0)  sqlString += ' AND ';\n            sqlString += '' + restriction.sqlString();\n        });\n\n        return `(`+sqlString+`)`;\n    }\n\n    getValues() {\n        let values = new Array<string>();\n        this.restrictions.forEach(function(restriction , i){\n            let array = restriction.getValues();\n            values = values.concat(array);\n        });\n\n        return values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class EqualRestriction implements IRestriction {\n    private column: string;\n    private values: Array<string>;\n    constructor(column, values = []) {\n        this.column = column;\n        this.values = values;\n    }\n    sqlString(): string {\n        return `${this.column} = ? `;\n    }\n    getValues() {\n        return this.values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class GreaterOrEqualRestriction implements IRestriction {\n    private column: string;\n    private values: Array<string>;\n    constructor(column, values = []) {\n        this.column = column;\n        this.values = values;\n    }\n    sqlString(): string {\n        return `${this.column} >= ? `;\n    }\n    getValues() {\n        return this.values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class GreaterRestriction implements IRestriction {\n    private column: string;\n    private values: Array<string>;\n    constructor(column, values = []) {\n        this.column = column;\n        this.values = values;\n    }\n    sqlString(): string {\n        return `${this.column} > ? `;\n    }\n    getValues() {\n        return this.values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class InRestriction implements IRestriction {\n    private column: string;\n    private values: Array<string>;\n    constructor(column, values = []) {\n        this.column = column;\n        this.values = values;\n    }\n    sqlString(): string {\n        var str = Array(this.values.length).fill('?').join(',');\n        return `${this.column} IN (${str}) `;\n    }\n    getValues() {\n        return this.values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class LessOrEqualRestriction implements IRestriction {\n    private column: string;\n    private values: Array<string>;\n    constructor(column, values = []) {\n        this.column = column;\n        this.values = values;\n    }\n    sqlString(): string {\n        return `${this.column} <= ? `;\n    }\n    getValues() {\n        return this.values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class LikeRestriction implements IRestriction {\n    private column: string;\n    private values: Array<string>;\n    constructor(column, values = []) {\n        this.column = column;\n\n\n        let newArray = [];\n        values.forEach(val => {\n            newArray.push('%' + val + '%');\n        });\n\n        this.values = newArray;\n\n        \n    }\n    sqlString(): string {\n        return `${this.column} LIKE ? `;\n    }\n\n    getValues() {\n        return this.values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class NotNullRestriction implements IRestriction {\n    private column: string;\n    private values: Array<string>;\n    constructor(column, values = []) {\n        this.column = column;\n        this.values = values;\n    }\n    sqlString(): string {\n        return `${this.column} IS NOT NULL `;\n    }\n\n    getValues() {\n        return this.values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class NullRestriction implements IRestriction {\n    private column: string;\n    private values: Array<string>;\n    constructor(column, values = []) {\n        this.column = column;\n        this.values = values;\n    }\n    sqlString(): string {\n        return `${this.column} IS NULL `;\n    }\n\n    getValues() {\n        return this.values;\n    }\n}","import { IRestriction } from '../Restriction.interface';\nexport class ORCompoundRestriction implements IRestriction {\n    private restrictions : Array<IRestriction>;    \n    constructor(restrictions) {\n        this.restrictions = restrictions;\n    }\n    sqlString(): string {\n\n        let sqlString = '';\n        \n        this.restrictions.forEach(function(restriction , i){\n            if(i != 0)  sqlString += ' OR ';\n            sqlString += '' + restriction.sqlString();\n        });\n\n        return `(`+sqlString+`)`;\n    }\n\n    getValues() {\n        let values = new Array<string>();\n        this.restrictions.forEach(function(restriction , i){\n            let array = restriction.getValues();\n            values = values.concat(array);\n        });\n\n        return values;\n    }\n}","import { Injectable, Injector } from '@angular/core';\nimport { APIDispatch } from '../../api/APIDispatch';\nimport { SettingAPI } from '../../api/register/SettingAPI';\nimport { APIFactory } from '../../api/APIFactory';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport { Setting } from '../../bean/Setting';\nimport { SettingUpdateAPI } from '../../api/register/SettingUpdateAPI';\nimport { DeviceService } from '../../device';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingService {\n\n  private static settingMap = new Map<string, Setting>();\n  private _debugMode: boolean = false;\n  private _debugSubject: Subject<boolean> = new BehaviorSubject(this._debugMode);\n\n  constructor(\n    private injector: Injector\n  ) { }\n\n  public _fetchCodeData() {\n    let factory = this.getAPIFactory();\n    let dispatcher = this.getAPIDispatch();\n    let settingAPI: SettingAPI = <SettingAPI>factory.getAPI('getSetting');\n\n    console.debug('setting.service fetchCodeData', settingAPI);\n    return Observable.create((observer) => {\n      dispatcher.dispatch(settingAPI).subscribe((data) => {\n\n        let bodyDatas = data['Body'];\n        console.log('<--- Datas --->');\n        console.log(data);\n        for (let i = 0; i < bodyDatas.length; i++) {\n          let json = bodyDatas[i];\n          let setting = new Setting(json.SettingID, json.SettingName, json.SettingVal);\n\n          SettingService.settingMap.set(setting.SettingID, setting);\n        }\n\n        console.debug('profileCodeMap', SettingService.settingMap);\n        observer.next(true);\n        observer.complete();\n\n      })\n    })\n  }\n\n  public getSetting(settingID: string) {\n    return SettingService.settingMap.get(settingID);\n  }\n\n  public updateSetting(setting: Setting) {\n    let settingUpdateAPI: SettingUpdateAPI = <SettingUpdateAPI>this.getAPIFactory().getAPI('updateSetting');\n    settingUpdateAPI.setSettingObject(setting);\n    return Observable.create((observer) => {\n      this.getAPIDispatch().dispatch(settingUpdateAPI).subscribe((settingData) => {\n        this._fetchCodeData().subscribe(data => {\n          console.warn('_fetchCodeData', data);\n          observer.next(settingData['Header']);\n          observer.complete();\n        });\n      })\n    })\n  }\n\n  public setDebugMode(val: boolean) {\n    this._debugMode = val;\n    this._debugSubject.next(val);\n  }\n  public getDebugMode(): Observable<boolean> {\n    return this._debugSubject.asObservable();\n  }\n\n  public getAPIFactory(): APIFactory {\n    return this.injector.get(APIFactory);\n  }\n  public getAPIDispatch(): APIDispatch {\n    return this.injector.get(APIDispatch);\n  }\n\n  public getDeviceService(): DeviceService {\n    return this.injector.get(DeviceService);\n  }\n\n  public async deviceChange(token: string) {\n    console.log(\"device change firebase token:\", token);\n\n    let updatePushIDAPI = this.getAPIFactory().getAPI(\"UpdatePushID\");\n    let deviceService = this.getDeviceService();\n    if (updatePushIDAPI) {\n      let _body = {\n        PushId: token,\n        DeviceSystem: deviceService.getDevicePlatform(),\n        DeviceId: deviceService.getDeviceUUID(),\n        DeviceModel: deviceService.getDeviceManufacturer(),\n        DeviceType: deviceService.isPad() ? \"Pad\" : \"Phone\"\n      }\n      updatePushIDAPI[\"body\"] = _body;\n      let resp = await this.getAPIDispatch().dispatch(updatePushIDAPI).toPromise();\n      console.log(\"Update PushID resp:\", resp);\n    }\n\n  }\n}\n","export class ViewDateChange {\n    private _viewDate: Date;\n    private _action: ChangeAction;\n\n    constructor({ date, action }) {\n        this._viewDate = date;\n        this._action = action;\n    }\n\n    public get viewDate(): Date {\n        return this._viewDate;\n    }\n    public set viewDate(value: Date) {\n        this._viewDate = value;\n    }\n\n    public get action(): ChangeAction {\n        return this._action;\n    }\n    public set action(value: ChangeAction) {\n        this._action = value;\n    }\n\n}\n\nexport enum ChangeAction {\n    CLICK,\n    SWIPE\n}","export class ProfileCode{\n\n    private TypeID : string;\n    private Code : string;\n    private MappingID : string;\n    private Arguments : string;\n    public displayText : string;\n\n    public isCheck : boolean = false;\n  \n    constructor(TypeID:string,Code:string,MappingID : string,Arguments : string){\n        this.TypeID = TypeID;\n        this.Code = Code;\n        this.MappingID = MappingID;\n        this.Arguments = Arguments;\n    }\n\n    public setDisplayText(text : string) {\n        this.displayText = text;\n    }\n\n    public getCode() {\n        return this.Code;\n    }    \n\n    public getTypeId(){\n        return this.TypeID;\n    }\n\n    public getMappingID() {\n        return this.MappingID;\n    }\n\n    public getArguments() {\n        return this.Arguments;\n    }\n\n}\n","export class versionInfo {\n\n    constructor(path = '', version = '') {\n        this._path = path;\n        this._version = version;\n    }\n    private _version: string;\n    private _path: string;\n    public get path(): string {\n        return this._path;\n    }\n    public set path(value: string) {\n        this._path = value;\n    }\n    public get version(): string {\n        return this._version;\n    }\n    public set version(value: string) {\n        this._version = value;\n    }\n}","\nexport class SelectOption{\n    \n    private isDefault : boolean;\n    constructor(private value : string,private name : string) { }\n\n    public setIsDefault(isDefault : boolean) {\n        this.isDefault = isDefault;\n        return this;\n    }\n    public getName():string {\n        return this.name;\n    }\n\n    public getValue():string {\n        return this.value;\n    }\n\n    public setName(name : string):void {\n        this.name = name;\n    }\n\n    public setValue(value : string):void {\n        this.value = value;\n    }\n}\n","export class SuccessStatus {\n\n    private _isSuccess: boolean;\n\n    constructor(isSuccess){\n        this._isSuccess = isSuccess;\n    }\n    public get isSuccess(): boolean {\n        return this._isSuccess;\n    }\n    public set isSuccess(value: boolean) {\n        this._isSuccess = value;\n    }\n\n}","export class GoalExtension{\n\n    private _Key: string;\n    private _Value: string;\n\n\n    constructor(Key, Value){\n        this._Key = Key;\n        this._Value = Value;\n    }\n\n    public get Value(): string {\n        return this._Value;\n    }\n    public set Value(value: string) {\n        this._Value = value;\n    }\n    public get Key(): string {\n        return this._Key;\n    }\n    public set Key(value: string) {\n        this._Key = value;\n    }\n}","import { SubmitGoalInfo } from \"./SubmitGoalInfo\";\nimport { SubmitGoalSettingValue } from \"./SubmitGoalSettingValue\";\nimport { SubmitGoalPlan } from \"./SubmitGoalPlan\";\nimport { GoalExtension } from \"./GoalExtension\";\n\nexport class SubmitGoalData{\n\n    public SubmitInfo: SubmitGoalInfo;\n    public GoalValue: SubmitGoalSettingValue;\n    public GoalPlan: SubmitGoalPlan;\n    public Extensions: Array<GoalExtension> = [];\n\n    constructor(SubmitInfo,GoalValue,GoalPlan) {\n        this.SubmitInfo = SubmitInfo;\n        this.GoalValue = GoalValue;\n        this.GoalPlan = GoalPlan;\n    }\n\n}","import { SubmitGoalPlanInfo } from \"./SubmitGoalPlanInfo\";\nimport { TIMEBASE } from \"./CommonEnum\";\n\n\nexport class SubmitGoalPlan{\n    public TimeBase: TIMEBASE;\n\n    public Values: Array<SubmitGoalPlanInfo> = [];\n\n    constructor(){\n\n    }\n\n\n}","import { PERFORMANCETYPE } from \"./CommonEnum\";\nimport { GoalExtension } from \"./GoalExtension\";\n\nexport class SubmitGoalPlanInfo{\n\n    public PerformanceType: PERFORMANCETYPE;\n    public Month: number;\n    public Value: number;\n    public Extensions: Array<GoalExtension> = [];\n\n    constructor(PerformanceType: PERFORMANCETYPE, Month: number, Value: number, Extensions: Array<GoalExtension>) {\n        this.PerformanceType = PerformanceType;\n        this.Month = Month;\n        this.Value = Value;\n        this.Extensions = Extensions;\n    }\n    \n}","import { GoalExtension } from \"./GoalExtension\";\n\nexport class SubmitGoalSettingValue{\n\n    public DataType: string;\n    public Value: string;\n\n    public Extensions: Array<GoalExtension> = [];\n\n    constructor(DataType: string, Value:string, Extensions:Array<GoalExtension>) {\n        this.DataType = DataType;\n        this.Value = Value;\n        this.Extensions = Extensions;\n    }\n\n}","import { GoalExtension } from \"./GoalExtension\";\nimport {  SUBMITGOALTYPE, TIMEBASE, YESNO } from \"./CommonEnum\";\n\nexport class SubmitGoalInfo{\n\n    public DataYear: number;\n    public SubmitType: SUBMITGOALTYPE;\n    public ActivityGoalBase: TIMEBASE;\n    public IsNeedApprove: YESNO;\n    public Extensions: Array<GoalExtension> = [];\n \n    constructor() {\n\n    }\n\n}","import { Injectable, Optional, Inject } from '@angular/core';\nimport { IInitTask } from '../interface/InitialTask.interface';\nimport { TranslateService } from '../../language/translate.service';\nimport { DeviceService } from '../../device/device.service';\nimport {\n    fetchSettingFinishToken,\n    changeFontSizeToken,\n    FontSizeAccessToken,\n    ConfigToken\n} from '../../injectionToken';\nimport { CheckPermissionService } from '../../auth/permission/check-permission.service';\nimport { fetchSettingFinish } from '../interface/fetchSettingFinish.interface';\nimport { SettingService } from '../../service/setting/setting.service';\nimport { changeFontSize } from '../../interface/changeFontSize.interface';\nimport { IFontSizeAccess } from '../../interface';\nimport { AppRouter } from '../../route/AppRouter';\nimport { NotificationMgr } from '../../notification/NotificationMgr';\nimport { APPMODE } from '../../bean';\nimport { APPError } from '../../errorHandler/APPError';\nimport { NotificationType } from '../../notification/INotificationProvider.interface';\n\ndeclare var StatusBar;\ndeclare var cordova;\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class ConfigTask implements IInitTask {\n\n    constructor(\n        private translateService: TranslateService,\n        private deviceService: DeviceService,\n        private settingService: SettingService,\n        private appRouter: AppRouter,\n        private notificationMgr: NotificationMgr,\n        @Inject(ConfigToken) private APP_CONFIG,\n        @Optional() @Inject(fetchSettingFinishToken) private fetchSettingFinish: fetchSettingFinish,\n        @Optional() @Inject(changeFontSizeToken) private changeFontSize: changeFontSize,\n        @Optional() @Inject(FontSizeAccessToken) private fontSizeAccess: IFontSizeAccess,\n        private checkPermissionService: CheckPermissionService) { }\n    public async doTask(): Promise<any> {\n        console.log('do task');\n        var _this = this;\n        //do task\n        document.addEventListener(\"deviceready\", function () {\n            _this.deviceService.initDeviceAPI();\n            if ((<any>cordova).plugins.AndroidFontSize) {\n                (<any>cordova).plugins.AndroidFontSize.removeSystemFontSize();\n            }\n            if (_this.deviceService.getDevicePlatform() == 'Android') {\n                document.addEventListener('screenshotDetect', function () {\n                    alert('Screenshot');\n                }, false)\n            } else if (_this.deviceService.getDevicePlatform() == 'iOS') {\n                document.addEventListener(\"screenshot\", function () {\n                    _this.notificationMgr.pushNotification(NotificationType.ScreenShotAlert, {});\n                }, false);\n            }\n            // StatusBar.overlaysWebView(false);\n            // StatusBar.styleBlackTranslucent();\n            // StatusBar.show();\n        }, false);\n\n        this.integrationCheck();\n        this.checkPermissionService.init();\n        this.appRouter.init();\n        await Promise.all([this.fetchLanguage(), this.fetchLanguageList(), this.fetchSetting(), this.loadLanguageFile()]);\n\n    }\n\n    private fetchLanguage(): Promise<any> {\n        console.log(\"fetch language func\");\n        return new Promise((res, rej) => {\n            this.translateService._fetchCurrentLanguage().subscribe((resp) => {\n                console.log(\"_fetchCurrentLanguage resp:\", resp);\n                res(resp);\n            });\n        });\n    }\n\n    private fetchLanguageList(): Promise<any> {\n        console.log(\"fetch language List\");\n        return new Promise((res, rej) => {\n            this.translateService._fetchCodeData().subscribe((resp) => {\n                res(resp);\n            });\n        })\n    }\n\n    private integrationCheck() {\n        try {\n            let needCheckKey = ['SNDToken', 'SNDLanguage'];\n            if (this.APP_CONFIG.APP_MODE === APPMODE.Integration) {\n                // Check LocalStorage\n                let result = needCheckKey\n                    .filter(key => !this.deviceService.getLocalStorage(key))\n                    .map(key => `Integration mode failed: ${key} not found in localstorage. Please set ${key} into localstorage before switch to S&D.`);\n                if (result.length > 0)\n                    throw new Error(result[0]);\n            }\n        } catch (error) {\n            alert('Integration failed. Please check console for more details.');\n            throw new APPError('F00704', error.message);\n        }\n\n    }\n\n    private fetchSetting(): Promise<any> {\n        console.debug('fetch setting');\n        return new Promise((res, rej) => {\n\n            this.settingService._fetchCodeData().subscribe((resp) => {\n                if (this.changeFontSize) {\n                    if (this.fontSizeAccess) {\n                        this.fontSizeAccess.getFontSize().subscribe((resp) => {\n                            this.changeFontSize.updateFontSize(resp);\n                        })\n                    }\n                }\n\n                if (this.fetchSettingFinish) {\n                    this.fetchSettingFinish.fetchSettingFinish(resp);\n                }\n                res(resp);\n            });\n        })\n\n    }\n\n    private async loadLanguageFile(): Promise<any> {\n        await this.translateService.init();\n    }\n}\n","import { Injectable, Optional, Inject, ErrorHandler } from '@angular/core';\nimport { IInitTask } from '../interface/InitialTask.interface';\nimport { DeviceService } from '../../device/device.service';\nimport { checkRoot } from '../interface/checkRoot.interface';\nimport { checkForRootToken, NetworkChangeToken } from '../../injectionToken';\nimport { fromEvent } from 'rxjs';\nimport { NetworkChange } from '../../device/NetworkChange.interface';\n\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DeviceTask implements IInitTask {\n\n    constructor(\n        private deviceService: DeviceService,\n        private errorHandler: ErrorHandler,\n        @Optional() @Inject(checkForRootToken) private customCheckRoot: checkRoot,\n        @Optional() @Inject(NetworkChangeToken) private networkChange: NetworkChange\n    ) { }\n\n    public doTask(): Promise<any> {\n        console.log('do device task');\n        return new Promise((res, rej) => {\n            //do task\n            //check for root\n            console.log('has inject custom root:', this.customCheckRoot);\n            try {\n                if (this.customCheckRoot) {\n                    this.customCheckRoot.checkRoot().then((resp) => {\n                        if (resp)\n                            this.customCheckRoot.rootedAction();\n                        res();\n                    })\n                }\n                else {\n                    this.deviceService.checkIfRoot().then(resp => {\n                        console.log('check root resp:', resp);\n                        if (resp) {\n                            alert(\"device has rooted!\");\n                            this.deviceService.exitApp();\n                        }\n                        res();\n                    }, errMsg => {\n                        console.warn(errMsg);\n                    })\n                }\n\n                //device network event\n                fromEvent(document, 'online').pipe(\n                    // debounceTime(5000)\n                ).subscribe(() => {\n                    this.networkChange.change('online',true);\n                })\n                fromEvent(document, 'offline').pipe(\n                    // debounceTime(5000)\n                ).subscribe(() => {\n                    this.networkChange.change('offline',true);\n                })\n            } catch (error) {\n                console.warn(\"cannot detect rooted device.\");\n                this.errorHandler.handleError(error);\n                res();\n            }\n\n        });\n    }\n}","import { Observable } from 'rxjs';\nimport { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\nimport { DaoFactory } from '../../device/sqlite/DaoFactory';\nimport { SQLiteTable } from '../../device/sqlite/SQLiteTable';\nimport { GreaterOrEqualRestriction } from '../../device/sqlite/restrictions/GreaterOrEqualRestriction';\n\nexport class ProfileCodeAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n  private _DaoFactory;\n  constructor(DaoFactory: DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n  getAPIName(): string {\n    return 'getProfileCode';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCode.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let profileObj = this._DaoFactory.getTable('Profile', 'TW_LH_SD_Code');\n      let dao = this._DaoFactory.getDao('Profile');\n      if (profileObj != undefined) {\n        (<SQLiteTable>profileObj).addRestriction(new GreaterOrEqualRestriction(\"ValidityPeriod\", [Date.now()]));\n        dao.queryByTable(profileObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n}\n","import { Observable } from 'rxjs';\nimport { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\nimport { DaoFactory } from '../../device/sqlite/DaoFactory';\nimport { SQLiteTable } from '../../device/sqlite/SQLiteTable';\nimport { ClientCustomDao } from '../../device/sqlite/ClientCustomDao';\n\nexport class SettingAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n  getAPIName(): string {\n    return 'getSetting';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getPersonalSetting.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let settingObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n      let dao = this._DaoFactory.getDefaultDao();\n\n      if (settingObj != undefined && dao != undefined) {\n        settingObj = (<SQLiteTable>settingObj);\n        dao = new ClientCustomDao(dao);\n        dao.queryByTable(settingObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n}\n","import { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\n\nexport class ExtensionConfigAPI implements IAPI , IMockAPI {\n    \n\n    getAPIName() : string {\n        return 'getExtensionConfig';\n    }\n\n    getMockPath() : string {\n        return './assets/config/extension-config.json';\n    }\n\n   \n    \n}\n","\nimport { Observable, of, from } from \"rxjs\";\nimport { IAPI } from \"../API.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\n\nexport class OfflineAuthAPI implements IAPI, ISQLiteAPI {\n\n\n    constructor(\n        private daoFactory: DaoFactory,\n        private APP_CONFIG: any\n    ) {\n\n    }\n\n    public token = '';\n    private failTry: number = null;\n\n    getAPIName(): string {\n        return 'offlineAuth';\n    }\n    executeSQL(): Observable<any> {\n        // return sha-256: \"test||test\"\n        return from(this._offlineAuth());\n\n    }\n\n    private async _offlineAuth() {\n        let env = this.APP_CONFIG.ENV;\n        this.failTry = this.APP_CONFIG[env].OFFLINE_LOGIN_MAX_TIMES || 999;\n        let authResp = null;\n        let infoObj = this.daoFactory.getTable(\"Profile\", \"TW_LH_SD_DeviceInfo\");\n        let dao = this.daoFactory.getDao(\"Profile\");\n        let resp = await dao.queryByTable(infoObj).toPromise();\n        console.log('query device info resp:', resp);\n\n        let body = resp.Body;\n        let failCount = parseInt(body.filter(x => x.Category == \"OfflineLoginFailCount\").map(x => JSON.parse(x.CategoryVal)[\"count\"])[0]);\n        let offline_token = body.filter(x => x.Category == \"OfflineValidationToken\").map(x => JSON.parse(x.CategoryVal)[\"token\"])[0];\n        let info_token = body.filter(x => x.Category == \"OfflineValidationToken\").map(x => JSON.parse(x.CategoryVal)[\"infoToken\"])[0];\n        let lastLoginTIme = body.filter(x => x.Category == \"OfflineValidationToken\").map(x => x.UpdateTime)[0];\n\n\n        console.group(\"offline auth:\");\n        console.log(\"failCount:\", failCount);\n        console.log(\"offline_token:\", offline_token);\n        console.log('this.token:', this.token);\n        console.log(\"lastLoginTime:\", lastLoginTIme);\n        console.groupEnd();\n\n\n        if (offline_token == \"\" || (Date.now() - lastLoginTIme) >= 86400000) {\n            authResp = { isSuccess: false, message: 'First_Login_Must_Online' };\n        }\n        else if (failCount >= this.failTry) {\n            authResp = { isSuccess: false, message: \"Wrong_Counts_Over_Max\", failCount: -1};\n        }\n        else {\n            console.log('offline fail count:', failCount);\n            if (this.token === offline_token) {\n                //offline login success, set count to zero\n                infoObj.setValue(\"CategoryVal\", '{\"count\":0}');\n                infoObj.addRestriction(new EqualRestriction(\"Category\", [\"OfflineLoginFailCount\"]));\n                let setCountResp = await dao.updateByTable(infoObj).toPromise();\n                console.log('set count to zero resp:', setCountResp);\n                authResp = { isSuccess: true, token: info_token };\n            }\n            else {\n                let addFailCount = failCount + 1;\n                infoObj.setValue(\"CategoryVal\", `{\"count\":${addFailCount}}`);\n                infoObj.addRestriction(new EqualRestriction(\"Category\", [\"OfflineLoginFailCount\"]));\n                let setCountResp = await dao.updateByTable(infoObj).toPromise();\n                console.log('plus one count:', setCountResp);\n                authResp = { isSuccess: false, message: \"Offline_Login_Locked\", failCount: addFailCount };\n            }\n        }\n\n        return authResp;\n\n    }\n}\n","\nimport { Observable, of } from \"rxjs\";\nimport { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\n\nexport class saveLoginTokenAPI implements IAPI, ISQLiteAPI, IMockAPI {\n\n    constructor(private daoFactory: DaoFactory) { }\n    private _encryptedAuth: string = '';\n    private _infoToken: string = '';\n\n    public get infoToken(): string {\n        return this._infoToken;\n    }\n    public set infoToken(value: string) {\n        this._infoToken = value;\n    }\n\n    public get encryptedAuth(): string {\n        return this._encryptedAuth;\n    }\n    public set encryptedAuth(value: string) {\n        this._encryptedAuth = value;\n    }\n\n    getAPIName(): string {\n        return 'saveLoginToken';\n    }\n    executeSQL(): Observable<any> {\n        // return sha-256: \"test||test\"\n        let infoObj = this.daoFactory.getTable(\"Profile\", \"TW_LH_SD_DeviceInfo\");\n        console.log(\"infoObj:\", infoObj);\n        let dao = this.daoFactory.getDao(\"Profile\");\n        let configVal = JSON.stringify({ token: this.encryptedAuth, infoToken: this._infoToken });\n        if (infoObj != undefined) {\n            return Observable.create((observer) => {\n                infoObj.setValue(\"CategoryVal\", configVal);\n                infoObj.setValue(\"UpdateTime\", Date.now());\n                infoObj.addRestriction(new EqualRestriction(\"Category\", [\"OfflineValidationToken\"]));\n                dao.updateByTable(infoObj).subscribe(resp => {\n                    console.log(\"save token resp:\", resp);\n                    let infoTableObj = this.daoFactory.getTable(\"Profile\", \"TW_LH_SD_DeviceInfo\");\n                    infoTableObj.setValue(\"CategoryVal\", '{\"count\":0}');\n                    infoTableObj.addRestriction(new EqualRestriction(\"Category\", [\"OfflineLoginFailCount\"]));\n                    dao.updateByTable(infoTableObj).subscribe(resp => {\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                })\n\n            });\n        }\n        else {\n            return of(false);\n        }\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveLoginToken.json'\n    }\n}\n","export class APIRequest {\n    constructor() {\n        this._body = {};\n        this._type = \"GET\";\n        this._url = '';\n        this._params = null;\n        this._timeout = 10000;\n    }\n    private _body;\n    private _type;\n    private _url;\n    private _params;\n    private _timeout;\n    public get params() {\n        return this._params;\n    }\n    public set params(value) {\n        this._params = value;\n    }\n    public get type() {\n        return this._type;\n    }\n    public set type(value) {\n        this._type = value;\n    }\n    public get url() {\n        return this._url;\n    }\n    public set url(value) {\n        this._url = value;\n    }\n    public get body() {\n        return this._body;\n    }\n    public set body(value) {\n        this._body = value;\n    }\n    public get timeout() {\n        return this._timeout;\n    }\n    public set timeout(value) {\n        this._timeout = value;\n    }\n}","import { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { IRestfulAPI } from \"../RestfulAPI.interface\";\nimport { APIRequest } from \"../APIRequest\";\nimport { HttpParams } from \"@angular/common/http\";\n\nexport class CheckVersionAPI implements IAPI, IMockAPI, IRestfulAPI {\n\n    constructor() { }\n\n    public version = '';\n    public DeviceSystem = '';\n\n    public getAPIName(): string {\n        return 'CheckVersion';\n    }\n\n    public getRequestData(): APIRequest {\n        let queryParams = new HttpParams();\n        queryParams = queryParams.set(\"version\", this.version);\n        queryParams = queryParams.set(\"DeviceSystem\", this.DeviceSystem);\n        let requestData = new APIRequest();\n        requestData.type = \"GET\";\n        requestData.params = queryParams;\n        return requestData;\n    }\n\n    public getMockPath(): string {\n        return './assets/mock/CheckVersionAPI.json';\n    }\n\n}","\nimport { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\n\nexport class MenuAPI implements IAPI, IMockAPI {\n\n    getAPIName(): string {\n        return 'getMenu';\n    }\n\n    getMockPath() {\n        return './assets/config/menu.json';\n    }\n\n}\n","import { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { Setting } from \"../../bean\";\nimport { Observable } from \"rxjs\";\nimport { DaoFactory, SQLiteTable, ClientCustomDao, EqualRestriction } from \"../../device\";\n\nexport class SettingUpdateAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    constructor(private DaoFactory: DaoFactory) { }\n\n    private _settingObject: Setting;\n\n    setSettingObject(value: Setting) {\n        this._settingObject = value;\n    }\n\n    getAPIName(): string {\n        return 'updateSetting';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getPersonalSetting.json';\n    }\n\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n            let settingObj = this.DaoFactory.getDefaultTable(\"TW_LH_SD_Personal_Setting\");\n            let dao = this.DaoFactory.getDefaultDao();\n\n            if (settingObj != undefined && dao != undefined) {\n                settingObj = (<SQLiteTable>settingObj);\n                dao = new ClientCustomDao(dao);\n                settingObj.addRestriction(new EqualRestriction('SettingID', [this._settingObject.SettingID]));\n                settingObj.setValue('SettingVal', this._settingObject.SettingVal);\n\n                dao.updateByTable(settingObj).subscribe((resp) => {\n                    observer.next(resp);\n                    observer.complete();\n                });\n            } else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n\n}\n","import { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { IDeviceAPI } from \"../DeviceAPI.interface\";\nimport { Observable } from \"rxjs\";\nimport { DeviceFactory } from \"../../device/DeviceFactory\";\n\n\nexport class ContactsSearchAPI implements IAPI, IMockAPI, IDeviceAPI {\n   \n    constructor(private deviceFactory: DeviceFactory){\n        \n    }\n\n    getAPIName(): string {\n        return 'contactsSearch';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getImportContact.json';\n    }\n\n    runDeviceAPI(): Observable<any> {\n        let dao = this.deviceFactory.getDefaultDao();\n        return dao.searchcontactsByName('');\n    }\n\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\n\nexport class SyncPushAPI implements IAPI, IRestfulAPI {\n\n    public url = '';\n    public body = {};\n    public async: Boolean = false;\n    constructor() { }\n\n    getAPIName() {\n        return 'SyncPush';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        requestData.url = this.url;\n        requestData.body = this.body;\n        requestData.type = \"PUT\";\n\n        return requestData;\n    }\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\n\nexport class SyncPullAPI implements IAPI, IRestfulAPI {\n\n    public url = '';\n    public body = {};\n    public lastUpdateTime: string = '';\n    constructor() { }\n\n    getAPIName() {\n        return 'SyncPull';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        requestData.url = this.url;\n        requestData.body = this.body;\n        requestData.type = \"GET\";\n        requestData.params = new HttpParams()\n            .set('lastUpdateTime', this.lastUpdateTime);\n        return requestData;\n    }\n}","import { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '../../device/sqlite';\nimport {SQLiteTable} from '../../device/sqlite';\nimport {ClientCustomDao} from '../../device/sqlite';\n\nexport class CurrentLanguageListAPI implements IAPI , IMockAPI , ISQLiteAPI {\n  private _DaoFactory;\n  constructor(DaoFactory: DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n  getAPIName() : string {\n    return 'getCurrentLanguageList';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/getCurrentLanguage.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let languageObj = this._DaoFactory.getTable('Profile', \"TW_LH_SD_Language\");\n      let dao = this._DaoFactory.getDao('Profile');\n\n      if (languageObj != undefined && dao != undefined) {\n        languageObj = (<SQLiteTable>languageObj);\n        dao = new ClientCustomDao(dao);\n        dao.queryByTable(languageObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n\n}\n","\nimport { Observable, of } from \"rxjs\";\nimport { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { ClientCustomDao, DaoFactory } from '../../device/sqlite';\nimport { EqualRestriction } from '../../device/sqlite';\n\nexport class BindingAccountAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private _DaoFactory: DaoFactory;\n    constructor(DaoFactory: DaoFactory) {\n        this._DaoFactory = DaoFactory;\n    }\n\n    public account = '';\n\n    getAPIName(): string {\n        return 'BindingAccount';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n    executeSQL(): Observable<any> {\n        let deviceInfoObjForDelete = this._DaoFactory.getTable('Profile', \"TW_LH_SD_DeviceInfo\");\n        let deviceInfoObjForInsert = this._DaoFactory.getTable('Profile', \"TW_LH_SD_DeviceInfo\");\n        let dao = this._DaoFactory.getDao('Profile');\n        if (deviceInfoObjForDelete != undefined && deviceInfoObjForInsert != undefined && dao != undefined) {\n            deviceInfoObjForDelete.addRestriction(new EqualRestriction('Category', ['BindingAccount']));\n            dao.transactionDelete(deviceInfoObjForDelete);\n\n            deviceInfoObjForInsert.setValue(\"Category\", \"BindingAccount\");\n            deviceInfoObjForInsert.setValue(\"CategoryVal\", JSON.stringify({ account: this.account }));\n            deviceInfoObjForInsert.setValue(\"UpdateTime\", Date.now());\n            dao.transactionInsert(deviceInfoObjForInsert);\n            return dao.runTransaction();\n        } else {\n            return of(false);\n        }\n\n    }\n}\n","\nimport { Observable, of } from \"rxjs\";\nimport { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { ClientCustomDao, DaoFactory } from '../../device/sqlite';\nimport { EqualRestriction } from '../../device/sqlite';\n\nexport class DeviceAccountAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private _DaoFactory: DaoFactory;\n    constructor(DaoFactory: DaoFactory) {\n        this._DaoFactory = DaoFactory;\n    }\n\n\n    getAPIName(): string {\n        return 'getDeviceAccount';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getDeviceAccount.json';\n    }\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n            let deviceInfoObj = this._DaoFactory.getTable('Profile', \"TW_LH_SD_DeviceInfo\");\n\n            let dao = this._DaoFactory.getDao('Profile');\n            if (deviceInfoObj != undefined && dao != undefined) {\n                dao = new ClientCustomDao(dao);\n                deviceInfoObj.addRestriction(new EqualRestriction('Category', [\"BindingAccount\"]));\n                dao.queryByTable(deviceInfoObj).subscribe((resp) => {\n                    console.log(\"getDeviceAccount API resp:\",resp);\n                    observer.next(resp);\n                    observer.complete();\n                });\n            } else {\n                observer.next(false);\n                observer.complete();\n            }\n        })\n    }\n}\n","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { IMockAPI } from '../MockAPI.interface';\n\nexport class UpdatePushIDAPI implements IAPI, IMockAPI, IRestfulAPI {\n\n    public body = {};\n\n    constructor() { }\n\n    getAPIName() {\n        return 'UpdatePushID';\n    }\n\n    getMockPath() {\n        //return save resp\n        return './assets/mock/logout.json';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        requestData.body = this.body;\n        requestData.type = \"POST\";\n        return requestData;\n    }\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\n\nexport class syncSequenceIDAPI implements IAPI, IRestfulAPI {\n\n    public num: number = 0;\n    public type: string = '';\n\n    constructor() { }\n\n    getAPIName() {\n        return 'getSyncSequenceID';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        let queryParams = new HttpParams();\n        queryParams = queryParams.set(\"category\", this.type);\n        queryParams = queryParams.set(\"idNums\", this.num.toString());\n        requestData.params = queryParams;\n        requestData.type = \"GET\";\n        return requestData;\n    }\n}","import { IAPI } from \"../API.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { Observable, of } from \"rxjs\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { v4 as uuid } from 'uuid';\n\n\nexport class logErrorAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    public stack: Array<string> = [];\n    public message: string = '';\n    public time: Date = new Date();\n    public DeviceModel: string = '';\n    public DeviceSystem: string = '';\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName() {\n        return 'LogError';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL() {\n        let errorLogObj = this.daoFactory.getTable('Profile', 'TW_LH_SD_Error_Log');\n        let dao = this.daoFactory.getDao('Profile');\n        if (errorLogObj) {\n            errorLogObj.setValue(\"ErrorID\", uuid());\n            errorLogObj.setValue(\"Message\", this.message);\n            errorLogObj.setValue(\"Time\", this.time.getTime());\n            errorLogObj.setValue(\"Stack\", JSON.stringify(this.stack));\n            errorLogObj.setValue(\"DeviceModel\", this.DeviceModel);\n            errorLogObj.setValue(\"DeviceSystem\", this.DeviceSystem);\n            errorLogObj.setValue(\"IsSend\", 'N');\n            return dao.insertByTable(errorLogObj);\n        }\n        else return of(false);\n    }\n}","import { IAPI } from \"../API.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { Observable, of } from \"rxjs\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { v4 as uuid } from 'uuid';\n\n\nexport class logActionAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    public action: string = '';\n    public Function: string = '';\n    public message: string = '';\n    public time: Date = new Date();\n    public valid: boolean = true;\n    public DeviceModel: string = '';\n    public DeviceSystem: string = '';\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName() {\n        return 'LogAction';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL() {\n        let actionLogObj = this.daoFactory.getTable('Profile', 'TW_LH_SD_Action_Log');\n        let dao = this.daoFactory.getDao('Profile');\n        if (actionLogObj) {\n            actionLogObj.setValue(\"ActionID\", uuid());\n            actionLogObj.setValue(\"Function\", this.Function);\n            actionLogObj.setValue(\"Message\", this.message);\n            actionLogObj.setValue(\"Time\", this.time.getTime());\n            actionLogObj.setValue(\"Action\", this.action);\n            actionLogObj.setValue(\"Valid\", this.valid ? 'Y' : 'N');\n            actionLogObj.setValue(\"IsSend\", 'N');\n            actionLogObj.setValue(\"DeviceModel\", this.DeviceModel);\n            actionLogObj.setValue(\"DeviceSystem\", this.DeviceSystem);\n            return dao.insertByTable(actionLogObj);\n        }\n        else return of(false);\n    }\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\nimport { IMockAPI } from '../MockAPI.interface';\n\n\nexport class PushErrorLogAPI implements IAPI, IMockAPI, IRestfulAPI {\n\n    public url: string = '';\n    public errorList: Array<any> = [];\n\n    constructor() { }\n\n    getAPIName() {\n        return 'PushErrorLog';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        requestData.url = this.url;\n        requestData.body = this.errorList.map(err => {\n            return {\n                \"Message\": err.Message,\n                \"Stack\": err.Stack,\n                \"Time\": new Date(err.Time).toISOString(),\n                \"DeviceModel\": err.DeviceModel,\n                \"DeviceSystem\": err.DeviceSystem\n            }\n        })\n        requestData.type = \"POST\";\n        return requestData;\n    }\n\n    getMockPath() {\n        return './assets/mock/logout.json';\n    }\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\nimport { IMockAPI } from '../MockAPI.interface';\n\n\nexport class PushActionLogAPI implements IAPI, IMockAPI, IRestfulAPI {\n\n    public url: string = '';\n    public actionList: Array<any> = [];\n\n    constructor() { }\n\n    getAPIName() {\n        return 'PushActionLog';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        requestData.url = this.url;\n        requestData.body = this.actionList.map(action => {\n            return {\n                \"ActionID\": action.ActionID,\n                \"FunctionID\": action.Function,\n                \"Message\": action.Message,\n                \"Time\": new Date(action.Time).toISOString(),\n                \"Action\": action.Action,\n                \"Valid\": action.Valid,\n                \"DeviceModel\": action.DeviceModel,\n                \"DeviceSystem\": action.DeviceSystem\n            }\n        })\n        requestData.type = \"POST\";\n        return requestData;\n    }\n\n    getMockPath() {\n        return './assets/mock/logout.json';\n    }\n}","import { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\n\nexport class RouterMapAPI implements IAPI, IMockAPI {\n\n    getAPIName() {\n        return 'getRouterMap'\n    }\n\n    getMockPath() {\n        return './assets/config/router-map.json';\n    }\n\n}\n\n","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\nimport { IMockAPI } from '../MockAPI.interface';\n\nexport class getYearConfigAPI implements IAPI, IRestfulAPI, IMockAPI {\n\n    constructor(private APP_CONFIG: any) { }\n\n    private agentID = '';\n    public url = '';\n    public lastUpdateTime: string = '2019-01-01 00:00:00';\n\n    public setAgentID(agent_id) {\n        this.agentID = agent_id;\n    }\n\n\n    getMockPath(): string {\n        return './assets/mock/yearConfig.json';\n    }\n\n    getAPIName() {\n        return 'getYearConfig';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        let env = this.APP_CONFIG.ENV;\n        if (this.agentID != '' && this.agentID != undefined && this.agentID != null) {\n            this.url = this.APP_CONFIG[env].API_URL.getYearConfig;\n            requestData.url = this.url + '/' + this.agentID;\n        } else {\n            requestData.url = this.url;\n        }\n        requestData.type = \"GET\";\n        requestData.params = new HttpParams()\n            .set('lastUpdateTime', this.lastUpdateTime);\n        return requestData;\n    }\n}","import { IAPI } from \"../API.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { Observable, of } from \"rxjs\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\nimport { v4 as uuid } from 'uuid';\n\n\nexport class saveYearConfigAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    public yearConfigs: Array<any> = [];\n    public FirstUseAPP: boolean;\n\n    private deviceInfo;\n    private yearConfig;\n    private yearConfig_ext;\n    private dao;\n    private profile_dao;\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName() {\n        return 'saveYearConfig';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL() {\n\n        this.yearConfig = this.daoFactory.getDefaultTable('TW_LH_SD_Year_Config');\n        this.yearConfig_ext = this.daoFactory.getDefaultTable('TW_LH_SD_Year_Config_Extension');\n        this.deviceInfo = this.daoFactory.getTable('Profile', 'TW_LH_SD_DeviceInfo');\n        this.dao = this.daoFactory.getDefaultDao();\n        this.profile_dao = this.daoFactory.getDao(\"Profile\");\n        console.log('yearConfig', this.yearConfig);\n        console.log('deviceInfo', this.deviceInfo);\n        if (this.yearConfig && this.deviceInfo) {\n            return of(this.saveConfig().then(resp => {\n                let status = resp[\"Header\"].status;\n                console.log('saveYearConfigAPI resp:', resp);\n                if (status) {\n                    this.dao.transactionDelete(this.yearConfig);\n                    this.dao.transactionDelete(this.yearConfig_ext);\n                    return Promise.all(this.yearConfigs.map(x => this._getDate(x))).then(() => this.dao.runTransaction().toPromise());\n                }\n                else\n                    return resp;\n            }));\n        }\n        else return of(false);\n    }\n\n\n    private async _getDate(yearcfg: any): Promise<any> {\n        console.log('yearcfg', yearcfg);\n        let clientID = uuid();\n\n        this.yearConfig.setValue(\"ClientID\", clientID);\n        this.yearConfig.setValue(\"DataYear\", yearcfg.DataYear);\n        this.yearConfig.setValue(\"IsCurrent\", yearcfg.IsCurrent ? \"Y\" : \"N\");\n        this.yearConfig.setValue(\"PerformanceSettlementMonth\", yearcfg.PerformanceSettlementMonth);\n        this.yearConfig.setValue(\"WorkingMonth\", yearcfg.WorkingMonth);\n        this.yearConfig.setValue(\"WorkingQuarter\", yearcfg.WorkingQuarter);\n        this.yearConfig.setValue(\"QuarterStartMonth\", yearcfg.QuarterStartMonth);\n        this.yearConfig.setValue(\"QuarterEndMonth\", yearcfg.QuarterEndMonth);\n        this.yearConfig.setValue(\"InitialPreCaseFyfc\", yearcfg.InitialPreCaseFyfc);\n        this.yearConfig.setValue(\"FyfcCovertAnpRate\", yearcfg.FyfcCovertAnpRate);\n        this.yearConfig.setValue(\"InforceConvertFindRate\", yearcfg.InforceConvertFindRate);\n        this.yearConfig.setValue(\"InforceConvertScheduleRate\", yearcfg.InforceConvertScheduleRate);\n        this.yearConfig.setValue(\"InforceConvertMeetRate\", yearcfg.InforceConvertMeetRate);\n        this.yearConfig.setValue(\"InforceConvertSubmitRate\", yearcfg.InforceConvertSubmitRate);\n        this.yearConfig.setValue(\"ProgressDayPointsLimit\", yearcfg.ProgressDayPointsLimit);\n        this.yearConfig.setValue(\"InforceConvertPointBase\", yearcfg.InforceConvertPointBase);\n        this.yearConfig.setValue(\"FindConvertPointBase\", yearcfg.FindConvertPointBase);\n        this.yearConfig.setValue(\"ScheduleConvertPointBase\", yearcfg.ScheduleConvertPointBase);\n        this.yearConfig.setValue(\"MeetConvertPointBase\", yearcfg.MeetConvertPointBase);\n        this.yearConfig.setValue(\"SubmitConvertPointBase\", yearcfg.SubmitConvertPointBase);\n        this.yearConfig.setValue(\"GoalSettingActivityProcMode\", yearcfg.GoalSettingActivityProcMode);\n        this.yearConfig.setValue(\"ProgressBarControlMode\", yearcfg.ProgressBarControlMode);\n        this.yearConfig.setValue(\"GoalAndPlanDifferenceLimit\", yearcfg.GoalAndPlanDifferenceLimit);\n        this.yearConfig.setValue(\"NowToYearEndDays\", yearcfg.NowToYearEndDays);\n        this.yearConfig.setValue(\"MonthQuantityOfYear\", yearcfg.MonthQuantityOfYear);\n        this.dao.transactionInsert(this.yearConfig);\n\n        //Extension\n        this.yearConfig_ext.setValue(\"ClientID\", clientID);\n        if (yearcfg.extensions) {\n            yearcfg.extensions.forEach(ext => {\n                this.yearConfig_ext.setValue(ext.id, ext.value);\n            });\n        }\n        this.dao.transactionInsert(this.yearConfig_ext);\n    }\n\n    private async saveConfig(): Promise<any> {\n        //Update other parameter\n        console.log('[saveYearConfigAPI] isFirstUse', this.FirstUseAPP);\n        if (this.FirstUseAPP != null && this.FirstUseAPP != undefined) {\n            this.deviceInfo.addRestriction(new EqualRestriction(\"Category\", [\"FirstUseAPP\"]));\n            let queryResp = await this.profile_dao.queryByTable(this.deviceInfo).toPromise();\n            console.log('[saveYearConfigAPI] queryResp', queryResp);\n            if (queryResp.Header[\"status\"]) {\n                if (queryResp.Body.length > 0) {\n                    this.deviceInfo.setValue(\"CategoryVal\", this.FirstUseAPP ? \"Y\" : \"N\");\n                    console.log('[saveYearConfigAPI] deviceInfo 1', this.deviceInfo);\n                    this.profile_dao.transactionUpdate(this.deviceInfo);\n                } else {\n                    this.deviceInfo = this.daoFactory.getTable('Profile', 'TW_LH_SD_DeviceInfo');\n                    this.deviceInfo.setValue(\"Category\", \"FirstUseAPP\");\n                    this.deviceInfo.setValue(\"CategoryVal\", this.FirstUseAPP ? \"Y\" : \"N\");\n                    this.deviceInfo.setValue(\"UpdateTime\", new Date().getTime());\n                    console.log('[saveYearConfigAPI] otherParameter 2', this.deviceInfo);\n                    this.profile_dao.transactionInsert(this.deviceInfo);\n                }\n                return this.profile_dao.runTransaction().toPromise();\n            }\n        }\n    }\n\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\nimport { IMockAPI } from '../MockAPI.interface';\n\nexport class getAgencyPlanAPI implements IAPI, IRestfulAPI, IMockAPI{\n\n    constructor(private APP_CONFIG: any) { }\n\n    private agentID = '';\n    public url = '';\n    public lastUpdateTime: string = '2019-01-01 00:00:00';\n\n    public setAgentID(agent_id: string){\n        this.agentID = agent_id;\n    }\n\n    getMockPath(): string {\n        return './assets/mock/AgencyPlan.json';\n    }\n\n    getAPIName() {\n        return 'getAgencyPlan';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        let env = this.APP_CONFIG.ENV;\n        if(this.agentID != '' && this.agentID != undefined && this.agentID != null){\n            this.url = this.APP_CONFIG[env].API_URL.getAgencyPlan;\n            requestData.url = this.url + '/' + this.agentID;\n        }else{\n            requestData.url = this.url;\n        }\n        requestData.type = \"GET\";\n        requestData.params = new HttpParams()\n        .set('lastUpdateTime', this.lastUpdateTime);\n        return requestData;\n    }\n}","import { IAPI } from \"../API.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { Observable, of, from } from \"rxjs\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { v4 as uuid } from 'uuid';\nimport { SQLCommand } from \"../../device/sqlite/SQLCommand\";\nimport { stringify } from \"@angular/core/src/render3/util\";\nimport { StringUtils } from \"../../utils\";\nimport { EqualRestriction } from \"../../device\";\n\n\nexport class saveAgencyPlanAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    public AgencyPlanDatas: Array<any> = [];\n\n    private dao;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName() {\n        return 'saveAgencyPlan';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL() {\n        console.log('AgencyPlanDatas', this.AgencyPlanDatas);\n        let agencyPlanDetail = this.daoFactory.getDefaultTable('TW_LH_SD_Agency_Detail_Data');\n        let agencyPlanDetailExt = this.daoFactory.getDefaultTable('TW_LH_SD_Agency_Detail_Data_Extension');\n        let agencyPlanMain = this.daoFactory.getDefaultTable('TW_LH_SD_Agency_Plan_Main');\n        let agencyPlanMainExt = this.daoFactory.getDefaultTable('TW_LH_SD_Agency_Plan_Main_Extension');\n        this.dao = this.daoFactory.getDefaultDao();\n        console.log('agencyPlanMain', agencyPlanMain);\n        console.log('agencyPlanDetail', agencyPlanDetail);\n        if (agencyPlanMain && agencyPlanDetail) {\n            this.dao.transactionDelete(agencyPlanDetail);\n            this.dao.transactionDelete(agencyPlanDetailExt);\n            this.dao.transactionDelete(agencyPlanMain);\n            this.dao.transactionDelete(agencyPlanMainExt);\n\n\n            return from(Promise.all(this.AgencyPlanDatas.map(x => this._getDate(x))).then(() => {\n                let resp = this.dao.runTransaction().toPromise();\n                return resp;\n            }));\n        }\n        else return of(false);\n    }\n\n    private async _getDate(AgencyPlanData: any): Promise<any> {\n\n        let agencyPlanDetail = this.daoFactory.getDefaultTable('TW_LH_SD_Agency_Detail_Data');\n        let agencyPlanDetailExt = this.daoFactory.getDefaultTable('TW_LH_SD_Agency_Detail_Data_Extension');\n        let agencyPlanMain = this.daoFactory.getDefaultTable('TW_LH_SD_Agency_Plan_Main');\n        let agencyPlanMainExt = this.daoFactory.getDefaultTable('TW_LH_SD_Agency_Plan_Main_Extension');\n        let otherParameter = this.daoFactory.getDefaultTable('TW_LH_SD_Other_Parameter');\n\n        let DataYear = AgencyPlanData.DataYear;\n        console.log('DataYear', DataYear);\n\n        let MainDatas: Array<any> = AgencyPlanData.Values;\n        console.log('MainDatas', MainDatas);\n        for (let data of MainDatas) {\n            let clientID = uuid();\n            agencyPlanMain.setValue(\"ClientID\", clientID);\n            agencyPlanMain.setValue(\"DataYear\", DataYear);\n            agencyPlanMain.setValue(\"DataType\", data.DataType);\n            agencyPlanMain.setValue(\"Forecast\", data.Forecast);\n            agencyPlanMain.setValue(\"Actual\", data.Actual);\n            agencyPlanMain.setValue(\"MonthPlan\", data.Plan);\n            agencyPlanMain.setValue(\"Manpower\", data.Manpower);\n            agencyPlanMain.setValue(\"Recruitment\", data.Recruitment);\n            this.dao.transactionInsert(agencyPlanMain);\n\n            agencyPlanMainExt.setValue(\"ClientID\", clientID);\n            if (AgencyPlanData.extensions) {\n                AgencyPlanData.extensions.forEach(ext => {\n                    agencyPlanMainExt.setValue(ext.id, ext.value);\n                });\n            }\n            this.dao.transactionInsert(agencyPlanMainExt);\n        }\n\n        let UnitMap = new Map<string, Array<any>>();\n        if (AgencyPlanData.DirectUnit != null) {\n            UnitMap.set('Direct', AgencyPlanData.DirectUnit);\n        }\n        if (AgencyPlanData.InDirectUnit != null) {\n            UnitMap.set('Indirect', AgencyPlanData.InDirectUnit);\n        }\n        if (UnitMap.size > 0) {\n            UnitMap.forEach((datas, key) => {\n                let i: number = 0;\n                for (i = 0; i < datas.length; i++) {\n                    let data = datas[i];\n                    let clientID = uuid();\n                    agencyPlanDetail.setValue(\"ClientID\", clientID);\n                    agencyPlanDetail.setValue(\"DataYear\", DataYear);\n                    agencyPlanDetail.setValue(\"DirectUnitType\", key);\n                    agencyPlanDetail.setValue(\"AgentID\", data.AgentID);\n                    agencyPlanDetail.setValue(\"AgentName\", data.AgentName);\n                    agencyPlanDetail.setValue(\"JobGrade\", data.JobGrade);\n                    agencyPlanDetail.setValue(\"IsApprove\", data.IsApprove ? \"Y\" : \"N\");\n                    agencyPlanDetail.setValue(\"Drilldown\", data.Drilldown ? \"Y\" : \"N\");\n                    agencyPlanDetail.setValue(\"AppUseMode\", data.AppUseMode);\n                    agencyPlanDetail.setValue(\"DataType\", data.DataType);\n                    agencyPlanDetail.setValue(\"Goal\", data.Goal);\n                    agencyPlanDetail.setValue(\"Forecast\", data.Forecast);\n                    agencyPlanDetail.setValue(\"Actual\", data.Actual);\n                    agencyPlanDetail.setValue(\"MonthPlan\", data.Plan);\n                    agencyPlanDetail.setValue(\"Manpower\", data.Manpower);\n                    agencyPlanDetail.setValue(\"Recruitment\", data.Recruitment);\n                    agencyPlanDetail.setValue(\"CaseCount\", data.CaseCount);\n                    agencyPlanDetail.setValue(\"PerCase\", data.PerCase);\n                    agencyPlanDetail.setValue(\"Orders\", i);\n                    this.dao.transactionInsert(agencyPlanDetail);\n\n                    agencyPlanDetailExt.setValue(\"ClientID\", clientID);\n                    if (data.extensions) {\n                        data.extensions.forEach(ext => {\n                            agencyPlanDetailExt.setValue(ext.id, ext.value);\n                        });\n                    }\n                    this.dao.transactionInsert(agencyPlanDetailExt);\n                }\n            });\n        }\n\n        //Update other parameter\n        let completionRate = AgencyPlanData.CompletionRate;\n        console.log('[saveAgencyPlanAPI] completionRate', completionRate);\n        if (StringUtils.isNotEmpty(completionRate)) {\n            otherParameter = this.daoFactory.getDefaultTable('TW_LH_SD_Other_Parameter');\n            otherParameter.addRestriction(new EqualRestriction(\"MappingID\", [\"CompletionRate\"]));\n            otherParameter.addRestriction(new EqualRestriction(\"DataYear\", [DataYear]));\n            let queryResp = await this.dao.queryByTable(otherParameter).toPromise();\n            console.log('[saveAgencyPlanAPI] queryResp', queryResp);\n            if (queryResp.Header[\"status\"]) {\n                if (queryResp.Body.length > 0) {\n                    otherParameter.setValue(\"SetValue\", completionRate.toString());\n                    console.log('[saveAgencyPlanAPI] otherParameter 1', otherParameter);\n                    this.dao.transactionUpdate(otherParameter);\n                } else {\n                    otherParameter = this.daoFactory.getDefaultTable('TW_LH_SD_Other_Parameter');\n                    otherParameter.setValue(\"ClientID\", uuid());\n                    otherParameter.setValue(\"DataYear\", DataYear);\n                    otherParameter.setValue(\"MappingID\", \"CompletionRate\");\n                    otherParameter.setValue(\"SetValue\", completionRate.toString());\n                    otherParameter.setValue(\"syncTime\", new Date().getTime());\n                    console.log('[saveAgencyPlanAPI] otherParameter 2', otherParameter);\n                    this.dao.transactionInsert(otherParameter);\n                }\n            }\n        }\n    }\n\n}","import { IAPI } from \"../API.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { Observable, of, from } from \"rxjs\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { v4 as uuid } from 'uuid';\nimport { SQLCommand } from \"../../device/sqlite/SQLCommand\";\nimport { stringify } from \"@angular/core/src/render3/util\";\nimport { EqualRestriction } from \"../../device\";\n\n\nexport class saveProgressAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    public ProgressDatas: Array<any> = [];\n    private dao;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n\n    getAPIName() {\n        return 'saveProgress';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL() {\n\n        console.log('ProgressDatas', this.ProgressDatas);\n        let personalProgress = this.daoFactory.getDefaultTable('TW_LH_SD_Personal_Progress');\n        let personalProgressExt = this.daoFactory.getDefaultTable('TW_LH_SD_Personal_Progress_Extension');\n        let teamProgressMain = this.daoFactory.getDefaultTable('TW_LH_SD_Team_Progress_Main');\n        let teamProgressMainExt = this.daoFactory.getDefaultTable('TW_LH_SD_Team_Progress_Main_Extension');\n        let teamProgressDetail = this.daoFactory.getDefaultTable('TW_LH_SD_Team_Progress_Detail');\n        let teamProgressDetailExt = this.daoFactory.getDefaultTable('TW_LH_SD_Team_Progress_Detail_Extension');\n        let otherParameter = this.daoFactory.getDefaultTable('TW_LH_SD_Other_Parameter');\n        console.log(\"table personalProgress\", personalProgress);\n        console.log(\"table teamProgressMain\", teamProgressMain);\n        console.log(\"table teamProgressDetail\", teamProgressDetail);\n        console.log(\"table otherParameter\", otherParameter);\n        this.dao = this.daoFactory.getDefaultDao();\n        if (personalProgress && teamProgressMain && teamProgressDetail && otherParameter) {\n            this.dao.transactionDelete(personalProgress);\n            this.dao.transactionDelete(teamProgressMain);\n            this.dao.transactionDelete(teamProgressDetail);\n            this.dao.transactionDelete(personalProgressExt);\n            this.dao.transactionDelete(teamProgressMainExt);\n            this.dao.transactionDelete(teamProgressDetailExt);\n\n            return from(Promise.all(this.ProgressDatas.map(x => this._getDate(x))).then(() => {\n                let resp = this.dao.runTransaction().toPromise();\n                return resp;\n            }));\n\n        }\n        else return of(false);\n    }\n\n    private async _getDate(ProgressData: any): Promise<any> {\n\n        let personalProgress = this.daoFactory.getDefaultTable('TW_LH_SD_Personal_Progress');\n        let personalProgressExt = this.daoFactory.getDefaultTable('TW_LH_SD_Personal_Progress_Extension');\n        let teamProgressMain = this.daoFactory.getDefaultTable('TW_LH_SD_Team_Progress_Main');\n        let teamProgressMainExt = this.daoFactory.getDefaultTable('TW_LH_SD_Team_Progress_Main_Extension');\n        let teamProgressDetail = this.daoFactory.getDefaultTable('TW_LH_SD_Team_Progress_Detail');\n        let teamProgressDetailExt = this.daoFactory.getDefaultTable('TW_LH_SD_Team_Progress_Detail_Extension');\n        let otherParameter = this.daoFactory.getDefaultTable('TW_LH_SD_Other_Parameter');\n\n        console.log('ProgressData', ProgressData);\n\n        let DataYear = ProgressData.DataYear;\n        console.log('DataYear', DataYear);\n\n        //save  personal_Progress_Main\n        if (ProgressData.Personal.Values != null) {\n            let personalDatas: Array<any> = ProgressData.Personal.Values;\n            console.log('personalDatas', personalDatas);\n            for (let personalData of personalDatas) {\n                let clientID = uuid();\n                personalProgress.setValue(\"ClientID\", clientID);\n                personalProgress.setValue(\"DataYear\", DataYear);\n                personalProgress.setValue(\"DataType\", personalData.DataType);\n                personalProgress.setValue(\"TimeBase\", personalData.TimeBase);\n                personalProgress.setValue(\"Find\", personalData.Find);\n                personalProgress.setValue(\"Schedule\", personalData.Schedule);\n                personalProgress.setValue(\"Meet\", personalData.Meet);\n                personalProgress.setValue(\"Submit\", personalData.Submit);\n                personalProgress.setValue(\"Inforce\", personalData.Inforce);\n                personalProgress.setValue(\"FYFC\", personalData.FYFC);\n                this.dao.transactionInsert(personalProgress);\n\n                personalProgressExt.setValue(\"ClientID\", clientID);\n                if (personalData.extensions) {\n                    personalData.extensions.forEach(ext => {\n                        personalProgressExt.setValue(ext.id, ext.value);\n                    });\n                }\n                this.dao.transactionInsert(personalProgressExt);\n            }\n        }\n\n        //save  Team_Progress_Main\n        if (ProgressData.Team.Values != null) {\n            let TeamMainlDatas: Array<any> = ProgressData.Team.Values;\n            console.log('TeamMainlDatas', TeamMainlDatas);\n            for (let TeamMainData of TeamMainlDatas) {\n                let clientID = uuid();\n                teamProgressMain.setValue(\"ClientID\", clientID);\n                teamProgressMain.setValue(\"DataYear\", DataYear);\n                teamProgressMain.setValue(\"DataType\", TeamMainData.DataType);\n                teamProgressMain.setValue(\"TimeBase\", TeamMainData.TimeBase);\n                teamProgressMain.setValue(\"Goal\", TeamMainData.Goal);\n                teamProgressMain.setValue(\"Forecast\", TeamMainData.Forecast);\n                teamProgressMain.setValue(\"Actual\", TeamMainData.Actual);\n                teamProgressMain.setValue(\"Shortfall\", TeamMainData.Shortfall);\n                this.dao.transactionInsert(teamProgressMain);\n\n                teamProgressMainExt.setValue(\"ClientID\", clientID);\n                if (TeamMainData.extensions) {\n                    TeamMainData.extensions.forEach(ext => {\n                        teamProgressMainExt.setValue(ext.id, ext.value);\n                    });\n                }\n                this.dao.transactionInsert(teamProgressMainExt);\n            }\n        }\n\n        //save  Team_Progress_Detail\n        let UnitMap = new Map<string, Array<any>>();\n        if (ProgressData.Team.DirectUnit != null) {\n            UnitMap.set('Direct', ProgressData.Team.DirectUnit);\n        }\n        if (ProgressData.Team.InDirectUnit != null) {\n            UnitMap.set('Indirect', ProgressData.Team.InDirectUnit);\n        }\n        if (UnitMap.size > 0) {\n            UnitMap.forEach((datas, key) => {\n                console.log('key', key, 'datas', datas);\n                let i: number = 0;\n                for (i = 0; i < datas.length; i++) {\n                    let data = datas[i];\n                    let clientID = uuid();\n                    teamProgressDetail.setValue(\"ClientID\", clientID);\n                    teamProgressDetail.setValue(\"DataYear\", DataYear);\n                    teamProgressDetail.setValue(\"DirectUnitType\", key);\n                    teamProgressDetail.setValue(\"TimeBase\", data.TimeBase);\n                    teamProgressDetail.setValue(\"AgentID\", data.AgentID);\n                    teamProgressDetail.setValue(\"AgentName\", data.AgentName);\n                    teamProgressDetail.setValue(\"JobGrade\", data.JobGrade);\n                    teamProgressDetail.setValue(\"TeamName\", data.TeamName);\n                    teamProgressDetail.setValue(\"Drilldown\", data.Drilldown ? \"Y\" : \"N\");\n                    teamProgressDetail.setValue(\"DataType\", data.DataType);\n                    teamProgressDetail.setValue(\"AppUseMode\", data.AppUseMode);\n                    if (data.Activities != null) {\n                        teamProgressDetail.setValue(\"Activities\", data.Activities);\n                    }\n                    teamProgressDetail.setValue(\"Goal\", data.Goal);\n                    teamProgressDetail.setValue(\"Forecast\", data.Forecast);\n                    teamProgressDetail.setValue(\"Actual\", data.Actual);\n                    teamProgressDetail.setValue(\"Shortfall\", data.Shortfall);\n                    teamProgressDetail.setValue(\"Orders\", i);\n                    this.dao.transactionInsert(teamProgressDetail);\n\n                    teamProgressDetailExt.setValue(\"ClientID\", clientID);\n                    if (data.extensions) {\n                        data.extensions.forEach(ext => {\n                            teamProgressDetailExt.setValue(ext.id, ext.value);\n                        });\n                    }\n                    this.dao.transactionInsert(teamProgressDetailExt);\n                }\n            });\n        }\n\n        //Update other parameter\n        let YesterdayPoint = ProgressData.YesterdayPoint;\n        console.log('[saveProgressAPI] YesterdayPoint', YesterdayPoint);\n        if (YesterdayPoint != null && YesterdayPoint != undefined) {\n            otherParameter = this.daoFactory.getDefaultTable('TW_LH_SD_Other_Parameter');\n            otherParameter.addRestriction(new EqualRestriction(\"MappingID\", [\"YesterdayPoint\"]));\n            otherParameter.addRestriction(new EqualRestriction(\"DataYear\", [DataYear]));\n            let queryResp = await this.dao.queryByTable(otherParameter).toPromise();\n            console.log('[saveProgressAPI] queryResp', queryResp);\n            if (queryResp.Header[\"status\"]) {\n                if (queryResp.Body.length > 0) {\n                    otherParameter.setValue(\"SetValue\", YesterdayPoint);\n                    console.log('[saveProgressAPI] otherParameter 1', otherParameter);\n                    this.dao.transactionUpdate(otherParameter);\n                } else {\n                    otherParameter = this.daoFactory.getDefaultTable('TW_LH_SD_Other_Parameter');\n                    otherParameter.setValue(\"ClientID\", uuid());\n                    otherParameter.setValue(\"DataYear\", DataYear);\n                    otherParameter.setValue(\"MappingID\", \"YesterdayPoint\");\n                    otherParameter.setValue(\"SetValue\", YesterdayPoint);\n                    otherParameter.setValue(\"syncTime\", new Date().getTime());\n                    console.log('[saveProgressAPI] otherParameter 2', otherParameter);\n                    this.dao.transactionInsert(otherParameter);\n                }\n            }\n        }\n    }\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\nimport { IMockAPI } from '../MockAPI.interface';\n\nexport class getProgressAPI implements IAPI, IRestfulAPI, IMockAPI {\n\n    constructor(private APP_CONFIG: any) { }\n\n    private agentID = '';\n    public url = '';\n    public lastUpdateTime: string = '2019-01-01 00:00:00';\n\n    public setAgentID(agent_id) {\n        this.agentID = agent_id;\n    }\n\n    getMockPath(): string {\n        return './assets/mock/Progress.json';\n    }\n\n    getAPIName() {\n        return 'getProgress';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        let env = this.APP_CONFIG.ENV;\n        if (this.agentID != '' && this.agentID != undefined && this.agentID != null) {\n            this.url = this.APP_CONFIG[env].API_URL.getProgress;\n            requestData.url = this.url + '/' + this.agentID;\n        } else {\n            requestData.url = this.url;\n        }\n        requestData.type = \"GET\";\n        requestData.params = new HttpParams()\n            .set('lastUpdateTime', this.lastUpdateTime);\n        return requestData;\n    }\n}","\nimport { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\n\nexport class MetaConfigAPI implements IAPI, IMockAPI {\n\n    private _configName = '';\n    public get configName() {\n        return this._configName;\n    }\n    public set configName(value) {\n        this._configName = value;\n    }\n\n\n    getAPIName(): string {\n        return 'getMetaConfig';\n    }\n\n    getMockPath() {\n        return `./assets/config/meta/${this._configName}.json`;\n    }\n\n}\n","import { Observable } from 'rxjs';\nimport { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\nimport { DaoFactory } from '../../device/sqlite/DaoFactory';\nimport { TranslateService } from '../../language/translate.service';\nimport { DeviceService } from '../../device/device.service';\n\nexport class SettingValueAPI implements IAPI, IMockAPI, ISQLiteAPI {\n    private _translateService: TranslateService;\n    private _deviceService: DeviceService\n    constructor(\n        translateService: TranslateService,\n        deviceService: DeviceService) {\n        this._translateService = translateService;\n        this._deviceService = deviceService;\n    }\n\n    getAPIName(): string {\n        return 'getSettingValue';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getSettingValue.json';\n    }\n\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n            let resp = {\n                Language: this._translateService.getCurrentLanguage(),\n                LastUpdatedTime: \"Setting_See_Details\"\n            }\n            this._deviceService.getAppVersion().then(version => {\n                resp[\"Version\"] = version;\n                observer.next({ Header: { \"isSuccess\": true }, Body: [resp] });\n                observer.complete();\n            })\n        });\n    }\n\n}\n","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { Inject, Optional } from '@angular/core';\nimport { ConfigToken } from '../../injectionToken/injection-token';\n\nexport class getGoalAPI implements IAPI, IRestfulAPI, IMockAPI{\n\n    constructor(\n        private APP_CONFIG: any\n    ) { }\n\n\n    private agentID = '';\n    private url = '';\n    \n    public lastUpdateTime: string = '2019-01-01 00:00:00';\n\n    public setAgentID( agent_id){\n        this.agentID = agent_id;\n    }\n\n    getMockPath(): string {\n        return 'assets/mock/Goal.json';\n    }\n\n    getAPIName() {\n        return 'getGoal';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        let env = this.APP_CONFIG.ENV;\n          if(this.agentID != '' && this.agentID != undefined && this.agentID != null){\n            this.url = this.APP_CONFIG[env].API_URL.getGoal;\n            requestData.url = this.url + '/' + this.agentID;\n        }else{\n            requestData.url = this.url;\n        }\n        requestData.type = \"GET\";\n        requestData.params = new HttpParams()\n        .set('lastUpdateTime', this.lastUpdateTime);\n        return requestData;\n    }\n}","import { IAPI } from \"../API.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { Observable, of } from \"rxjs\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { v4 as uuid } from 'uuid';\n\n\n\nexport class saveGoalAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    public GoalDatas: Array<any> = [];\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName() {\n        return 'saveGoal';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL() {\n        console.log('GoalDatas', this.GoalDatas);\n        let GoalSetting = this.daoFactory.getDefaultTable('TW_LH_SD_Goal_Setting');\n        let GoalSetting_Ext = this.daoFactory.getDefaultTable('TW_LH_SD_Goal_Setting_Extension');\n        let GoalSettingValue = this.daoFactory.getDefaultTable('TW_LH_SD_Goal_Setting_Value');\n        let GoalSettingPlan = this.daoFactory.getDefaultTable('TW_LH_SD_Goal_Setting_Plan_Value');\n        let GoalSettingPlan_Ext = this.daoFactory.getDefaultTable('TW_LH_SD_Goal_Setting_Plan_Value_Extension');\n        let dao = this.daoFactory.getDefaultDao();\n        console.log('GoalSetting', GoalSetting);\n        console.log('GoalSetting_Ext', GoalSetting_Ext);\n        console.log('GoalSettingValue', GoalSettingValue);\n        console.log('GoalSettingPlan', GoalSettingPlan);\n        console.log('GoalSettingPlan_Ext', GoalSettingPlan_Ext);\n\n        if (GoalSetting && GoalSetting_Ext && GoalSettingValue && GoalSettingPlan && GoalSettingPlan_Ext) {\n            dao.transactionDelete(GoalSetting);\n            dao.transactionDelete(GoalSettingValue);\n            dao.transactionDelete(GoalSettingPlan);\n            dao.transactionDelete(GoalSetting_Ext);\n            dao.transactionDelete(GoalSettingPlan_Ext);\n\n            for (let GoalData of this.GoalDatas) {\n                console.log('GoalData', GoalData);\n\n                let DataYear = GoalData.DataYear;\n                console.log('DataYear', DataYear);\n\n                if (GoalData.GoalSetting != null) {\n                    let GoalSettingData = GoalData.GoalSetting;\n                    let clientID = uuid();\n                    console.log('GoalSettingData', GoalSettingData);\n                    GoalSetting.setValue(\"ClientID\", clientID);\n                    GoalSetting.setValue(\"DataYear\", DataYear);\n                    GoalSetting.setValue(\"ApproveStatus\", GoalSettingData.Status);\n                    GoalSetting.setValue(\"IsNeedSetting\", GoalSettingData.IsNeedSetting ? \"Y\" : \"N\");\n                    GoalSetting.setValue(\"IsFirstTime\", GoalSettingData.IsFirstTime ? \"Y\" : \"N\");\n                    GoalSetting.setValue(\"Remainingdays\", GoalSettingData.Remainingdays);\n                    GoalSetting.setValue(\"GoalSetMonth\", GoalSettingData.GoalSetMonth);\n                    GoalSetting.setValue(\"PersonnelGoalApplicableYM\", GoalSettingData.PersonnelGoalApplicableYM);\n                    GoalSetting.setValue(\"TeamGoalApplicableYM\", GoalSettingData.TeamGoalApplicableYM);\n                    GoalSetting.setValue(\"SupervisorComment\", GoalSettingData.SupervisorComment);\n                    dao.transactionInsert(GoalSetting);\n\n                    //Extension\n                    GoalSetting_Ext.setValue(\"ClientID\", clientID);\n                    if (GoalSettingData.extensions) {\n                        GoalSettingData.extensions.forEach(ext => {\n                            GoalSetting_Ext.setValue(ext.id, ext.value);\n                        });\n                    }\n                    dao.transactionInsert(GoalSetting_Ext);\n                }\n\n                if (GoalData.GoalValue != null) {\n                    let GoalValueDatas: Array<any> = GoalData.GoalValue;\n                    console.log('GoalValueDatas', GoalValueDatas);\n                    for (let data of GoalValueDatas) {\n                        GoalSettingValue.setValue(\"ClientID\", uuid());\n                        GoalSettingValue.setValue(\"DataYear\", DataYear);\n                        GoalSettingValue.setValue(\"DataType\", data.DataType);\n                        GoalSettingValue.setValue(\"Value\", data.Value.toString());\n                        dao.transactionInsert(GoalSettingValue);\n                    }\n                }\n\n                if (GoalData.GoalPlan != null) {\n                    let GoalPlanData = GoalData.GoalPlan;\n                    console.log('GoalPlanData', GoalPlanData);\n                    if (GoalPlanData.TimeBase == 'Month') {\n                        let GoalPlanDatas: Array<any> = GoalPlanData.Values;\n                        for (let data of GoalPlanDatas) {\n                            let clientID = uuid();\n                            GoalSettingPlan.setValue(\"ClientID\", clientID);\n                            GoalSettingPlan.setValue(\"DataYear\", DataYear);\n                            GoalSettingPlan.setValue(\"PerformanceType\", data.PerformanceType);\n                            GoalSettingPlan.setValue(\"Month\", data.Month);\n                            GoalSettingPlan.setValue(\"Value\", data.Value);\n                            dao.transactionInsert(GoalSettingPlan);\n\n                            //Extension\n                            GoalSettingPlan_Ext.setValue(\"ClientID\", clientID);\n                            if (data.extensions) {\n                                data.extensions.forEach(ext => {\n                                    GoalSettingPlan_Ext.setValue(ext.id, ext.value);\n                                });\n                            }\n                            dao.transactionInsert(GoalSettingPlan_Ext);\n                        }\n                    }\n                }\n            }\n            return dao.runTransaction();\n        }\n        else return of(false);\n    }\n}","import { IAPI } from \"../API.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { of } from \"rxjs\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { v4 as uuid } from 'uuid';\n\nexport class saveActualAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    public ActualDatas: Array<any> = [];\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    getAPIName() {\n        return 'saveActual';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL() {\n        console.log('ActualDatas', this.ActualDatas);\n        let ActualValue = this.daoFactory.getDefaultTable('TW_LH_SD_Actual_Value');\n        let ActualValueExt = this.daoFactory.getDefaultTable('TW_LH_SD_Actual_Value_Extension');\n        let dao = this.daoFactory.getDefaultDao();\n        console.log('ActualValue', ActualValue);\n        if (ActualValue) {\n            dao.transactionDelete(ActualValue);\n            dao.transactionDelete(ActualValueExt);\n            for (let ActualData of this.ActualDatas) {\n                console.log('ActualData', ActualData);\n\n                let DataYear = ActualData.DataYear;\n                console.log('DataYear', DataYear);\n\n                let ActualMainDatas: Array<any> = ActualData.Values;\n                console.log('ActualMainDatas', ActualMainDatas);\n                for (let data of ActualMainDatas) {\n                    let clientID = uuid();\n                    ActualValue.setValue(\"ClientID\", clientID);\n                    ActualValue.setValue(\"DataYear\", DataYear);\n                    ActualValue.setValue(\"DataType\", data.DataType);\n                    ActualValue.setValue(\"PerformanceType\", data.PerformanceType);\n                    ActualValue.setValue(\"Month\", data.Month);\n                    ActualValue.setValue(\"Value\", data.Value);\n                    dao.transactionInsert(ActualValue);\n\n                    ActualValueExt.setValue(\"ClientID\", clientID);\n                    if (data.extensions) {\n                        data.extensions.forEach(ext => {\n                            ActualValueExt.setValue(ext.id, ext.value);\n                        });\n                    }\n                    dao.transactionInsert(ActualValueExt);\n                }\n\n            }\n            return dao.runTransaction();\n        }\n        else return of(false);\n    }\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\nimport { IMockAPI } from '../MockAPI.interface';\n\nexport class getActualAPI implements IAPI, IRestfulAPI, IMockAPI{\n\n    constructor(private APP_CONFIG: any) { }\n\n    private agentID = '';\n    public url = '';\n    public lastUpdateTime: string = '2019-01-01 00:00:00';\n\n    public setAgentID( agent_id){\n        this.agentID = agent_id;\n    }\n\n    getMockPath(): string {\n        return 'assets/mock/Actual.json';\n    }\n\n    getAPIName() {\n        return 'getActual';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        let env = this.APP_CONFIG.ENV;\n        if(this.agentID != '' && this.agentID != undefined && this.agentID != null){\n            this.url = this.APP_CONFIG[env].API_URL.getActual;\n            requestData.url = this.url + '/' + this.agentID;\n        }else{\n            requestData.url = this.url;\n        }\n        requestData.type = \"GET\";\n        requestData.params = new HttpParams()\n        .set('lastUpdateTime', this.lastUpdateTime);\n        return requestData;\n    }\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { SubmitGoalData } from '../../bean';\n\n\nexport class pushGoalSettingDataAPI implements IAPI, IMockAPI, IRestfulAPI {\n\n    public url: string = '';\n    public mainData: SubmitGoalData;\n\n    constructor() { }\n\n    getAPIName() {\n        return 'pushGoalSettingData';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        requestData.url = this.url;\n        requestData.body = this.mainData;\n        requestData.type = \"POST\";\n        return requestData;\n    }\n\n    getMockPath() {\n        return './assets/mock/GoalCallback.json';\n    }\n}","import { IAPI } from '../API.interface';\nimport { IRestfulAPI } from '../RestfulAPI.interface';\nimport { APIRequest } from '../APIRequest';\nimport { HttpParams } from '@angular/common/http';\nimport { IMockAPI } from '../MockAPI.interface';\n\n\nexport class pushApproveGoalAPI implements IAPI, IMockAPI, IRestfulAPI {\n\n    public url: string = '';\n    public mainData: any = {};\n\n    constructor() { }\n\n    getAPIName() {\n        return 'pushApproveGoal';\n    }\n\n    getRequestData() {\n        let requestData = new APIRequest();\n        requestData.url = this.url;\n        requestData.body = this.mainData;\n        requestData.type = \"POST\";\n        return requestData;\n    }\n\n    getMockPath() {\n        return './assets/mock/logout.json';\n    }\n}","\nimport { Observable, of } from \"rxjs\";\nimport { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\n\nexport class GetDeviceInfoAPI implements IAPI, ISQLiteAPI {\n\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    private dataType = '';\n\n    setDataType(dataType: string) {\n        this.dataType = dataType;\n    }\n    public token = '';\n\n    getAPIName(): string {\n        return 'getDeviceInfo';\n    }\n    getMockPath(): string {\n        if (this.dataType === 'StepupLevel') {\n            return './assets/mock/getDeviceInfoForAgentInfo.json';\n        }\n        else {\n            return './assets/mock/getDeviceInfo.json'\n        }\n    }\n\n    executeSQL(): Observable<any> {\n        // return sha-256: \"test||test\"\n        let infoObj = this.daoFactory.getTable(\"Profile\", \"TW_LH_SD_DeviceInfo\");\n        let dao = this.daoFactory.getDao(\"Profile\");\n        if (this.dataType != '') {\n            infoObj.addRestriction(new EqualRestriction('Category', [this.dataType]));\n        }\n        return dao.queryByTable(infoObj);\n    }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { IAPI } from \"../API.interface\";\nimport { IRestfulAPI } from \"../RestfulAPI.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { APIRequest } from \"../APIRequest\";\n\nexport class LoginAPI implements IAPI, IRestfulAPI, IMockAPI {\n\n  constructor() { }\n\n  public url = '';\n  public body = {};\n  public type = \"GET\";\n  public params = null;\n\n  public getAPIName() {\n    return 'onlineLogin';\n  }\n\n  public getMockPath() {\n    return './assets/mock/onlineLogin.json';\n  }\n\n  public getRequestData() {\n    let requestData = new APIRequest();\n    requestData.body = this.body;\n    requestData.url = this.url;\n    requestData.type = \"POST\";\n    requestData.params = this.params;\n    return requestData;\n  }\n\n}\n\n","import { Observable } from 'rxjs';\nimport { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\nimport { DaoFactory } from '../../device/sqlite/DaoFactory';\nimport { PageInfo } from '../../utils/pageInfo';\nimport { ClientCustomDao } from '../../device/sqlite/ClientCustomDao';\nimport { EqualRestriction } from '../../device/sqlite/restrictions/EqualRestriction';\nimport { LimitRestriction } from '../../device/sqlite/restrictions/LimitRestriction';\nimport { OffsetRestriction } from '../../device/sqlite/restrictions/OffsetRestriction';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { OrderByRestriction } from '../../device';\n\nexport class DashboardGetMessageListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    private _keyword: string;\n    private _pageInfo: PageInfo;\n    private _isPopup: boolean = null;\n    private _isShow: boolean = null;\n\n    public get isShow(): boolean {\n        return this._isShow;\n    }\n    public set isShow(value: boolean) {\n        this._isShow = value;\n    }\n\n    setKeyword(keyword: string) {\n        this._keyword = keyword;\n    }\n\n    setPageInfo(pageInfo: PageInfo) {\n        this._pageInfo = pageInfo;\n    }\n\n    setIsPopup(val: boolean) {\n        this._isPopup = val;\n    }\n\n    getAPIName(): string {\n        return 'getDashboardMessageList';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getDashboardMessageList.json';\n    }\n\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n                if (messageObj) {\n\n                    dao = new ClientCustomDao(dao);\n\n                    if (StringUtils.isNotEmpty(this._keyword)) {\n                        if (this._keyword == 'All') { }\n                        else if (this._keyword == 'UnRead') {\n                            messageObj.addRestriction(new EqualRestriction(\"Status\", [this._keyword]));\n                        }\n                        else if(this._keyword === 'PendingApproval') {\n                            messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", ['GoalSetting']));\n                            messageObj.addRestriction(new EqualRestriction(\"MessageType\", ['Need_Goal_Approve']));\n                            messageObj.addRestriction(new EqualRestriction(\"LinkStatus\", ['Approve']));\n\n                        }\n                        else if (this._keyword == 'Customer' || this._keyword == 'Calendar' || this._keyword == 'GoalSetting' || this._keyword == 'Progress') {\n                            messageObj.addRestriction(new EqualRestriction(\"MessageCategory\", [this._keyword]));\n                        }\n                    }\n\n                    if (this._isPopup !== null) {\n                        let isPopup = this._isPopup ? 'Y' : 'N';\n                        messageObj.addRestriction(new EqualRestriction(\"IsPopup\", [isPopup]));\n                    }\n\n                    if (this._isShow !== null) {\n                        let isShow = this._isShow ? 'Y' : 'N';\n                        messageObj.addRestriction(new EqualRestriction(\"IsShow\", [isShow]));\n                    }\n\n                    //add page limit\n                    if (this._pageInfo) {\n                        messageObj.addRestriction(new LimitRestriction([this._pageInfo.pageSize]));\n                        messageObj.addRestriction(new OffsetRestriction([(this._pageInfo.page - 1) * this._pageInfo.pageSize]));\n                    }\n\n                    //add order\n                    messageObj.addRestriction(new OrderByRestriction([{ column: 'MessageTime', order: 'DESC' }]))\n\n                    dao.queryByTable(messageObj).subscribe((resp) => {\n                        console.log(\"queryByTable: \", JSON.stringify(resp));\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { Observable } from 'rxjs';\nimport { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\nimport { DaoFactory } from '../../device/sqlite/DaoFactory';\nimport { ClientCustomDao } from '../../device/sqlite/ClientCustomDao';\nimport { EqualRestriction } from '../../device/sqlite/restrictions/EqualRestriction';\nimport { SQLiteTable } from '../../device/sqlite/SQLiteTable';\nimport { InRestriction } from '../../device/sqlite/restrictions/InRestriction';\n\n\nexport class DashboardUpdateMessageStatusAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: string;\n    private _clientIDList: Array<string> = [];\n    private _status: string;\n\n    constructor(private daoFactory: DaoFactory) {\n\n    }\n\n    setClientID(clientID: string) {\n        this._clientID = clientID;\n    }\n\n    setClientIDList(list: Array<string>) {\n        this._clientIDList = list;\n    }\n\n    setStatus(status: string) {\n        this._status = status;\n    }\n\n    getAPIName(): string {\n        return 'updateDashboardMessageStatus';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/saveSuccess.json';\n    }\n\n    executeSQL(): Observable<any> {\n\n        return Observable.create((observer) => {\n            let dao = this.daoFactory.getDefaultDao();\n            if (dao != undefined) {\n\n                //save customer data\n                let messageObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Message\");\n                if (messageObj) {\n                    dao = new ClientCustomDao(dao);\n\n                    messageObj = (<SQLiteTable>messageObj);\n\n\n                    if (this._clientIDList.length > 0) {\n                        messageObj.addRestriction(new InRestriction('ClientID', this._clientIDList));\n                    } else {\n                        messageObj.addRestriction(new EqualRestriction('ClientID', [this._clientID]));\n                    }\n                    messageObj.setValue(\"Status\", this._status);\n\n                    dao.updateByTable(messageObj).subscribe((resp) => {\n\n                        observer.next(resp);\n                        observer.complete();\n                    });\n                }\n                else {\n                    observer.next(false);\n                    observer.complete();\n                }\n\n            }\n            else {\n                observer.next(false);\n                observer.complete();\n            }\n        });\n    }\n}\n","import { Observable, of, from } from 'rxjs';\nimport { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\nimport { DaoFactory } from '../../device/sqlite/DaoFactory';\nimport { TranslateService } from '../../language/translate.service';\nimport { DeviceService } from '../../device/device.service';\nimport { EqualRestriction } from '../../device';\n\nexport class ChangeMessageStatusAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _messageID = null;\n    private _col = null;\n    private _val = null;\n\n    public get val() {\n        return this._val;\n    }\n    public set val(value) {\n        this._val = value;\n    }\n\n    public get col() {\n        return this._col;\n    }\n    public set col(value) {\n        this._col = value;\n    }\n    public get messageID() {\n        return this._messageID;\n    }\n    public set messageID(value) {\n        this._messageID = value;\n    }\n\n    constructor(private daoFactory: DaoFactory) {\n    }\n\n    getAPIName(): string {\n        return 'ChangeMessageStatus';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/addCalendarEvent.json';\n    }\n\n    executeSQL(): Observable<any> {\n\n        if(this._messageID && this._col && this._val){\n            return from(this._updateStatus(this._messageID, this._col, this._val));\n        }else{\n            return of(false);\n        }\n    }\n\n    private async _updateStatus(messageID, col, val){\n        let resp = null;\n        let dao = this.daoFactory.getDefaultDao();\n        let Message = this.daoFactory.getDefaultTable('TW_LH_SD_Message');\n        console.log(\"_updateStatus Message\",Message)\n        if(Message){\n            Message.addRestriction(new EqualRestriction(\"MessageID\",[messageID]));\n            let messageResp = await dao.queryByTable(Message).toPromise();\n            if(messageResp.Header[\"status\"] && messageResp.Body.length>0){\n                Message.setValue(col,val);\n                resp = await dao.updateByTable(Message).toPromise();\n            }\n        }\n        console.log(\"_updateStatus resp\", resp);\n        return resp;\n    }\n\n}\n","\nimport { Observable, of } from \"rxjs\";\nimport { IAPI } from \"../API.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { ISQLiteAPI } from \"../SQLiteAPI.interface\";\nimport { ClientCustomDao, DaoFactory } from '../../device/sqlite';\nimport { EqualRestriction } from '../../device/sqlite';\nimport { IRestfulAPI } from \"../RestfulAPI.interface\";\nimport { APIRequest } from \"../APIRequest\";\n\nexport class UnbindDeviceAPI implements IAPI, IMockAPI, IRestfulAPI {\n\n    constructor(private APP_CONFIG: any) {\n    }\n\n\n    private _deviceID: string = '';\n\n    setDeviceID(deviceID: string) {\n        this._deviceID = deviceID;\n    }\n\n    getAPIName(): string {\n        return 'unbindDevice';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/logout.json';\n    }\n\n    getRequestData(): APIRequest {\n        let env = this.APP_CONFIG.ENV;\n        let cleanDeviceUrl = this.APP_CONFIG[env]['API_URL']['unbindDevice'];\n        let requestData = new APIRequest();\n        requestData.url = cleanDeviceUrl;\n        requestData.body = { \"DeviceId\": this._deviceID };\n        requestData.type = \"POST\";\n        return requestData;\n    }\n}\n","import { Observable } from 'rxjs';\nimport { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\nimport { DaoFactory } from '../../device/sqlite/DaoFactory';\nimport { SQLiteTable } from '../../device/sqlite/SQLiteTable';\nimport { ClientCustomDao } from '../../device/sqlite/ClientCustomDao';\n\nexport class UpdateTimeListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n  getAPIName(): string {\n    return 'getUpdateTimeList';\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/getUpdateTimeList.json\";\n  }\n\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let dataSyncObj = this._DaoFactory.getTable('Profile', \"TW_LH_SD_VW_FuncSync_Time\");\n      let dao = this._DaoFactory.getDao('Profile');\n      if (dataSyncObj != undefined && dao != undefined) {\n        dataSyncObj = (<SQLiteTable>dataSyncObj);\n        dao = new ClientCustomDao(dao);\n        dao.queryByTable(dataSyncObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { Injectable, Inject } from \"@angular/core\";\nimport { ProfileCodeAPI } from \"../../api/register/ProfileCode\";\nimport { SettingAPI } from '../../api/register/SettingAPI';\nimport { ExtensionConfigAPI } from \"../../api/register/ExtensionConfigAPI\";\nimport { IInitTask } from \"../interface/InitialTask.interface\";\nimport { APIFactory } from \"../../api/APIFactory\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { DeviceFactory } from \"../../device/DeviceFactory\";\nimport { OfflineAuthAPI } from \"../../api/register/offineAuthAPI\";\nimport { saveLoginTokenAPI } from \"../../api/register/loginTokenAPI\";\nimport { CheckVersionAPI } from '../../api/register/CheckVersionAPI';\nimport { MenuAPI } from \"../../api/register/menuAPI\";\nimport { SettingUpdateAPI, } from \"../../api/register/SettingUpdateAPI\";\nimport { ContactsSearchAPI } from '../../api/register/ContactsSearchAPI';\nimport { SyncPushAPI } from \"../../api/register/SyncPushAPI\";\nimport { SyncPullAPI } from \"../../api/register/SyncPullAPI\";\nimport { CurrentLanguageListAPI } from '../../api/register/CurrentLanguageListAPI';\nimport { BindingAccountAPI } from \"../../api/register/BindingAccountAPI\";\nimport { DeviceAccountAPI } from \"../../api/register/DeviceAccountAPI\";\nimport { UpdatePushIDAPI } from \"../../api/register/UpdatePushIDAPI\";\nimport { syncSequenceIDAPI } from \"../../api/register/syncSequenceIDAPI\";\nimport { logErrorAPI } from \"../../api/register/logErrorAPI\";\nimport { logActionAPI } from \"../../api/register/logActionAPI\";\nimport { PushErrorLogAPI } from \"../../api/register/pushErrorLogAPI\";\nimport { PushActionLogAPI } from \"../../api/register/PushActionLogAPI\";\nimport { RouterMapAPI } from \"../../api/register/RouterMapAPI\";\nimport { getYearConfigAPI } from \"../../api/register/getYearConfigAPI\";\nimport { saveYearConfigAPI } from \"../../api/register/saveYearConfigAPI\";\nimport { getAgencyPlanAPI } from \"../../api/register/getAgencyPlanAPI\";\nimport { saveAgencyPlanAPI } from \"../../api/register/saveAgencyPlanAPI\";\nimport { saveProgressAPI } from \"../../api/register/saveProgressAPI\";\nimport { getProgressAPI } from \"../../api/register/getProgressAPI\";\n\nimport { MetaConfigAPI } from \"../../api/register/MetaConfigAPI\";\nimport { SettingValueAPI } from \"../../api/register/SettingValueAPI\";\nimport { TranslateService } from \"../../language/translate.service\";\nimport { DeviceService } from \"../../device/device.service\";\nimport { getGoalAPI } from \"../../api/register/getGoalAPI\";\nimport { saveGoalAPI } from \"../../api/register/saveGoalAPI\";\nimport { saveActualAPI } from \"../../api/register/saveActual\";\nimport { getActualAPI } from \"../../api/register/getActual\";\nimport { pushGoalSettingDataAPI } from \"../../api/register/pushGoalSettingDataAPI\";\nimport { pushApproveGoalAPI } from \"../../api/register/pushApproveGoalAPI\";\nimport { ConfigToken } from \"../../injectionToken/injection-token\";\nimport { GetDeviceInfoAPI } from \"../../api/register/GetDeviceInfoAPI\";\nimport { LoginAPI } from \"../../api/register/LoginAPI\";\nimport { DashboardGetMessageListAPI } from \"../../api/register/DashboardGetMessageListAPI\";\nimport { DashboardUpdateMessageStatusAPI } from \"../../api/register/DashboardUpdateMessageStatusAPI\";\nimport { ChangeMessageStatusAPI } from \"../../api/register/changeMessageStatusAPI\";\nimport { UnbindDeviceAPI } from \"../../api/register/UnbindDeviceAPI\";\nimport { UpdateTimeListAPI } from \"../../api/register/UpdateTimeListAPI\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegisterAPITask implements IInitTask {\n\n    constructor(private APIFactory: APIFactory,\n        private DAOFactory: DaoFactory,\n        private deviceFactory: DeviceFactory,\n        private translateService: TranslateService,\n        private deviceService: DeviceService,\n        @Inject(ConfigToken) private APP_CONFIG: any\n    ) { }\n    doTask(): Promise<any> {\n        return new Promise((res, rej) => {\n            console.log('register API');\n            //register Setting API\n            this.APIFactory.registerAPI(new SettingAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new SettingUpdateAPI(this.DAOFactory));\n            //register Config API\n            this.APIFactory.registerAPI(new ExtensionConfigAPI());\n            //register Profile API\n            this.APIFactory.registerAPI(new ProfileCodeAPI(this.DAOFactory));\n            //register Device API\n            this.APIFactory.registerAPI(new CurrentLanguageListAPI(this.DAOFactory));\n            //register Login API\n            this.APIFactory.registerAPI(new saveLoginTokenAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new OfflineAuthAPI(this.DAOFactory, this.APP_CONFIG));\n            //register getMenu API\n            this.APIFactory.registerAPI(new MenuAPI());\n            //register checkversion API\n            this.APIFactory.registerAPI(new CheckVersionAPI());\n            //register datasync API\n            this.APIFactory.registerAPI(new SyncPushAPI());\n            this.APIFactory.registerAPI(new SyncPullAPI());\n            //register UpdatePushID API\n            this.APIFactory.registerAPI(new UpdatePushIDAPI());\n            //register getSyncSequence API\n            this.APIFactory.registerAPI(new syncSequenceIDAPI());\n\n            //register account binding API\n            this.APIFactory.registerAPI(new BindingAccountAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new DeviceAccountAPI(this.DAOFactory));\n\n            this.APIFactory.registerAPI(new ContactsSearchAPI(this.deviceFactory));\n\n            this.APIFactory.registerAPI(new logErrorAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new logActionAPI(this.DAOFactory));\n\n            this.APIFactory.registerAPI(new PushErrorLogAPI());\n            this.APIFactory.registerAPI(new PushActionLogAPI());\n\n            this.APIFactory.registerAPI(new RouterMapAPI());\n\n            this.APIFactory.registerAPI(new getYearConfigAPI(this.APP_CONFIG));\n            this.APIFactory.registerAPI(new saveYearConfigAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new getAgencyPlanAPI(this.APP_CONFIG));\n            this.APIFactory.registerAPI(new saveAgencyPlanAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new getProgressAPI(this.APP_CONFIG));\n            this.APIFactory.registerAPI(new saveProgressAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new getGoalAPI(this.APP_CONFIG));\n            this.APIFactory.registerAPI(new saveGoalAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new getActualAPI(this.APP_CONFIG));\n            this.APIFactory.registerAPI(new saveActualAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new pushGoalSettingDataAPI());\n            this.APIFactory.registerAPI(new pushApproveGoalAPI());\n            this.APIFactory.registerAPI(new GetDeviceInfoAPI(this.DAOFactory));\n\n            this.APIFactory.registerAPI(new MetaConfigAPI());\n            this.APIFactory.registerAPI(new SettingValueAPI(this.translateService, this.deviceService));\n\n            this.APIFactory.registerAPI(new LoginAPI());\n            this.APIFactory.registerAPI(new DashboardGetMessageListAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new DashboardUpdateMessageStatusAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new ChangeMessageStatusAPI(this.DAOFactory));\n            this.APIFactory.registerAPI(new UnbindDeviceAPI(this.APP_CONFIG));\n            this.APIFactory.registerAPI(new UpdateTimeListAPI(this.DAOFactory));\n\n            res(\"register API tasks Done!\");\n        })\n    }\n}\n","import { Injectable, ErrorHandler, Optional, Inject } from '@angular/core';\nimport { configTaskToken, registerAPITaskToken, dataSyncTaskToken, customTaskToken, initialFinishToken } from '../injectionToken';\nimport { IInitTask } from './interface/InitialTask.interface';\nimport { DataSyncTask } from './tasks/DataSyncTask';\nimport { ConfigTask } from './tasks/ConfigTask';\nimport { DeviceTask } from './tasks/DeviceTask';\nimport { RegisterAPITask } from './tasks/RegisterAPITask';\nimport { initialFinish } from './interface/initialFinish.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InitialService {\n  _sequentialTasks = [];\n  _parallelTasks = [];\n  constructor(\n    private errorHandler: ErrorHandler,\n    private dataSyncTask: DataSyncTask,\n    private configTask: ConfigTask,\n    private deviceTask: DeviceTask,\n    private registerAPITask: RegisterAPITask,\n    @Optional() @Inject(registerAPITaskToken) private customRegisterAPITask: IInitTask,\n    @Optional() @Inject(customTaskToken) private customTask: IInitTask,\n    @Optional() @Inject(initialFinishToken) private initialFinish: initialFinish) {\n    //register sequential tasks\n    if (this.registerAPITask)\n      this._sequentialTasks.push(this.registerAPITask);\n    if (this.customRegisterAPITask)\n      this._sequentialTasks.push(this.customRegisterAPITask);\n    if (this.dataSyncTask)\n      this._sequentialTasks.push(this.dataSyncTask);\n    if (this.deviceTask)\n      this._sequentialTasks.push(this.deviceTask);\n    if (this.configTask)\n      this._sequentialTasks.push(this.configTask);\n    if (this.customTask)\n      this._sequentialTasks.push(this.customTask);\n\n    //register parallel tasks\n    // this._parallelTasks.push(this.configTask);\n  }\n\n  public async load(): Promise<any> {\n    console.log('initial service load!', this._sequentialTasks);\n    try {\n      await this.waitnseconds(1000);\n      for (let t of this._sequentialTasks) {\n        await t.doTask()\n      }\n      await Promise.all(this._parallelTasks.map(task => task.doTask())).then(val => {\n      });\n      await this.dataSyncTask.refreshSchema();\n      if(this.initialFinish) {\n        this.initialFinish.afterInitialFinish();\n      }\n    } catch (err) {\n      console.warn('Initial Error: maybe not on the mobile');\n      this.errorHandler.handleError(err);\n    }\n  }\n\n\n  public waitnseconds(second): Promise<any> {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        res();\n      }, second);\n    })\n  }\n}\n","export class APIResponse{\n    private bodyJSON : string;\n\n    public setBodyJSON(bodyJSON) :void {\n        this.bodyJSON = bodyJSON;\n    }\n\n    public getBodyJSON() :string {\n        return this.bodyJSON;\n    }\n}","import { IAPI } from \"../API.interface\";\nimport { IRestfulAPI } from \"../RestfulAPI.interface\";\nimport { IMockAPI } from \"../MockAPI.interface\";\nimport { APIRequest } from \"../APIRequest\";\n\nexport class LogoutAPI implements IAPI, IRestfulAPI, IMockAPI {\n\n  constructor() { }\n\n  public url = '';\n  public body = {};\n  public type = \"GET\";\n  public params = null;\n\n  public getAPIName() {\n    return 'Logout';\n  }\n\n  public getMockPath() {\n    return './assets/mock/logout.json';\n  }\n\n  public getRequestData() {\n    let requestData = new APIRequest();\n    requestData.url = this.url;\n    requestData.type = \"POST\";\n    return requestData;\n  }\n\n}\n","import {Observable, from, of} from 'rxjs';\nimport { IAPI } from '../API.interface';\nimport { IMockAPI } from '../MockAPI.interface';\nimport { ISQLiteAPI } from '../SQLiteAPI.interface';\nimport { ISearchTableByField } from '../../interface/ISearchTableByField';\nimport { DaoFactory, EqualRestriction } from '../../device/sqlite';\n\n\nexport class GetOtherParameterAPI implements IAPI, IMockAPI, ISQLiteAPI, ISearchTableByField {\n\n    private _year: number = -1;\n\n    private _daoFactory: DaoFactory;\n    constructor(daoFactory: DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    SetYear(value: number): void {\n        this._year = value;\n    }\n\n    getAPIName(): string {\n        return 'getOtherParameter';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getOtherParameterMock.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.debug(\"SQLite Start \");\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite defaultDao: \", defaultDao);\n\n        let tableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Other_Parameter\"); \n        if(this._year !== -1) {\n            tableObj.addRestriction(new EqualRestriction('DataYear', [this._year]));\n        }\n        console.debug(\"SQLite tableObj: \", tableObj);\n\n        if(defaultDao != undefined && tableObj != undefined) {\n            return from(defaultDao.queryByTable(tableObj).toPromise().then(resp => {\n                console.debug(\"SQLite getOtherParameter resp: \", resp);\n                console.debug(\"SQLite getOtherParameter json resp: \", JSON.stringify(resp)); \n                return resp;\n            }));\n        }\n        else {\n            of(false);\n            console.debug(\"SQLite failed\");\n        }\n    }\n\n}","import { Injectable, Inject } from \"@angular/core\";\nimport { ConfigToken } from \"../injectionToken\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { APIFactory } from \"../api/APIFactory\";\nimport { APIDispatch } from \"../api/APIDispatch\";\nimport { CheckVersionAPI } from \"../api/register/CheckVersionAPI\";\nimport { DeviceService } from \"../device\";\nimport { Observable } from \"rxjs\";\nimport { versionInfo } from \"../bean\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class VersionCheckService {\n\n    constructor(\n        private httpService: HttpClient,\n        private APIFactory: APIFactory,\n        private dispatcher: APIDispatch,\n        private deviceService: DeviceService,\n        @Inject(ConfigToken) private APP_CONFIG: any\n    ) {\n        this.deviceService.getAppVersion().then((version) => {\n            this.appVersion = version;\n        })\n        this.platform = this.deviceService.getDevicePlatform();\n    }\n    private appVersion;\n    private platform;\n\n    public checkVersion(): Observable<any> {\n        // get app && schema version\n        let checkVersionAPI = this.APIFactory.getAPI('CheckVersion');\n        (<CheckVersionAPI>checkVersionAPI).version = this.appVersion;\n        (<CheckVersionAPI>checkVersionAPI).DeviceSystem = this.deviceService.getDevicePlatform();\n        return Observable.create((observer) => {\n            this.dispatcher.dispatch(checkVersionAPI).subscribe((resp) => {\n                console.log(\"check version resp:\", resp);\n                if (resp.version != this.appVersion) {\n                    observer.next({ isSuccess: true, newVersion: true, appVersion: new versionInfo(resp.appPath, resp.version) });\n                    observer.complete();\n                }\n                else {\n                    observer.next({ isSuccess: true, newVersion: false, appVersion: new versionInfo(resp.appPath, resp.version) });\n                    observer.complete();\n                }\n            }, (error) => {\n                console.warn(\"check Version request error:\", error.message);\n                observer.next({ isSuccess: false, errorMsg: error.message });\n                observer.complete();\n            })\n        });\n\n    }\n\n\n}","export interface IFunctionSync {\n    getName(): string;\n    getState(): FUNC_STATE;\n    setState(state: FUNC_STATE): any;\n    getPushJson(frontendTime: number): Promise<any>;\n    pullData(data: any): Promise<any>;\n    getSequentialIDNeeded(frontendTime: number): Promise<number>;\n    setSequentialID(IdList: Array<string>): Promise<any>;\n}\n\nexport enum FUNC_STATE {\n    PENDING = 0,\n    AVAILABLE = 1\n}","import { Injectable, Inject, Optional, ErrorHandler } from '@angular/core';\nimport { IFunctionSync, FUNC_STATE } from './function/IFunctionSync';\nimport { DaoFactory } from '../device/sqlite/DaoFactory';\nimport { EqualRestriction } from '../device/sqlite/restrictions/EqualRestriction';\nimport { ConfigToken, registerDataSyncFuncToken } from '../injectionToken/injection-token';\nimport { first } from 'rxjs/operators';\nimport { APIFactory } from '../api/APIFactory';\nimport { APIDispatch } from '../api/APIDispatch';\nimport { SyncPushAPI } from '../api/register/SyncPushAPI';\nimport { SyncPullAPI } from '../api/register/SyncPullAPI';\nimport { syncSequenceIDAPI } from '../api/register/syncSequenceIDAPI';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { parseISO } from 'date-fns';\nimport { IregisterDataSyncFunc } from '../initTask/interface/registerDataSyncFunc.interface';\nimport * as _ from 'lodash';\nimport { APPError } from '../errorHandler/APPError';\nimport { IDao } from '../device/sqlite/Dao.interface';\nimport { DeviceService } from '../device/device.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSyncService {\n\n  private syncAPIMap: Object = {}; // APIåç¨±å°æå°å¯¦ä¾\n  private FuncAPIMap: Object = {}; // åè½å°æå°API\n  private SyncProcessList: Array<string> = []; // ç¶åæ­£å¨syncçåè½\n  private func_url = {};\n  private syncStateSubject = new BehaviorSubject<any>(this.getCurrentSyncState());\n  constructor(\n    @Inject(ConfigToken) private APP_CONFIG: any,\n    private APIFactory: APIFactory,\n    private dispatcher: APIDispatch,\n    private errorHandler: ErrorHandler,\n    private DaoFactory: DaoFactory,\n    private devcieService: DeviceService,\n    @Inject(registerDataSyncFuncToken) private registerDataSyncFunc: IregisterDataSyncFunc\n  ) {\n    this.init();\n  }\n\n  private init() {\n    this.func_url = this.APP_CONFIG[this.APP_CONFIG.ENV].SYNC_URL;\n    this.FuncAPIMap = this.registerDataSyncFunc.getFuncMap();\n    this.registerDataSyncFunc.getSyncInstance().forEach(x => {\n      this.registerAPI(x);\n    })\n  }\n\n  public getSyncState(): Observable<any> {\n    return this.syncStateSubject.asObservable();\n  }\n\n  public registerAPI(func: IFunctionSync) {\n    this.syncAPIMap[func.getName()] = func;\n  }\n\n  async syncAllFunc(async = false) {\n    console.log(\"syncAllFunc:\", this.FuncAPIMap, Object.keys(this.FuncAPIMap));\n    return this.syncFunc(Object.keys(this.FuncAPIMap), async);\n  }\n\n  async syncFunc(FuncList: Array<string>, async = false) {\n    console.log(\"SyncProcessList:\", this.SyncProcessList);\n    console.log(\"Sync Func:\", FuncList);\n\n    if (this.devcieService.getNetworkState()) {\n\n      try {\n        // If not async , filter current sync function first \n        if (!async) {\n          FuncList = FuncList.filter(x => !this.SyncProcessList.includes(x));\n        }\n\n        this.SyncProcessList = [...this.SyncProcessList, ...FuncList];\n\n        let parallelSync = [];\n        let seqSync = [];\n\n        FuncList.forEach((function_name) => {\n\n          if (Object.keys(this.FuncAPIMap).includes(function_name)) {\n            if (this.FuncAPIMap[function_name].length > 1)\n              seqSync = [...seqSync, ...this.FuncAPIMap[function_name]];\n            else\n              parallelSync = [...parallelSync, ...this.FuncAPIMap[function_name]];\n          }\n        });\n        console.log(\"SeqSync before uniq:\", seqSync);\n        console.log(\"parallelSync before uniq:\", parallelSync);\n        seqSync = _.uniq(seqSync);\n        parallelSync = _.uniq(parallelSync);\n        console.log(\"SeqSync after uniq:\", seqSync);\n        console.log(\"parallelSync after uniq:\", parallelSync);\n        console.log(\"SyncProcessList after uniq:\", this.SyncProcessList);\n\n        //DEV mode, skip sync\n        if (this.APP_CONFIG[\"ENV\"] == \"DEV\") {\n          return;\n        }\n\n        let syncPromiseArray = [];\n        let dao = this.DaoFactory.getDao(\"Profile\");\n        if (dao) {\n          let dataSyncTimeObj = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_DataSync_Time\");\n          let resp = await dao.queryByTable(dataSyncTimeObj).toPromise();\n          console.log('dataSyncTime resp:', resp);\n          let apiTimeMap = resp.Body;\n\n\n          parallelSync.forEach((api_name) => {\n            syncPromiseArray.push(this.getSyncPromiseObject(api_name, apiTimeMap, dao));\n          });\n\n\n          //DO PARALLEL SYNC\n          await Promise.all(syncPromiseArray);\n\n          //DO SEQ SYNC\n          for (let api_name of seqSync) {\n            await this.getSyncPromiseObject(api_name, apiTimeMap, dao);\n          }\n        }\n        else\n          throw new Error(\"Cannot Find Profile DAO.\");\n\n      } catch (error) {\n        this.errorHandler.handleError(new APPError(\"F00110\", error.message));\n      }\n      finally {\n        this.SyncProcessList = this.SyncProcessList.filter(x => !FuncList.includes(x));\n      }\n    }\n    else {\n      console.log(\"It's offline now, skip syncFunc:\", FuncList);\n    }\n  }\n\n  private async sync(api_name: string, funcTimeMap: Array<any>) {\n    let returnBackendTime: number = funcTimeMap.filter(x => (x.FuncID == api_name)).map(x => x.BackendTime)[0];\n    let returnFrontendTime: number = Date.now();\n    try {\n      let APIInstance: IFunctionSync = this.syncAPIMap[api_name];\n      let url_config = this.func_url[api_name];\n      let backendTime = funcTimeMap.filter(x => (x.FuncID == api_name)).map(x => x.BackendTime)[0];\n      let frontendTIme = funcTimeMap.filter(x => (x.FuncID == api_name)).map(x => x.FrontendTime)[0];\n\n      // Debug console\n      console.group(`last sync ${api_name} time:`);\n      console.log(\"backendTime:\", backendTime);\n      console.log(\"frontendTime:\", frontendTIme);\n      console.groupEnd();\n\n\n      // Do sync\n      if (APIInstance.getState() === FUNC_STATE.AVAILABLE) {\n        // Change to pending\n        APIInstance.setState(FUNC_STATE.PENDING);\n        this.updateState();\n\n        let sequenceIDNumberNeed = await APIInstance.getSequentialIDNeeded(frontendTIme);\n        console.log(\"sequenceID need:\", sequenceIDNumberNeed);\n        if (sequenceIDNumberNeed > 0) {\n          let sequenceIDs = await this.getSequentialID(api_name, sequenceIDNumberNeed);\n          await APIInstance.setSequentialID(sequenceIDs);\n        }\n        let pushJson = await APIInstance.getPushJson(frontendTIme);\n        console.log('pushJson:', pushJson);\n        if (pushJson.length > 0)\n          await this.pushToServer({ data: pushJson, url: url_config.push });\n\n        let pullJson = await this.pullFromServer({ backendTime, url: url_config.pull });\n        console.log('pullJson:', pullJson);\n        let pullResult = await this.syncAPIMap[api_name].pullData(pullJson);\n        console.log('pull result:', pullResult);\n        if (pullResult.Header.status) {\n          returnBackendTime = parseISO(pullJson['lastUpdateTime']).getTime();\n          returnFrontendTime = Date.now();\n        }\n        else {\n          throw new Error(pullResult.Header.msg);\n        }\n      }\n      else {\n        await this.waitUntilSyncFinish(api_name);\n      }\n    } catch (error) {\n      returnFrontendTime = funcTimeMap.filter(x => (x.FuncID == api_name)).map(x => x.FrontendTime)[0];\n      this.errorHandler.handleError(new APPError(\"F00113\", `${api_name} sync failed,` + error.message));\n    }\n    finally {\n      this.syncAPIMap[api_name].setState(FUNC_STATE.AVAILABLE);\n      this.updateState();\n      return Promise.resolve({ backendTime: returnBackendTime, frontendTime: returnFrontendTime });\n    }\n  }\n\n  private async pushToServer({ data, url }) {\n    let pushAPI = this.APIFactory.getAPI(\"SyncPush\");\n    (<SyncPushAPI>pushAPI).url = url;\n    (<SyncPushAPI>pushAPI).body = data;\n    await this.dispatcher.dispatch(pushAPI).toPromise();\n  }\n\n  private async pullFromServer({ backendTime, url }) {\n    let pullAPI = this.APIFactory.getAPI(\"SyncPull\");\n    (<SyncPullAPI>pullAPI).lastUpdateTime = new Date(backendTime).toISOString();\n    (<SyncPullAPI>pullAPI).url = url;\n    return await this.dispatcher.dispatch(pullAPI).toPromise()\n      .then(data => {\n        console.log('data from server:', data);\n        return data;\n      });\n  }\n\n  private getSequentialID(category: string, num: number): Promise<Array<string>> {\n    let getSyncSequenceIDAPI = this.APIFactory.getAPI(\"getSyncSequenceID\");\n    if (getSyncSequenceIDAPI) {\n      (<syncSequenceIDAPI>getSyncSequenceIDAPI).type = category;\n      (<syncSequenceIDAPI>getSyncSequenceIDAPI).num = num;\n      return this.dispatcher.dispatch(getSyncSequenceIDAPI).toPromise().then((resp) => {\n        console.log(\"get sync sequence ID resp:\", resp);\n        return resp['ids'];\n      })\n    }\n\n  }\n\n  private getCurrentSyncState() {\n\n    let state = {};\n    Object.keys(this.syncAPIMap).forEach((val) => {\n      state[val] = this.syncAPIMap[val].getState();\n    })\n    return state;\n  }\n\n  private updateState() {\n    this.syncStateSubject.next(this.getCurrentSyncState());\n  }\n\n\n  private async waitUntilSyncFinish(func: string) {\n    return this.getSyncState().pipe(\n      first(x => Object.entries(x).filter(y => y[0] === func && y[1] === FUNC_STATE.AVAILABLE).length > 0)\n    ).toPromise()\n  }\n\n  private async getSyncPromiseObject(api_name: string, ApiTimeMap: any, dao: IDao) {\n    let { backendTime, frontendTime } = await this.sync(api_name, ApiTimeMap);\n    let dataSyncTimeObj = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_DataSync_Time\");\n    dataSyncTimeObj.addRestriction(new EqualRestriction('FuncID', [api_name]));\n    dataSyncTimeObj.setValue('BackendTime', backendTime);\n    dataSyncTimeObj.setValue('FrontendTime', frontendTime);\n    let result = await dao.updateByTable(dataSyncTimeObj).toPromise();\n    console.log(`Finish sync function ${api_name} :`, result);\n    return result;\n  }\n\n\n}\n","import { Injectable, ErrorHandler } from \"@angular/core\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { APIFactory } from \"../../api/APIFactory\";\nimport { PushErrorLogAPI } from \"../../api/register/pushErrorLogAPI\";\nimport { APIDispatch } from \"../../api/APIDispatch\";\nimport { NotEqualRestriction } from \"../../device/sqlite/restrictions/NotEqualRestriction\";\nimport { InRestriction } from \"../../device/sqlite/restrictions/InRestriction\";\nimport { PushActionLogAPI } from \"../../api/register/PushActionLogAPI\";\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\nimport { SQLCommand } from \"../../device/sqlite/SQLCommand\";\nimport { from, Observable } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n\n    constructor(\n        private DaoFactory: DaoFactory,\n        private APIFactory: APIFactory,\n        private dispatcher: APIDispatch,\n        private errorHandler:ErrorHandler\n    ) {\n\n    }\n    public pushErrorLog():Observable<any>{\n        return from(this._pushErrorLog());\n    }\n    public pushActionLog():Observable<any>{\n        return from(this._pushActionLog());\n    }\n\n    private async _pushErrorLog() {\n        try {\n            //GET DB DATA\n            console.log(\"into pushErrorLog()\");\n            let dao = this.DaoFactory.getDao(\"Profile\");\n            let ErrorLogTable = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_Error_Log\");\n            if (ErrorLogTable) {\n                ErrorLogTable.addRestriction(new NotEqualRestriction(\"IsSend\", ['Y']))\n                let resp: SQLiteResponse = await dao.queryByTable(ErrorLogTable).toPromise();\n                if (resp.Header[\"status\"]) {\n                    console.log(\"error log table data:\", resp.Body);\n                    let errorList = resp.Body;\n                    let pushErrorLogAPI = this.APIFactory.getAPI(\"PushErrorLog\");\n                    (<PushErrorLogAPI>pushErrorLogAPI).errorList = errorList;\n                    let pushResp = await this.dispatcher.dispatch(pushErrorLogAPI).toPromise();\n                    console.log(\"push error Log resp:\", pushResp);\n                    if (pushResp[\"success\"]) {\n                        // let deleteResp = dao.excuteSqlCommand([new SQLCommand('delete from TW_LH_SD_Error_Log where 1=1', [])]);\n                        ErrorLogTable = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_Error_Log\");\n                        let deleteResp = await dao.deleteByTable(ErrorLogTable).toPromise();\n\n                        // let errorIds = resp.Body.map(x => x.ErrorID);\n                        // ErrorLogTable = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_Error_Log\");\n                        // ErrorLogTable.addRestriction(new InRestriction(\"ErrorID\", errorIds));\n                        // ErrorLogTable.setValue('IsSend', 'Y');\n                        // let updateResp = await dao.updateByTable(ErrorLogTable).toPromise();\n                        console.log(\"deleteResp:\", deleteResp);\n                    }\n                }\n            }\n        }catch (error){\n            this.errorHandler.handleError(new Error('pushErrorLog fail!'));\n        }\n        \n    }\n\n    private async _pushActionLog() {\n        try{\n            console.log(\"into pushActionLog()\");\n            let dao = this.DaoFactory.getDao(\"Profile\");\n            let ActionLogTable = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_Action_Log\");\n            ActionLogTable.addRestriction(new NotEqualRestriction(\"IsSend\", ['Y']));\n            let resp = await dao.queryByTable(ActionLogTable).toPromise();\n            if (resp.Header[\"status\"]) {\n                console.log(\"Action log table data:\", resp.Body);\n                let actionList = resp.Body;\n                let pushActionLogAPI = this.APIFactory.getAPI(\"PushActionLog\");\n                (<PushActionLogAPI>pushActionLogAPI).actionList = actionList;\n                let pushResp = await this.dispatcher.dispatch(pushActionLogAPI).toPromise();\n                console.log(\"push action Log resp:\", pushResp);\n                if (pushResp[\"success\"]) {\n                    // let deleteResp = dao.excuteSqlCommand([new SQLCommand('delete from TW_LH_SD_Action_Log where 1=1', [])]);\n                    ActionLogTable = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_Action_Log\");\n                    let deleteResp = await dao.deleteByTable(ActionLogTable).toPromise();\n                    // let actionIds = resp.Body.map(x => x.ActionID);\n                    // ActionLogTable = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_Action_Log\");\n                    // ActionLogTable.addRestriction(new InRestriction(\"ActionID\", actionIds));\n                    // ActionLogTable.setValue('IsSend', 'Y');\n                    // let updateResp = await dao.updateByTable(ActionLogTable).toPromise();\n                    console.log(\"deleteResp:\", deleteResp);\n                }\n            }\n\n        }catch (error){\n            this.errorHandler.handleError(new Error('pushActionLog fail!'));\n        }\n\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { APIFactory } from '../../api/APIFactory';\nimport { APIDispatch } from '../../api/APIDispatch';\nimport { TranslateService } from '../../language/translate.service';\nimport { ProfileCode } from '../../bean/ProfileCode';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileCodeService {\n\n  public profileCodeTypeMap = new Map<string,Array<ProfileCode>>();\n  public profileCodeMap = new Map<string,ProfileCode>();\n\n  constructor(private dispatcher: APIDispatch,private translateService : TranslateService,private APIFactory: APIFactory) {\n  }\n\n  public getCodeArray(typeId : string) {\n    if(this.profileCodeTypeMap.size != 0) {\n      let codeArray : Array<ProfileCode> = this.profileCodeTypeMap.get(typeId);\n      if(codeArray == undefined) codeArray = new Array<ProfileCode>();\n      return [...codeArray];\n    }\n    return new Array<ProfileCode>();\n  }\n\n  public convertCode2Text(typeID : string,code : string) : string {\n    if(this.profileCodeMap.size != 0 && code != undefined) {\n      let profileCode : ProfileCode = this.profileCodeMap.get(typeID + '_' + code);\n      if(profileCode != undefined) {\n        let mappingID : string = profileCode.getMappingID();\n        let text = this.translateService.translate(mappingID);\n        return text;\n      }\n    }\n\n    return code;\n  }\n\n  public getArgumentsByCode(typeID : string , code : string) : string {\n    if(this.profileCodeMap.size != 0) {\n      let profileCode : ProfileCode = this.profileCodeMap.get(typeID + '_' + code);\n      if(profileCode != undefined) {\n        return profileCode.getArguments();\n      }\n    }\n    return null;\n  }\n\n  public _fetchCodeData() {\n    let profileCodeAPI : any = this.APIFactory.getAPI('getProfileCode');\n\n    console.debug('profile-code.service fetchCodeData',profileCodeAPI);\n    return Observable.create((observer)=>{\n      this.dispatcher.dispatch(profileCodeAPI).subscribe((data)=>{\n        this.profileCodeTypeMap.clear();\n        this.profileCodeMap.clear();\n\n        let bodyDatas = data['Body'];\n        console.log('<--- Datas --->');\n        console.log(data);\n        for (let i = 0 ; i < bodyDatas.length ; i++){\n          let json = bodyDatas[i];\n          let profileCode = Object.create(ProfileCode.prototype);\n          profileCode = Object.assign(profileCode,json);\n\n          let typeId = profileCode.getTypeId();\n          let code = profileCode.getCode();\n          let mappingID = profileCode.getMappingID();\n          let text = this.translateService.translate(mappingID);\n          profileCode.setDisplayText(text);\n\n          let codeArray : Array<ProfileCode> = this.profileCodeTypeMap.get(typeId);\n          if(codeArray == undefined) {\n            codeArray = new Array<ProfileCode>();\n          }\n\n          codeArray.push(profileCode);\n          this.profileCodeMap.set(typeId + '_' + code,profileCode);\n          this.profileCodeTypeMap.set(typeId,codeArray);\n        }\n\n        console.debug('profileCodeMap',this.profileCodeMap);\n        console.debug('profileCodeTypeMap',this.profileCodeTypeMap);\n        observer.next(true);\n        observer.complete();\n\n      })\n    })\n  }\n\n}\n","import { Injectable, Optional, Inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { LoadingApp } from './LoadingApp.interface';\nimport { VersionCheckService } from '../../dataSync/version-check.service';\nimport { DataSyncService } from '../../dataSync/data-sync.service';\nimport { LogService } from '../../service/log/log.service';\nimport { ProfileCodeService } from '../../service/profile/profile-code.service';\nimport { NotificationMgr } from '../../notification/NotificationMgr';\nimport { NotificationType } from '../../notification/INotificationProvider.interface';\nimport { PushIDMgrToken } from '../../injectionToken/injection-token';\nimport { PushIDMgr } from './PushIDMgr.interface';\nimport { SettingService } from '../../service/setting/setting.service';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DefaultLoadingApp implements LoadingApp {\n    constructor(\n        private versionCheck: VersionCheckService,\n        private syncService: DataSyncService,\n        private logService: LogService,\n        private profileCodeService: ProfileCodeService,\n        private notificationMgr: NotificationMgr,\n        private settingService: SettingService,\n        @Optional() @Inject(PushIDMgrToken) private pushIDMgr: PushIDMgr\n    ) {\n        this.loadedSubject = new Subject<number>();\n    }\n    private loadedSubject: Subject<number>;\n    loading(): void {\n        this._loading();\n    }\n\n    onLoaded(): Observable<number> {\n        return this.loadedSubject.asObservable();\n    }\n\n    private async _loading() {\n        await this.syncService.syncAllFunc(true);\n        this.loadedSubject.next(50);\n        await this.profileCodeService._fetchCodeData().toPromise();\n        this.loadedSubject.next(60);\n        await this.logService.pushActionLog().toPromise();\n        this.loadedSubject.next(70);\n        await this.logService.pushErrorLog().toPromise();\n        this.loadedSubject.next(80);\n        await this.notificationMgr.init();\n        this.loadedSubject.next(85);\n        await this.settingService.deviceChange(this.pushIDMgr.getPushID());\n        this.loadedSubject.next(88);\n        //after sync finish ,check version\n        let versionResp = await this.versionCheck.checkVersion().toPromise();\n        if (versionResp.isSuccess) {\n            this.loadedSubject.next(95);\n            if (versionResp.newVersion) {\n                this.notificationMgr.pushNotification(NotificationType.NewVersionLogin, versionResp.appVersion);\n            }\n            else {\n                setTimeout(() => {\n                    this.loadedSubject.next(100);\n                }, 800);\n            }\n        }\n        else {\n            console.log(\"Check version error!!\");\n            this.loadedSubject.next(100);\n        }\n    }\n\n\n\n\n\n}","export class RouteObject {\n    private url: string;\n    public getUrl() {\n        return this.url;\n    }\n    constructor(url) {\n        this.url = url;\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { GreaterRestriction } from \"../../device/sqlite/restrictions/GreaterRestriction\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\nimport { v4 as uuid } from 'uuid';\nimport { parseISO } from 'date-fns';\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\n\nexport class CalendarSync implements IFunctionSync {\n    private state: number;\n    private tmpPushData = null;\n    constructor(private DaoFactory: DaoFactory, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'CALENDAR'\n    }\n\n    async getPushJson(frontendTime) {\n        // Do check data clientTime > frontendTime;\n        let dao = this.DaoFactory.getDefaultDao();\n        let calendarExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Calendar_Extension');\n        let returnJson = [];\n        let customerIDMap = await this.getCustomerIDMap();\n        let pushData = await this.getPushData(frontendTime);\n        let extCols = calendarExtObj.getColumns().filter(x => x.getName() !== 'ClientID' && x.getName() !== 'CalendarID');\n\n        returnJson = pushData.map(calendarObj => {\n            let extensions = extCols\n                .map(col => {\n                    return {\n                        id: col.getName(),\n                        type: col.getType(),\n                        value: calendarObj[col.getName()]\n                    }\n                });\n            return {\n                \"appointmentId\": calendarObj.CalendarID,\n                \"name\": calendarObj.Title,\n                \"meetingLocation\": calendarObj.Location,\n                \"appointmentType\": calendarObj.CalendarType,\n                \"allDay\": calendarObj.IsAllDay === 'Y' ? true : false,\n                \"startDateTime\": new Date(calendarObj.StartTime).toISOString(),\n                \"endDateTime\": new Date(calendarObj.EndTime).toISOString(),\n                \"alertTimes\": [calendarObj.Alert1, calendarObj.Alert2, calendarObj.Alert3].filter(x => x != null && x != \"\"),\n                \"personId\": customerIDMap[calendarObj.CustomerClientID] ? customerIDMap[calendarObj.CustomerClientID] : '',\n                \"description\": calendarObj.Remark,\n                \"isChangeable\": calendarObj.DataSource !== 'OPUS',\n                \"extensions\": extensions,\n                \"synchDetail\": {\n                    \"clientTime\": new Date(calendarObj.ClientTime).toISOString(),\n                    \"lastUpdateDateTimeBackend\": new Date(calendarObj.DataTime).toISOString(),\n                    \"toDelete\": calendarObj.IsDelete === 'Y'\n                }\n            }\n        });\n\n        if (this.PushAOP) {\n            returnJson = await this.PullAOP.execute(returnJson);\n        }\n        return returnJson;\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.appointments.length > 0 || resp.deletedAppointmentIds.length > 0) {\n            let dao = this.DaoFactory.getDefaultDao();\n            let calendarObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Calendar');\n            let calendarExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Calendar_Extension');\n            let customerIDMap = await this.getCustomerIDMap(true);\n            let calendarDatas = await dao.queryByTable(calendarObj).toPromise().then((res) => res.Body);\n            let calendarIdArr = calendarDatas.map(x => x.CalendarID);\n            let calendarClientIdArr = calendarDatas.map(x => x.ClientID);\n            console.log('calendar ID array:', calendarIdArr);\n            console.log('calendar Client ID array:', calendarClientIdArr)\n            for (let data of resp.appointments) {\n                let IsAlert = data.alertTimes.length > 0 ? 'Y' : 'N';\n                calendarObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Calendar');\n                calendarExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Calendar_Extension');\n                calendarObj.setValue(\"CalendarID\", data.appointmentId);\n                calendarObj.setValue(\"Title\", data.name);\n                calendarObj.setValue(\"Location\", data.meetingLocation);\n                calendarObj.setValue(\"CalendarType\", data.appointmentType);\n                calendarObj.setValue(\"IsAllDay\", data.allDay ? 'Y' : 'N');\n                calendarObj.setValue(\"StartTime\", parseISO(data.startDateTime).getTime());\n                calendarObj.setValue(\"EndTime\", parseISO(data.endDateTime).getTime());\n                calendarObj.setValue(\"CustomerClientID\", customerIDMap[data.personId]);\n                calendarObj.setValue(\"IsAlert\", IsAlert);\n                if (IsAlert)\n                    calendarObj.setValue(\"Alert1\", data.alertTimes[0]);\n                if (data.alertTimes.length > 1)\n                    calendarObj.setValue(\"Alert2\", data.alertTimes[1]);\n                if (data.alertTimes.length > 2)\n                    calendarObj.setValue(\"Alert3\", data.alertTimes[2]);\n                calendarObj.setValue(\"Remark\", data.description);\n                calendarObj.setValue(\"IsDelete\", 'N');\n                calendarObj.setValue(\"DataSource\", data.isChangeable ? \"APP\" : \"OPUS\");\n                calendarObj.setValue(\"DataTime\", parseISO(data.synchDetail.lastUpdateDateTimeBackend).getTime());\n                calendarObj.setValue(\"ClientTime\", Date.now());\n\n                let extensions = data.extensions;\n                calendarObj.setValue(\"CalendarID\", data.appointmentId);\n                calendarExtObj.setValue(\"CalendarID\", data.appointmentId);\n                if (extensions != null) {\n                    extensions.forEach(extension => {\n                        calendarExtObj.setValue(extension.id, extension.value);\n                    });\n                }\n\n                if (calendarIdArr.includes(data.appointmentId)) {\n                    calendarObj.addRestriction(new EqualRestriction('CalendarID', [data.appointmentId]));\n                    calendarExtObj.addRestriction(new EqualRestriction('CalendarID', [data.appointmentId]));\n                    dao.transactionUpdate(calendarObj);\n                    dao.transactionUpdate(calendarExtObj);\n                }\n                else {\n                    let clientID = uuid();\n                    calendarObj.setValue(\"ClientID\", clientID);\n                    calendarExtObj.setValue(\"ClientID\", clientID);\n                    dao.transactionInsert(calendarObj);\n                    dao.transactionInsert(calendarExtObj);\n                }\n            }\n\n            for (let id of resp.deletedAppointmentIds) {\n                calendarObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Calendar');\n                calendarExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Calendar_Extension');\n                calendarObj.addRestriction(new EqualRestriction('CalendarID', [id]));\n                calendarExtObj.addRestriction(new EqualRestriction('CalendarID', [id]));\n                dao.transactionDelete(calendarObj);\n                dao.transactionDelete(calendarExtObj);\n            }\n\n            return await dao.runTransaction().toPromise();\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(frontendTime: number): Promise<number> {\n        let pushData = await this.getPushData(frontendTime);\n        this.tmpPushData = pushData.filter(x => x.CalendarID === null);\n        return this.tmpPushData.length;\n\n    }\n\n    async setSequentialID(ids: Array<string>) {\n        if (this.tmpPushData != null) {\n            //set to tmpData && Sqlite\n            let dataWithoutIds = this.tmpPushData;\n\n            let dao = this.DaoFactory.getDefaultDao();\n            for (let [index, data] of dataWithoutIds.entries()) {\n                let calendarObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Calendar');\n                let calendarExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Calendar_Extension');\n                calendarObj.setValue(\"CalendarID\", ids[index]);\n                calendarObj.addRestriction(new EqualRestriction('ClientID', [data.ClientID]));\n                dao.transactionUpdate(calendarObj);\n                calendarExtObj.setValue(\"CalendarID\", ids[index]);\n                calendarExtObj.addRestriction(new EqualRestriction('ClientID', [data.ClientID]));\n                dao.transactionUpdate(calendarExtObj);\n            }\n            await dao.runTransaction().toPromise();\n            this.tmpPushData = null;\n        }\n\n    }\n\n    private async getPushData(frontendTime: number) {\n        let datas = [];\n        let dao = this.DaoFactory.getDefaultDao();\n        let calendarObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Calendar');\n        if (dao && calendarObj) {\n            calendarObj.addRestriction(new GreaterRestriction('ClientTime', [frontendTime]));\n            let resp = await dao.queryByTable(calendarObj).toPromise();\n            console.log('query calendar obj:', resp);\n            if (resp.Body.length > 0)\n                datas = resp.Body;\n        }\n        return datas;\n    }\n\n    private async getCustomerIDMap(reverse = false) {\n        let dao = this.DaoFactory.getDefaultDao();\n        let customerObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer');\n        if (dao && customerObj) {\n            let resp = await dao.queryByTable(customerObj).toPromise();\n            console.log('query customer obj:', resp);\n            if (resp.Body.length > 0) {\n                let customerList = resp.Body;\n                //if reverse ,set key as CustomerID ,val as ClientID\n                if (reverse)\n                    customerList = customerList.map(x => { return { key: x.CustomerID, val: x.ClientID } })\n                else\n                    customerList = customerList.map(x => { return { key: x.ClientID, val: x.CustomerID } })\n                return customerList.reduce((map, obj) => {\n                    map[obj.key] = obj.val;\n                    return map;\n                }, {});\n            }\n        }\n        return {};\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\nimport { GreaterRestriction } from \"../../device/sqlite/restrictions/GreaterRestriction\";\nimport { InRestriction } from \"../../device/sqlite/restrictions/InRestriction\";\nimport { v4 as uuid } from 'uuid';\nimport { parseISO } from 'date-fns';\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\nexport class ContactSync implements IFunctionSync {\n    private state: number;\n    private tmpPushData = null;\n    private customerData = null;\n    constructor(private DaoFactory: DaoFactory, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'CUSTOMER_CONTACT'\n    }\n\n    async getPushJson(frontendTime) {\n        // Do check data clientTime > frontendTime;\n        let returnJson = [];\n        let pushData = await this.getPushData(frontendTime);\n\n        let customerContactExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Contact_Extension');\n        let extCols = customerContactExtObj.getColumns().filter(x => x.getName() !== 'ClientID' && x.getName() !== 'CustomerClientID' && x.getName() !== 'ContactID');\n\n        returnJson = pushData.map(contact => {\n\n            let extensions = extCols\n                .map(col => {\n                    return {\n                        id: col.getName(),\n                        type: col.getType(),\n                        value: contact[col.getName()]\n                    }\n                });\n\n            return {\n                \"noteId\": contact.ContactID,\n                \"personId\": contact.CustomerID,\n                \"text\": contact.Note,\n                \"origin\": \"\",\n                \"creationDateTime\": new Date(contact.NoteTime).toISOString(),\n                \"extensions\": extensions,\n                \"synchDetail\": {\n                    \"lastUpdateDateTimeBackend\": new Date(contact.DataTime).toISOString(),\n                    \"toDelete\": contact.IsDelete === 'Y'\n                }\n            }\n        });\n        if (this.PushAOP) {\n            returnJson = await this.PullAOP.execute(returnJson);\n        }\n        return returnJson;\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.notes.length > 0 || resp.deletedNoteIds.length > 0) {\n            let dao = this.DaoFactory.getDefaultDao();\n            let contactObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Contact');\n            let contactExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Contact_Extension');\n            let customerObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer');\n            let contactIdArr = await dao.queryByTable(contactObj).toPromise().then((res) => res.Body.map(x => x.ContactID));\n            // let customerResp = await dao.queryByTable(customerObj).toPromise();\n            let customerResp = this.customerData;\n            let CustomerClientIDArr = customerResp.Body.map(x => x.ClientID);\n            let CustomerIdArr = customerResp.Body.map(x => x.CustomerID);\n            for (let data of resp.notes) {\n                contactObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Contact');\n                contactExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Contact_Extension');\n                contactObj.setValue(\"CustomerClientID\", CustomerClientIDArr[CustomerIdArr.indexOf(data.personId)]);\n                contactObj.setValue(\"ContactID\", data.noteId);\n                contactObj.setValue(\"Note\", data.text);\n                contactObj.setValue(\"NoteTime\", parseISO(data.creationDateTime).getTime());\n                contactObj.setValue(\"DataTime\", parseISO(data.synchDetail.lastUpdateDateTimeBackend).getTime());\n                contactObj.setValue(\"IsDelete\", 'N');\n                contactObj.setValue(\"ClientTime\", Date.now());\n\n                // save extendion data\n                let extensions = data.extensions;\n                contactObj.setValue(\"CustomerClientID\", CustomerClientIDArr[CustomerIdArr.indexOf(data.personId)]);\n                contactObj.setValue(\"ContactID\", data.noteId);\n\n                contactExtObj.setValue(\"CustomerClientID\", CustomerClientIDArr[CustomerIdArr.indexOf(data.personId)]);\n                contactExtObj.setValue(\"ContactID\", data.noteId);\n                if (extensions != null) {\n                    extensions.forEach(extension => {\n                        contactExtObj.setValue(extension.id, extension.value);\n                    });\n                }\n\n                if (contactIdArr.includes(data.noteId)) {\n                    contactObj.addRestriction(new EqualRestriction('ContactID', [data.noteId]));\n                    contactExtObj.addRestriction(new EqualRestriction('ContactID', [data.noteId]));\n                    dao.transactionUpdate(contactObj);\n                    dao.transactionUpdate(contactExtObj);\n                }\n                else {\n                    let cliendID = uuid();\n                    contactObj.setValue(\"ClientID\", cliendID);\n                    contactExtObj.setValue(\"ClientID\", cliendID);\n                    dao.transactionInsert(contactObj);\n                    dao.transactionInsert(contactExtObj);\n                }\n\n            }\n            if (resp.deletedNoteIds.length > 0) {\n                contactObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Contact');\n                contactExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Contact_Extension');\n                contactObj.addRestriction(new InRestriction('ContactID', resp.DeleteIds));\n                contactExtObj.addRestriction(new InRestriction('ContactID', resp.DeleteIds));\n                dao.transactionDelete(contactObj);\n                dao.transactionDelete(contactExtObj);\n            }\n\n            return await dao.runTransaction().toPromise();\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(frontendTime: number): Promise<number> {\n        let pushData = await this.getPushData(frontendTime);\n        this.tmpPushData = pushData.filter(x => x.ContactID === null);\n        return this.tmpPushData.length;\n\n    }\n    async setSequentialID(ids: Array<string>) {\n        if (this.tmpPushData != null) {\n            //set to tmpData && Sqlite\n            let dataWithoutIds = this.tmpPushData;\n\n            let dao = this.DaoFactory.getDefaultDao();\n            for (let [index, data] of dataWithoutIds.entries()) {\n                let contactObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Contact');\n                let contactExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Contact_Extension');\n                contactObj.setValue(\"ContactID\", ids[index]);\n                contactExtObj.setValue(\"ContactID\", ids[index]);\n                contactObj.addRestriction(new EqualRestriction('ClientID', [data.ClientID]));\n                contactExtObj.addRestriction(new EqualRestriction('ClientID', [data.ClientID]));\n                dao.transactionUpdate(contactObj);\n                dao.transactionUpdate(contactExtObj);\n            }\n            await dao.runTransaction().toPromise();\n            this.tmpPushData = null;\n        }\n    }\n\n    private async getPushData(frontendTime: number) {\n\n        let datas = [];\n        let dao = this.DaoFactory.getDefaultDao();\n        let customerObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer');\n        let contactObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer_Contact');\n        let customerResp = await dao.queryByTable(customerObj).toPromise();\n        this.customerData = customerResp;\n        let customerArr = customerResp.Body;\n        if (dao && contactObj) {\n            contactObj.addRestriction(new GreaterRestriction('ClientTime', [frontendTime]));\n            let resp = await dao.queryByTable(contactObj).toPromise();\n            console.log('query contact obj:', resp);\n            console.log('customer array:', customerArr);\n            if (resp.Body.length > 0) {\n                for (let data of resp.Body) {\n                    let customer = customerArr.filter(x => x.ClientID == data.CustomerClientID);\n                    if (customer.length > 0)\n                        data.CustomerID = customer[0].CustomerID;\n                }\n                datas = resp.Body;\n            }\n        }\n        return datas;\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\nimport { GreaterRestriction } from \"../../device/sqlite/restrictions/GreaterRestriction\";\nimport { InRestriction } from \"../../device/sqlite/restrictions/InRestriction\";\nimport { v4 as uuid } from 'uuid';\nimport { parseISO } from 'date-fns';\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\nexport class CustomerSync implements IFunctionSync {\n    private state: number;\n    private tmpPushData = null;\n    constructor(private DaoFactory: DaoFactory, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'CUSTOMER'\n    }\n\n    async getPushJson(frontendTime) {\n        // Do check data clientTime > frontendTime;\n        let returnJson = [];\n        let pushData = await this.getPushData(frontendTime);\n\n        //get extension column informance\n        let customerExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Extension');\n        let customerTelExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Tel_Extension');\n        let customerEmailExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Email_Extension');\n        let customerAddressExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Address_Extension');\n        let customerExtCols = customerExtObj.getColumns().filter(x => x.getName() !== 'ClientID' && x.getName() !== 'CustomerID');\n        let customerTelExtCols = customerTelExtObj.getColumns().filter(x => x.getName() !== 'ClientID' && x.getName() !== 'CustomerClientID');\n        let customerEmailExtCols = customerEmailExtObj.getColumns().filter(x => x.getName() !== 'ClientID' && x.getName() !== 'CustomerClientID');\n        let customerAddressExtCols = customerAddressExtObj.getColumns().filter(x => x.getName() !== 'ClientID' && x.getName() !== 'CustomerClientID');\n\n        returnJson = pushData.map(customer => {\n\n            let Extensions = customerExtCols\n                .map(col => {\n                    return {\n                        id: col.getName(),\n                        type: col.getType(),\n                        value: customer[col.getName()]\n                    }\n                });\n\n            return {\n                \"customerID\": customer.CustomerID,\n                \"firstName\": customer.FirstName,\n                \"middleName\": \"\",\n                \"lastName\": customer.LastName,\n                \"alternateName\": \"\",\n                \"marritalStatus\": customer.Marriage,\n                \"occupation\": customer.Occupation,\n                \"employer\": customer.Company,\n                \"birthDate\": customer.BirthdayYear === 'null' || customer.BirthdayYear === null ? null : `${customer.BirthdayYear}-${customer.BirthdayMonth}-${customer.BirthdayDate}`,\n                \"ageRange\": customer.AgeRange,\n                \"gender\": customer.Gender,\n                \"numberOfChildren\": customer.Children,\n                \"addresses\": customer.Address.map(addr => {\n\n                    let addressesExtensions = customerAddressExtCols\n                        .map(col => {\n                            return {\n                                id: col.getName(),\n                                type: col.getType(),\n                                value: addr[col.getName()]\n                            }\n                        });\n\n                    return {\n                        \"addressType\": addr.AddressType,\n                        \"countryCode\": addr.Country,\n                        \"city\": addr.City,\n                        \"area\": addr.Area,\n                        \"postCode\": addr.Zipcode,\n                        \"line1\": addr.Address,\n                        \"line2\": \"\",\n                        \"line3\": \"\",\n                        \"line4\": \"\",\n                        \"isChangeable\": addr.DataSource !== 'OPUS',\n                        \"extensions\": addressesExtensions\n                    }\n                }),\n                \"phoneChannels\": customer.Tel.map(tel => {\n\n                    let telExtensions = customerTelExtCols\n                        .map(col => {\n                            return {\n                                id: col.getName(),\n                                type: col.getType(),\n                                value: tel[col.getName()]\n                            }\n                        });\n\n                    return {\n                        \"usageType\": tel.TelType,\n                        \"phoneNumber\": tel.Tel,\n                        \"isChangeable\": tel.DataSource !== 'OPUS',\n                        \"extensions\": telExtensions\n                    }\n                }),\n                \"emailContacts\": customer.Email.map(email => {\n\n                    let emailExtensions = customerEmailExtCols\n                        .map(col => {\n                            return {\n                                id: col.getName(),\n                                type: col.getType(),\n                                value: email[col.getName()]\n                            }\n                        });\n\n                    return {\n                        \"emailType\": email.EmailType,\n                        \"email\": email.Email,\n                        \"isChangeAble\": email.DataSource !== 'OPUS',\n                        \"extensions\": emailExtensions\n                    }\n                }),\n                \"annualIncomeRange\": customer.Income,\n                \"contactLink\": customer.Source,\n                \"familiarity\": customer.Familiarity,\n                \"touchPointFrequency\": customer.ContactFrequancy,\n                \"leadProbability\": customer.Possibility,\n                \"isFollowed\": customer.IsFollow === 'Y',\n                \"isOverTimeAlert\": customer.IsOverTimeAlert === 'Y',\n                \"isChangeable\": customer.DataSource !== 'OPUS',\n                \"profileCompletion\": customer.Completeness,\n                \"extensions\": Extensions,\n                \"synchDetail\": {\n                    \"clientTime\": new Date(customer.ClientTime).toISOString(),\n                    \"lastUpdateDateTimeBackend\": new Date(customer.DataTime).toISOString(),\n                    \"toDelete\": customer.IsDelete === 'Y'\n                }\n            }\n        });\n\n        console.log('customer getPushJson:', returnJson);\n        if (this.PushAOP) {\n            returnJson = await this.PullAOP.execute(returnJson);\n        }\n        return returnJson;\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.customerInfos.length > 0 || resp.deletedPersonIds.length > 0) {\n            let dao = this.DaoFactory.getDefaultDao();\n            let customerObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer');\n            let telObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Tel');\n            let emailObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Email');\n            let addressObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Address');\n            let customerExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Extension');\n            let emailExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Email_Extension');\n            let addressExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Address_Extension');\n            let telExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Tel_Extension');\n            let customerResp = await dao.queryByTable(customerObj).toPromise();\n            let CustomerClientIDArr = customerResp.Body.map(x => x.ClientID);\n            let CustomerIdArr = customerResp.Body.map(x => x.CustomerID);\n            // delete tel,email,address first\n            let customerInfoIds = resp.customerInfos.map(x => x.customerID);\n            let ToDeleteCustomerClientIDs = customerResp.Body.filter(x => customerInfoIds.indexOf(x.CustomerID) > -1).map(x => x.ClientID);\n            telObj.addRestriction(new InRestriction('CustomerClientID', ToDeleteCustomerClientIDs));\n            emailObj.addRestriction(new InRestriction('CustomerClientID', ToDeleteCustomerClientIDs));\n            addressObj.addRestriction(new InRestriction('CustomerClientID', ToDeleteCustomerClientIDs));\n            telExtObj.addRestriction(new InRestriction('CustomerClientID', ToDeleteCustomerClientIDs));\n            emailExtObj.addRestriction(new InRestriction('CustomerClientID', ToDeleteCustomerClientIDs));\n            addressExtObj.addRestriction(new InRestriction('CustomerClientID', ToDeleteCustomerClientIDs));\n            dao.transactionDelete(telObj);\n            dao.transactionDelete(emailObj);\n            dao.transactionDelete(addressObj);\n            dao.transactionDelete(telExtObj);\n            dao.transactionDelete(emailExtObj);\n            dao.transactionDelete(addressExtObj);\n\n\n            for (let data of resp.customerInfos) {\n                let clientID = '';\n                customerObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer');\n                customerExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Extension');\n                emailExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Email_Extension');\n                addressExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Address_Extension');\n                telExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Tel_Extension');\n                customerObj.setValue(\"CustomerID\", data.customerID);\n                customerObj.setValue(\"FirstName\", data.firstName);\n                customerObj.setValue(\"LastName\", data.lastName);\n                customerObj.setValue(\"Occupation\", data.occupation);\n                customerObj.setValue(\"Company\", data.employer);\n                customerObj.setValue(\"BirthdayYear\", data.birthDate === null || data.birthDate.indexOf('null') >= 0 ? null : data.birthDate.split('-')[0]);\n                customerObj.setValue(\"BirthdayMonth\", data.birthDate === null || data.birthDate.indexOf('null') >= 0 ? null : data.birthDate.split('-')[1]);\n                customerObj.setValue(\"BirthdayDate\", data.birthDate === null || data.birthDate.indexOf('null') >= 0 ? null : data.birthDate.split('-')[2]);\n                customerObj.setValue(\"AgeRange\", data.ageRange);\n                customerObj.setValue(\"Gender\", data.gender);\n                customerObj.setValue(\"Income\", data.annualIncomeRange);\n                customerObj.setValue(\"Source\", data.contactLink);\n                customerObj.setValue(\"Marriage\", data.marritalStatus);\n                customerObj.setValue(\"Children\", data.numberOfChildren);\n                customerObj.setValue(\"Familiarity\", data.familiarity);\n                customerObj.setValue(\"ContactFrequancy\", data.touchPointFrequency);\n                customerObj.setValue(\"Possibility\", data.leadProbability);\n                customerObj.setValue(\"IsFollow\", data.isFollowed ? 'Y' : 'N');\n                customerObj.setValue(\"IsDelete\", 'N');\n                customerObj.setValue(\"Completeness\", data.profileCompletion);\n                customerObj.setValue(\"DataSource\", data.isChangeable ? \"APP\" : \"OPUS\");\n                customerObj.setValue(\"DataTime\", parseISO(data.synchDetail.lastUpdateDateTimeBackend).getTime());\n                customerObj.setValue('IsOverTimeAlert', data.isOverTimeAlert);\n                customerObj.setValue(\"ClientTime\", Date.now());\n\n                //save email extension data\n                let Extensions = data.extensions;\n                customerExtObj.setValue(\"CustomerID\", data.customerID);\n                console.log('customer Extensions', Extensions);\n                if (Extensions != null) {\n                    Extensions.forEach(extension => {\n                        customerExtObj.setValue(extension.id, extension.value);\n                    });\n                }\n\n                if (CustomerIdArr.includes(data.customerID)) {\n                    clientID = CustomerClientIDArr[CustomerIdArr.indexOf(data.customerID)];\n                    customerObj.addRestriction(new EqualRestriction('CustomerID', [data.customerID]));\n                    customerExtObj.addRestriction(new EqualRestriction('CustomerID', [data.customerID]));\n                    dao.transactionUpdate(customerObj);\n                    dao.transactionUpdate(customerExtObj);\n\n                }\n                else {\n                    clientID = uuid();\n                    customerObj.setValue(\"ClientID\", clientID);\n                    customerExtObj.setValue(\"ClientID\", clientID);\n                    dao.transactionInsert(customerObj);\n                    dao.transactionInsert(customerExtObj);\n                }\n                for (let email of data.emailContacts) {\n                    let email_clientID = uuid();\n                    emailObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Email');\n                    emailObj.setValue('ClientID', email_clientID);\n                    emailObj.setValue('CustomerClientID', clientID);\n                    emailObj.setValue('EmailType', email.emailType);\n                    emailObj.setValue('Email', email.email);\n                    emailObj.setValue('DataSource', email.isChangeAble ? 'APP' : 'OPUS');\n\n                    //save email extension data\n                    let emailExtensions = email.extensions;\n                    emailExtObj.setValue('ClientID', email_clientID);\n                    emailExtObj.setValue('CustomerClientID', clientID);\n                    console.log('emailExtensions', emailExtensions);\n                    if (emailExtensions != null) {\n                        emailExtensions.forEach(extension => {\n                            emailExtObj.setValue(extension.id, extension.value);\n                        });\n                    }\n                    dao.transactionInsert(emailExtObj);\n                    dao.transactionInsert(emailObj);\n                }\n                for (let address of data.addresses) {\n                    let address_clientID = uuid();\n                    addressObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Address');\n                    addressObj.setValue('ClientID', address_clientID);\n                    addressObj.setValue('CustomerClientID', clientID);\n                    addressObj.setValue('AddressType', address.addressType);\n                    addressObj.setValue('Country', address.countryCode);\n                    addressObj.setValue('City', address.city);\n                    addressObj.setValue('Area', address.area);\n                    addressObj.setValue('Zipcode', address.postCode);\n                    addressObj.setValue('Address', address.line1);\n                    addressObj.setValue('DataSource', address.isChangeAble ? 'APP' : 'OPUS');\n\n                    //save email extension data\n                    let addressExtensions = address.extensions;\n                    addressExtObj.setValue('ClientID', address_clientID);\n                    addressExtObj.setValue('CustomerClientID', clientID);\n                    console.log('addressExtensions', addressExtensions);\n                    if (addressExtensions != null) {\n                        addressExtensions.forEach(extension => {\n                            addressExtObj.setValue(extension.id, extension.value);\n                        });\n                    }\n                    dao.transactionInsert(addressExtObj);\n                    dao.transactionInsert(addressObj);\n                }\n                for (let tel of data.phoneChannels) {\n                    let tel_clientID = uuid();\n                    telObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Tel');\n                    telObj.setValue('ClientID', tel_clientID);\n                    telObj.setValue('CustomerClientID', clientID);\n                    telObj.setValue('TelType', tel.usageType);\n                    telObj.setValue('Tel', tel.phoneNumber);\n                    telObj.setValue('DataSource', tel.isChangeable ? 'APP' : 'OPUS');\n\n                    //save email extension data\n                    let telExtensions = tel.extensions;\n                    telExtObj.setValue('ClientID', tel_clientID);\n                    telExtObj.setValue('CustomerClientID', clientID);\n                    console.log('telExtensions', telExtensions);\n                    if (telExtensions != null) {\n                        telExtensions.forEach(extension => {\n                            telExtObj.setValue(extension.id, extension.value);\n                        });\n                    }\n                    dao.transactionInsert(telExtObj);\n                    dao.transactionInsert(telObj);\n                }\n            }\n\n            let DeleteCustomerClientIds = resp.deletedPersonIds.map(x => {\n                let filtered = customerResp.Body.filter(y => y.CustomerID === x);\n                return filtered.length > 0 ? filtered[0].ClientID : null\n            }).filter(x => x !== null);\n            if (DeleteCustomerClientIds.length > 0) {\n                customerObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer');\n                emailObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Email');\n                addressObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Address');\n                telObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Tel');\n                emailExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Email_Extension');\n                addressExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Address_Extension');\n                telExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer_Tel_Extension');\n                customerObj.addRestriction(new InRestriction('CustomerID', resp.deletedPersonIds));\n                emailObj.addRestriction(new InRestriction('CustomerClientID', DeleteCustomerClientIds));\n                addressObj.addRestriction(new InRestriction('CustomerClientID', DeleteCustomerClientIds));\n                telObj.addRestriction(new InRestriction('CustomerClientID', DeleteCustomerClientIds));\n                emailExtObj.addRestriction(new InRestriction('CustomerClientID', DeleteCustomerClientIds));\n                addressExtObj.addRestriction(new InRestriction('CustomerClientID', DeleteCustomerClientIds));\n                telExtObj.addRestriction(new InRestriction('CustomerClientID', DeleteCustomerClientIds));\n                dao.transactionDelete(customerObj);\n                dao.transactionDelete(emailObj);\n                dao.transactionDelete(addressObj);\n                dao.transactionDelete(telObj);\n                dao.transactionDelete(emailExtObj);\n                dao.transactionDelete(addressExtObj);\n                dao.transactionDelete(telExtObj);\n            }\n\n            return await dao.runTransaction().toPromise();\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(frontendTime: number): Promise<number> {\n        let num: number = 0;\n        let dao = this.DaoFactory.getDefaultDao();\n        let customerObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer');\n        if (dao && customerObj) {\n            customerObj.addRestriction(new GreaterRestriction('ClientTime', [frontendTime]));\n            let resp = await dao.queryByTable(customerObj).toPromise();\n            console.log('query customer obj:', resp);\n            this.tmpPushData = resp.Body.filter(x => x.CustomerID === null);\n            num = this.tmpPushData.length;\n        }\n        return num;\n    }\n\n    async setSequentialID(ids: Array<string>) {\n        if (this.tmpPushData != null) {\n            let dataWithoutIds = this.tmpPushData;\n            let dao = this.DaoFactory.getDefaultDao();\n            for (let [index, data] of dataWithoutIds.entries()) {\n                let customerObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Customer');\n                customerObj.setValue(\"CustomerID\", ids[index]);\n                customerObj.addRestriction(new EqualRestriction('ClientID', [data.ClientID]));\n                dao.transactionUpdate(customerObj);\n            }\n            await dao.runTransaction().toPromise();\n            this.tmpPushData = null;\n        }\n    }\n\n    private async getPushData(frontendTime: number) {\n        let datas = [];\n        let dao = this.DaoFactory.getDefaultDao();\n        let customerObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer');\n        if (dao && customerObj) {\n            customerObj.addRestriction(new GreaterRestriction('ClientTime', [frontendTime]));\n            let resp = await dao.queryByTable(customerObj).toPromise();\n            console.log('query customer obj:', resp);\n            if (resp.Body.length > 0) {\n                let customerArray = resp.Body;\n                let clientIDArray = customerArray.map(x => x.ClientID);\n                dao = this.DaoFactory.getDefaultDao();\n                let telObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer_Tel');\n                let emailObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer_Email');\n                let addressObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Customer_Address');\n                telObj.addRestriction(new InRestriction('CustomerClientID', clientIDArray));\n                emailObj.addRestriction(new InRestriction('CustomerClientID', clientIDArray));\n                addressObj.addRestriction(new InRestriction('CustomerClientID', clientIDArray));\n                let telResp = await dao.queryByTable(telObj).toPromise();\n                let emailResp = await dao.queryByTable(emailObj).toPromise();\n                let addressResp = await dao.queryByTable(addressObj).toPromise();\n                for (let customer of customerArray) {\n                    customer.Tel = telResp.Body.filter(x => x.CustomerClientID == customer.ClientID);\n                    customer.Email = emailResp.Body.filter(x => x.CustomerClientID == customer.ClientID);\n                    customer.Address = addressResp.Body.filter(x => x.CustomerClientID == customer.ClientID);\n                    datas.push(customer);\n                }\n            }\n        }\n        return datas;\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\nimport { GreaterRestriction } from \"../../device/sqlite/restrictions/GreaterRestriction\";\nimport { v4 as uuid } from 'uuid';\nimport { parseISO } from 'date-fns';\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\nexport class MessageSync implements IFunctionSync {\n    private state: number;\n    constructor(private DaoFactory: DaoFactory, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'MESSAGE'\n    }\n\n    async getPushJson(frontendTime) {\n        // Do check data clientTime > frontendTime;\n        //TODO: Add extension column\n        let returnJson = [];\n\n        let dao = this.DaoFactory.getDefaultDao();\n        let messageObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Message');\n        if (dao && messageObj) {\n            messageObj.addRestriction(new GreaterRestriction('ClientTime', [frontendTime]));\n            let resp = await dao.queryByTable(messageObj).toPromise();\n            console.log('query message obj:', resp);\n            if (resp.Body.length > 0) {\n                let messageArray = resp.Body;\n                let updatedIDs = messageArray.filter(x => x.Status === 'Reading').map(x => x.MessageID);\n                returnJson = updatedIDs;\n            }\n        }\n        if (this.PushAOP) {\n            returnJson = await this.PullAOP.execute(returnJson);\n        }\n        return returnJson;\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.messageInfos.length > 0 || resp.deletedMessageIds.length > 0) {\n            let dao = this.DaoFactory.getDefaultDao();\n            let messageObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Message');\n            let messageExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Message_Extension');\n            let messageIDList = await dao.queryByTable(messageObj).toPromise().then((res) => res.Body);\n            messageIDList = messageIDList.map(x => x.MessageID);\n            for (let data of resp.messageInfos) {\n                let isExist = messageIDList.includes(data.messageID);\n                messageObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Message');\n                messageExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Message_Extension');\n                messageObj.setValue(\"MessageID\", data.messageID);\n                messageObj.setValue(\"MessageCategory\", data.messageCategory);\n                messageObj.setValue(\"MessageType\", data.messageType);\n                messageObj.setValue(\"Title\", data.title);\n                messageObj.setValue(\"Description\", data.description);\n                messageObj.setValue(\"Arguments\", data.arguments);\n                messageObj.setValue(\"Status\", data.status);\n                messageObj.setValue(\"IsClick\", data.isClick ? \"Y\" : \"N\");\n                messageObj.setValue(\"IsPopup\", data.isPopup ? \"Y\" : \"N\");\n                messageObj.setValue(\"IsShow\", data.isShow ? \"Y\" : \"N\");\n                messageObj.setValue(\"LinkStatus\", data.linkStatus);\n                messageObj.setValue(\"MessageTime\", parseISO(data.messageTime).getTime());\n                messageObj.setValue(\"ClientTime\", Date.now());\n                messageObj.setValue(\"IsDelete\", 'N');\n                messageObj.setValue(\"DataTime\", parseISO(data.synchDetail.lastUpdateDateTimeBackend).getTime());\n\n                //Extension\n                messageExtObj.setValue(\"MessageID\", data.messageID);\n\n\n                if (isExist) {\n                    messageObj.addRestriction(new EqualRestriction('MessageID', [data.messageID]));\n                    messageExtObj.addRestriction(new EqualRestriction('MessageID', [data.messageID]));\n                    dao.transactionUpdate(messageObj);\n                    dao.transactionUpdate(messageExtObj);\n                }\n                else {\n                    let clientID = uuid();\n                    messageObj.setValue(\"ClientID\", clientID);\n                    messageExtObj.setValue(\"ClientID\", clientID);\n                    dao.transactionInsert(messageObj);\n                    dao.transactionInsert(messageExtObj);\n                }\n\n            }\n\n            for (let id of resp.deletedMessageIds) {\n                messageObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Message');\n                messageExtObj = this.DaoFactory.getDefaultTable('TW_LH_SD_Message_Extension');\n                messageObj.addRestriction(new EqualRestriction('MessageID', [id]));\n                messageExtObj.addRestriction(new EqualRestriction('MessageID', [id]));\n                dao.transactionDelete(messageObj);\n                dao.transactionDelete(messageExtObj);\n            }\n\n            return await dao.runTransaction().toPromise();\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(): Promise<number> {\n        return -1;\n    }\n\n    async setSequentialID(ids: Array<string>) {\n\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { GreaterRestriction } from \"../../device/sqlite/restrictions/GreaterRestriction\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\nimport { parseISO } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { SQLiteResponse } from '../../device/sqlite/SQLiteResponse';\n\nexport class GoalExpectedSync implements IFunctionSync {\n\n    private state: number;\n    constructor(private DaoFactory: DaoFactory, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getName(): string {\n        return 'GOAL_EXPECTED'\n    }\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n    async getPushJson(frontendTime: number): Promise<any> {\n        // Do check data clientTime > frontendTime;\n        //TODO: Add extension column\n        let returnJson = [];\n        let pushData = await this.getPushData(frontendTime);\n\n        pushData.forEach(GoalExpectedObj => {\n            let Recruitments = [];\n            for (let i = 1; i <= 4; i++) {\n                let Recruitment = {\n                    \"Qarter\": i,\n                    \"Value\": GoalExpectedObj['Q' + i]\n                }\n                Recruitments.push(Recruitment);\n            }\n            let jsonObj = {\n                \"DataYear\": GoalExpectedObj.DataYear,\n                \"FYFC\": GoalExpectedObj.FYFC,\n                \"ANP\": GoalExpectedObj.ANP,\n                \"Recruitments\": Recruitments,\n                \"synchDetail\": {\n                    \"lastUpdateDateTimeBackend\": new Date(GoalExpectedObj.DataTime).toISOString()\n                },\n                \"extensions\": []\n            };\n            returnJson.push(jsonObj);\n        });\n        if (this.PushAOP) {\n            returnJson = await this.PullAOP.execute(returnJson);\n        }\n        return returnJson;\n    }\n\n    async pullData(resp: any): Promise<any> {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.GoalExpected && resp.GoalExpected.length > 0) {\n            let dao = this.DaoFactory.getDefaultDao();\n            //dao = new ClientCustomDao(dao);\n            let GoalSettingExpected = this.DaoFactory.getDefaultTable('TW_LH_SD_Goal_Setting_Expected');\n            let GoalSettingExpected_ext = this.DaoFactory.getDefaultTable('TW_LH_SD_Goal_Setting_Expected_Extension');\n            console.log('GoalSettingExpected', GoalSettingExpected);\n            if (resp.GoalExpected != null) {\n                let GoalExpectedDatas = resp.GoalExpected;\n                console.log('GoalExpectedDatas', GoalExpectedDatas);\n\n                GoalExpectedDatas.forEach(GoalExpectedData => {\n                    console.log('GoalExpectedData', GoalExpectedData);\n                    //delete the data that needs to be updated \n                    let ToDeleteGoalExpectedYears = GoalExpectedData.DataYear;\n                    console.log('ToDeleteGoalExpectedYears', ToDeleteGoalExpectedYears);\n\n                    if (ToDeleteGoalExpectedYears != null) {\n\n                        GoalSettingExpected.addRestriction(new EqualRestriction('DataYear', [ToDeleteGoalExpectedYears]));\n                        dao.transactionDelete(GoalSettingExpected);\n                        //update all date \n                        let clientID = uuid();\n                        GoalSettingExpected = this.DaoFactory.getDefaultTable('TW_LH_SD_Goal_Setting_Expected');\n                        GoalSettingExpected.setValue(\"ClientID\", clientID);\n                        GoalSettingExpected.setValue(\"DataYear\", GoalExpectedData.DataYear);\n                        GoalSettingExpected.setValue(\"FYFC\", GoalExpectedData.FYFC);\n                        GoalSettingExpected.setValue(\"ANP\", GoalExpectedData.ANP);\n                        GoalSettingExpected.setValue(\"DataTime\", parseISO(GoalExpectedData.synchDetail.lastUpdateDateTimeBackend).getTime());\n                        GoalSettingExpected.setValue(\"ClientTime\", Date.now());\n\n                        GoalSettingExpected_ext.setValue(\"ClientID\", clientID);\n\n                        let Recruitments: Array<any> = GoalExpectedData.Recruitments;\n                        for (let data of Recruitments) {\n                            GoalSettingExpected.setValue(\"Q\" + data.Qarter, data.Value);\n                        }\n                        console.log(\"GoalSettingExpected 2\", GoalSettingExpected);\n                        dao.transactionInsert(GoalSettingExpected);\n                        dao.transactionInsert(GoalSettingExpected_ext);\n                    }\n                });\n            }\n            return await dao.runTransaction().toPromise();\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    async getSequentialIDNeeded(): Promise<number> {\n        return -1;\n    }\n\n    async setSequentialID(ids: Array<string>) {\n\n    }\n\n    private async getPushData(frontendTime: number) {\n        let datas = [];\n        let dao = this.DaoFactory.getDefaultDao();\n        let GoalExpectedObj = this.DaoFactory.getDefaultTable('TW_LH_SD_VW_Goal_Setting_Expected');\n        if (dao && GoalExpectedObj) {\n            GoalExpectedObj.addRestriction(new GreaterRestriction('ClientTime', [frontendTime]));\n            let resp = await dao.queryByTable(GoalExpectedObj).toPromise();\n            console.log('query GoalExpected obj:', resp);\n            if (resp.Body.length > 0) {\n                // let GoalExpectedArray = resp.Body;\n                datas = resp.Body;\n            }\n        }\n        return datas;\n    }\n\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { APIFactory } from \"../../api/APIFactory\";\nimport { APIDispatch } from \"../../api/APIDispatch\";\nimport { saveGoalAPI } from '../../api/register/saveGoalAPI';\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\nexport class GoalSync implements IFunctionSync {\n    private state: number;\n    constructor(private apiFactory: APIFactory, private dispatcher: APIDispatch, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'GOAL'\n    }\n\n    async getPushJson(frontendTime) {\n        return [];\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.Goals.length > 0) {\n            let saveGoal = this.apiFactory.getAPI(\"saveGoal\");\n            (<saveGoalAPI>saveGoal).GoalDatas = resp.Goals;\n            let saveResp = await this.dispatcher.dispatch(saveGoal).toPromise();\n\n            return saveResp;\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(): Promise<number> {\n        return -1;\n    }\n\n    async setSequentialID(ids: Array<string>) {\n\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { APIFactory } from \"../../api/APIFactory\";\nimport { APIDispatch } from \"../../api/APIDispatch\";\nimport { saveActualAPI } from '../../api/register/saveActual';\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\nexport class ActualSync implements IFunctionSync {\n    private state: number;\n    constructor(private apiFactory: APIFactory, private dispatcher: APIDispatch, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'ACTUAL'\n    }\n\n    async getPushJson(frontendTime) {\n        return [];\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.Actual.length > 0) {\n            let saveActual = this.apiFactory.getAPI(\"saveActual\");\n            (<saveActualAPI>saveActual).ActualDatas = resp.Actual;\n            let saveResp = await this.dispatcher.dispatch(saveActual).toPromise();\n            return saveResp;\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(): Promise<number> {\n        return -1;\n    }\n\n    async setSequentialID(ids: Array<string>) {\n\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { APIFactory } from \"../../api/APIFactory\";\nimport { APIDispatch } from \"../../api/APIDispatch\";\nimport { saveAgencyPlanAPI } from '../../api/register/saveAgencyPlanAPI';\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\nexport class AgencyPlanSync implements IFunctionSync {\n    private state: number;\n    constructor(private apiFactory: APIFactory, private dispatcher: APIDispatch, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'AGENCY_PLAN'\n    }\n\n    async getPushJson(frontendTime) {\n        return [];\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.AgencyPlans.length > 0) {\n            let saveAgencyPlan = this.apiFactory.getAPI(\"saveAgencyPlan\");\n            (<saveAgencyPlanAPI>saveAgencyPlan).AgencyPlanDatas = resp.AgencyPlans;\n            let saveResp = await this.dispatcher.dispatch(saveAgencyPlan).toPromise();\n\n            return saveResp;\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(): Promise<number> {\n        return -1;\n    }\n\n    async setSequentialID(ids: Array<string>) {\n\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { APIFactory } from \"../../api/APIFactory\";\nimport { APIDispatch } from \"../../api/APIDispatch\";\nimport { saveProgressAPI } from '../../api/register/saveProgressAPI';\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\nexport class ProgressSync implements IFunctionSync {\n    private state: number;\n    constructor(private apiFactory: APIFactory, private dispatcher: APIDispatch, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'PROGRESS'\n    }\n\n    async getPushJson(frontendTime) {\n        return [];\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.Progress.length > 0) {\n            let saveProgress = this.apiFactory.getAPI(\"saveProgress\");\n            (<saveProgressAPI>saveProgress).ProgressDatas = resp.Progress;\n            let saveResp = await this.dispatcher.dispatch(saveProgress).toPromise();\n\n            return saveResp;\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(): Promise<number> {\n        return -1;\n    }\n\n    async setSequentialID(ids: Array<string>) {\n\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { APIFactory } from \"../../api/APIFactory\";\nimport { APIDispatch } from \"../../api/APIDispatch\";\nimport { saveYearConfigAPI } from \"../../api/register/saveYearConfigAPI\";\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\nexport class YearConfigSync implements IFunctionSync {\n    private state: number;\n    constructor(private apiFactory: APIFactory, private dispatcher: APIDispatch, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'YEAR_CONFIG'\n    }\n\n    async getPushJson(frontendTime) {\n        return [];\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        if (resp.Configurations.length > 0) {\n            let saveYearConfig = this.apiFactory.getAPI(\"saveYearConfig\");\n            (<saveYearConfigAPI>saveYearConfig).FirstUseAPP = resp.FirstUseAPP;\n            (<saveYearConfigAPI>saveYearConfig).yearConfigs = resp.Configurations;\n            let saveResp = await this.dispatcher.dispatch(saveYearConfig).toPromise();\n            return saveResp;\n        }\n        else {\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(): Promise<number> {\n        return -1;\n    }\n\n    async setSequentialID(ids: Array<string>) {\n\n    }\n}","import { IFunctionSync, FUNC_STATE } from \"./IFunctionSync\";\nimport { DaoFactory } from \"../../device/sqlite/DaoFactory\";\nimport { EqualRestriction } from \"../../device/sqlite/restrictions/EqualRestriction\";\nimport { endOfDay } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport { parse } from 'date-fns';\nimport { ISyncAOP } from \"./SyncAOP.interface\";\nimport { SQLiteResponse } from \"../../device/sqlite/SQLiteResponse\";\n\n\nexport class ProfileCodeSync implements IFunctionSync {\n    private state: number;\n    constructor(private DaoFactory: DaoFactory, private PushAOP: ISyncAOP = null, private PullAOP: ISyncAOP = null) {\n        this.state = FUNC_STATE.AVAILABLE;\n    }\n\n    getState(): FUNC_STATE {\n        return this.state;\n    }\n\n    getName(): string {\n        return 'PROFILE_CODE'\n    }\n\n    async getPushJson(frontendTime) {\n        return [];\n    }\n\n    async pullData(resp) {\n        if (this.PullAOP) {\n            resp = await this.PullAOP.execute(resp);\n        }\n        let dao = this.DaoFactory.getDao(\"Profile\");\n        let profileCodeObj = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_Code\");\n        if (resp.datalist.length > 0) {\n            dao.transactionDelete(profileCodeObj);\n            for (let data of resp.datalist) {\n                for (let code of data.values) {\n                    profileCodeObj = this.DaoFactory.getTable(\"Profile\", \"TW_LH_SD_Code\");\n                    profileCodeObj.setValue(\"TypeID\", data.datalistId);\n                    profileCodeObj.setValue(\"Code\", code.value);\n                    profileCodeObj.setValue(\"MappingID\", code.label);\n                    profileCodeObj.setValue(\"Orders\", code.orders);\n                    profileCodeObj.setValue(\"Arguments\", code.arguments);\n                    profileCodeObj.setValue(\"ValidityPeriod\", endOfDay(new Date(code.validityPeriod)).getTime());\n                    dao.transactionInsert(profileCodeObj);\n                }\n            }\n            return await dao.runTransaction().toPromise();\n        }\n        else{\n            return new SQLiteResponse({ status: true }, []);\n        }\n    }\n\n    setState(state: FUNC_STATE) {\n        this.state = state;\n    }\n\n    async getSequentialIDNeeded(): Promise<number> {\n        return -1;\n    }\n\n    async setSequentialID(ids: Array<string>) {\n\n    }\n}","import { RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from '@angular/router';\nimport { ComponentRef } from '@angular/core';\n\nexport class CustomRouterReuseStrategy implements RouteReuseStrategy {\n\n    public handlers: { [key: string]: DetachedRouteHandle } = {};\n\n    public deleteRouteSnapshot(): void {\n        console.log('delete snapshot!!');\n        Object.keys(this.handlers).forEach((key) => {\n            let componentRef = null;\n            if (this.handlers[key])\n                componentRef = this.handlers[key]['componentRef'];\n            if (componentRef) {\n                componentRef.destroy();\n            }\n        })\n        this.handlers = {};\n    }\n\n    shouldDetach(route: ActivatedRouteSnapshot): boolean {\n        console.debug('shouldDetach======>', route);\n        return this.isReuseRoute(route);\n    }\n\n    store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n        console.debug('store======>', route, handle);\n        console.log(\"this.getRouteUrl:\", this.getRouteUrl(route));\n        this.handlers[this.getRouteUrl(route)] = handle;\n    }\n\n    shouldAttach(route: ActivatedRouteSnapshot): boolean {\n        // console.debug('shouldAttach======>', route);\n        return this.isReuseRoute(route) && (!!this.handlers[this.getRouteUrl(route)]);\n    }\n\n    retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n        // console.debug('retrieve======>', route);\n        if (!this.handlers[this.getRouteUrl(route)]) {\n            return null;\n        }\n\n        return this.handlers[this.getRouteUrl(route)];\n    }\n\n    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n        // console.debug('shouldReuseRoute======>', future, curr);\n        return future.routeConfig === curr.routeConfig;\n    }\n\n    private getRouteUrl(route: ActivatedRouteSnapshot) {\n        let next = this.getTruthRoute(route);\n        let segments = [];\n        while (next) {\n            segments.push(next.url.join('/'));\n            next = next.parent;\n        }\n        let /** @type {?} */ url = segments\n            .filter(function (i) {\n                return i;\n            })\n            .reverse()\n            .join('/');\n        return url;\n    }\n\n    getTruthRoute(route: ActivatedRouteSnapshot) {\n        let next = route;\n        while (next.firstChild) {\n            next = next.firstChild;\n        }\n        return next;\n    }\n\n    private isReuseRoute(route: ActivatedRouteSnapshot) {\n        //default is true;\n        let shouldReuse = true;\n        let next = route;\n        while (next) {\n            if (next.data.hasOwnProperty(\"cache\")) {\n                shouldReuse = next.data.cache;\n            }\n            next = next.firstChild;\n        }\n        console.debug('isReuseRoute', shouldReuse);\n        return shouldReuse;\n    }\n\n}","import { ErrorHandler, Injectable, Injector, Inject } from '@angular/core';\nimport * as stacktrace from 'stacktrace-js';\nimport { APIFactory } from '../api/APIFactory';\nimport { APIDispatch } from '../api/APIDispatch';\nimport { logErrorAPI } from '../api/register/logErrorAPI';\nimport { DeviceService } from '../device/device.service';\nimport { ConfigToken } from '../injectionToken/injection-token';\nimport { SettingService } from '../service/setting/setting.service';\n\n@Injectable()\nexport class ErrorsHandler implements ErrorHandler {\n\n    private isDebug: boolean = false;\n\n    constructor(\n        private APIFactory: APIFactory,\n        private dispatcher: APIDispatch,\n        private deviceService: DeviceService,\n        private settingService: SettingService,\n        private injector: Injector,\n        @Inject(ConfigToken) private APP_CONFIG: any\n    ) {\n        this.settingService.getDebugMode().subscribe(debug => {\n            this.isDebug = debug;\n        })\n    }\n\n    async handleError(error: Error) {\n        let env = this.APP_CONFIG.ENV;\n        let APIFactory = this.getAPIFactory();\n        let dispatcher = this.getAPIDispatcher();\n        // Log the error anyway\n        console.error(error);\n        if (this.isDebug)\n            alert('error:' + error.message);\n        let stack = await stacktrace.fromError(error, { offline: true });\n        stack = stack.map(x => x.source);\n        let logErrorAPI = APIFactory.getAPI(\"LogError\");\n        if (logErrorAPI) {\n            (<logErrorAPI>logErrorAPI).time = new Date();\n            (<logErrorAPI>logErrorAPI).message = error.message;\n            (<logErrorAPI>logErrorAPI).stack = stack;\n            (<logErrorAPI>logErrorAPI).DeviceModel = this.deviceService.getDeviceManufacturer();\n            (<logErrorAPI>logErrorAPI).DeviceSystem = this.deviceService.getDevicePlatform();\n            dispatcher.dispatch(logErrorAPI).toPromise().then((resp) => {\n                console.log(\"log error resp:\", resp);\n            })\n        }\n    }\n\n    private getAPIFactory() {\n        return this.APIFactory || this.injector.get(APIFactory);\n    }\n\n    private getAPIDispatcher() {\n        return this.dispatcher || this.injector.get(APIDispatch);\n    }\n}","import { Injectable, Injector } from \"@angular/core\";\nimport { APIFactory } from \"../api/APIFactory\";\nimport { APIDispatch } from \"../api/APIDispatch\";\nimport { SelectOption } from \"../bean/SelectOption\";\nimport { DaoFactory } from \"../device/sqlite/DaoFactory\";\nimport { AOPTokenService } from \"../injectionToken/AOPToken.service\";\nimport { ProfileCodeService } from \"../service/profile/profile-code.service\";\nimport { MetaConfigAPI } from \"../api/register/MetaConfigAPI\";\nimport { SQLiteTable } from \"../device/sqlite/SQLiteTable\";\nimport { MetaAOP } from \"./MetaAOP.interface\";\nimport { ClientCustomDao } from \"../device/sqlite/ClientCustomDao\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MetaService {\n\n    constructor(\n        private injector: Injector,\n        private AOPTokenService: AOPTokenService,\n        private APIFactory: APIFactory,\n        private dispatcher: APIDispatch,\n        private DaoFactory: DaoFactory,\n        private profileCodeService: ProfileCodeService\n    ) {\n\n    }\n\n    //Get Meta setting by id\n    public getMetaJson(id: string): Promise<any> {\n        let configAPI = this.APIFactory.getAPI(\"getMetaConfig\");\n        (<MetaConfigAPI>configAPI).configName = id;\n        return this.dispatcher.dispatch(configAPI).toPromise();\n    }\n\n    // public async getData(meta: any, params: any): Promise<any> {\n    //     let AOP = meta[\"AOP\"];\n    //     let codeArray = this.getCodeArray(meta);\n    //     let source = meta.source;\n    //     let data = null;\n    //     if (source.type === 'API') {\n    //         let API = this.APIFactory.getAPI(source.read);\n    //         if (params) {\n    //             Object.keys(params).forEach((key) => {\n    //                 API[key] = params[key];\n    //             })\n    //         }\n    //         let api_resp = await this.dispatcher.dispatch(API).toPromise();\n    //         data = api_resp[\"Body\"][0];\n    //     }\n    //     else if (source.type === 'TABLE') {\n    //         //QUERY TABLE\n    //         let beforeAOP = null;\n    //         let afterAOP = null;\n    //         if (AOP) {\n    //             let beforeAOPName = AOP[\"ReadBefore\"];\n    //             let afterAOPName = AOP[\"ReadAfter\"];\n    //             //If has AOP, use Injector to find interface\n    //             let beforeToken = this.AOPTokenService.getToken(beforeAOPName);\n    //             let afterToken = this.AOPTokenService.getToken(afterAOPName);\n    //             beforeAOP = this.injector.get(beforeToken);\n    //             afterAOP = this.injector.get(afterToken);\n    //         }\n    //         let table = this.DaoFactory.getDefaultTable(source.table);\n    //         data = await this.queryTable(table, params, beforeAOP, afterAOP);\n    //     }\n    //     if (codeArray.length > 0) {\n    //         //Add Ref Options\n    //         data = this.convertCodeArrayToData(codeArray, data);\n    //     }\n    //     //Add Btn option\n    //     meta.footer.forEach(ele => {\n    //         if (ele.type === 'submit' || ele.type === 'button')\n    //             data[ele.id + \"Btn\"] = Object.assign({\n    //                 disable: false\n    //             }, ele);\n    //     });\n\n    //     return data;\n    // }\n\n    // public async saveData(meta: any, data: any, params?: any): Promise<any> {\n    //     let resp = null;\n    //     let source = meta.source;\n    //     let AOP = meta[\"AOP\"];\n    //     if (source.type === 'API' || source.type === 'INPUT') {\n    //         let API = this.APIFactory.getAPI(source.write);\n    //         API[\"Data\"] = data;\n    //         if (params) {\n    //             Object.keys(params).forEach((key) => {\n    //                 API[key] = params[key];\n    //             })\n    //         }\n    //         resp = await this.dispatcher.dispatch(API).toPromise();\n    //     }\n    //     else if (source.type === 'TABLE') {\n    //         //QUERY TABLE\n    //         let beforeAOP = null;\n    //         let afterAOP = null;\n    //         if (AOP) {\n    //             let beforeAOPName = AOP[\"WriteBefore\"];\n    //             let afterAOPName = AOP[\"WriteAfter\"];\n    //             //If has AOP, use Injector to find interface\n    //             let beforeToken = this.AOPTokenService.getToken(beforeAOPName);\n    //             let afterToken = this.AOPTokenService.getToken(afterAOPName);\n    //             beforeAOP = this.injector.get(beforeToken);\n    //             afterAOP = this.injector.get(afterToken);\n    //         }\n    //         let table = this.DaoFactory.getDefaultTable(source.table);\n    //         resp = await this.saveTable(data, table, params, beforeAOP, afterAOP);\n    //     }\n    //     return resp;\n    // }\n\n    // public getCodeArray(meta: any): Array<any> {\n    //     return meta.columns.filter(x => x.ref && x.ref.length > 0).map(x => {\n    //         return {\n    //             key: x.id,\n    //             val: this.profileCodeService.getCodeArray(x.ref),\n    //             type: x.type\n    //         }\n    //     });\n    // }\n\n    // public convertCodeArrayToData(codeArray, data) {\n    //     codeArray.forEach(ele => {\n    //         if (ele.type === 'Select')\n    //             data[ele.key + \"Option\"] = ele.val.map(x => new SelectOption(x.getCode(), x.displayText));\n    //         else\n    //             data[ele.key + \"Option\"] = ele.val.map(x => {\n    //                 return {\n    //                     id: x.getCode(),\n    //                     name: x.displayText,\n    //                     arguments: JSON.parse(x.getArguments())\n    //                 }\n    //             });\n    //     });\n    //     return data;\n    // }\n\n    // public async queryTable(tableObj: SQLiteTable, params: any = null, beforeAOP: MetaAOP, afterAOP: MetaAOP) {\n    //     if (beforeAOP) {\n    //         let conditions = await beforeAOP.run({ params });\n    //         if (conditions.length > 0) {\n    //             conditions.forEach(element => {\n    //                 tableObj.addRestriction(conditions);\n    //             });\n    //         }\n    //     }\n    //     let dao = this.DaoFactory.getDefaultDao();\n    //     let data = null;\n    //     let resp = await dao.queryByTable(tableObj).toPromise();\n    //     if (resp.Header['status']) {\n    //         data = resp.Body[0];\n    //     }\n    //     if (afterAOP) {\n    //         data = await afterAOP.run(data);\n    //     }\n    //     return data;\n    // }\n\n\n    // public async saveTable(data: any, tableObj: SQLiteTable, params: any = null, beforeAOP: MetaAOP, afterAOP: MetaAOP) {\n    //     let commonCols = ['IsDelete', 'ClientTime', 'DataTime'];\n    //     if (beforeAOP) {\n    //         data = await beforeAOP.run({ params, data });\n    //     }\n    //     let dao = this.DaoFactory.getDefaultDao();\n    //     dao = new ClientCustomDao(dao);\n    //     let columns = tableObj ? tableObj.getColumns().map(x => x.getName()) : [];\n    //     // Set value if data exist the column\n    //     columns.filter(x => !!data[x]).filter(x => commonCols.indexOf(x) === -1).forEach(columnName => {\n    //         tableObj.setValue(columnName, data[columnName]);\n    //     });\n    //     if (data[\"EditType\"] === 'add') {\n    //         await dao.insertByTable(tableObj).toPromise();\n    //     }\n    //     else {\n    //         await dao.updateByTable(tableObj).toPromise();\n    //     }\n    //     if (afterAOP) {\n    //         await afterAOP.run({ params, data });\n    //     }\n    // }\n}","import { MetaController } from \"./MetaController.interface\";\n\nexport abstract class DisplayMetaController implements MetaController {\n\n    onValueChange(column: string, value: any, groupId: string, index: number, data: any, vaildResult: any): void {\n\n    };\n    onValidateAll(data: any, vaildResult: any): boolean {\n        return true;\n    };\n    btnClick(type: string, id: string, data: any): void {\n\n    };\n    public abstract onDataUpdated(data: any): void;\n\n}","import { IMetaExecutor } from \"../MetaExecutor.interface\";\nimport { MetaConfig } from \"../../parser/bean/MetaConfig\";\nimport { Injectable, ErrorHandler } from \"@angular/core\";\nimport { APPError } from \"../../../errorHandler/APPError\";\nimport { APIFactory } from \"../../../api/APIFactory\";\nimport { APIDispatch } from \"../../../api/APIDispatch\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class APIExecutor implements IMetaExecutor {\n\n    constructor(\n        private errorHandler: ErrorHandler,\n        private APIFactory: APIFactory,\n        private dispatcher: APIDispatch\n    ) { }\n\n    public async getData(config: MetaConfig, params: any = null) {\n        try {\n            let API = this.APIFactory.getAPI(config.source.read);\n            if (params)\n                Object.keys(params).forEach((key) => {\n                    API[key] = params[key];\n                })\n            let resp = await this.dispatcher.dispatch(API).toPromise();\n            return resp[\"Body\"][0];\n\n        } catch (error) {\n            this.errorHandler.handleError(new APPError(\"F00802\", error.message));\n            return null;\n        }\n    }\n\n    public async saveData(config: MetaConfig, data: any, params: any = null) {\n        try {\n\n            let API = this.APIFactory.getAPI(config.source.write);\n            if (params)\n                Object.keys(params).forEach((key) => {\n                    API[key] = params[key];\n                })\n            API[\"Data\"] = data;\n            return await this.dispatcher.dispatch(API).toPromise();\n\n        } catch (error) {\n            this.errorHandler.handleError(new APPError(\"F00803\", error.message));\n            return null;\n        }\n    }\n}","import { IMetaExecutor } from \"../MetaExecutor.interface\";\nimport { MetaConfig } from \"../../parser/bean/MetaConfig\";\nimport { Injectable } from \"@angular/core\";\nimport { APIExecutor } from \"./APIExecutor\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InputExecutor extends APIExecutor implements IMetaExecutor {\n\n    public async getData(config: MetaConfig, params: any) {\n        return null;\n    }\n    public async saveData(config: MetaConfig, data: any, params: any) {\n        if (config.source.write)\n            return super.saveData(config, data, params);\n        else\n            return null;\n    }\n}","import { MetaGrid } from './MetaGrid';\nexport class MetaColumn {\n    constructor(id: string, name: string, type: string) {\n        this.id = id;\n        this.name = name;\n        this.type = type;\n    }\n    public id: string = null;\n    public name: string = null;\n    public type: string = null;\n    public optionRef: string = null;\n    public showTitle: boolean = null;\n    public required: boolean = null;\n    public readonly: boolean = null;\n    public inline: boolean = null;\n    public grid: MetaGrid = null;\n    public order: number = null;\n    public default: any = null;\n    public maxLength: number = null;\n    public placeholder: string = null;\n    //For Group\n    public groupColumns: Array<MetaColumn> = [];\n    public groupRows: Array<Array<MetaColumn>> = [];\n    public icon: string = null;\n    public canAdd: boolean = null;\n    public maxNumber: number = null;\n    public showDefaultOption: boolean = null;\n    public rowTitle: string = null;\n}","import { MetaSource } from './MetaSource';\nimport { MetaColumn } from './MetaColumn';\nimport * as _ from 'lodash';\n\nexport class MetaConfig {\n    constructor() { }\n\n    public source: MetaSource = null;\n    public Rows: Array<Array<MetaColumn>> = [];\n    public Columns: Array<MetaColumn> = [];\n    public Footer: Array<MetaColumn> = [];\n\n    public setColumn(columnList: Array<any>, groupList: Array<any>) {\n        console.log(\"MetaConfig setColumn:\", columnList, groupList);\n        // Set Column MetaConfig\n        columnList = columnList.map(x => this.createColumnObject(x));\n        if (groupList.length > 0) {\n            let colsInGroup = _.flatMap(groupList, x => x.columns);\n            groupList = groupList.map(x => this.createGroupColumnObject(x, columnList));\n            columnList = columnList.filter(x => !colsInGroup.includes(x.id));\n            groupList.forEach((ele: MetaColumn) => {\n                ele.groupRows = this.convertColumns2Row(ele.groupColumns);\n                columnList.splice(ele.order, 0, ele);\n            });\n            columnList.forEach((ele: MetaColumn, index: number) => {\n                ele.order = index;\n            })\n        }\n        this.Columns = columnList;\n        this.Rows = this.convertColumns2Row(columnList);\n    }\n\n    public setFooter(footerList: Array<any>) {\n        this.Footer = footerList.map(x => {\n            return new MetaColumn(x.id, x.name, x.type);\n        })\n    }\n\n    private createColumnObject(column: any): MetaColumn {\n        let columnObj = new MetaColumn(column.id, column.name, column.type);\n        columnObj.optionRef = column.ref;\n        columnObj.showTitle = column.showTitle;\n        columnObj.required = column.required;\n        columnObj.readonly = column.readonly;\n        columnObj.grid = column.grid;\n        columnObj.inline = column.inline;\n        columnObj.order = column.order;\n        columnObj.default = column.default;\n        columnObj.maxLength = column.maxLength;\n        columnObj.groupColumns = column.groupColumns;\n        columnObj.icon = column.icon;\n        columnObj.canAdd = column.canAdd;\n        columnObj.maxNumber = column.maxNumber;\n        columnObj.placeholder = column.placeholder;\n        columnObj.showDefaultOption = column.showDefaultOption;\n        columnObj.rowTitle = column.rowTitle;\n        return columnObj;\n    }\n\n    private createGroupColumnObject(groupColumn: any, coulmnList: Array<MetaColumn>): MetaColumn {\n        let columnIDs = groupColumn.columns;\n        let groupColumnObj = this.createColumnObject(groupColumn);\n        groupColumnObj.groupColumns = columnIDs.map(x => coulmnList.filter(y => y.id === x)[0]);\n        return groupColumnObj;\n    }\n\n    private convertColumns2Row(columnList: Array<MetaColumn>): Array<Array<MetaColumn>> {\n        console.log(\"MetaConfig convertColumns2Row:\", columnList);\n        let tmpArray = [];\n        let rowArray = [];\n        for (var i = 0; i < columnList.length; i++) {\n            tmpArray.push(columnList[i]);\n            if (columnList[i].inline === false || i === (columnList.length - 1)) {\n                rowArray.push([...tmpArray]);\n                tmpArray = [];\n            }\n        }\n        return rowArray;\n    }\n}","export class MetaSource {\n    constructor(type: string, read: string, write: string) {\n        this.type = type;\n        this.read = read;\n        this.write = write;\n    }\n\n    public type;\n    public read;\n    public write;\n}","export class MetaGrid {\n    constructor(pc: number, nb?: number, pad?: number, mobile?: number) {\n        this.pc = pc;\n        this.nb = nb ? nb : pc;\n        this.pad = pad ? pad : pc;\n        this.mobile = mobile ? mobile : pc;\n    }\n\n    public pc: number;\n    public nb: number;\n    public pad: number;\n    public mobile: number;\n}","import { IMetaParser } from \"./MetaParser.interface\";\nimport { MetaConfig } from \"./bean/MetaConfig\";\nimport { MetaSource } from \"./bean/MetaSource\";\nimport { APPError } from \"../../errorHandler/APPError\";\nimport { MetaGrid } from \"./bean/MetaGrid\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DefaultMetaParser implements IMetaParser {\n\n    public parse(json: any): MetaConfig {\n        console.log(\"Default Meta Parser parse:\", json);\n        json.columns = this.fillDefaultColumnSetting(json.columns);\n        let group = json.group ? json.group : [];\n        group = this.fillDefaultColumnSetting(group);\n        let metaConfig = new MetaConfig();\n\n        console.log(\"DefaultMetaParser parse:\", json, group);\n        metaConfig.source = this.getSource(json);\n        metaConfig.setColumn(json.columns, group);\n        metaConfig.setFooter(json.footer);\n        console.log(\"After Parse:\", metaConfig);\n        return metaConfig;\n    }\n\n    private getSource(json): MetaSource {\n        try {\n            let type = json.source.type;\n            let read = json.source.read;\n            let write = json.source.write;\n            read = read ? read : null;\n            write = write ? write : null;\n            return new MetaSource(type, read, write);\n        } catch (error) {\n            throw new APPError(\"F00801\", error.message);\n        }\n    }\n\n    private fillDefaultColumnSetting(columnList): any {\n        return columnList.map(x => this._defaultSetting(x));\n    }\n\n    private _defaultSetting(column: any): any {\n        let grid = column.grid;\n        if (!grid) {\n            grid = new MetaGrid(12);\n        }\n        else if (typeof (grid) === 'number')\n            grid = new MetaGrid(grid);\n        else {\n            grid = new MetaGrid(grid.pc, grid.nb, grid.pad, grid.mobile);\n        }\n        return Object.assign({\n            type: 'Group',\n            ref: '',\n            showTitle: true,\n            required: false,\n            readonly: false,\n            inline: false,\n            order: 0,\n            default: '',\n            maxLength: 999,\n            showDefaultOption: true,\n            groupColumns: [],\n            icon: null,\n            canAdd: false,\n            maxNumber: 999,\n            placeholder: '',\n            rowTitle: null\n        }, column, { grid });\n    }\n}","export class MetaValid {\n    public isValid: boolean;\n    public message: string;\n    public colID: string;\n    constructor(colID: string, isValid: boolean, message: string) {\n        this.colID = colID;\n        this.isValid = isValid;\n        this.message = message;\n    }\n}","import { MetaService } from \"../Meta.service\";\nimport { IMetaExecutor } from \"../executor/MetaExecutor.interface\";\nimport { IMetaParser } from \"../parser/MetaParser.interface\";\nimport { MetaConfig } from \"../parser/bean/MetaConfig\";\nimport { APPError } from \"../../errorHandler/APPError\";\nexport abstract class BaseMetaComponent {\n\n    constructor(\n        protected metaService: MetaService,\n        protected parser: IMetaParser,\n        protected executor: IMetaExecutor\n    ) {\n        this.metaID = this.getMetaID();\n    }\n\n    protected metaID: string = null;\n    protected metaLoaded: boolean = false;\n\n\n    protected metaConfig: MetaConfig = null;\n    protected _data: any = null;\n\n    protected abstract getMetaID(): string;\n    protected abstract getMetaParams(): any;\n\n    public ngOnInit() {\n        console.log(\"MetaComponent ngOninit!\");\n        this.init();\n    }\n\n    private async init() {\n        try {\n            let metaJSON = await this.metaService.getMetaJson(this.metaID);\n            this.metaConfig = this.parser.parse(metaJSON);\n            await this.loadData();\n            this.metaLoaded = true;\n        } catch (error) {\n            throw new APPError(\"F00800\", error.message);\n        }\n    }\n\n    protected async loadData() {\n        let executed_data = await this.executor.getData(this.metaConfig, this.getMetaParams());\n        if (executed_data) {\n            this._data = executed_data;\n            this.onDataUpdated();\n        }\n    }\n\n    protected waitUntilMetaLoaded(): Promise<any> {\n        return new Promise((res, rej) => {\n            let checkInterval = setInterval(() => {\n                if (this.metaLoaded) {\n                    clearInterval(checkInterval);\n                    res();\n                }\n            }, 100);\n        });\n    }\n\n    public isMetaLoaded() {\n        return this.metaLoaded;\n    }\n\n    protected abstract onDataUpdated();\n\n}","import { BaseMetaComponent } from './BaseMetaComponent';\nimport { MetaService } from '../Meta.service';\nimport { ProfileCodeService } from '../../service/profile/profile-code.service';\nimport { IMetaParser } from '../parser/MetaParser.interface';\nimport { IMetaExecutor } from '../executor/MetaExecutor.interface';\n\nexport abstract class DisplayMetaComponent extends BaseMetaComponent {\n\n    constructor(\n        metaService: MetaService,\n        protected profileCodeService: ProfileCodeService,\n        parser: IMetaParser,\n        executor: IMetaExecutor\n    ) {\n        super(metaService, parser, executor);\n    }\n\n    public ngOnInit() {\n        console.log(\"DisplayMetaComponent ngOninit!\");\n        super.ngOnInit();\n    }\n\n\n    protected onDataUpdated() {\n        this.convertCodeToDisplay();\n    }\n\n    private convertCodeToDisplay() {\n        let needToConvert = this.metaConfig.Columns.filter(x => x.type === 'Label' && !!x.optionRef);\n        needToConvert.forEach((col) => {\n            if (this._data[col.id])\n                this._data[col.id] = this.profileCodeService.convertCode2Text(col.optionRef, this._data[col.id]);\n        })\n\n        this.metaConfig.Columns.filter(x => x.type === 'Group').forEach(group => {\n            let colsNeedConvert = group.groupColumns.filter(x => x.type === 'Label' && !!x.optionRef);\n            console.log(\"colsNeedConvert:\", colsNeedConvert);\n            if (colsNeedConvert.length > 0 && this._data[group.id]) {\n                this._data[group.id].forEach((groupData, index) => {\n                    let extendedObj = colsNeedConvert.map(x => {\n                        return {\n                            key: x.id,\n                            value: this.profileCodeService.convertCode2Text(x.optionRef, this._data[group.id][index][x.id])\n                        }\n                    }).reduce((acc, cur) => { acc[cur.key] = cur.value; return acc; }, {});\n                    console.log(\"extendedObj:\", extendedObj);\n                    groupData = Object.assign(groupData, extendedObj);\n                });\n            }\n        })\n\n    }\n}","import { BaseMetaComponent } from './BaseMetaComponent';\nimport { MetaService } from '../Meta.service';\nimport { ValidationResult } from '../../utils/ValidationResult';\nimport { MetaValid } from '../parser/bean/MetaValid';\nimport { MetaColumn } from '../parser/bean/MetaColumn';\nimport { ProfileCodeService } from '../../service/profile/profile-code.service';\nimport { SelectOption } from '../../bean/SelectOption';\nimport { ProfileCode } from '../../bean/ProfileCode';\nimport { IMetaExecutor } from '../executor/MetaExecutor.interface';\nimport { IMetaParser } from '../parser/MetaParser.interface';\nimport * as _ from 'lodash';\n\n\nexport abstract class FormMetaComponent extends BaseMetaComponent {\n\n\n    public validationResult: ValidationResult = new ValidationResult();\n\n    constructor(\n        metaService: MetaService,\n        protected profileCodeService: ProfileCodeService,\n        parser: IMetaParser,\n        executor: IMetaExecutor\n    ) {\n        super(metaService, parser, executor);\n    }\n\n    public ngOnInit() {\n        console.log(\"FormMetaComponent ngOninit!\");\n        super.ngOnInit();\n    }\n\n\n    protected abstract onValueChange(column: string, value: any, groupId: string, index: number): void;\n    protected abstract onValidateAll(): boolean;\n    protected abstract btnClick(type: string, id: string): void;\n\n    public onChange(column: string, value: any, groupID: string = null, index: number = -1) {\n        console.log(\"onChange:\", column, value, groupID, index);\n        let isGroup = (groupID && index >= 0);\n        let columnID = isGroup ? column : (column + index.toString());\n        let validResp = this.valid(column, value, isGroup);\n        console.log(\"validResp:\", validResp);\n\n        if (validResp)\n            this.validationResult.deleteError(columnID);\n        else\n            this.validationResult.setErrorMap(columnID, validResp.message);\n\n        this.onValueChange(column, value, groupID, index);\n\n    }\n\n    private valid(column: string, value: any, isGroup: boolean = false) {\n        console.log(\"valid:\", column, value, isGroup);\n        let resp = new MetaValid(column, true, \"\");\n        let col: MetaColumn;\n        if (isGroup) {\n            let groupCol = this.metaConfig.Columns\n                .filter(x => x.type === 'Group')\n                .map(x => x.groupColumns);\n            col = _.flatten(groupCol).filter(x => x.id === column)[0];\n        }\n        else\n            col = this.metaConfig.Columns.filter(x => x.id === column)[0];\n        console.log(\"valid col:\", col);\n        if (col.type === 'Input') {\n            if (col.required && !value) {\n                resp.isValid = false;\n                resp.message = col.id + \"_required\";\n            }\n        }\n        else if (col.type === 'Select') {\n            if (col.required && (value === '' || !value)) {\n                resp.isValid = false;\n                resp.message = col.id + \"_required\";\n            }\n        }\n        return resp;\n    }\n\n    private validAll() {\n        //Column Result\n        let validResult = this.metaConfig.Columns.filter(x => x.type !== \"Group\")\n            .map((col: MetaColumn) => this.valid(col.id, this._data[col.id]))\n            .filter(x => !x.isValid);\n\n        this.metaConfig.Columns.filter(x => x.type === \"Group\")\n            .forEach(group => {\n                let groupId = group.id;\n                this._data[groupId].forEach((ele, index) => {\n                    validResult = validResult.concat(group.groupColumns.map(col => {\n                        let validResp = this.valid(col.id, ele[col.id], true);\n                        validResp.colID = col.id + index.toString();\n                        return validResp;\n                    }).filter(x => !x.isValid));\n                });\n            });\n        console.log(\"validAll result:\", validResult);\n        return validResult;\n    }\n\n    public async onBtnClick(type: string, id: string) {\n        if (this._data[id + 'Btn'])\n            this._data[id + 'Btn'].disable = true;\n        if (type === 'submit') {\n            this.validationResult.clearErrorMap();\n            let result = this.validAll();\n            result.forEach((err) => {\n                this.validationResult.setErrorMap(err.colID, err.message);\n            })\n            if (this.onValidateAll() && result.length === 0) {\n                //CALL SAVE API\n                let resp = await this.saveData();\n                console.log(\"save data resp:\", resp);\n                this.btnClick(type, id);\n                if (this._data[id + 'Btn'])\n                    this._data[id + 'Btn'].disable = true;\n            }\n            else {\n                this._data[id + 'Btn'].disable = false;\n            }\n        }\n        else\n            this.btnClick(type, id);\n    }\n\n    protected async saveData() {\n        return await this.executor.saveData(this.metaConfig, this._data, this.getMetaParams());\n    }\n\n    public onGroupRemove(groupName: string, index: number) {\n        this._data[groupName] = this._data[groupName].filter((x, i) => i != index);\n        let group_col = this.metaConfig.Columns.filter(x => x.id === groupName)[0].groupColumns;\n        group_col.forEach(col => {\n            this.validationResult.deleteError(col.id + index.toString());\n        });\n\n    }\n\n    public onGroupAdd(groupName: string) {\n        let group_col = this.metaConfig.Columns.filter(x => x.id === groupName)[0].groupColumns;\n        let keys = group_col.map(x => x.id);\n        console.log(\"keys:\", keys);\n        let newObj = keys.map(x => {\n            let y = {};\n            let defaultVal = group_col.filter(z => z.id === x)[0].default;\n            y[x] = defaultVal;\n            return y\n        }).reduce((acc, current) => {\n            return Object.assign(acc, current);\n        }, {})\n        console.log(\"GroupAdd newObj:\", newObj);\n        this._data[groupName] = [...this._data[groupName], newObj];\n\n    }\n\n    protected onDataUpdated() {\n        this.addBtnAttr();\n        this.fetchOptions();\n    }\n\n    private fetchOptions() {\n        this.metaConfig.Columns\n            .filter(x => x.optionRef && x.optionRef.length > 0)\n            .map(x => this.createOption(x))\n            .forEach((option) => {\n                this._data[option.key] = option.val;\n            })\n\n        let groupCol = this.metaConfig.Columns\n            .filter(x => x.type === 'Group')\n            .map(x => x.groupColumns.filter(y => y.optionRef && y.optionRef.length > 0));\n\n        let groupOpt = _.flatMap(groupCol, x => x.map(y => this.createOption(y)));\n        groupOpt.forEach((option) => {\n            this._data[option.key] = option.val;\n        })\n\n    }\n\n    private addBtnAttr() {\n        this.metaConfig.Footer.forEach(ele => {\n            if (ele.type === 'submit' || ele.type === 'button')\n                this._data[ele.id + \"Btn\"] = Object.assign({\n                    disable: false\n                }, ele);\n        });\n    }\n\n    private createOption(column: MetaColumn) {\n        let resp = {\n            key: column.id + 'Option',\n            val: []\n        }\n        let codeArray = this.profileCodeService.getCodeArray(column.optionRef);\n        if (column.type === 'Select')\n            resp.val = codeArray\n                .map((x: ProfileCode) => new SelectOption(x.getCode(), this.profileCodeService.convertCode2Text(column.optionRef, x.getCode())));\n        else\n            resp.val = codeArray.map((x: ProfileCode) => {\n                return {\n                    id: x.getCode(),\n                    name: this.profileCodeService.convertCode2Text(column.optionRef, x.getCode()),\n                    arguments: JSON.parse(x.getArguments())\n                }\n            })\n\n        return resp;\n    }\n\n}","import { ValidBean } from './ValidBean';\nimport { ValidCondition } from './condition/ValidCondition.interface';\n\nexport class ValidController {\n    public static beanPool: Array<ValidBean> = [];\n\n    public static addBean(bean: ValidBean): void {\n        if (this.beanPool.filter(x => x.name === bean.name).length === 0)\n            this.beanPool.push(bean);\n    }\n\n    public static validObject(data: any, name: string): boolean {\n        try {\n            console.log(\"validObject:\", name, data);\n            let bean = this.getBean(name);\n            if (bean) {\n                let validResult = bean.validSelf(data);\n                if (validResult.length > 0) {\n                    this.errorHandler(validResult, name);\n                }\n                return validResult.length === 0;\n            }\n            else {\n                throw new Error(`Cannot find Bean ${name}.`);\n            }\n        } catch (error) {\n            console.error('Valid Object error', error);\n            return true;\n        }\n    }\n\n    public static addCondition(objectName: string, propertyName: string, condition: ValidCondition): void {\n        let bean = this.getBean(objectName);\n        let property = bean.getOrCreateProperty(propertyName);\n        console.log(\"addCondition:\", bean, property);\n        property.addCondition(condition);\n    }\n\n    private static getBean(name: string): ValidBean {\n        if (this.beanPool.filter(x => x.name === name).length > 0)\n            return this.beanPool.filter(x => x.name === name)[0]\n        else\n            return null;\n    }\n\n    private static errorHandler(validResult: Array<string>, name: string) {\n        console.error(validResult.reduce((x, y) => `${x}\\n${y}`, `Class ${name} valid error:`));\n    }\n}\n\n\n\n\n\n","import { ValidCondition } from \"./condition/ValidCondition.interface\";\n\nexport class ValidProperty {\n    private _name: string;\n    public get name(): string {\n        return this._name;\n    }\n    public set name(value: string) {\n        this._name = value;\n    }\n    private conditionList: Array<ValidCondition>;\n\n    constructor(name: string) {\n        this.name = name;\n        this.conditionList = [];\n    }\n    public addCondition(condition: ValidCondition) {\n        this.conditionList.push(condition);\n    }\n\n    public validProperty(value): Array<string> {\n        return this.conditionList.filter(x => !x.valid(value)).map(x => x.getErrorMsg(this.name));\n    }\n}","import { ValidProperty } from \"./ValidProperty\";\nimport * as _ from 'lodash';\n\nexport class ValidBean {\n    private _name: string;\n    private _type: any;\n    private propertyList: Array<ValidProperty>;\n\n    public get name(): string {\n        return this._name;\n    }\n    public set name(value: string) {\n        this._name = value;\n    }\n\n    public get type(): any {\n        return this._type;\n    }\n    public set type(value: any) {\n        this._type = value;\n    }\n\n    constructor(name: string, type: any) {\n        this.name = name;\n        this.type = type;\n        this.propertyList = [];\n    }\n\n    public getOrCreateProperty(name: string): ValidProperty {\n        let filtered = this.propertyList.filter(x => x.name === name);\n        if (filtered.length > 0) {\n            return filtered[0];\n        } else {\n            let property = new ValidProperty(name);\n            this.addProperty(property);\n            return property;\n        }\n    }\n\n    public validSelf(data: any): Array<string> {\n        let validResult = _.flatMap(this.propertyList, x => x.validProperty(data[x.name]));\n        console.log(\"validSelf result:\", validResult);\n        return validResult;\n    }\n\n    private addProperty(property: ValidProperty) {\n        this.propertyList.push(property);\n    }\n\n}","import { ValidController } from \"../ValidController\";\nimport { ValidBean } from \"../ValidBean\";\n\n\n\nexport function Bean(name: string) {\n    return function Bean<T extends { new(...args: any[]): {} }>(constructor: T) {\n        ValidController.addBean(new ValidBean(name, constructor));\n        return class extends constructor {\n            beanName = name;\n        }\n    }\n}","export interface ValidCondition {\n    valid(value: any): boolean;\n    getType(): ValidType;\n    getErrorMsg(column: string): string;\n}\n\nexport enum ValidType {\n    Required,\n    Max,\n    Min\n}","import { ValidCondition, ValidType } from \"./ValidCondition.interface\";\nimport { ValidController } from \"../ValidController\";\n\nexport class RequiredCondition implements ValidCondition {\n    private type: ValidType;\n    private value: any;\n    private baseTypes = ['string', 'undefined', 'number', 'boolean'];\n\n    constructor() {\n        this.type = ValidType.Required;\n    }\n\n    getType(): ValidType {\n        return this.type;\n    }\n    valid(value): boolean {\n        this.value = value;\n        console.log('RequiredCondition valid:', value, this.baseTypes.indexOf(typeof value) === -1);\n        let isBaseType = this.baseTypes.indexOf(typeof value) !== -1 || value === null;\n        if (isBaseType)\n            return value !== null && value !== undefined;\n        else if (value instanceof Array)\n            return value.length > 0;\n        else if (typeof value === 'object')\n            return ValidController.validObject(value, value.beanName);\n    }\n\n    getErrorMsg(column: string): string {\n        return `${column} is ${this.value} but expect required.`;\n    }\n}","import { ValidController } from \"../ValidController\";\nimport { ValidBean } from \"../ValidBean\";\nimport { RequiredCondition } from \"../condition/RequiredCondition\";\n\nexport function Required(target: Object, propertyName: string) {\n    ValidController.addBean(new ValidBean(target.constructor.name, target));\n    ValidController.addCondition(target.constructor.name, propertyName, new RequiredCondition());\n}","import { ValidController } from \"../ValidController\";\nimport { Observable, isObservable, of } from \"rxjs\";\n\nexport function Valid(type?: any): MethodDecorator {\n    console.log(\"valid type:\", type);\n    return function (\n        target: Function,\n        propertyName: string,\n        propertyDesciptor: PropertyDescriptor) {\n        const method = propertyDesciptor.value;\n        propertyDesciptor.value = function (...args) {\n            console.log('pool:', ValidController.beanPool);\n            let result = method.apply(this, args);\n            console.log('valid result: ', result);\n            if (isObservable(result)) {\n                console.log('isObservable(result)');\n                return handleObservable(result);\n            }\n            else if (result instanceof Promise) {\n                console.log('result instanceof Promise');\n                return handlePromise(result);\n            }\n            else {\n                console.log('not Observable, not instanceof Promise');\n                validObject(result);\n                return result;\n            }\n        }\n        return propertyDesciptor;\n    }\n}\n\nfunction handleObservable(result: Observable<any>): Observable<any> {\n    return new Observable((observer) => {\n        result.subscribe(\n            {\n                next(x) {\n                    validObject(x);\n                    observer.next(x);\n                },\n                error(err) { observer.error(err); },\n                complete() { observer.complete(); }\n            })\n    });\n}\n\nasync function handlePromise(result: Promise<any>): Promise<any> {\n    let resolved = await result;\n    validObject(resolved);\n    return resolved;\n}\n\nfunction validObject(data: any) {\n    console.log(\"Valid.ts validObject:\", data);\n    if (data instanceof Array)\n        data.forEach(x => validObject(x));\n    else\n        ValidController.validObject(data, data.beanName);\n}"],"names":["_","tslib_1.__extends","Injectable","ErrorHandler","catchError","throwError","HttpClient","InjectionToken","DatePipe","tslib_1.__values","Observable","uuid","Injector","Optional","Inject","BehaviorSubject","HttpHeaders","defaultHeader","timeout","NgZone","of","APIFactory","Pipe","Router","NavigationEnd","RouteReuseStrategy","Subject","from","map","EventEmitter","Directive","ElementRef","Input","Output","HostBinding","HostListener","Component","Location","NgModule","HttpClientModule","CommonModule","FormsModule","DaoFactory","fromEvent","HttpParams","_.uniq","parseISO","first","tslib_1.__read","endOfDay","stacktrace.fromError","AOPTokenService","_.flatMap","_.flatten","SelectOption","isObservable"],"mappings":"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"}
