import { ErrorHandler } from '@angular/core';
import { APIDispatch, APIFactory, DeviceService, NotificationMgr } from '@allianzSND/core';
import { Observable } from 'rxjs';
import { ConfigurationObj } from './model/ConfigurationObj';
import { ProgressObj } from './model/ProgressObj';
import { ProgressPersonalData } from './model/ProgessPersonalData';
import { ProgressDirectIndirectData } from './model/ProgressDirectIndirectData';
import { Tag } from './model/Enum/Tag';
import { NotificationUtils } from '@allianzSND/notification';
import { ROLE } from '@allianzSND/goal';
export declare class ProgressService {
    private dispatch;
    private APIFactory;
    private deviceService;
    private notificationMgr;
    private notficationUtils;
    private errorHandler;
    private _drillDownAgentIdObjList;
    private _drillDowmAgentIdSubject;
    readonly AgentIdObjListLength: number;
    readonly lastAgentIdObj: ProgressDirectIndirectData;
    private _currentTag;
    GetCurrentNavigationTag(): Tag;
    SetCurrentNavigationTag(tag: Tag): void;
    constructor(dispatch: APIDispatch, APIFactory: APIFactory, deviceService: DeviceService, notificationMgr: NotificationMgr, notficationUtils: NotificationUtils, errorHandler: ErrorHandler);
    InitDrillDownAgentIdObj(): void;
    AddDrillDownAgentIdObj(agentIdObj: ProgressDirectIndirectData): void;
    GetDrillDwonAgentIdObj(): Observable<ProgressDirectIndirectData>;
    PopDrillDownAgentIdObj(): void;
    GetDrillDownAgentIdObjRouterNameObj(): Observable<Array<ProgressDirectIndirectData>>;
    private _currentRole;
    private _currentRoleSubject;
    SetCurrentRole(val: ROLE): void;
    GetCurrentRole(): Observable<ROLE>;
    GetIsTeam(): boolean;
    GetIsAgent(): boolean;
    GetIsSupervisor(): boolean;
    GetIsManaget(): boolean;
    GetIsAgentLeader(): boolean;
    GetIsShowSwitchTab(): boolean;
    GetIsShowTeamTab(): boolean;
    GetProgressDataByRestful(agentID: string): Observable<any>;
    GetProgressDataBySQLite(years: Array<number>): Observable<ProgressObj>;
    private _GetYesterdayPoints;
    private _GetProgressTeamDirectIndirectData;
    private _GetProgressTeamMainData;
    private _GetProgressPersonalData;
    GetYearConfigDataBySQLite(): Observable<ConfigurationObj>;
    GetYearConfigDataByRestful(agentID: string): Observable<any>;
    ShowDesh(num: number, sign?: string): string;
    GetPoints(num: number, muti: number): string;
    GetTotalPoints(data: ProgressPersonalData): number;
    GetPercentageCircleValue(data: ProgressPersonalData, limit: number, isWeek: boolean): string;
    GetPercentage(numerator: number, denominator: number): number;
    GetPercentageLength(numerator: number, denominator: number, maxLength: number, maxBase: number): number;
}
