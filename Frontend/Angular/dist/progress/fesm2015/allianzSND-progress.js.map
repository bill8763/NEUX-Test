{"version":3,"file":"allianzSND-progress.js.map","sources":["ng://@allianzSND/progress/lib/service/model/ProgressYearConfig.ts","ng://@allianzSND/progress/lib/service/model/ConfigurationObj.ts","ng://@allianzSND/progress/lib/service/model/ProgressObj.ts","ng://@allianzSND/progress/lib/service/model/PersonalObj.ts","ng://@allianzSND/progress/lib/service/model/TeamObj.ts","ng://@allianzSND/progress/lib/service/model/ProgressYearObj.ts","ng://@allianzSND/progress/lib/service/model/Enum/PersonalDataTimeBase.ts","ng://@allianzSND/progress/lib/service/model/Enum/PersonalDataType.ts","ng://@allianzSND/progress/lib/service/model/ProgessPersonalData.ts","ng://@allianzSND/progress/lib/service/model/Enum/ProgressDataTeamValueType.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamData.ts","ng://@allianzSND/progress/lib/service/model/ProgressDirectIndirectData.ts","ng://@allianzSND/progress/lib/service/model/Enum/DirectUnitType.ts","ng://@allianzSND/progress/lib/service/model/Enum/Tag.ts","ng://@allianzSND/progress/lib/service/progress-service.service.ts","ng://@allianzSND/progress/lib/service/model/Enum/PerformanceType.ts","ng://@allianzSND/progress/lib/service/model/Enum/ActualValueDataType.ts","ng://@allianzSND/progress/lib/service/model/ProgressActualValue.ts","ng://@allianzSND/progress/lib/service/model/PersonalData.ts","ng://@allianzSND/progress/lib/service/model/PersonalDataState.ts","ng://@allianzSND/progress/lib/service/model/Enum/ProgressBarControlModeType.ts","ng://@allianzSND/progress/lib/service/model/ProgressBarControlData.ts","ng://@allianzSND/progress/lib/service/model/ProgressDirectData.ts","ng://@allianzSND/progress/lib/service/model/ProgressIndirectData.ts","ng://@allianzSND/progress/lib/service/model/TeamDataState.ts","ng://@allianzSND/progress/lib/service/model/ProgressListContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressActivityListContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressMonthlyContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamDirectContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamIndirectContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamMainContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressHeadContentClass.ts","ng://@allianzSND/progress/lib/service/model/InfoContentClass.ts","ng://@allianzSND/progress/lib/service/model/Enum/ActivitiesType.ts","ng://@allianzSND/progress/lib/service/model/Enum/Quarters.ts","ng://@allianzSND/progress/lib/progress.module.ts","ng://@allianzSND/progress/lib/api/GetPersonalProgressAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressActualValueAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressDataActualValueAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressDataAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressDataGoalSettingPlanAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressGoalPlanAPI.ts","ng://@allianzSND/progress/lib/api/GetTeamProgressDetailAPI.ts","ng://@allianzSND/progress/lib/api/GetTeamProgressMainAPI.ts","ng://@allianzSND/progress/lib/api/PersonalProgressAPI.ts","ng://@allianzSND/progress/lib/api/GetYearConfigurationAPI.ts","ng://@allianzSND/progress/lib/api/AddPointAPI.ts"],"sourcesContent":["import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressYearConfig')\nexport class ProgressYearConfig {\n\n    @Required\n    public DataYear: number = 0;\n\n    @Required\n    public IsCurrent: boolean = true;\n\n    @Required\n    public WorkingMonth: number = 0;\n\n    @Required\n    public QuarterStartMonth: number = 0;\n\n    @Required\n    public QuarterEndMonth: number = 0;\n\n    @Required\n    public FindConvertPointBase: number = 0;\n\n    @Required\n    public ScheduleConvertPointBase: number = 0;\n\n    @Required\n    public MeetConvertPointBase: number = 0;\n\n    @Required\n    public SubmitConvertPointBase: number = 0;\n\n    @Required\n    public InforceConvertPointBase: number = 0;\n\n    @Required\n    public ProgressBarControlMode: string = \"TWMode\";\n\n    @Required\n    public ProgressDayPointsLimit: number = 20;\n\n    @Required\n    public MonthQuantityOfYear: number = 12;\n\n    @Required\n    public PerformanceSettlementMonth: number = 0;\n\n}","import { ProgressYearConfig } from \"./ProgressYearConfig\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ConfigurationObj')\nexport class ConfigurationObj {\n\n    @Required\n    public lastUpdateTime: string = \"\";\n\n    @Required\n    public Configurations: Array<ProgressYearConfig> = new Array<ProgressYearConfig>();\n}","import { ProgressYearObj } from \"./ProgressYearObj\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressObj')\nexport class ProgressObj {\n\n    @Required\n    public lastUpdateTime: string = \"\";\n\n    @Required\n    public Progress: Array<ProgressYearObj> = new Array<ProgressYearObj>();\n}\n","import { ProgressPersonalData } from \"./ProgessPersonalData\";\n\nexport class PersonalObj {\n    public Values: Array<ProgressPersonalData> = new Array<ProgressPersonalData>();\n} ","import { ProgressTeamData } from \"./ProgressTeamData\";\nimport { ProgressDirectIndirectData } from \"./ProgressDirectIndirectData\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('TeamObj')\nexport class TeamObj {\n\n    @Required\n    public Values: Array<ProgressTeamData> = new Array<ProgressTeamData>();\n    //public Direct: Array<ProgressDirectData> = new Array<ProgressDirectData>();\n    //public Indirect: Array<ProgressIndirectData> = new Array<ProgressIndirectData>();\n\n    @Required\n    public DirectUnit: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n\n    @Required\n    public InDirectUnit: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n}","import { PersonalObj } from \"./PersonalObj\";\nimport { TeamObj } from \"./TeamObj\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressYearObj')\nexport class ProgressYearObj {\n\n    @Required\n    public DataYear: number = 0;\n\n    @Required\n    public YesterdayPoint: number = 0;\n\n    @Required\n    public Personal: PersonalObj = new PersonalObj();\n\n    @Required\n    public Team: TeamObj = new TeamObj();\n}","export enum PersonalDataTimeBase {\n    Day = \"Day\",\n    Week = \"Week\",\n    Month = \"Month\",\n    Quarter = \"Quarter\",\n    Year = \"Year\",\n    Unknow = \"Unknow\"\n}","export enum PersonalDataType {\n    Actual = \"Actual\",\n    Goal = \"Goal\",\n    Unknow = \"Unknow\",\n}","import { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { PersonalDataType } from \"./Enum/PersonalDataType\";\n\nexport class ProgressPersonalData {\n    public DataType: PersonalDataType = PersonalDataType.Unknow;\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n    public Find: number = 0;\n    public Schedule: number = 0;\n    public Meet: number = 0;\n    public Submit: number = 0;\n    public Inforce: number = 0;\n    public FYFC: number = 0;\n\n    public FindConvertPointBase: number = 0;\n    public ScheduleConvertPointBase: number = 0;\n    public MeetConvertPointBase: number = 0;\n    public SubmitConvertPointBase: number = 0;\n    public InforceConvertPointBase: number = 0;\n}","export enum ProgressDataTeamValueType {\n    FYFC = \"FYFC\",\n    ANP = \"ANP\",\n    Manpower = \"Manpower\",\n    Recruitment = \"Recruitment\",\n    Unknow = \"unKnow\"\n}","import { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressTeamData')\nexport class ProgressTeamData {\n\n    @Required\n    public DataType: ProgressDataTeamValueType = ProgressDataTeamValueType.Unknow;\n\n    @Required\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n\n    @Required\n    public Goal: number = 0;\n\n    @Required\n    public Forecast: number = 0;\n\n    @Required\n    public Actual: number = 0;\n\n    @Required\n    public Shortfall: number = 0;\n}","import { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { ActivitiesType } from \"./Enum/ActivitiesType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressDirectIndirectData')\nexport class ProgressDirectIndirectData {\n\n    @Required\n    public AgentID: string = \"\";\n\n    @Required\n    public AgentName: string = \"\";\n\n    @Required\n    public TeamName: string = \"\";\n\n    @Required\n    public JobGrade: string = \"\";\n\n    @Required\n    public Drilldown: boolean = false;\n\n    @Required\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n\n    @Required\n    public DataType: ProgressDataTeamValueType = ProgressDataTeamValueType.Unknow;\n\n    @Required\n    public AppUseMode: string = \"\";\n    //public Activities: ActivitiesType = ActivitiesType.Unknow;\n\n    @Required\n    public Activities: string = \"\";\n\n    @Required\n    public Goal: number = 0;\n\n    @Required\n    public Forecast: number = 0;\n\n    @Required\n    public Actual: number = 0;\n\n    @Required\n    public Shortfall: number = 0;\n}","export enum DirectUnitType {\n    DirectUnit = \"Direct\",\n    IndirectUnit = \"Indirect\",\n    Unknow = \"Unknow\"\n}","export enum Tag {\n    PersonalTag = 0,\n    TeamTag = 1,\n    UnknowTag = 2,\n}","import { Injectable, ErrorHandler } from '@angular/core';\nimport { APIDispatch, APIFactory, getProgressAPI, APPError, getYearConfigAPI, DeviceService, NotificationObject, NotificationMgr, Valid } from '@allianzSND/core';\nimport { Observable, from, of, Subject, BehaviorSubject } from 'rxjs';\n\nimport { ProgressYearConfig } from './model/ProgressYearConfig';\nimport { GetYearConfigurationAPI, GetTeamProgressDetailAPI, GetPersonalProgressAPI, GetTeamProgressMainAPI } from '../api';\n\nimport { ConfigurationObj } from './model/ConfigurationObj';\nimport { ProgressObj } from './model/ProgressObj';\nimport { ProgressYearObj } from './model/ProgressYearObj';\nimport { PersonalObj } from './model/PersonalObj';\nimport { TeamObj } from './model/TeamObj';\nimport { ProgressPersonalData } from './model/ProgessPersonalData';\nimport { ProgressTeamData } from './model/ProgressTeamData';\nimport { ProgressDirectIndirectData } from './model/ProgressDirectIndirectData';\nimport { DirectUnitType } from './model/Enum/DirectUnitType';\nimport { Tag } from './model/Enum/Tag';\nimport { NotificationUtils } from '@allianzSND/notification';\nimport { NumberUtils, GetOtherParameterAPI } from '@allianzSND/core';\nimport { ROLE } from '@allianzSND/goal';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProgressService {\n\n  private _drillDownAgentIdObjList: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n  private _drillDowmAgentIdSubject: Subject<ProgressDirectIndirectData> = new BehaviorSubject(this.lastAgentIdObj);\n\n\n  get AgentIdObjListLength() {\n    return this._drillDownAgentIdObjList.length;\n  }\n\n  get lastAgentIdObj() {\n    return (this._drillDownAgentIdObjList.length > 0) ? this._drillDownAgentIdObjList[this.AgentIdObjListLength - 1] : null;\n  }\n\n\n  //dashboard to progress page\n  private _currentTag: Tag = Tag.UnknowTag;\n\n  public GetCurrentNavigationTag() {\n    return this._currentTag;\n  }\n\n  public SetCurrentNavigationTag(tag: Tag) {\n    this._currentTag = tag;\n  }\n\n  constructor(\n    private dispatch: APIDispatch,\n    private APIFactory: APIFactory,\n    private deviceService: DeviceService,\n    private notificationMgr: NotificationMgr,\n    private notficationUtils: NotificationUtils,\n    private errorHandler: ErrorHandler) { }\n\n\n  //#region agent function\n\n  public InitDrillDownAgentIdObj() {\n    this._drillDownAgentIdObjList = new Array<ProgressDirectIndirectData>();\n    //this._drillDowmAgentIdSubject = new BehaviorSubject(this.lastAgentIdObj);\n  }\n\n  public AddDrillDownAgentIdObj(agentIdObj: ProgressDirectIndirectData) {\n    this._drillDownAgentIdObjList.push(agentIdObj);\n    this._drillDowmAgentIdSubject.next(this.lastAgentIdObj);\n  }\n\n  @Valid('ProgressDirectIndirectData')\n  public GetDrillDwonAgentIdObj(): Observable<ProgressDirectIndirectData> {\n    return this._drillDowmAgentIdSubject.asObservable();\n  }\n\n  public PopDrillDownAgentIdObj() {\n    this._drillDownAgentIdObjList.pop();\n    this._drillDowmAgentIdSubject.next(this.lastAgentIdObj);\n  }\n\n  @Valid('ProgressDirectIndirectData')\n  public GetDrillDownAgentIdObjRouterNameObj(): Observable<Array<ProgressDirectIndirectData>> {\n    let maxLength = this.AgentIdObjListLength;\n\n    if (maxLength >= 2) {\n      let arr: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n      let data1 = this._drillDownAgentIdObjList[maxLength - 2];\n      let data2 = this._drillDownAgentIdObjList[maxLength - 1];\n      arr.push(data1);\n      arr.push(data2);\n      return of(arr);\n    }\n    else {\n      let arr: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n      let data1 = this._drillDownAgentIdObjList[maxLength - 1];\n      arr.push(data1);\n      return of(arr);\n    }\n  }\n\n  //#endregion agent function\n\n  //#region Role\n\n  private _currentRole:ROLE;\n  private _currentRoleSubject:Subject<ROLE> = new BehaviorSubject(this._currentRole);\n\n  public SetCurrentRole(val:ROLE) {\n    this._currentRole = val;\n    this._currentRoleSubject.next(this._currentRole);\n  }\n\n  public GetCurrentRole():Observable<ROLE> {\n    return this._currentRoleSubject.asObservable();\n  }\n\n  public GetIsTeam():boolean {\n    let r = this._currentRole;\n    switch(r) {\n      case ROLE.AGENT: \n        return false;\n      case ROLE.AGENTLEADER:\n      case ROLE.ZONEHEAD:\n      case ROLE.CAO:\n        return true;\n    }\n  }\n\n  public GetIsAgent():boolean {\n    return (this._currentRole == ROLE.AGENT) ? true : false;\n  }\n\n  public GetIsSupervisor():boolean {\n    return (this._currentRole == ROLE.CAO) ? true : false;\n  }\n\n  public GetIsManaget():boolean {\n    return (this._currentRole == ROLE.ZONEHEAD) ? true : false;\n  }\n\n  public GetIsAgentLeader():boolean {\n    return (this._currentRole == ROLE.AGENTLEADER) ? true : false;\n  }\n\n  public GetIsShowSwitchTab():boolean {\n    return (this._currentRole == ROLE.AGENTLEADER) ? true : false; \n  }\n\n  public GetIsShowTeamTab(): boolean {\n    return (this._currentRole == ROLE.AGENT) ? false : true;\n  }\n\n  //#endregion\n\n\n  //#region progress main function\n\n  //get progress data by restful return yaml\n  public GetProgressDataByRestful(agentID: string): Observable<any> {\n\n    try {\n      let getProgressAPI: getProgressAPI = <getProgressAPI>this.APIFactory.getAPI(\"getProgress\");\n      getProgressAPI.setAgentID(agentID);\n      return from(this.dispatch.dispatch(getProgressAPI).toPromise());\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00209', 'get Progress Data By Restful fail!' + error.message));\n      console.debug(\"getProgressDataByRestful agent id: \", agentID);\n    }\n\n    return of(null);\n  }\n\n  //get progress data by SQLite return yaml\n  @Valid('ProgressObj')\n  public GetProgressDataBySQLite(years: Array<number>): Observable<ProgressObj> {\n\n    try {\n      //put it together to yaml\n      let getPersonalProgressAPI: GetPersonalProgressAPI = <GetPersonalProgressAPI>this.APIFactory.getAPI('getPersonalProgress');\n      let getTeamProgressDetailAPI: GetTeamProgressDetailAPI = <GetTeamProgressDetailAPI>this.APIFactory.getAPI('getTeamProgressDetail');\n      let getTeamProgressMainAPI: GetTeamProgressMainAPI = <GetTeamProgressMainAPI>this.APIFactory.getAPI('getTeamProgressMain');\n      let getOtherParameterAPI: GetOtherParameterAPI = <GetOtherParameterAPI>this.APIFactory.getAPI('getOtherParameter');\n\n      return from(\n        Promise.all(\n          [getPersonalProgressAPI, getTeamProgressDetailAPI, getTeamProgressMainAPI, getOtherParameterAPI]\n            .map(api => this.dispatch.dispatch(api).toPromise())\n        ).then(([ProgressPersonalRawData, ProgressTeamDetailRawData, ProgressTeamMainRawData, OtherParameterRawData]) => {\n          console.debug(\"getProgressDataBySQLite ProgressPersonalRawData: \", ProgressPersonalRawData);//o\n          console.debug(\"getProgressDataBySQLite ProgressTeamDetailRawData: \", ProgressTeamDetailRawData);\n          console.debug(\"getProgressDataBySQLite ProgressTeamMainRawData:\", ProgressTeamMainRawData);\n          console.debug(\"getProgressDataBySQLite OtherParameterRawData:\", OtherParameterRawData);\n\n          //new way\n          let progressObjBOSS: ProgressObj = new ProgressObj();\n          let progressYearObjList: Array<ProgressYearObj> = new Array<ProgressYearObj>();\n          let personalObjList: Array<PersonalObj> = new Array<PersonalObj>();\n          let teamObjList: Array<TeamObj> = new Array<TeamObj>();\n\n          let progressPersonalDataList: Array<Array<ProgressPersonalData>> = new Array<Array<ProgressPersonalData>>();\n          let progressTeamMainDataList: Array<Array<ProgressTeamData>> = new Array<Array<ProgressTeamData>>();\n          let progressTeamDirectDataList: Array<Array<ProgressDirectIndirectData>> = new Array<Array<ProgressDirectIndirectData>>();\n          let progressTeamIndirectDataList: Array<Array<ProgressDirectIndirectData>> = new Array<Array<ProgressDirectIndirectData>>();\n\n          let yesterdayPointsList: Array<number>;\n\n          //get yesterdayPoint     \n          yesterdayPointsList = this._GetYesterdayPoints(years, OtherParameterRawData);\n          console.debug(\"getProgressDataBySQLite yesterdayPointsList: \", yesterdayPointsList);\n\n          // get personal data\n          progressPersonalDataList = this._GetProgressPersonalData(years, ProgressPersonalRawData);\n          console.debug(\"getProgressDataBySQLite progressPersonalDataList: \", progressPersonalDataList);\n\n          for (let i = 0; i < years.length; i++) {\n            let obj: PersonalObj = new PersonalObj();\n            obj.Values = progressPersonalDataList[i];\n            personalObjList.push(obj);\n          }\n\n          //get team main data\n          progressTeamMainDataList = this._GetProgressTeamMainData(years, ProgressTeamMainRawData);\n          console.debug(\"getProgressDataBySQLite progressTeamMainDataList: \", progressTeamMainDataList);\n\n          //direct indirect\n          progressTeamDirectDataList = this._GetProgressTeamDirectIndirectData(years, ProgressTeamDetailRawData, DirectUnitType.DirectUnit);\n          progressTeamIndirectDataList = this._GetProgressTeamDirectIndirectData(years, ProgressTeamDetailRawData, DirectUnitType.IndirectUnit);\n\n          console.debug(\"getProgressDataBySQLite progressTeamDirectDataList: \", progressTeamDirectDataList);\n          console.debug(\"getProgressDataBySQLite progressTeamIndirectDataList: \", progressTeamIndirectDataList);\n\n          //get team data\n          for (let i = 0; i < years.length; i++) {\n            let obj: TeamObj = new TeamObj();\n            obj.Values = (progressTeamMainDataList[i]) ? progressTeamMainDataList[i] : null;\n            obj.DirectUnit = (progressTeamDirectDataList[i]) ? progressTeamDirectDataList[i] : null;\n            obj.InDirectUnit = (progressTeamIndirectDataList[i]) ? progressTeamIndirectDataList[i] : null;\n\n            teamObjList.push(obj);\n          }\n\n\n          //get progress Year data\n          for (let i = 0; i < years.length; i++) {\n            let obj: ProgressYearObj = new ProgressYearObj();\n            obj.DataYear = years[i];\n            obj.YesterdayPoint = yesterdayPointsList[i];\n            obj.Personal = personalObjList[i];\n            obj.Team = teamObjList[i];\n            progressYearObjList.push(obj);\n          }\n\n\n          //get progressBOSS obj      \n          for (let i = 0; i < years.length; i++) {\n            progressObjBOSS.Progress[i] = progressYearObjList[i];\n          };\n\n\n          console.debug(\"getProgressDataBySQLite personalObjList: \", personalObjList);\n          console.debug(\"getProgressDataBySQLite teamObjList: \", teamObjList);\n          console.debug(\"getProgressDataBySQLite progressYearObjList: \", progressYearObjList);\n          console.debug(\"getProgressDataBySQLite progressObjBOSS: \", progressObjBOSS);\n\n          return progressObjBOSS;\n        })\n      );\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00210', 'get Progress Data By SQLite fail!' + error.message));\n      console.debug(\"OMG! getProgressDataBySQLite fail: \");\n    }\n\n    return of(null);\n  }\n\n  //#endregion progress main function\n\n  //#region private function\n\n  private _GetYesterdayPoints(years: Array<number>, otherParameterRawData: any): Array<number> {\n    let ansArr: Array<number> = new Array<number>();\n\n    console.debug(\"_GetYesterdayPoints years: \", years);\n    console.debug(\"_GetYesterdayPoints otherParameterRawData: \", otherParameterRawData);\n\n    try {\n      for (let i = 0; i < years.length; i++) {\n        let yesterdayPoint = otherParameterRawData[\"Body\"].filter(x => x.MappingID == \"YesterdayPoint\"\n          && x.DataYear == years[i]);//0\n\n        console.debug(\"_GetYesterdayPoints yesterdayPoint: \", yesterdayPoint);\n        console.debug(\"_GetYesterdayPoints yesterdayPoint[0]: \", yesterdayPoint[0]);\n        console.debug(\"_GetYesterdayPoints yesterdayPoint[0]set: \", yesterdayPoint[0].SetValue);\n        ansArr.push(yesterdayPoint[0].SetValue);\n      }\n      return ansArr;\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00211', 'get yesterday points fail!' + error.message));\n    }\n    return null;\n  }\n\n\n  private _GetProgressTeamDirectIndirectData(years: Array<number>, progressTeamDetailRawData: any, unitType: DirectUnitType): Array<Array<ProgressDirectIndirectData>> {\n\n    let ansArr: Array<Array<ProgressDirectIndirectData>> = new Array<Array<ProgressDirectIndirectData>>();\n\n    console.debug(\"_getProgressTeamDirectIndirectData years: \", years);\n    console.debug(\"_getProgressTeamDirectIndirectData progressTeamDetailRawData: \", progressTeamDetailRawData);\n\n    try {\n      if (progressTeamDetailRawData) {\n        let bodyData = progressTeamDetailRawData[\"Body\"];\n\n        let rawDataByYearArr: Array<any> = new Array<any>();\n\n        for (let i = 0; i < years.length; i++) {\n          let yearData = bodyData.filter(x => x.DataYear == years[i] && x.DirectUnitType == unitType);\n          if (yearData)\n            rawDataByYearArr.push(yearData);\n        }\n\n        console.debug(\"_getProgressTeamDirectIndirectData rawDataByYearArr: \", rawDataByYearArr);\n\n        for (let i = 0; i < rawDataByYearArr.length; i++) {\n          let arr: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n          for (let j = 0; j < rawDataByYearArr[i].length; j++) {\n\n            let tmp = rawDataByYearArr[i][j];\n\n            let data: ProgressDirectIndirectData = new ProgressDirectIndirectData();\n            data.AgentID = tmp.AgentID;\n            data.AgentName = tmp.AgentName;\n            data.TeamName = tmp.TeamName;\n            data.JobGrade = tmp.JobGrade;\n            data.DataType = tmp.DataType;\n            data.TimeBase = tmp.TimeBase;\n            data.AppUseMode = tmp.AppUseMode;\n            data.Activities = tmp.Activities;\n            data.Drilldown = tmp.Drilldown == \"Y\";//true\n            data.Actual = tmp.Actual;\n            data.Goal = tmp.Goal;\n            data.Forecast = tmp.Forecast;\n            data.Shortfall = tmp.Shortfall;\n            arr.push(data);\n          }\n          ansArr.push(arr);\n        }\n        return ansArr;\n      }\n      else { throw \"data null\"; }\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00212', 'get Progress Team Direct Indirect Data fail!' + error.message));\n    }\n    return null;\n  }\n\n  private _GetProgressTeamMainData(years: Array<number>, progressTeamMainRawData: any): Array<Array<ProgressTeamData>> {\n    let ansArr: Array<Array<ProgressTeamData>> = new Array<Array<ProgressTeamData>>();\n\n    console.debug(\"_getProgressTeamMainData years: \", years);\n    console.debug(\"_getProgressTeamMainData progressTeamMainRawData: \", progressTeamMainRawData);\n\n    try {\n      if (progressTeamMainRawData) {\n        let bodyData = progressTeamMainRawData[\"Body\"];\n        let rawDataByYearArr: Array<any> = new Array<any>();\n\n        for (let i = 0; i < years.length; i++) {\n          let yearData = bodyData.filter(x => x.DataYear == years[i]);\n          if (yearData)\n            rawDataByYearArr.push(yearData);\n        }\n\n        console.debug(\"_getProgressTeamMainData rawDataByYearArr: \", rawDataByYearArr);\n\n        for (let i = 0; i < rawDataByYearArr.length; i++) {\n          let arr: Array<ProgressTeamData> = new Array<ProgressTeamData>();\n          for (let j = 0; j < rawDataByYearArr[i].length; j++) {\n\n            let tmp = rawDataByYearArr[i][j];\n\n            let data: ProgressTeamData = new ProgressTeamData();\n            data.DataType = tmp.DataType;\n            data.TimeBase = tmp.TimeBase;\n            data.Goal = tmp.Goal;\n            data.Forecast = tmp.Forecast;\n            data.Actual = tmp.Actual;\n            data.Shortfall = tmp.Shortfall;\n            arr.push(data);\n          }\n          ansArr.push(arr);\n        }\n        return ansArr;\n      }\n      else { throw \"data null\"; }\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00213', 'Get Progress Team Main Data fail!' + error.message));\n    }\n\n    return null;\n  }\n\n  private _GetProgressPersonalData(years: Array<number>, progressPersonalRawData: any): Array<Array<ProgressPersonalData>> {\n    let ansArr: Array<Array<ProgressPersonalData>> = new Array<Array<ProgressPersonalData>>();\n\n    console.debug(\"_getProgressPersonalData years: \", years);\n    console.debug(\"_getProgressPersonalData progressPersonalRawData: \", progressPersonalRawData);\n\n    try {\n      if (progressPersonalRawData) {\n\n        let bodyData = progressPersonalRawData[\"Body\"];\n        let rawDataByYearArr: Array<any> = new Array<any>();\n\n        for (let i = 0; i < years.length; i++) {\n          let yearData = bodyData.filter(x => x.DataYear == years[i]);\n          if (yearData)\n            rawDataByYearArr.push(yearData);\n        }\n\n        console.debug(\"_getProgressPersonalData rawDataByYearArr: \", rawDataByYearArr);\n\n        for (let i = 0; i < rawDataByYearArr.length; i++) {\n          let arr: Array<ProgressPersonalData> = new Array<ProgressPersonalData>();\n          for (let j = 0; j < rawDataByYearArr[i].length; j++) {\n\n            let tmp = rawDataByYearArr[i][j];\n            let data: ProgressPersonalData = new ProgressPersonalData();\n            data.DataType = tmp.DataType;\n            data.TimeBase = tmp.TimeBase;\n            data.Find = tmp.Find;\n            data.Schedule = tmp.Schedule;\n            data.Meet = tmp.Meet;\n            data.Submit = tmp.Submit;\n            data.Inforce = tmp.Inforce;\n            data.FYFC = tmp.FYFC;\n            arr.push(data);\n          }\n          ansArr.push(arr);\n        }\n        return ansArr;\n      }\n      else { throw \"data null\"; }\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00214', 'Get Progress Personal Data fail!' + error.message));\n    }\n    return null;\n  }\n\n  //#endregion private function\n\n  //#region year config function\n\n  //get year config \n  @Valid('ConfigurationObj')\n  public GetYearConfigDataBySQLite(): Observable<ConfigurationObj> {\n    try {\n      let getYearConfigurationAPI: GetYearConfigurationAPI = <GetYearConfigurationAPI>this.APIFactory.getAPI('getYearConfiguration');\n      return from(this.dispatch.dispatch(getYearConfigurationAPI).toPromise().then(resp => {\n\n        console.debug(\"getYearConfig resp: \", resp);\n\n        // convert to yaml\n        let dataBady = resp[\"Body\"];\n        console.debug(\"getYearConfig dataBady: \", dataBady);\n\n        let configObj: ConfigurationObj = new ConfigurationObj();\n        let arr: Array<ProgressYearConfig> = new Array<ProgressYearConfig>();\n\n        for (let i = 0; i < dataBady.length; i++) {\n          let data: ProgressYearConfig = new ProgressYearConfig();\n          let dataConfig = dataBady[i];\n\n          data.DataYear = dataConfig.DataYear;\n          data.IsCurrent = dataConfig.IsCurrent === \"Y\";\n          data.WorkingMonth = dataConfig.WorkingMonth;\n          data.QuarterStartMonth = dataConfig.QuarterStartMonth;\n          data.QuarterEndMonth = dataConfig.QuarterEndMonth;\n          data.ProgressDayPointsLimit = dataConfig.ProgressDayPointsLimit;\n          data.ProgressBarControlMode = dataConfig.ProgressBarControlMode;\n          data.MonthQuantityOfYear = dataConfig.MonthQuantityOfYear;\n\n          data.FindConvertPointBase = dataConfig.FindConvertPointBase;\n          data.ScheduleConvertPointBase = dataConfig.ScheduleConvertPointBase;\n          data.MeetConvertPointBase = dataConfig.MeetConvertPointBase;\n          data.SubmitConvertPointBase = dataConfig.SubmitConvertPointBase;\n          data.InforceConvertPointBase = dataConfig.InforceConvertPointBase;\n\n          data.PerformanceSettlementMonth = dataConfig.PerformanceSettlementMonth;\n\n          arr.push(data);\n        }\n\n        configObj.Configurations = arr;\n\n\n        console.debug(\"configObj: \", configObj);\n        console.debug(\"configObj: \", JSON.stringify(configObj));\n        console.debug(\"got SQlite year config resp: \", resp);\n        console.debug(\"got SQlite year config resp json: \", JSON.stringify(resp));\n\n        return configObj;\n      }));\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00215', 'OMG! get Year Config SQLite fail!' + error.message));\n    }\n\n    return of(null);\n  }\n\n\n  public GetYearConfigDataByRestful(agentID: string): Observable<any> {\n    try {\n      let yearConfigAPI: getYearConfigAPI = <getYearConfigAPI>this.APIFactory.getAPI('getYearConfig');\n      yearConfigAPI.setAgentID(agentID);\n      return from(this.dispatch.dispatch(yearConfigAPI).toPromise());\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00209', 'get Progress Data By Restful fail!' + error.message));\n      console.debug(\"getProgressDataByRestful agent id: \", agentID);\n    }\n    return of(null);\n  }\n\n\n  // public GetYearConfigDataByRestful(agentID: string): Observable<any> {\n  //   try {\n  //     let yearConfigAPI: getYearConfigAPI = <getYearConfigAPI>this.APIFactory.getAPI('getYearConfig');\n  //     yearConfigAPI.setAgentID(agentID);\n  //     return from(this.dispatch.dispatch(yearConfigAPI).toPromise());\n  //   }\n  //   catch (error) {\n  //     this.errorHandler.handleError(new APPError('F00209', 'get Progress Data By Restful fail!' + error.message));\n  //     console.debug(\"getProgressDataByRestful agent id: \", agentID);\n  //   }\n  //   return of(null);\n  // }\n\n  //#endregion year config function\n\n  //#region funtion calculate\n\n  public ShowDesh(num: number, sign:string = \"--\"): string {\n    if(!NumberUtils.isNumber(num)) {\n      return sign;\n    }\n    return (num <= -1) ? sign : num.toString();\n  }\n\n  public GetPoints(num: number, muti: number): string {\n    let ans = (num * muti);\n    return (ans <= -1) ? \"--\" : ans.toString();\n  }\n\n\n  //if timebase == day ==> ProgressPersonalData.find one day \n  //if timebase == week ==> ProgressPersonalData.find week(week sum)that meanin if web weeksum have 3 day data\n  public GetTotalPoints(data: ProgressPersonalData): number {\n\n    //check data == -1?\n    let checkData: ProgressPersonalData = new ProgressPersonalData();\n    checkData.Find = (data.Find == -1) ? 0 : data.Find;\n    checkData.Schedule = (data.Schedule == -1) ? 0 : data.Schedule;\n    checkData.Meet = (data.Meet == -1) ? 0 : data.Meet;\n    checkData.Submit = (data.Submit == -1) ? 0 : data.Submit;\n    checkData.Inforce = (data.Inforce == -1) ? 0 : data.Inforce;\n\n    let sum = (checkData.Find * data.FindConvertPointBase) +\n      (checkData.Schedule * data.ScheduleConvertPointBase) +\n      (checkData.Meet * data.MeetConvertPointBase) +\n      (checkData.Submit * data.SubmitConvertPointBase) +\n      (checkData.Inforce * data.InforceConvertPointBase);\n\n    return sum;\n  }\n\n\n  public GetPercentageCircleValue(data: ProgressPersonalData, limit: number, isWeek: boolean): string {\n\n    console.debug(\"_getPercentageCircleValue: \", data);\n\n    //check data == -1?\n    let checkData: ProgressPersonalData = new ProgressPersonalData();\n    checkData.DataType = data.DataType;\n    checkData.TimeBase = data.TimeBase;\n    checkData.Find = (data.Find == -1) ? 0 : data.Find;\n    checkData.Schedule = (data.Schedule == -1) ? 0 : data.Schedule;\n    checkData.Meet = (data.Meet == -1) ? 0 : data.Meet;\n    checkData.Submit = (data.Submit == -1) ? 0 : data.Submit;\n    checkData.Inforce = (data.Inforce == -1) ? 0 : data.Inforce;\n\n    let sum = (checkData.Find * data.FindConvertPointBase) +\n      (checkData.Schedule * data.ScheduleConvertPointBase) +\n      (checkData.Meet * data.MeetConvertPointBase) +\n      (checkData.Submit * data.SubmitConvertPointBase) +\n      (checkData.Inforce * data.InforceConvertPointBase);\n\n    let max = (isWeek == true) ? limit * 7 : limit;\n    let ans = (sum / max);\n\n    console.debug(\"_getPercentageCircleValue ans max sum: \", ans, max, sum);\n\n    if (ans == 0 || !NumberUtils.isNumber(ans)) return \"0\";\n    return (ans >= 1) ? \"1\" : ans.toFixed(2);\n  }\n\n  public GetPercentage(numerator: number, denominator: number): number {\n\n    if(numerator <= 0 || denominator <= 0) return 0;\n\n    let ans = Math.round((numerator / denominator) * 100);\n    return (ans) ? ans : 0;\n  }\n\n  public GetPercentageLength(numerator: number, denominator: number, maxLength: number, maxBase: number): number {\n\n    if(numerator <= 0 || denominator <= 0) return 0;\n\n    let ans = Math.round((numerator / denominator) * 100) / maxBase;\n\n    return (ans >= maxLength) ? maxLength : ans ;\n  }\n\n  //#endregion\n\n}\n","export enum PerformanceType {\n    Personal = \"P\",\n    Team = \"T\",\n    unknow = \"U\"\n}","export enum ActualValueDataType {\n    FYFC = \"FYFC\",\n    ANP = \"ANP\"\n}","import { PerformanceType } from \"./Enum/PerformanceType\";\nimport { ActualValueDataType } from \"./Enum/ActualValueDataType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressActualValue')\nexport class ProgressActualValue {\n\n    @Required\n    private _clientID: string;\n\n    @Required\n    private _dataYear: number;\n\n    @Required\n    private _performanceType: PerformanceType;\n\n    @Required\n    private _dataType: ActualValueDataType;\n\n    @Required\n    private _month: number;\n\n    @Required\n    private _value: number;\n\n    constructor(id:string, year:number, performanceType: PerformanceType, dataType: ActualValueDataType, month: number, value: number) {\n        this._clientID = id;\n        this._dataYear = year;\n        this._performanceType = performanceType;\n        this._dataType = dataType;\n        this._month = month;\n        this._value = value;\n    }\n\n    //client id\n    get ClientID() {\n        return this._clientID;\n    }\n\n    set ClientID(value:string) {\n        this._clientID = value;\n    }\n\n    //data year\n    get DataYear() {\n        return this._dataYear;\n    }\n\n    set DataYear(value:number) {\n        this._dataYear = value;\n    }\n\n    //performance type\n    get PerformanceType() {\n        return this._performanceType;\n    }\n\n    set PerformanceType(value:PerformanceType) {\n        this._performanceType = value;\n    }\n\n    //data type\n    get DataType() {\n        return this._dataType;\n    }\n\n    set DataType(value:ActualValueDataType) {\n        this._dataType = value;\n    }\n\n    //month\n    get Month() {\n        return this._month;\n    }\n\n    set Month(value:number) {\n        this._month = value;\n    }\n\n    //value\n    get Value() {\n        return this._value;\n    }\n\n    set Value(value:number) {\n        this._value = value;\n    }\n\n}\n\n\n","import { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { PersonalDataType } from \"./Enum/PersonalDataType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('PersonalData')\nexport class PersonalData {\n\n    @Required\n    private _dataYear: number;\n\n    @Required\n    private _timeBase: PersonalDataTimeBase;\n\n    @Required\n    private _dataType: PersonalDataType;\n\n    @Required\n    private _find: number;\n\n    @Required\n    private _schedule: number;\n\n    @Required\n    private _meet: number;\n\n    @Required\n    private _submit: number;\n\n    @Required\n    private _inforce: number;\n\n    constructor(dataYear:number, \n                timeBase:PersonalDataTimeBase, \n                dataType:PersonalDataType, \n                find:number, \n                schedule: number, \n                meet: number, \n                submit: number, \n                inforce: number)\n                {\n                    this._dataYear = dataYear;\n                    this._timeBase = timeBase;\n                    this._dataType = dataType;\n                    this._find = find;\n                    this._schedule = schedule;\n                    this._meet = meet;\n                    this._submit = submit;\n                    this._inforce = inforce;\n                }\n    \n    //#region Getter setter\n    //year\n    get DataYear() {\n        return this._dataYear;\n    }\n\n    set DataTear(year: number) {\n        this._dataYear =  year;\n    }\n\n    // time base\n    get TimeBase() {\n        return this._timeBase;\n    }\n\n    set TimeBase(time: PersonalDataTimeBase) {\n        this._timeBase = time;\n    }\n\n    //type\n    get DataType() {\n        return this._dataType;\n    }\n\n    set DataTypet(type: PersonalDataType) {\n        this._dataType = type;\n    }\n\n    //find\n    get Find() {\n        return this._find;\n    }\n\n    set Find(num: number) {\n        this._find = num;\n    }\n\n    //schedule\n    get Schedule() {\n        return this._schedule;\n    }\n\n    set Schedule(num: number) {\n        this._schedule = num;\n    }\n\n    //meet\n    get Meet() {\n        return this._meet;\n    }\n\n    set Meet(num: number) {\n        this._meet = num;\n    }\n\n    //submit\n    get Submit() {\n        return this._submit;\n    }\n\n    set Submit(num: number) {\n        this._submit = num ;\n    }\n\n    //inforce\n    get Inforce() {\n        return this._inforce;\n    }\n    \n    set Inforce(num: number) {\n        this._inforce = num;\n    }\n\n    //#endregion\n\n\n    getTotalCount() : number {\n       let sum =  this.Find + this.Schedule + this.Meet + this.Submit + this.Inforce;\n       return sum;\n    }\n\n    getTotalPoints() : number {\n        let sum = this.getFindPoints() + this.getSchedulePoints() + this.getMeetPoints() + this.getSubmitPoints() + this.getInforcePoints();\n        return sum;\n    }\n\n    getDifferentPercentage(numerator: number, denominator: number) : number {\n        return Math.round((numerator / denominator) * 100 );\n    }\n\n\n    /*\n    // 1 1 2 10 2   f /s /m /su /i\n    getFindPoints(dot:number) : number {\n        return this.Find * dot ;\n    }\n\n    getSchedulePoints(dot:number) : number {\n        return this.Schedule  * dot;\n    }\n\n    getMeetPoints(dot:number) : number {\n        return this.Meet * dot;\n    }\n\n    getSubmitPoints(dot:number) : number {\n        return this.Submit * dot;\n    }\n\n    getInforcePoints(dot:number) : number {\n        return this.Inforce  * dot;\n    }\n\n    /*\n    getDifferentPercentage(numerator: number, denominator: number, fixedNum: number) : string {\n        return ( ( numerator / denominator ) * 100 ).toFixed(fixedNum);\n    }\n    */\n\n    \n\n    getFindPoints() : number {\n        return this.Find * 1 ;\n    }\n\n    getSchedulePoints() : number {\n        return this.Schedule  * 1;\n    }\n\n    getMeetPoints() : number {\n        return this.Meet * 2;\n    }\n\n    getSubmitPoints() : number {\n        return this.Submit * 10;\n    }\n\n    getInforcePoints() : number {\n        return this.Inforce  * 2;\n    }\n    \n}\n\n\n\n\n","import { PersonalDataType } from \"./Enum/PersonalDataType\";\nimport { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('PersonalDataState')\nexport class PersonalDataState {  \n\n    @Required\n    private _dataYear: number;\n\n    @Required\n    private _timeBase: PersonalDataTimeBase;\n\n    @Required\n    private _dataType: PersonalDataType;\n\n    constructor(){\n        this._dataYear = -1;\n        this._timeBase = PersonalDataTimeBase.Unknow;\n        this._dataType = PersonalDataType.Unknow;\n    }\n\n    get DataYear() {\n        return this._dataYear;\n    }\n\n    set DataYear(year: number) {\n        this._dataYear =  year;\n    }\n\n    // time base\n    get TimeBase() {\n        return this._timeBase;\n    }\n\n    set TimeBase(time: PersonalDataTimeBase) {\n        this._timeBase = time;\n    }\n\n    //type\n    get DataType() {\n        return this._dataType;\n    }\n\n    set DataType(type: PersonalDataType) {\n        this._dataType = type;\n    }\n}","export enum ProgressBarControlModeType {\n    TWMode = \"TWMode\",\n    Unknow = \"Unknow\"\n}","import { ProgressBarControlModeType } from \"./Enum/ProgressBarControlModeType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressBarControlData')\nexport class ProgressBarControlData {\n\n    @Required\n    private _barLengthMaxValue: number = 1.5;\n\n    public get barLengthMaxValue() {\n        return this._barLengthMaxValue;\n    }\n\n    public set barLengthMaxValue(value: number) {\n        this._barLengthMaxValue = value;\n    }\n\n    public GetConfigMin(type: ProgressBarControlModeType): number {\n        switch (type) {\n            case ProgressBarControlModeType.TWMode:\n                return 70;\n            case ProgressBarControlModeType.Unknow:\n                return 0; \n            default:\n                return 0;\n        }\n    }\n\n    public GetConfigMax(type: ProgressBarControlModeType): number {\n        switch (type) {\n            case ProgressBarControlModeType.TWMode:\n                return 100;\n            case ProgressBarControlModeType.Unknow:\n                return 0;\n            default:\n                return 0;\n        }\n    }\n\n}","import { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { ActivitiesType } from \"./Enum/ActivitiesType\";\nimport { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\n\nexport class ProgressDirectData {\n    public AgentID: string = \"\";\n    public AgentName: string = \"\";\n    public JobGrade: string = \"\";\n    public Drilldown: boolean = false;\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n    public DataType: ProgressDataTeamValueType = ProgressDataTeamValueType.Unknow;\n    //public Activities: ActivitiesType = ActivitiesType.Unknow;\n    public Activities: string = \"\";\n    public Goal: number = 0;\n    public Forecast: number = 0;\n    public Actual: number = 0;\n    public Shortfall: number = 0;\n}\n\n","import { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { ActivitiesType } from \"./Enum/ActivitiesType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressIndirectData')\nexport class ProgressIndirectData {\n\n    @Required\n    public AgentID: string = \"\";\n        \n    @Required\n    public AgentName: string = \"\";\n        \n    @Required\n    public JobGrade: string = \"\";\n        \n    @Required\n    public Drilldown: boolean = false;\n        \n    @Required\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n\n    @Required    \n    public DataType: ProgressDataTeamValueType = ProgressDataTeamValueType.Unknow;\n    //public Activities: ActivitiesType = ActivitiesType.Unknow;\n        \n    @Required \n    public Activities: string = \"\";\n        \n    @Required \n    public Goal: number = 0;\n        \n    @Required \n    public Forecast: number = 0;\n        \n    @Required \n    public Actual: number = 0;\n        \n    @Required \n    public Shortfall: number = 0; \n}","import { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('TeamDataState')\nexport class TeamDataState {  \n\n    @Required\n    private _dataYear: number;\n\n    @Required\n    private _timeBase: PersonalDataTimeBase;\n\n    @Required\n    private _teamValueType: ProgressDataTeamValueType;\n\n    constructor() {\n        this._dataYear = -1;\n        this._timeBase = PersonalDataTimeBase.Unknow;\n        this._teamValueType = ProgressDataTeamValueType.FYFC;\n    }\n\n    get DataYear() {\n        return this._dataYear;\n    }\n\n    set DataYear(year: number) {\n        this._dataYear =  year;\n    }\n\n    // time base\n    get TimeBase() {\n        return this._timeBase;\n    }\n\n    set TimeBase(time: PersonalDataTimeBase) {\n        this._timeBase = time;\n    }\n\n    //team value type\n    get TeamValueType() {\n        return this._teamValueType;\n    }\n\n    set TeamValueType(type:ProgressDataTeamValueType) {\n        this._teamValueType = type;\n    }\n\n}","import { TranslateService} from '@allianzSND/core';\n\nexport class ProgressListContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    // week day\n    public WeekText: string = \"\";\n    public TodayText: string = \"\";\n\n    //Find Schedule Meet Submit Inforce\n    public FindNameText: string = \"\";\n    public FindContentText: string = \"\";\n    public FindUnitText: string = \"\";\n\n    public ScheduleNameText: string = \"\";\n    public ScheduleContentText: string = \"\";\n    public ScheduleUnitText: string = \"\";\n\n    public MeetNameText: string = \"\";\n    public MeetContentText: string = \"\";\n    public MeetUnitText: string = \"\";\n\n    public SubmitNameText: string = \"\";\n    public SubmitContentText: string = \"\";\n    public SubmitUnitText: string = \"\";\n\n    public InforceNameText: string = \"\";\n    public InforceContentText: string = \"\";\n    public InforceUnitText: string = \"\";\n\n    public AlmostMadeItMsg: string = \"\";\n    public CongratulationsMsg: string = \"\";\n    public WellDoneMsg: string = \"\";\n    public GreatJobMsg: string = \"\";\n\n    //units\n    public PointsText: string = \"\";\n\n\n    constructor(private translateService: TranslateService) {\n       \n        this._setTranslateVariable();\n        this.WeekText = this._translateWithVariable('Week');\n        this.TodayText = this._translateWithVariable('Today');\n\n        this.FindNameText = this._translateWithVariable('Find');\n        this.FindContentText = this._translateWithVariable('Find_Subtitle');\n        this.FindUnitText = this._translateWithVariable('People');\n        \n        this.ScheduleNameText = this._translateWithVariable('Schedule');\n        this.ScheduleContentText = this._translateWithVariable('Schedule_Subtitle');\n        this.ScheduleUnitText = this._translateWithVariable('Times');\n\n        this.MeetNameText = this._translateWithVariable('Meet');\n        this.MeetContentText = this._translateWithVariable('Meet_Subtitle');\n        this.MeetUnitText = this._translateWithVariable('Times');\n\n        this.SubmitNameText = this._translateWithVariable('Submit');\n        this.SubmitContentText = this._translateWithVariable('Submit_Subtitle');\n        this.SubmitUnitText = this._translateWithVariable('Times');\n\n        this.InforceNameText = this._translateWithVariable('Inforce');\n        this.InforceContentText = this._translateWithVariable('Inforce_Subtitle');\n        this.InforceUnitText = this._translateWithVariable('Times');\n\n        this.PointsText = this._translateWithVariable('Points');\n\n        this.CongratulationsMsg = this._translateWithVariable('Progress_Congratulations_Message');\n        this.AlmostMadeItMsg = this._translateWithVariable('Progress_Almost_Made_It_Message');\n        this.WellDoneMsg = this._translateWithVariable('Progress_Well_Done_Message');\n        this.GreatJobMsg = this._translateWithVariable('Progress_Great_Job_Message');\n    }\n\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            \"gratsPoints\": 20,\n            \"wellDownPoints\": 10\n\n        }\n    }\n\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\nexport class ProgressContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    //personal team\n    public PersonalText: string = \"\";\n    public TeamText: string = \"\";\n    public MonthText: string = \"\";\n    public QuarterText: string = \"\";\n    public YearText:string = \"\";\n    \n    public BackToProgressBtnText: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n        this.PersonalText = this._translateWithVariable('Personal');\n        this.TeamText = this._translateWithVariable('Team');\n        this.MonthText = this._translateWithVariable('Month');\n        this.QuarterText = this._translateWithVariable('Quarter');\n        this.YearText = this._translateWithVariable('Year');\n\n        this.BackToProgressBtnText = this._translateWithVariable('Back_To_Progress');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressActivityListContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    public ActivitiesText: string = \"\";\n    public AchieveText: string = \"\";\n\n    public FindText: string = \"\";\n    public FindContentText: string = \"\";\n\n    public ScheduleText: string = \"\";\n    public ScheduleContentText: string = \"\";\n\n    public MeetPresentText: string = \"\";\n    public MeetPresentContentText: string = \"\";\n\n    public SubmitText: string = \"\";\n    public SubmitContentText: string = \"\";\n\n    public InforceText: string = \"\";\n    public InforceContentText: string = \"\";\n    \n    public ActualGoalText: string = \"\";\n    public ActualPlanText: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.ActivitiesText = this._translateWithVariable('Activities');\n        this.AchieveText = this._translateWithVariable('Achieve');\n\n        this.ActualGoalText = this._translateWithVariable('Actual_Goal');\n        this.ActualPlanText = this._translateWithVariable('Actual_Plan');\n\n        this.FindText = this._translateWithVariable('Find');\n        this.FindContentText = this._translateWithVariable('Find_Subtitle');\n        \n        this.ScheduleText = this._translateWithVariable('Schedule');\n        this.ScheduleContentText = this._translateWithVariable('Schedule_Subtitle');\n\n        this.MeetPresentText = this._translateWithVariable('Meet_Present');\n        this.MeetPresentContentText = this._translateWithVariable('Meet_Subtitle');\n\n        this.SubmitText = this._translateWithVariable('Submit');\n        this.SubmitContentText = this._translateWithVariable('Submit_Subtitle');\n\n        this.InforceText = this._translateWithVariable('Inforce');\n        this.InforceContentText = this._translateWithVariable('Inforce_Subtitle');\n\n    }\n\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressMonthlyContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    public MonthlyPlanFYFCTitleText: string = \"\";\n    public MonthText: string = \"\";\n    public PlanText: string = \"\";\n    public ActualText: string = \"\";\n\n    public TotalForecastTitle: string = \"\";\n    public TotalYTDActualTitle: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.MonthlyPlanFYFCTitleText = this._translateWithVariable('Monthly_Plan_FYFC_Title');\n        this.MonthText = this._translateWithVariable('Month');\n        this.ActualText = this._translateWithVariable('Actual');\n        this.PlanText = this._translateWithVariable('Plan');\n        this.TotalForecastTitle = this._translateWithVariable('Total_Forecast');\n        this.TotalYTDActualTitle = this._translateWithVariable('Total_YTD_Actual');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressTeamContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    public MonthText: string = \"\";\n    public QuarterText: string = \"\";\n    public YearText: string = \"\";\n    public ManpowerText: string = \"\";\n    public RecruitmentText: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n        this.MonthText = this._translateWithVariable('Month');\n        this.QuarterText = this._translateWithVariable('Quarter');\n        this.YearText = this._translateWithVariable('Year');\n        this.ManpowerText = this._translateWithVariable('Manpower');\n        this.RecruitmentText = this._translateWithVariable('Recruitment');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressTeamDirectContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    public DirectUnitTitle: string = \"\";\n    public ActivitiesText: string = \"\";\n    public GoalText: string = \"\";\n    public ForecastText: string = \"\";\n    public ActualText: string = \"\";\n    public ShortfallText: string = \"\";\n\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.DirectUnitTitle = this._translateWithVariable('Direct_Unit_Title');\n        this.ActivitiesText = this._translateWithVariable('Activities');\n        this.ActualText = this._translateWithVariable('Actual');\n        this.ForecastText = this._translateWithVariable('Forecast');\n        this.GoalText = this._translateWithVariable('Goal');\n        this.ShortfallText = this._translateWithVariable('Shortfall');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressTeamIndirectContentClass {\n    \n    //save and set translate variables\n    private _translateVariable = null;\n\n    public IndirectUnitTitle: string = \"\";\n    public GoalText: string = \"\";\n    public ForecastText: string = \"\";\n    public ActualText: string = \"\";\n    public ShortfallText: string = \"\";\n\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.IndirectUnitTitle = this._translateWithVariable('Indirect_Unit_Title');\n        this.GoalText = this._translateWithVariable('Goal');\n        this.ForecastText = this._translateWithVariable('Forecast');\n        this.ActualText = this._translateWithVariable('Actual');\n        this.ShortfallText = this._translateWithVariable('Shortfall');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService, Language } from '@allianzSND/core';\n\nexport class ProgressTeamMainContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n    private _language: Language = new Language();\n\n    public AgencyTitle:string = \"\";\n    public AllZoneTitle:string = \"\";\n    public GoalText: string = \"\";\n    public ForecastText: string = \"\";\n    public ActualText: string = \"\";\n    public ManpowerText: string = \"\";\n    public ShortfallText: string = \"\";\n    public RecruitmentText: string = \"\";\n\n\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.AgencyTitle = this._translateWithVariable('Agency_Title');\n        this.AllZoneTitle = this._translateWithVariable('All_Zone_Title');\n        this.ManpowerText = this._translateWithVariable(this._language.progressManpower);\n        this.RecruitmentText = this._translateWithVariable(this._language.progressRecruitment);\n\n        this.GoalText = this._translateWithVariable(this._language.progressGoal);\n        this.ActualText = this._translateWithVariable(this._language.progressActual);\n        this.ForecastText = this._translateWithVariable(this._language.progressForecast);\n        this.ShortfallText = this._translateWithVariable(this._language.progressShortfall);\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressHeadContentClass {\n    \n    //save and set translate variables\n    private _translateVariable = null;\n\n    //personal team\n    public MonthText: string = \"\";\n    public QuarterText: string = \"\";\n    public YearText:string = \"\";\n    public ManpowerText: string = \"\";\n    public RecruitmentText: string = \"\";\n\n    public GoalText: string = \"\";\n    public ForecastText: string = \"\";\n    public ActualText: string = \"\";\n    public ShortfallText: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n        this.MonthText = this._translateWithVariable('Month');\n        this.QuarterText = this._translateWithVariable('Quarter');\n        this.YearText = this._translateWithVariable('Year');\n        this.ManpowerText = this._translateWithVariable('Manpower');\n        this.RecruitmentText = this._translateWithVariable('Recruitment');\n\n        this.GoalText = this._translateWithVariable('Goal');\n        this.ForecastText = this._translateWithVariable('Forecast');\n        this.ActualText = this._translateWithVariable('Actual');\n        this.ShortfallText = this._translateWithVariable('Shortfall');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\nexport class InfoContentClass {\n        //save and set translate variables\n        private _translateVariable = null;\n\n        //progress head table info\n        public MonthText: string = \"\";\n        public QuarterText: string = \"\";\n        public YearText:string = \"\";\n        public ForecastText: string = \"\";\n        public RecruitmentText: string = \"\";\n        public InformationDescriptionText: string = \"\";\n\n        public InfoTitle:string = \"\";\n        public InfoMonthDetailText:string = \"\";\n        public InfoQuarterDetailText:string = \"\";\n        public InfoYearDetailText: string = \"\";\n        public InfoForecastRecruitmentDetailText: string = \"\";\n        public InfoAllAmountCountsByMillionText:string = \"\";\n\n        //progress-personal-progressbar-list info\n        public InfoHowToReadThisTitle: string = \"\";\n        public InfoConversionRateText: string = \"\";\n        public InfoConversionRateDetailText: string = \"\";\n\n        //progress-team-direct-unit info\n        public InfoActivityLabelText: string = \"\";\n        public InfoRedMeanText: string = \"\";\n        public InfoGreyMeanText: string = \"\";\n        public InfoIfAnActivity1Text: string = \"\";\n        public InfoIfAnActivity2Text: string = \"\";\n\n        public InfoToFindText: string = \"\";\n        public InfoTryTo1Text: string = \"\";\n        public InfoTryTo2Text: string = \"\";\n        public InfoTryTo3Text: string = \"\";\n\n        public InfoMoreActive1Text: string = \"\";\n        public InfoMoreActive2Text: string = \"\";\n        public InfoMoreActive3Text: string = \"\";\n        public InfoMoreActive4Text: string = \"\";\n\n        public InfoTryHard1Text: string = \"\";\n        public InfoTryHard2Text: string = \"\";\n        public InfoTryHard3Text: string = \"\";\n\n        public InfoHighQuality1Text: string = \"\";\n        public InfoHighQuality2Text: string = \"\";\n\n        \n    \n        constructor(private translateService: TranslateService) {\n            this._setTranslateVariable();\n            \n            //progress head table info\n            this.MonthText = this._translateWithVariable('Month');\n            this.QuarterText = this._translateWithVariable('Quarter');\n            this.YearText = this._translateWithVariable('Year');\n            this.ForecastText = this._translateWithVariable('Forecast');\n            this.RecruitmentText = this._translateWithVariable('Recruitment');\n\n            this.InformationDescriptionText = this._translateWithVariable('Info_Information_Description');\n\n            this.InfoTitle = this._translateWithVariable('Info_Title');\n            this.InfoMonthDetailText = this._translateWithVariable('Info_Month_Detail');\n            this.InfoQuarterDetailText = this._translateWithVariable('Info_Quarter_Detail');\n            this.InfoYearDetailText = this._translateWithVariable('Info_Year_Detail');\n            this.InfoForecastRecruitmentDetailText = this._translateWithVariable('Info_Forecast_Recruitment_Detail');\n\n            //progress-personal-progressbar-list info\n            this.InfoHowToReadThisTitle = this._translateWithVariable('Info_How_To_Read_This');\n            this.InfoConversionRateText = this._translateWithVariable('Info_Conversion_Rate');\n            this.InfoConversionRateDetailText = this._translateWithVariable('Info_Conversion_Rate_Detail');\n\n            //progress-team-direct-unit\n            this.InfoActivityLabelText = this._translateWithVariable('Info_Activity_Label');\n\n            this.InfoRedMeanText = this._translateWithVariable('Info_Red_Mean');\n            this.InfoGreyMeanText = this._translateWithVariable('Info_Grey_Mean');\n            this.InfoIfAnActivity1Text = this._translateWithVariable('Info_If_An_Activity_1');\n            this.InfoIfAnActivity2Text = this._translateWithVariable('Info_If_An_Activity_2');\n    \n            this.InfoToFindText = this._translateWithVariable('Info_To_Find');\n            this.InfoTryTo1Text = this._translateWithVariable('Info_Try_To_1');\n            this.InfoTryTo2Text = this._translateWithVariable('Info_Try_To_2');\n            this.InfoTryTo3Text = this._translateWithVariable('Info_Try_To_3');\n    \n            this.InfoMoreActive1Text = this._translateWithVariable('Info_More_Active_1');\n            this.InfoMoreActive2Text = this._translateWithVariable('Info_More_Active_2');\n            this.InfoMoreActive3Text = this._translateWithVariable('Info_More_Active_3');\n            this.InfoMoreActive4Text = this._translateWithVariable('Info_More_Active_4');\n    \n            this.InfoTryHard1Text = this._translateWithVariable('Info_Try_Hard_1');\n            this.InfoTryHard2Text = this._translateWithVariable('Info_Try_Hard_2');\n            this.InfoTryHard3Text = this._translateWithVariable('Info_Try_Hard_3');\n    \n            this.InfoHighQuality1Text = this._translateWithVariable('Info_High_Quality_1');\n            this.InfoHighQuality2Text = this._translateWithVariable('Info_High_Quality_2');\n\n            this.InfoAllAmountCountsByMillionText = this._translateWithVariable(\"Info_All_Amount_Counts_By_Million\");\n\n        }\n    \n        //set translate variables\n        private _setTranslateVariable() {\n    \n            this._translateVariable = {\n                // \"gratsPoints\": 20,\n            }\n        }\n    \n        private _translateWithVariable(mappingID: string) {\n            return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n        }\n}","export enum ActivitiesType {\n    Find = \"F\",\n    Schedule = \"S\",\n    Meet = \"M\",\n    Submit = \"Su\",\n    Inforce = \"I\",\n    Unknow = \"Unknow\"\n}","export enum Quarters{  \n    Q1 = \"Q1\",\n    Q2 = \"Q2\",\n    Q3 = \"Q3\",\n    Q4 = \"Q4\",\n    Unknow = \"unknow\"\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { CoreModule } from '@allianzSND/core';\nimport { UIModule } from '@allianzSND/ui';\n@NgModule({\n  imports: [\n    CoreModule,\n    UIModule,\n    CommonModule\n  ],\n  declarations: [\n\n   ],\n  exports: [\n  ]\n})\nexport class ProgressModule { }\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from, of} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\nimport { ISearchTableByField } from \"@allianzSND/core\";\n\nexport class GetPersonalProgressAPI implements IAPI, IMockAPI, ISQLiteAPI, ISearchTableByField {\n\n    private _year: number = -1;\n\n    private _daoFactory: DaoFactory;\n    constructor(daoFactory: DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    SetYear(value: number): void {\n        this._year = value;\n    }\n\n    getAPIName(): string {\n        return 'getPersonalProgress';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getPersonalProgressMock.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.debug(\"SQLite Start \");\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite defaultDao: \", defaultDao);\n\n        let tableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Personal_Progress\");\n        console.debug(\"SQLite tableObj: \", tableObj);\n\n        if(defaultDao != undefined && tableObj != undefined) {\n            return from(defaultDao.queryByTable(tableObj).toPromise().then(resp => {\n                console.debug(\"SQLite getPersonalProgress resp: \", resp);\n                console.debug(\"SQLite getPersonalProgress json resp: \", JSON.stringify(resp));\n                \n                return resp;\n            }));\n        }\n        else {\n            of(false);\n            console.debug(\"SQLite failed\");\n        }\n    }\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressActualValueAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n    private _dataYear: number;\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    setDataYear(year: number) {\n      this._dataYear = year;\n    } \n    /*\n    constructor(DaoFactory) {\n        this._daoFactory = DaoFactory;\n    }\n    */\n\n    constructor(){};\n\n    getAPIName(): string {\n        return 'getProgressActualValue';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        if(this._dataYear == 2019) {\n          return './assets/mock/getProgressActualValue_2019.json';\n        }\n        else if(this._dataYear == 2020) {\n          return './assets/mock/getProgressActualValue_2020.json';\n        }\n        else {\n          //todo throw error\n          console.warn('dataYear not match mock path');\n          return '';\n        }\n    }\n\n\n    executeSQL(): Observable<any> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressDataActualValueAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n    private _searchYear: number;\n\n    public get SearchYear() {\n        return this._searchYear;\n    }\n\n    public set SearchYear(value:number) {\n        this._searchYear = value;\n    }\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    \n    constructor(daoFactory:DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    getAPIName(): string {\n        return 'getProgressDataActualValue';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        return './assets/mock/getProgressDataActualValueMock.json';\n    }\n\n\n    executeSQL(): Observable<any> {\n\n        console.debug(\"SQLite actual start \");\n        let defaultDao = this._daoFactory.getDefaultDao();\n\n        console.debug(\"SQLite actual defaultDao: \", defaultDao);\n        let progressActualObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Actual_Value\");\n\n        console.debug(\"SQLite actual progressActualObj: \", progressActualObj);\n        if(defaultDao != undefined && progressActualObj != undefined) {\n            return from(defaultDao.queryByTable(progressActualObj).toPromise().then(resp => {\n                console.debug(\"SQLite actual data api resp: \", resp);\n            }).then(resp => {\n                let data = resp[\"Body\"];\n                let filterData = data.filter(x => x.DataYear == 2019);\n                let filterData2 = data.filter(x => x.DataYear == 2020);\n                console.debug(\"SQLite actual test date body: \", data);\n                console.debug(\"SQLite actual test filterData: \", filterData);\n                console.debug(\"SQLite actual test filterData2: \", filterData2);\n\n                let arr = [];\n                arr.push(filterData);\n                arr.push(filterData2);\n                console.debug(\"SQLite actual test arr: \", arr);\n\n                return arr;\n            }).then(resp => {\n                let data = resp;\n                let progressActualObj1 = \n                {\n                    \"DataYear\": \"2019\",\n                    \"TimeBase\": \"Month\",\n                    \"Values\":[],\n                };\n\n                let progressActualObj2 = \n                {\n                    \"DataYear\": \"2020\",\n                    \"TimeBase\": \"Month\",\n                    \"Values\":[]\n                };\n                \n                progressActualObj1.Values.push(data[0]);\n                progressActualObj2.Values.push(data[1]);\n\n                let progressActualObjArr = [];\n                \n                progressActualObjArr.push(progressActualObj1);\n                progressActualObjArr.push(progressActualObj2);\n\n                console.debug(\"SQLite actual test progressActualObj123: \", progressActualObjArr);\n                return progressActualObjArr;\n            }).then(resp => {\n                let data = resp;\n                console.debug(\"SQLite actual test resp progressActualObj123 : \", resp);\n                console.debug(\"SQLite actual test data progressActualObj123 : \", data);\n                let defaultProgressActualObj = \n                {\n                    \"lastUpdateTime\": \"2019-06-19\",\n                    \"Actual\":[],\n                };\n\n                defaultProgressActualObj.Actual.push(data[0]);\n                defaultProgressActualObj.Actual.push(data[1]);\n\n                console.debug(\"SQLite actual test defaultProgressActualObj : \", defaultProgressActualObj);\n                return defaultProgressActualObj;\n            }));\n        }\n        else {\n            console.debug(\"SQLite actual data fail......\");\n        }\n\n        //throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let defaultObj = {\n            \"ClientID\": \"\",\n            \"LastName\": \"\",\n            \"FirstName\": \"\",\n            \"Occupation\": \"\",\n            \"Company\": \"\",\n            \"BirthdayYear\": \"\",\n            \"BirthdayMonth\": \"\",\n            \"BirthdayDate\": \"\",\n            \"Birthday\": null,\n            \"AgeRange\": null,\n            \"Gender\": null,\n            \"Income\": null,\n            \"Source\": null,\n            \"Marriage\": null,\n            \"Children\": null,\n            \"Familiarity\": null,\n            \"RecentStatus\": \"\",\n            \"MANPA\": \"\",\n            \"ContactFrequancy\": \"\",\n            \"Possibility\": \"\",\n            \"IsFollow\": \"N\",\n            \"DataSource\": \"APP\",\n            \"tel\": [],\n            \"email\": [],\n            \"address\": []\n        }\n        if (!this._id || (this._id.length == 0)) {\n            //Add\n            let resp = new SQLiteResponse({\n                \"isSuccess\": true\n            }, [defaultObj]);\n            return of(resp);\n        }\n        else {\n            let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n            let defaultDao = this.daoFactory.getDefaultDao();\n            if (customerObj != undefined && defaultDao != undefined) {\n                let dao = new ClientCustomDao(defaultDao);\n                customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n                return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                }).then(({ customer, clientID }) => {\n                    let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                    if (customerEmailObj) {\n                        customerEmailObj = (<SQLiteTable>customerEmailObj);\n                        customerEmailObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['email'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n\n                }).then(({ customer, clientID }) => {\n                    let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                    if (customerAddrObj) {\n                        customerAddrObj = (<SQLiteTable>customerAddrObj);\n                        customerAddrObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['address'] = telList;\n                            return customer;\n                        });\n                    }\n                    else\n                        return customer;\n                }).then(customer => {\n                    //change birthDay to Date Object\n                    customer['Body'][0]['Birthday'] = new Date(customer['Body'][0]['BirthdayYear'], parseInt(customer['Body'][0]['BirthdayMonth']) - 1, customer['Body'][0]['BirthdayDate']);\n                    return customer;\n                }))\n            }\n            else {\n                return of(false);\n            }\n        }\n    }\n    */\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n\n\n\n\n\n\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressDataAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number = 0;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType = PersonalDataType.Actual;\n    private _personalDataTimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Day;\n    private _searchYear: number = 0;\n\n    //condition year\n    public set SearchYear(value:number) {\n        this._searchYear = value;\n    }\n\n    public get SearchYear() {\n        return this._searchYear;\n    }\n\n    //condition client id\n    public set SearchClientId(id:number) {\n        this._clientID = id;\n    }\n\n    public get SearchCLientId() {\n        return this._clientID;\n    }\n\n    //condition data type\n    public set SearchDataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    public get SearchDataType() {\n        return this._personalDataType;\n    }\n\n\n    //condition time base\n    public set SearchTimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    public get SearchTimeBase() {\n        return this._personalDataTimeBase;\n    }\n\n    \n    constructor(daoFactory:DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    getAPIName(): string {\n        return 'getProgressData';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getProgressDataMock.json';\n    }\n\n\n    executeSQL(): Observable<any> {\n\n        console.debug(\"SQLite progress start \");\n\n        /*\n        let defaultProgressObj = \n        {\n            \"lastUpdateTime\": \"\",\n            \"Progress\":[],\n        };\n        */\n\n        /*\n        // Progress [progressObj, progressObj] *2\n        let progressObj:\n        {\n            \"DataYear\": \"\",\n            \"YesterdayPoint\": \"\",\n            \"Values\":[]\n        };\n        */\n\n\n        /*\n        // progressObj.Value[] * n\n        let progresValueObj =\n        {\n            \"DataType\":\"\",\n            \"TimeBase\": \"\",\n            \"FYFC\": 0,\n            \"Find\": 0,\n            \"Schedule\": 0,\n            \"Meet\": 0,\n            \"Submit\": 0,\n            \"Inforce\": 0\n        };\n        */\n\n\n        // test class to obj type\n\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite progress defaultDao: \", defaultDao);\n\n        let progressTableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Personal_Progress\"); \n        console.debug(\"SQLite progress progressTableObj: \", progressTableObj);\n\n        if(progressTableObj != undefined && defaultDao != undefined) {\n            return from(defaultDao.queryByTable(progressTableObj).toPromise().then(resp => {\n                console.debug(\"SQLite progress data api resp: \", resp);\n                return resp;\n            }).then(resp => {\n                let data = resp[\"Body\"];\n                let filterData = data.filter(x => x.DataYear == 2019);\n                let filterData2 = data.filter(x => x.DataYear == 2020);\n                console.debug(\"SQLite progress test date body: \", data);\n                console.debug(\"SQLite progress test filterData: \", filterData);\n                console.debug(\"SQLite progress test filterData2: \", filterData2);\n\n                let arr = [];\n                arr.push(filterData);\n                arr.push(filterData2);\n                console.debug(\"SQLite progress test arr: \", arr);\n\n                return arr;\n            }).then(resp => {\n\n                let data = resp;\n\n                let progressObj1 = \n                {\n                    \"DataYear\": \"2019\",\n                    \"YesterdayPoint\": \"20\",\n                    \"Personal\":{Values:[]},\n                };\n\n                let progressObj2 = \n                {\n                    \"DataYear\": \"2020\",\n                    \"YesterdayPoint\": \"20\",\n                    \"Personal\":{Values:[]},\n                };\n                \n                progressObj1.Personal.Values.push(data[0]);\n                progressObj2.Personal.Values.push(data[1]);\n\n                let progressObjArr = [];\n                \n                progressObjArr.push(progressObj1);\n                progressObjArr.push(progressObj2);\n\n                console.debug(\"SQLite progress test progressObj123: \", progressObjArr);\n                return progressObjArr;\n\n            }).then(resp => {\n                let data = resp;\n                console.debug(\"SQLite progress test resp progressObj123 : \", resp);\n                console.debug(\"SQLite progress test data progressObj123 : \", data);\n                let defaultProgressObj = \n                {\n                    \"lastUpdateTime\": \"2019-06-19\",\n                    \"Progress\":[],\n                };\n\n                defaultProgressObj.Progress.push(data[0]);\n                defaultProgressObj.Progress.push(data[1]);\n\n                console.debug(\"SQLite progress test defaultProgressObj123 : \", defaultProgressObj);\n                return defaultProgressObj;\n            }));\n        }\n        else {\n            console.debug(\"SQLite progress fail.....\");\n        }\n    }\n    \n                    /*\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                    */\n\n\n\n\n\n\n\n\n\n    /*\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let defaultObj = {\n            \"ClientID\": \"\",\n            \"LastName\": \"\",\n            \"FirstName\": \"\",\n            \"Occupation\": \"\",\n            \"Company\": \"\",\n            \"BirthdayYear\": \"\",\n            \"BirthdayMonth\": \"\",\n            \"BirthdayDate\": \"\",\n            \"Birthday\": null,\n            \"AgeRange\": null,\n            \"Gender\": null,\n            \"Income\": null,\n            \"Source\": null,\n            \"Marriage\": null,\n            \"Children\": null,\n            \"Familiarity\": null,\n            \"RecentStatus\": \"\",\n            \"MANPA\": \"\",\n            \"ContactFrequancy\": \"\",\n            \"Possibility\": \"\",\n            \"IsFollow\": \"N\",\n            \"DataSource\": \"APP\",\n            \"tel\": [],\n            \"email\": [],\n            \"address\": []\n        }\n        if (!this._id || (this._id.length == 0)) {\n            //Add\n            let resp = new SQLiteResponse({\n                \"isSuccess\": true\n            }, [defaultObj]);\n            return of(resp);\n        }\n        else {\n            let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n            let defaultDao = this.daoFactory.getDefaultDao();\n            if (customerObj != undefined && defaultDao != undefined) {\n                let dao = new ClientCustomDao(defaultDao);\n                customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n                return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                }).then(({ customer, clientID }) => {\n                    let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                    if (customerEmailObj) {\n                        customerEmailObj = (<SQLiteTable>customerEmailObj);\n                        customerEmailObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['email'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n\n                }).then(({ customer, clientID }) => {\n                    let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                    if (customerAddrObj) {\n                        customerAddrObj = (<SQLiteTable>customerAddrObj);\n                        customerAddrObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['address'] = telList;\n                            return customer;\n                        });\n                    }\n                    else\n                        return customer;\n                }).then(customer => {\n                    //change birthDay to Date Object\n                    customer['Body'][0]['Birthday'] = new Date(customer['Body'][0]['BirthdayYear'], parseInt(customer['Body'][0]['BirthdayMonth']) - 1, customer['Body'][0]['BirthdayDate']);\n                    return customer;\n                }))\n            }\n            else {\n                return of(false);\n            }\n        }\n    }\n    */\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressDataGoalSettingPlanAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n    private _searchYear: number;\n\n    public get SearchYear() {\n        return this._searchYear;\n    }\n\n    public set SearchYear(value:number) {\n        this._searchYear = value;\n    }\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    \n    constructor(daoFactory:DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    getAPIName(): string {\n        return 'getProgressDataGoalSettingPlan';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        return './assets/mock/getProgressDataGoalSettingPlanMock.json';\n    }\n\n\n    executeSQL(): Observable<any> {\n\n        console.debug(\"SQLite goal plan start \");\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite goal plan defaultDao: \", defaultDao);\n\n        let progressGoalPlanObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Goal_Setting_Plan_Value\");\n        console.debug(\"SQLite goal plan progressGoalPlanObj: \", progressGoalPlanObj);\n\n\n        if(defaultDao != undefined && progressGoalPlanObj != undefined) {\n            return from(defaultDao.queryByTable(progressGoalPlanObj).toPromise().then( resp => {\n                console.debug(\"SQLite goal plan data api resp: \", resp);\n            }));\n        }\n        else {\n            console.debug(\"SQLite goal plan fail... \");\n        }\n\n\n        //throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let defaultObj = {\n            \"ClientID\": \"\",\n            \"LastName\": \"\",\n            \"FirstName\": \"\",\n            \"Occupation\": \"\",\n            \"Company\": \"\",\n            \"BirthdayYear\": \"\",\n            \"BirthdayMonth\": \"\",\n            \"BirthdayDate\": \"\",\n            \"Birthday\": null,\n            \"AgeRange\": null,\n            \"Gender\": null,\n            \"Income\": null,\n            \"Source\": null,\n            \"Marriage\": null,\n            \"Children\": null,\n            \"Familiarity\": null,\n            \"RecentStatus\": \"\",\n            \"MANPA\": \"\",\n            \"ContactFrequancy\": \"\",\n            \"Possibility\": \"\",\n            \"IsFollow\": \"N\",\n            \"DataSource\": \"APP\",\n            \"tel\": [],\n            \"email\": [],\n            \"address\": []\n        }\n        if (!this._id || (this._id.length == 0)) {\n            //Add\n            let resp = new SQLiteResponse({\n                \"isSuccess\": true\n            }, [defaultObj]);\n            return of(resp);\n        }\n        else {\n            let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n            let defaultDao = this.daoFactory.getDefaultDao();\n            if (customerObj != undefined && defaultDao != undefined) {\n                let dao = new ClientCustomDao(defaultDao);\n                customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n                return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                }).then(({ customer, clientID }) => {\n                    let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                    if (customerEmailObj) {\n                        customerEmailObj = (<SQLiteTable>customerEmailObj);\n                        customerEmailObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['email'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n\n                }).then(({ customer, clientID }) => {\n                    let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                    if (customerAddrObj) {\n                        customerAddrObj = (<SQLiteTable>customerAddrObj);\n                        customerAddrObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['address'] = telList;\n                            return customer;\n                        });\n                    }\n                    else\n                        return customer;\n                }).then(customer => {\n                    //change birthDay to Date Object\n                    customer['Body'][0]['Birthday'] = new Date(customer['Body'][0]['BirthdayYear'], parseInt(customer['Body'][0]['BirthdayMonth']) - 1, customer['Body'][0]['BirthdayDate']);\n                    return customer;\n                }))\n            }\n            else {\n                return of(false);\n            }\n        }\n    }\n    */\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n\n\n\n\n\n\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressGoalPlanAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n    private _dataYear: number;\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    setDataYear(year: number) {\n      this._dataYear = year;\n    }\n\n    /*\n    constructor(DaoFactory) {\n        this._daoFactory = DaoFactory;\n    }\n    */\n\n    constructor(){};\n\n    getAPIName(): string {\n        return 'getProgressGoalPlan';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        if(this._dataYear == 2019) {\n          return './assets/mock/getProgressGoalPlan_2019.json';\n        }\n        else if(this._dataYear == 2020) {\n          return './assets/mock/getProgressGoalPlan_2020.json';\n        }\n        else {\n          //todo throw error\n          console.warn(\"datYear not match mock path\");\n          return '';\n        }\n    }\n\n\n    executeSQL(): Observable<any> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from, of} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport { ISearchTableByField } from \"@allianzSND/core\";\n\nexport class GetTeamProgressDetailAPI implements IAPI, IMockAPI, ISQLiteAPI, ISearchTableByField {\n\n    private _year: number = -1;\n\n    private _daoFactory: DaoFactory;\n    constructor(daoFactory: DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    SetYear(value: number): void {\n        this._year = value;\n    }\n\n    getAPIName(): string {\n        return 'getTeamProgressDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getTeamProgressDetailMock.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.debug(\"SQLite Start \");\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite defaultDao: \", defaultDao);\n\n        let tableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Team_Progress_Detail\"); \n        console.debug(\"SQLite tableObj: \", tableObj);\n\n        if(defaultDao != undefined && tableObj != undefined) {\n            return from(defaultDao.queryByTable(tableObj).toPromise().then(resp => {\n                console.debug(\"SQLite getTeamProgressDetail resp: \", resp);\n                console.debug(\"SQLite getTeamProgressDetail json resp: \", JSON.stringify(resp));\n                return resp;\n            }));\n        }\n        else {\n            of(false);\n            console.debug(\"SQLite failed\");\n        }\n    }\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from, of} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\nimport { ISearchTableByField } from \"@allianzSND/core\";\n\nexport class GetTeamProgressMainAPI implements IAPI, IMockAPI, ISQLiteAPI, ISearchTableByField {\n\n    private _year: number = -1;\n\n    private _daoFactory: DaoFactory;\n    constructor(daoFactory: DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    SetYear(value: number): void {\n        this._year = value;\n    }\n\n    getAPIName(): string {\n        return 'getTeamProgressMain';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getTeamProgressMainMock.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.debug(\"SQLite Start \");\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite defaultDao: \", defaultDao);\n\n        let tableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Team_Progress_Main\"); \n        console.debug(\"SQLite tableObj: \", tableObj);\n\n        if(defaultDao != undefined && tableObj != undefined) {\n            return from(defaultDao.queryByTable(tableObj).toPromise().then(resp => {\n                console.debug(\"SQLite getTeamProgressMain resp: \", resp);\n                console.debug(\"SQLite getTeamProgressMain json resp: \", JSON.stringify(resp));\n                return resp;\n            }));\n        }\n        else {\n            of(false);\n            console.debug(\"SQLite failed\");\n        }\n    }\n\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class PersonalProgressOldAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    /*\n    constructor(DaoFactory) {\n        this._daoFactory = DaoFactory;\n    }\n    */\n\n    constructor(){};\n\n    getAPIName(): string {\n        return 'getPersonalProgressOld';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        return './assets/mock/getPersonalProgress.json';\n    }\n\n\n    executeSQL(): Observable<any> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from, of} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\nimport { ISearchTableByField } from \"@allianzSND/core\";\n\nexport class GetYearConfigurationAPI implements IAPI, IMockAPI, ISQLiteAPI, ISearchTableByField {\n      \n    private _year: number = -1;\n\n    private _daoFactory: DaoFactory;\n    constructor(daoFactory: DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    SetYear(value: number): void {\n        this._year = value;\n    }\n       \n    getAPIName(): string {\n        return 'getYearConfiguration';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getYearConfigurationMock.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.debug(\"SQLite Start year configuration \");\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite defaultDao: \", defaultDao);\n\n        let tableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Year_Config\"); \n        console.debug(\"SQLite tableObj: \", tableObj);\n\n        if(defaultDao != undefined && tableObj != undefined) {\n            return from(defaultDao.queryByTable(tableObj).toPromise().then(resp => {\n                console.debug(\"SQLite getYearConfiguration resp: \", resp);\n                console.debug(\"SQLite getYearConfiguration json resp: \", JSON.stringify(resp));\n                return resp;\n            }));\n        }\n        else {\n            of(false);\n            console.debug(\"SQLite failed\");\n        }\n    }\n\n}","import { IAPI, StringUtils, EqualRestriction } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from \"@allianzSND/core\";\nimport { Observable, from, of } from \"rxjs\";\nimport { DaoFactory } from \"@allianzSND/core\";\n\nexport class AddPointAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _addType: string = \"\";\n  private _year: number = -1;\n  private _addPointNum = 1;\n  private dao;\n\n  private _daoFactory: DaoFactory;\n  constructor(daoFactory: DaoFactory) {\n    this._daoFactory = daoFactory;\n  }\n\n  SetAddType(value: string): void {\n    this._addType = value;\n  }\n  SetYear(val: number): void {\n    this._year = val;\n  }\n  SetPointNum(val:number): void{\n    this._addPointNum = val;\n  }\n  getAPIName(): string {\n    return \"addPoint\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/saveSuccess.json\";\n  }\n\n  executeSQL(): Observable<any> {\n\n    console.log(\"AddPointAPI add \" + this._addType + \" point\");\n    console.log(\"this._addType\", this._addType, \"this._year\", this._year);\n    \n    if (StringUtils.isNotEmpty(this._addType) && this._year != -1) {\n        this.dao = this._daoFactory.getDefaultDao();\n        let TimeBaselist = [\"Day\",\"Week\",\"Month\",\"Quarter\",\"Year\"];\n        return from(Promise.all(TimeBaselist.map(timeBase => this._addPoint(timeBase))).then(()=>{\n          let addResp = this.dao.runTransaction().toPromise();\n          console.log(\"addResp\",addResp);\n          return addResp;\n        }));\n    } else {\n        return of(false);\n    }\n  }\n\n  private async _addPoint(timeBase){\n    console.log(\"into _addPoint()\");\n    console.log(\"timeBase\",timeBase);\n    let currentNum = 0;\n    let PersonalPorgress = this._daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Progress\");\n    console.log(\"SQLite tableObj: \", PersonalPorgress);\n    PersonalPorgress.addRestriction(new EqualRestriction(\"DataYear\", [this._year]));\n    PersonalPorgress.addRestriction(new EqualRestriction(\"TimeBase\", [timeBase]));\n    PersonalPorgress.addRestriction(new EqualRestriction(\"DataType\", [\"Actual\"]));\n    let progressObj = null;\n    let getResp = await this.dao.queryByTable(PersonalPorgress).toPromise();\n    console.log(\"AddPointAPI getResp\", getResp);\n    if (getResp.Header[\"status\"] && getResp.Body.length > 0) {\n      progressObj = getResp.Body[0];\n    if (this._addType == \"customer\") {\n        currentNum = progressObj.Find;\n        PersonalPorgress.setValue(\"Find\", currentNum + this._addPointNum);\n    } else if (this._addType == \"calendar\") {\n        currentNum = progressObj.Schedule;\n        PersonalPorgress.setValue(\"Schedule\", currentNum + this._addPointNum);\n    }\n    console.log(\"AddPointAPI PersonalPorgress\", PersonalPorgress);\n    this.dao.transactionUpdate(PersonalPorgress);\n    }\n  }\n}\n"],"names":["tslib_1.__decorate","APIFactory"],"mappings":";;;;;;;;;;;;;IAGa,kBAAkB;IAD/B;QAIW,aAAQ,GAAW,CAAC,CAAC;QAGrB,cAAS,GAAY,IAAI,CAAC;QAG1B,iBAAY,GAAW,CAAC,CAAC;QAGzB,sBAAiB,GAAW,CAAC,CAAC;QAG9B,oBAAe,GAAW,CAAC,CAAC;QAG5B,yBAAoB,GAAW,CAAC,CAAC;QAGjC,6BAAwB,GAAW,CAAC,CAAC;QAGrC,yBAAoB,GAAW,CAAC,CAAC;QAGjC,2BAAsB,GAAW,CAAC,CAAC;QAGnC,4BAAuB,GAAW,CAAC,CAAC;QAGpC,2BAAsB,GAAW,QAAQ,CAAC;QAG1C,2BAAsB,GAAW,EAAE,CAAC;QAGpC,wBAAmB,GAAW,EAAE,CAAC;QAGjC,+BAA0B,GAAW,CAAC,CAAC;KAEjD;CAAA,CAAA;AAzCGA;IADC,QAAQ;;oDACmB;AAG5BA;IADC,QAAQ;;qDACwB;AAGjCA;IADC,QAAQ;;wDACuB;AAGhCA;IADC,QAAQ;;6DAC4B;AAGrCA;IADC,QAAQ;;2DAC0B;AAGnCA;IADC,QAAQ;;gEAC+B;AAGxCA;IADC,QAAQ;;oEACmC;AAG5CA;IADC,QAAQ;;gEAC+B;AAGxCA;IADC,QAAQ;;kEACiC;AAG1CA;IADC,QAAQ;;mEACkC;AAG3CA;IADC,QAAQ;;kEACwC;AAGjDA;IADC,QAAQ;;kEACkC;AAG3CA;IADC,QAAQ;;+DAC+B;AAGxCA;IADC,QAAQ;;sEACqC;AA1CrC,kBAAkB;IAD9B,IAAI,CAAC,oBAAoB,CAAC;GACd,kBAAkB,CA4C9B;;;;;;IC3CY,gBAAgB;IAD7B;QAIW,mBAAc,GAAW,EAAE,CAAC;QAG5B,mBAAc,GAA8B,IAAI,KAAK,EAAsB,CAAC;KACtF;CAAA,CAAA;AAJGA;IADC,QAAQ;;wDAC0B;AAGnCA;IADC,QAAQ;8BACc,KAAK;wDAAuD;AAN1E,gBAAgB;IAD5B,IAAI,CAAC,kBAAkB,CAAC;GACZ,gBAAgB,CAO5B;;;;;;ICPY,WAAW;IADxB;QAIW,mBAAc,GAAW,EAAE,CAAC;QAG5B,aAAQ,GAA2B,IAAI,KAAK,EAAmB,CAAC;KAC1E;CAAA,CAAA;AAJGA;IADC,QAAQ;;mDAC0B;AAGnCA;IADC,QAAQ;8BACQ,KAAK;6CAAiD;AAN9D,WAAW;IADvB,IAAI,CAAC,aAAa,CAAC;GACP,WAAW,CAOvB;;;;;;ACTD;IAAA;QACW,WAAM,GAAgC,IAAI,KAAK,EAAwB,CAAC;KAClF;CAAA;;;;;;ICCY,OAAO;IADpB;QAIW,WAAM,GAA4B,IAAI,KAAK,EAAoB,CAAC;;;QAKhE,eAAU,GAAsC,IAAI,KAAK,EAA8B,CAAC;QAGxF,iBAAY,GAAsC,IAAI,KAAK,EAA8B,CAAC;KACpG;CAAA,CAAA;AATGA;IADC,QAAQ;8BACM,KAAK;uCAAmD;AAKvEA;IADC,QAAQ;8BACU,KAAK;2CAAuE;AAG/FA;IADC,QAAQ;8BACY,KAAK;6CAAuE;AAXxF,OAAO;IADnB,IAAI,CAAC,SAAS,CAAC;GACH,OAAO,CAYnB;;;;;;ICZY,eAAe;IAD5B;QAIW,aAAQ,GAAW,CAAC,CAAC;QAGrB,mBAAc,GAAW,CAAC,CAAC;QAG3B,aAAQ,GAAgB,IAAI,WAAW,EAAE,CAAC;QAG1C,SAAI,GAAY,IAAI,OAAO,EAAE,CAAC;KACxC;CAAA,CAAA;AAVGA;IADC,QAAQ;;iDACmB;AAG5BA;IADC,QAAQ;;uDACyB;AAGlCA;IADC,QAAQ;8BACQ,WAAW;iDAAqB;AAGjDA;IADC,QAAQ;8BACI,OAAO;6CAAiB;AAZ5B,eAAe;IAD3B,IAAI,CAAC,iBAAiB,CAAC;GACX,eAAe,CAa3B;;;;;;;;ICjBG,KAAM,KAAK;IACX,MAAO,MAAM;IACb,OAAQ,OAAO;IACf,SAAU,SAAS;IACnB,MAAO,MAAM;IACb,QAAS,QAAQ;;;;;;;;;ICLjB,QAAS,QAAQ;IACjB,MAAO,MAAM;IACb,QAAS,QAAQ;;;;;;;ACHrB;IAGA;QACW,aAAQ,GAAqB,gBAAgB,CAAC,MAAM,CAAC;QACrD,aAAQ,GAAyB,oBAAoB,CAAC,MAAM,CAAC;QAC7D,SAAI,GAAW,CAAC,CAAC;QACjB,aAAQ,GAAW,CAAC,CAAC;QACrB,SAAI,GAAW,CAAC,CAAC;QACjB,WAAM,GAAW,CAAC,CAAC;QACnB,YAAO,GAAW,CAAC,CAAC;QACpB,SAAI,GAAW,CAAC,CAAC;QAEjB,yBAAoB,GAAW,CAAC,CAAC;QACjC,6BAAwB,GAAW,CAAC,CAAC;QACrC,yBAAoB,GAAW,CAAC,CAAC;QACjC,2BAAsB,GAAW,CAAC,CAAC;QACnC,4BAAuB,GAAW,CAAC,CAAC;KAC9C;CAAA;;;;;;;;ICjBG,MAAO,MAAM;IACb,KAAM,KAAK;IACX,UAAW,UAAU;IACrB,aAAc,aAAa;IAC3B,QAAS,QAAQ;;;;;;;ICAR,gBAAgB;IAD7B;QAIW,aAAQ,GAA8B,yBAAyB,CAAC,MAAM,CAAC;QAGvE,aAAQ,GAAyB,oBAAoB,CAAC,MAAM,CAAC;QAG7D,SAAI,GAAW,CAAC,CAAC;QAGjB,aAAQ,GAAW,CAAC,CAAC;QAGrB,WAAM,GAAW,CAAC,CAAC;QAGnB,cAAS,GAAW,CAAC,CAAC;KAChC;CAAA,CAAA;AAhBGA;IADC,QAAQ;;kDACqE;AAG9EA;IADC,QAAQ;;kDAC2D;AAGpEA;IADC,QAAQ;;8CACe;AAGxBA;IADC,QAAQ;;kDACmB;AAG5BA;IADC,QAAQ;;gDACiB;AAG1BA;IADC,QAAQ;;mDACoB;AAlBpB,gBAAgB;IAD5B,IAAI,CAAC,kBAAkB,CAAC;GACZ,gBAAgB,CAmB5B;;;;;;IClBY,0BAA0B;IADvC;QAIW,YAAO,GAAW,EAAE,CAAC;QAGrB,cAAS,GAAW,EAAE,CAAC;QAGvB,aAAQ,GAAW,EAAE,CAAC;QAGtB,aAAQ,GAAW,EAAE,CAAC;QAGtB,cAAS,GAAY,KAAK,CAAC;QAG3B,aAAQ,GAAyB,oBAAoB,CAAC,MAAM,CAAC;QAG7D,aAAQ,GAA8B,yBAAyB,CAAC,MAAM,CAAC;QAGvE,eAAU,GAAW,EAAE,CAAC;;QAIxB,eAAU,GAAW,EAAE,CAAC;QAGxB,SAAI,GAAW,CAAC,CAAC;QAGjB,aAAQ,GAAW,CAAC,CAAC;QAGrB,WAAM,GAAW,CAAC,CAAC;QAGnB,cAAS,GAAW,CAAC,CAAC;KAChC;CAAA,CAAA;AAtCGA;IADC,QAAQ;;2DACmB;AAG5BA;IADC,QAAQ;;6DACqB;AAG9BA;IADC,QAAQ;;4DACoB;AAG7BA;IADC,QAAQ;;4DACoB;AAG7BA;IADC,QAAQ;;6DACyB;AAGlCA;IADC,QAAQ;;4DAC2D;AAGpEA;IADC,QAAQ;;4DACqE;AAG9EA;IADC,QAAQ;;8DACsB;AAI/BA;IADC,QAAQ;;8DACsB;AAG/BA;IADC,QAAQ;;wDACe;AAGxBA;IADC,QAAQ;;4DACmB;AAG5BA;IADC,QAAQ;;0DACiB;AAG1BA;IADC,QAAQ;;6DACoB;AAxCpB,0BAA0B;IADtC,IAAI,CAAC,4BAA4B,CAAC;GACtB,0BAA0B,CAyCtC;;;;;;;;IC9CG,YAAa,QAAQ;IACrB,cAAe,UAAU;IACzB,QAAS,QAAQ;;;;;;;;;ICFjB,cAAe;IACf,UAAW;IACX,YAAa;;;;;;;;;;;;;;;;;;;ICiDf,YACU,QAAqB,EACrBC,aAAsB,EACtB,aAA4B,EAC5B,eAAgC,EAChC,gBAAmC,EACnC,YAA0B;QAL1B,aAAQ,GAAR,QAAQ,CAAa;QACrB,eAAU,GAAVA,aAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAmB;QACnC,iBAAY,GAAZ,YAAY,CAAc;QA9B5B,6BAAwB,GAAsC,IAAI,KAAK,EAA8B,CAAC;QACtG,6BAAwB,GAAwC,IAAI,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;QAazG,gBAAW,GAAQ,GAAG,CAAC,SAAS,CAAC;QAkEjC,wBAAmB,GAAiB,IAAI,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAlD1C;;;;IA1BzC,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC;KAC7C;;;;IAED,IAAI,cAAc;QAChB,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;KACzH;;;;IAMM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;IAEM,uBAAuB,CAAC,GAAQ;QACrC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;KACxB;;;;;IAaM,uBAAuB;QAC5B,IAAI,CAAC,wBAAwB,GAAG,IAAI,KAAK,EAA8B,CAAC;;KAEzE;;;;;IAEM,sBAAsB,CAAC,UAAsC;QAClE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACzD;;;;IAGM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;KACrD;;;;IAEM,sBAAsB;QAC3B,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACzD;;;;IAGM,mCAAmC;;YACpC,SAAS,GAAG,IAAI,CAAC,oBAAoB;QAEzC,IAAI,SAAS,IAAI,CAAC,EAAE;;gBACd,GAAG,GAAsC,IAAI,KAAK,EAA8B;;gBAChF,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,GAAG,CAAC,CAAC;;gBACpD,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,GAAG,CAAC,CAAC;YACxD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChB,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;SAChB;aACI;;gBACC,GAAG,GAAsC,IAAI,KAAK,EAA8B;;gBAChF,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,GAAG,CAAC,CAAC;YACxD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChB,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;SAChB;KACF;;;;;IASM,cAAc,CAAC,GAAQ;QAC5B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACxB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAClD;;;;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;KAChD;;;;IAEM,SAAS;;YACV,CAAC,GAAG,IAAI,CAAC,YAAY;QACzB,QAAO,CAAC;YACN,KAAK,IAAI,CAAC,KAAK;gBACb,OAAO,KAAK,CAAC;YACf,KAAK,IAAI,CAAC,WAAW,CAAC;YACtB,KAAK,IAAI,CAAC,QAAQ,CAAC;YACnB,KAAK,IAAI,CAAC,GAAG;gBACX,OAAO,IAAI,CAAC;SACf;KACF;;;;IAEM,UAAU;QACf,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC;KACzD;;;;IAEM,eAAe;QACpB,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,KAAK,CAAC;KACvD;;;;IAEM,YAAY;QACjB,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC;KAC5D;;;;IAEM,gBAAgB;QACrB,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC;KAC/D;;;;IAEM,kBAAkB;QACvB,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC;KAC/D;;;;IAEM,gBAAgB;QACrB,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC;KACzD;;;;;;;;IAQM,wBAAwB,CAAC,OAAe;QAE7C,IAAI;;gBACE,cAAc,sBAAmC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,EAAA;YAC1F,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;SACjE;QACD,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,oCAAoC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5G,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,OAAO,CAAC,CAAC;SAC/D;QAED,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;;;;;;IAIM,uBAAuB,CAAC,KAAoB;QAEjD,IAAI;;;gBAEE,sBAAsB,sBAAmD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAA;;gBACtH,wBAAwB,sBAAuD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,uBAAuB,CAAC,EAAA;;gBAC9H,sBAAsB,sBAAmD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAA;;gBACtH,oBAAoB,sBAA+C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAA;YAElH,OAAO,IAAI,CACT,OAAO,CAAC,GAAG,CACT,CAAC,sBAAsB,EAAE,wBAAwB,EAAE,sBAAsB,EAAE,oBAAoB,CAAC;iBAC7F,GAAG;;;;YAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAC,CACvD,CAAC,IAAI;;;;YAAC,CAAC,CAAC,uBAAuB,EAAE,yBAAyB,EAAE,uBAAuB,EAAE,qBAAqB,CAAC;gBAC1G,OAAO,CAAC,KAAK,CAAC,mDAAmD,EAAE,uBAAuB,CAAC,CAAC;gBAC5F,OAAO,CAAC,KAAK,CAAC,qDAAqD,EAAE,yBAAyB,CAAC,CAAC;gBAChG,OAAO,CAAC,KAAK,CAAC,kDAAkD,EAAE,uBAAuB,CAAC,CAAC;gBAC3F,OAAO,CAAC,KAAK,CAAC,gDAAgD,EAAE,qBAAqB,CAAC,CAAC;;;oBAGnF,eAAe,GAAgB,IAAI,WAAW,EAAE;;oBAChD,mBAAmB,GAA2B,IAAI,KAAK,EAAmB;;oBAC1E,eAAe,GAAuB,IAAI,KAAK,EAAe;;oBAC9D,WAAW,GAAmB,IAAI,KAAK,EAAW;;oBAElD,wBAAwB,GAAuC,IAAI,KAAK,EAA+B;;oBACvG,wBAAwB,GAAmC,IAAI,KAAK,EAA2B;;oBAC/F,0BAA0B,GAA6C,IAAI,KAAK,EAAqC;;oBACrH,4BAA4B,GAA6C,IAAI,KAAK,EAAqC;;oBAEvH,mBAAkC;;gBAGtC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,qBAAqB,CAAC,CAAC;gBAC7E,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,mBAAmB,CAAC,CAAC;;gBAGpF,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;gBACzF,OAAO,CAAC,KAAK,CAAC,oDAAoD,EAAE,wBAAwB,CAAC,CAAC;gBAE9F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACjC,GAAG,GAAgB,IAAI,WAAW,EAAE;oBACxC,GAAG,CAAC,MAAM,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC;oBACzC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC3B;;gBAGD,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;gBACzF,OAAO,CAAC,KAAK,CAAC,oDAAoD,EAAE,wBAAwB,CAAC,CAAC;;gBAG9F,0BAA0B,GAAG,IAAI,CAAC,kCAAkC,CAAC,KAAK,EAAE,yBAAyB,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;gBAClI,4BAA4B,GAAG,IAAI,CAAC,kCAAkC,CAAC,KAAK,EAAE,yBAAyB,EAAE,cAAc,CAAC,YAAY,CAAC,CAAC;gBAEtI,OAAO,CAAC,KAAK,CAAC,sDAAsD,EAAE,0BAA0B,CAAC,CAAC;gBAClG,OAAO,CAAC,KAAK,CAAC,wDAAwD,EAAE,4BAA4B,CAAC,CAAC;;gBAGtG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACjC,GAAG,GAAY,IAAI,OAAO,EAAE;oBAChC,GAAG,CAAC,MAAM,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBAChF,GAAG,CAAC,UAAU,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,0BAA0B,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBACxF,GAAG,CAAC,YAAY,GAAG,CAAC,4BAA4B,CAAC,CAAC,CAAC,IAAI,4BAA4B,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBAE9F,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACvB;;gBAID,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACjC,GAAG,GAAoB,IAAI,eAAe,EAAE;oBAChD,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,GAAG,CAAC,cAAc,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;oBAC5C,GAAG,CAAC,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;oBAClC,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC1B,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC/B;;gBAID,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;iBACtD;gBAGD,OAAO,CAAC,KAAK,CAAC,2CAA2C,EAAE,eAAe,CAAC,CAAC;gBAC5E,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,WAAW,CAAC,CAAC;gBACpE,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,mBAAmB,CAAC,CAAC;gBACpF,OAAO,CAAC,KAAK,CAAC,2CAA2C,EAAE,eAAe,CAAC,CAAC;gBAE5E,OAAO,eAAe,CAAC;aACxB,EAAC,CACH,CAAC;SACH;QACD,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,mCAAmC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3G,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACtD;QAED,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;;;;;;;;;IAMO,mBAAmB,CAAC,KAAoB,EAAE,qBAA0B;;YACtE,MAAM,GAAkB,IAAI,KAAK,EAAU;QAE/C,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,qBAAqB,CAAC,CAAC;QAEpF,IAAI;YACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;oBACjC,cAAc,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC,MAAM;;;;gBAAC,CAAC,IAAI,CAAC,CAAC,SAAS,IAAI,gBAAgB;uBACzF,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,EAAC;gBAE5B,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,cAAc,CAAC,CAAC;gBACtE,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5E,OAAO,CAAC,KAAK,CAAC,4CAA4C,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACxF,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aACzC;YACD,OAAO,MAAM,CAAC;SACf;QACD,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,4BAA4B,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SACrG;QACD,OAAO,IAAI,CAAC;KACb;;;;;;;;IAGO,kCAAkC,CAAC,KAAoB,EAAE,yBAA8B,EAAE,QAAwB;;YAEnH,MAAM,GAA6C,IAAI,KAAK,EAAqC;QAErG,OAAO,CAAC,KAAK,CAAC,4CAA4C,EAAE,KAAK,CAAC,CAAC;QACnE,OAAO,CAAC,KAAK,CAAC,gEAAgE,EAAE,yBAAyB,CAAC,CAAC;QAE3G,IAAI;YACF,IAAI,yBAAyB,EAAE;;oBACzB,QAAQ,GAAG,yBAAyB,CAAC,MAAM,CAAC;;oBAE5C,gBAAgB,GAAe,IAAI,KAAK,EAAO;gBAEnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACjC,QAAQ,GAAG,QAAQ,CAAC,MAAM;;;;oBAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,cAAc,IAAI,QAAQ,EAAC;oBAC3F,IAAI,QAAQ;wBACV,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnC;gBAED,OAAO,CAAC,KAAK,CAAC,uDAAuD,EAAE,gBAAgB,CAAC,CAAC;gBAEzF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBAC5C,GAAG,GAAsC,IAAI,KAAK,EAA8B;oBACpF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;4BAE/C,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;4BAE5B,IAAI,GAA+B,IAAI,0BAA0B,EAAE;wBACvE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;wBAC3B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;wBAC/B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;wBACjC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;wBACjC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC;wBACtC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;wBACzB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;wBACrB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;wBAC/B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAChB;oBACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAClB;gBACD,OAAO,MAAM,CAAC;aACf;iBACI;gBAAE,MAAM,WAAW,CAAC;aAAE;SAC5B;QACD,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,8CAA8C,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SACvH;QACD,OAAO,IAAI,CAAC;KACb;;;;;;;IAEO,wBAAwB,CAAC,KAAoB,EAAE,uBAA4B;;YAC7E,MAAM,GAAmC,IAAI,KAAK,EAA2B;QAEjF,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QACzD,OAAO,CAAC,KAAK,CAAC,oDAAoD,EAAE,uBAAuB,CAAC,CAAC;QAE7F,IAAI;YACF,IAAI,uBAAuB,EAAE;;oBACvB,QAAQ,GAAG,uBAAuB,CAAC,MAAM,CAAC;;oBAC1C,gBAAgB,GAAe,IAAI,KAAK,EAAO;gBAEnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACjC,QAAQ,GAAG,QAAQ,CAAC,MAAM;;;;oBAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,EAAC;oBAC3D,IAAI,QAAQ;wBACV,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnC;gBAED,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,gBAAgB,CAAC,CAAC;gBAE/E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBAC5C,GAAG,GAA4B,IAAI,KAAK,EAAoB;oBAChE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;4BAE/C,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;4BAE5B,IAAI,GAAqB,IAAI,gBAAgB,EAAE;wBACnD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;wBACrB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;wBACzB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;wBAC/B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAChB;oBACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAClB;gBACD,OAAO,MAAM,CAAC;aACf;iBACI;gBAAE,MAAM,WAAW,CAAC;aAAE;SAC5B;QACD,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,mCAAmC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SAC5G;QAED,OAAO,IAAI,CAAC;KACb;;;;;;;IAEO,wBAAwB,CAAC,KAAoB,EAAE,uBAA4B;;YAC7E,MAAM,GAAuC,IAAI,KAAK,EAA+B;QAEzF,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QACzD,OAAO,CAAC,KAAK,CAAC,oDAAoD,EAAE,uBAAuB,CAAC,CAAC;QAE7F,IAAI;YACF,IAAI,uBAAuB,EAAE;;oBAEvB,QAAQ,GAAG,uBAAuB,CAAC,MAAM,CAAC;;oBAC1C,gBAAgB,GAAe,IAAI,KAAK,EAAO;gBAEnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACjC,QAAQ,GAAG,QAAQ,CAAC,MAAM;;;;oBAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,EAAC;oBAC3D,IAAI,QAAQ;wBACV,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACnC;gBAED,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,gBAAgB,CAAC,CAAC;gBAE/E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBAC5C,GAAG,GAAgC,IAAI,KAAK,EAAwB;oBACxE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;4BAE/C,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;4BAC5B,IAAI,GAAyB,IAAI,oBAAoB,EAAE;wBAC3D,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;wBACrB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;wBACrB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;wBACzB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;wBAC3B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;wBACrB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAChB;oBACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAClB;gBACD,OAAO,MAAM,CAAC;aACf;iBACI;gBAAE,MAAM,WAAW,CAAC;aAAE;SAC5B;QACD,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,kCAAkC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SAC3G;QACD,OAAO,IAAI,CAAC;KACb;;;;;;;IAQM,yBAAyB;QAC9B,IAAI;;gBACE,uBAAuB,sBAAqD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,sBAAsB,CAAC,EAAA;YAC9H,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI;;;;YAAC,IAAI;gBAE/E,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;;;oBAGxC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAC;;oBAEhD,SAAS,GAAqB,IAAI,gBAAgB,EAAE;;oBACpD,GAAG,GAA8B,IAAI,KAAK,EAAsB;gBAEpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;wBACpC,IAAI,GAAuB,IAAI,kBAAkB,EAAE;;wBACnD,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC;oBAE5B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;oBACpC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,KAAK,GAAG,CAAC;oBAC9C,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;oBAC5C,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,iBAAiB,CAAC;oBACtD,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,eAAe,CAAC;oBAClD,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,sBAAsB,CAAC;oBAChE,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,sBAAsB,CAAC;oBAChE,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC,mBAAmB,CAAC;oBAE1D,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC,oBAAoB,CAAC;oBAC5D,IAAI,CAAC,wBAAwB,GAAG,UAAU,CAAC,wBAAwB,CAAC;oBACpE,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC,oBAAoB,CAAC;oBAC5D,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC,sBAAsB,CAAC;oBAChE,IAAI,CAAC,uBAAuB,GAAG,UAAU,CAAC,uBAAuB,CAAC;oBAElE,IAAI,CAAC,0BAA0B,GAAG,UAAU,CAAC,0BAA0B,CAAC;oBAExE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAChB;gBAED,SAAS,CAAC,cAAc,GAAG,GAAG,CAAC;gBAG/B,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;gBACxC,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxD,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;gBACrD,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE1E,OAAO,SAAS,CAAC;aAClB,EAAC,CAAC,CAAC;SACL;QACD,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,mCAAmC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SAC5G;QAED,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;;;;;IAGM,0BAA0B,CAAC,OAAe;QAC/C,IAAI;;gBACE,aAAa,sBAAuC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,EAAA;YAC/F,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAClC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;SAChE;QACD,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,oCAAoC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5G,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,OAAO,CAAC,CAAC;SAC/D;QACD,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;;;;;;;;;;;;;;;;;;;;IAoBM,QAAQ,CAAC,GAAW,EAAE,OAAc,IAAI;QAC7C,IAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;KAC5C;;;;;;IAEM,SAAS,CAAC,GAAW,EAAE,IAAY;;YACpC,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;KAC5C;;;;;;;IAKM,cAAc,CAAC,IAA0B;;;YAG1C,SAAS,GAAyB,IAAI,oBAAoB,EAAE;QAChE,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACnD,SAAS,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/D,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACnD,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACzD,SAAS,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;;YAExD,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB;aAClD,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC;aACnD,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;aAC3C,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC;aAC/C,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAEpD,OAAO,GAAG,CAAC;KACZ;;;;;;;IAGM,wBAAwB,CAAC,IAA0B,EAAE,KAAa,EAAE,MAAe;QAExF,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;;;YAG/C,SAAS,GAAyB,IAAI,oBAAoB,EAAE;QAChE,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnC,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACnD,SAAS,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/D,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACnD,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACzD,SAAS,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;;YAExD,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB;aAClD,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC;aACnD,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC;aAC3C,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC;aAC/C,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC;;YAEhD,GAAG,GAAG,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG,KAAK;;YAC1C,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;QAErB,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAExE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC;YAAE,OAAO,GAAG,CAAC;QACvD,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KAC1C;;;;;;IAEM,aAAa,CAAC,SAAiB,EAAE,WAAmB;QAEzD,IAAG,SAAS,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC;;YAE5C,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,WAAW,IAAI,GAAG,CAAC;QACrD,OAAO,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;KACxB;;;;;;;;IAEM,mBAAmB,CAAC,SAAiB,EAAE,WAAmB,EAAE,SAAiB,EAAE,OAAe;QAEnG,IAAG,SAAS,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC;;YAE5C,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,WAAW,IAAI,GAAG,CAAC,GAAG,OAAO;QAE/D,OAAO,CAAC,GAAG,IAAI,SAAS,IAAI,SAAS,GAAG,GAAG,CAAE;KAC9C;;;YAlmBF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YAvBQ,WAAW;YAAE,UAAU;YAA8C,aAAa;YAAsB,eAAe;YAgBvH,iBAAiB;YAjBL,YAAY;;;AA0E/BD;IADC,KAAK,CAAC,4BAA4B,CAAC;;;oCACH,UAAU;6DAE1C;AAQDA;IADC,KAAK,CAAC,4BAA4B,CAAC;;;oCACU,UAAU;0EAiBvD;AA6EDA;IADC,KAAK,CAAC,aAAa,CAAC;;qCACiB,KAAK;oCAAW,UAAU;8DAoG/D;AA2LDA;IADC,KAAK,CAAC,kBAAkB,CAAC;;;oCACU,UAAU;gEAsD7C;;;;;;;;ICtgBC,UAAW,GAAG;IACd,MAAO,GAAG;IACV,QAAS,GAAG;;;;;;;;;ICFZ,MAAO,MAAM;IACb,KAAM,KAAK;;;;;;;ICGF,mBAAmB;;;;;;;;;IAoB5B,YAAY,EAAS,EAAE,IAAW,EAAE,eAAgC,EAAE,QAA6B,EAAE,KAAa,EAAE,KAAa;QAC7H,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACvB;;;;;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,KAAY;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KAC1B;;;;;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,KAAY;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KAC1B;;;;;IAGD,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAChC;;;;;IAED,IAAI,eAAe,CAAC,KAAqB;QACrC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;KACjC;;;;;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,KAAyB;QAClC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KAC1B;;;;;IAGD,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;;;;IAED,IAAI,KAAK,CAAC,KAAY;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACvB;;;;;IAGD,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;;;;IAED,IAAI,KAAK,CAAC,KAAY;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACvB;CAEJ,CAAA;AAhFGA;IADC,QAAQ;;sDACiB;AAG1BA;IADC,QAAQ;;sDACiB;AAG1BA;IADC,QAAQ;;6DACiC;AAG1CA;IADC,QAAQ;;sDAC8B;AAGvCA;IADC,QAAQ;;mDACc;AAGvBA;IADC,QAAQ;;mDACc;AAlBd,mBAAmB;IAD/B,IAAI,CAAC,qBAAqB,CAAC;;GACf,mBAAmB,CAmF/B;;;;;;ICnFY,YAAY;;;;;;;;;;;IA0BrB,YAAY,QAAe,EACf,QAA6B,EAC7B,QAAyB,EACzB,IAAW,EACX,QAAgB,EAChB,IAAY,EACZ,MAAc,EACd,OAAe;QAEX,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KAC3B;;;;;;IAIb,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,IAAY;QACrB,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC;KAC1B;;;;;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,IAA0B;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;;;;;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,SAAS,CAAC,IAAsB;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;;;;;IAGD,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;IAED,IAAI,IAAI,CAAC,GAAW;QAChB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;KACpB;;;;;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,GAAW;QACpB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;KACxB;;;;;IAGD,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;IAED,IAAI,IAAI,CAAC,GAAW;QAChB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;KACpB;;;;;IAGD,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;IAED,IAAI,MAAM,CAAC,GAAW;QAClB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAE;KACvB;;;;;IAGD,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;IAED,IAAI,OAAO,CAAC,GAAW;QACnB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;KACvB;;;;;IAKD,aAAa;;YACN,GAAG,GAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO;QAC7E,OAAO,GAAG,CAAC;KACb;;;;IAED,cAAc;;YACN,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE;QACnI,OAAO,GAAG,CAAC;KACd;;;;;;IAED,sBAAsB,CAAC,SAAiB,EAAE,WAAmB;QACzD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,WAAW,IAAI,GAAG,CAAE,CAAC;KACvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCD,aAAa;QACT,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,CAAE;KACzB;;;;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,QAAQ,GAAI,CAAC,CAAC;KAC7B;;;;IAED,aAAa;QACT,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KACxB;;;;IAED,eAAe;QACX,OAAO,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KAC3B;;;;IAED,gBAAgB;QACZ,OAAO,IAAI,CAAC,OAAO,GAAI,CAAC,CAAC;KAC5B;CAEJ,CAAA;AAvLGA;IADC,QAAQ;;+CACiB;AAG1BA;IADC,QAAQ;;+CAC+B;AAGxCA;IADC,QAAQ;;+CAC2B;AAGpCA;IADC,QAAQ;;2CACa;AAGtBA;IADC,QAAQ;;+CACiB;AAG1BA;IADC,QAAQ;;2CACa;AAGtBA;IADC,QAAQ;;6CACe;AAGxBA;IADC,QAAQ;;8CACgB;AAxBhB,YAAY;IADxB,IAAI,CAAC,cAAc,CAAC;;GACR,YAAY,CA0LxB;;;;;;IC1LY,iBAAiB;IAW1B;QACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC;KAC5C;;;;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,IAAY;QACrB,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC;KAC1B;;;;;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,IAA0B;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;;;;;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,IAAsB;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;CACJ,CAAA;AAvCGA;IADC,QAAQ;;oDACiB;AAG1BA;IADC,QAAQ;;oDAC+B;AAGxCA;IADC,QAAQ;;oDAC2B;AAT3B,iBAAiB;IAD7B,IAAI,CAAC,mBAAmB,CAAC;;GACb,iBAAiB,CA0C7B;;;;;;;;IC9CG,QAAS,QAAQ;IACjB,QAAS,QAAQ;;;;;;;ICER,sBAAsB;IADnC;QAIY,uBAAkB,GAAW,GAAG,CAAC;KAgC5C;;;;IA9BG,IAAW,iBAAiB;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAClC;;;;;IAED,IAAW,iBAAiB,CAAC,KAAa;QACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;KACnC;;;;;IAEM,YAAY,CAAC,IAAgC;QAChD,QAAQ,IAAI;YACR,KAAK,0BAA0B,CAAC,MAAM;gBAClC,OAAO,EAAE,CAAC;YACd,KAAK,0BAA0B,CAAC,MAAM;gBAClC,OAAO,CAAC,CAAC;YACb;gBACI,OAAO,CAAC,CAAC;SAChB;KACJ;;;;;IAEM,YAAY,CAAC,IAAgC;QAChD,QAAQ,IAAI;YACR,KAAK,0BAA0B,CAAC,MAAM;gBAClC,OAAO,GAAG,CAAC;YACf,KAAK,0BAA0B,CAAC,MAAM;gBAClC,OAAO,CAAC,CAAC;YACb;gBACI,OAAO,CAAC,CAAC;SAChB;KACJ;CAEJ,CAAA;AAhCGA;IADC,QAAQ;;kEACgC;AAHhC,sBAAsB;IADlC,IAAI,CAAC,wBAAwB,CAAC;GAClB,sBAAsB,CAmClC;;;;;;ACvCD;IAIA;QACW,YAAO,GAAW,EAAE,CAAC;QACrB,cAAS,GAAW,EAAE,CAAC;QACvB,aAAQ,GAAW,EAAE,CAAC;QACtB,cAAS,GAAY,KAAK,CAAC;QAC3B,aAAQ,GAAyB,oBAAoB,CAAC,MAAM,CAAC;QAC7D,aAAQ,GAA8B,yBAAyB,CAAC,MAAM,CAAC;;QAEvE,eAAU,GAAW,EAAE,CAAC;QACxB,SAAI,GAAW,CAAC,CAAC;QACjB,aAAQ,GAAW,CAAC,CAAC;QACrB,WAAM,GAAW,CAAC,CAAC;QACnB,cAAS,GAAW,CAAC,CAAC;KAChC;CAAA;;;;;;ICXY,oBAAoB;IADjC;QAIW,YAAO,GAAW,EAAE,CAAC;QAGrB,cAAS,GAAW,EAAE,CAAC;QAGvB,aAAQ,GAAW,EAAE,CAAC;QAGtB,cAAS,GAAY,KAAK,CAAC;QAG3B,aAAQ,GAAyB,oBAAoB,CAAC,MAAM,CAAC;QAG7D,aAAQ,GAA8B,yBAAyB,CAAC,MAAM,CAAC;;QAIvE,eAAU,GAAW,EAAE,CAAC;QAGxB,SAAI,GAAW,CAAC,CAAC;QAGjB,aAAQ,GAAW,CAAC,CAAC;QAGrB,WAAM,GAAW,CAAC,CAAC;QAGnB,cAAS,GAAW,CAAC,CAAC;KAChC;CAAA,CAAA;AAhCGA;IADC,QAAQ;;qDACmB;AAG5BA;IADC,QAAQ;;uDACqB;AAG9BA;IADC,QAAQ;;sDACoB;AAG7BA;IADC,QAAQ;;uDACyB;AAGlCA;IADC,QAAQ;;sDAC2D;AAGpEA;IADC,QAAQ;;sDACqE;AAI9EA;IADC,QAAQ;;wDACsB;AAG/BA;IADC,QAAQ;;kDACe;AAGxBA;IADC,QAAQ;;sDACmB;AAG5BA;IADC,QAAQ;;oDACiB;AAG1BA;IADC,QAAQ;;uDACoB;AAlCpB,oBAAoB;IADhC,IAAI,CAAC,sBAAsB,CAAC;GAChB,oBAAoB,CAmChC;;;;;;ICpCY,aAAa;IAWtB;QACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,yBAAyB,CAAC,IAAI,CAAC;KACxD;;;;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,IAAY;QACrB,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC;KAC1B;;;;;IAGD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,IAA0B;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;;;;;IAGD,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,cAAc,CAAC;KAC9B;;;;;IAED,IAAI,aAAa,CAAC,IAA8B;QAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC9B;CAEJ,CAAA;AAxCGA;IADC,QAAQ;;gDACiB;AAG1BA;IADC,QAAQ;;gDAC+B;AAGxCA;IADC,QAAQ;;qDACyC;AATzC,aAAa;IADzB,IAAI,CAAC,eAAe,CAAC;;GACT,aAAa,CA2CzB;;;;;;AC9CD;;;;IAuCI,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QApC9C,uBAAkB,GAAG,IAAI,CAAC;;QAG3B,aAAQ,GAAW,EAAE,CAAC;QACtB,cAAS,GAAW,EAAE,CAAC;;QAGvB,iBAAY,GAAW,EAAE,CAAC;QAC1B,oBAAe,GAAW,EAAE,CAAC;QAC7B,iBAAY,GAAW,EAAE,CAAC;QAE1B,qBAAgB,GAAW,EAAE,CAAC;QAC9B,wBAAmB,GAAW,EAAE,CAAC;QACjC,qBAAgB,GAAW,EAAE,CAAC;QAE9B,iBAAY,GAAW,EAAE,CAAC;QAC1B,oBAAe,GAAW,EAAE,CAAC;QAC7B,iBAAY,GAAW,EAAE,CAAC;QAE1B,mBAAc,GAAW,EAAE,CAAC;QAC5B,sBAAiB,GAAW,EAAE,CAAC;QAC/B,mBAAc,GAAW,EAAE,CAAC;QAE5B,oBAAe,GAAW,EAAE,CAAC;QAC7B,uBAAkB,GAAW,EAAE,CAAC;QAChC,oBAAe,GAAW,EAAE,CAAC;QAE7B,oBAAe,GAAW,EAAE,CAAC;QAC7B,uBAAkB,GAAW,EAAE,CAAC;QAChC,gBAAW,GAAW,EAAE,CAAC;QACzB,gBAAW,GAAW,EAAE,CAAC;;QAGzB,eAAU,GAAW,EAAE,CAAC;QAK3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAEtD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QACpE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QAE1D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAChE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC5E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAE7D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QACpE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAEzD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;QACxE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAE3D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAC9D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;QAC1E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAE5D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QAExD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,kCAAkC,CAAC,CAAC;QAC1F,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,iCAAiC,CAAC,CAAC;QACtF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,4BAA4B,CAAC,CAAC;QAC7E,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,4BAA4B,CAAC,CAAC;KAChF;;;;;;IAIO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;YACtB,aAAa,EAAE,EAAE;YACjB,gBAAgB,EAAE,EAAE;SAEvB,CAAA;KACJ;;;;;;IAGO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACJ;;;;;;ACzFD;;;;IAcI,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QAX9C,uBAAkB,GAAG,IAAI,CAAC;;QAG3B,iBAAY,GAAW,EAAE,CAAC;QAC1B,aAAQ,GAAW,EAAE,CAAC;QACtB,cAAS,GAAW,EAAE,CAAC;QACvB,gBAAW,GAAW,EAAE,CAAC;QACzB,aAAQ,GAAU,EAAE,CAAC;QAErB,0BAAqB,GAAW,EAAE,CAAC;QAGtC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QAEpD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;KAChF;;;;;;IAGO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;;SAEzB,CAAA;KACJ;;;;;;IAEO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACJ;;;;;;ACnCD;;;;IA0BI,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QAvB9C,uBAAkB,GAAG,IAAI,CAAC;QAE3B,mBAAc,GAAW,EAAE,CAAC;QAC5B,gBAAW,GAAW,EAAE,CAAC;QAEzB,aAAQ,GAAW,EAAE,CAAC;QACtB,oBAAe,GAAW,EAAE,CAAC;QAE7B,iBAAY,GAAW,EAAE,CAAC;QAC1B,wBAAmB,GAAW,EAAE,CAAC;QAEjC,oBAAe,GAAW,EAAE,CAAC;QAC7B,2BAAsB,GAAW,EAAE,CAAC;QAEpC,eAAU,GAAW,EAAE,CAAC;QACxB,sBAAiB,GAAW,EAAE,CAAC;QAE/B,gBAAW,GAAW,EAAE,CAAC;QACzB,uBAAkB,GAAW,EAAE,CAAC;QAEhC,mBAAc,GAAW,EAAE,CAAC;QAC5B,mBAAc,GAAW,EAAE,CAAC;QAG/B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAE1D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;QACjE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;QAEjE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QAEpE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAE5E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QACnE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QAE3E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;QAExE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;KAE7E;;;;;;IAIO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;;SAEzB,CAAA;KACJ;;;;;;IAEO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACJ;;;;;;AChED;;;;IAaI,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QAV9C,uBAAkB,GAAG,IAAI,CAAC;QAE3B,6BAAwB,GAAW,EAAE,CAAC;QACtC,cAAS,GAAW,EAAE,CAAC;QACvB,aAAQ,GAAW,EAAE,CAAC;QACtB,eAAU,GAAW,EAAE,CAAC;QAExB,uBAAkB,GAAW,EAAE,CAAC;QAChC,wBAAmB,GAAW,EAAE,CAAC;QAGpC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,CAAC;QACvF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;QACxE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;KAC9E;;;;;;IAGO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;;SAEzB,CAAA;KACJ;;;;;;IAEO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACJ;;;;;;ACnCD;;;;IAWI,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QAR9C,uBAAkB,GAAG,IAAI,CAAC;QAE3B,cAAS,GAAW,EAAE,CAAC;QACvB,gBAAW,GAAW,EAAE,CAAC;QACzB,aAAQ,GAAW,EAAE,CAAC;QACtB,iBAAY,GAAW,EAAE,CAAC;QAC1B,oBAAe,GAAW,EAAE,CAAC;QAGhC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;KACrE;;;;;;IAGO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;;SAEzB,CAAA;KACJ;;;;;;IAEO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACJ;;;;;;AC/BD;;;;IAaI,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QAV9C,uBAAkB,GAAG,IAAI,CAAC;QAE3B,oBAAe,GAAW,EAAE,CAAC;QAC7B,mBAAc,GAAW,EAAE,CAAC;QAC5B,aAAQ,GAAW,EAAE,CAAC;QACtB,iBAAY,GAAW,EAAE,CAAC;QAC1B,eAAU,GAAW,EAAE,CAAC;QACxB,kBAAa,GAAW,EAAE,CAAC;QAI9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QACxE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;KACjE;;;;;;IAGO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;;SAEzB,CAAA;KACJ;;;;;;IAEO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACJ;;;;;;ACnCD;;;;IAYI,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QAT9C,uBAAkB,GAAG,IAAI,CAAC;QAE3B,sBAAiB,GAAW,EAAE,CAAC;QAC/B,aAAQ,GAAW,EAAE,CAAC;QACtB,iBAAY,GAAW,EAAE,CAAC;QAC1B,eAAU,GAAW,EAAE,CAAC;QACxB,kBAAa,GAAW,EAAE,CAAC;QAI9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QAC5E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;KACjE;;;;;;IAGO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;;SAEzB,CAAA;KACJ;;;;;;IAEO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACJ;;;;;;ACnCD;;;;IAmBI,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QAd9C,uBAAkB,GAAG,IAAI,CAAC;QAC1B,cAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QAEtC,gBAAW,GAAU,EAAE,CAAC;QACxB,iBAAY,GAAU,EAAE,CAAC;QACzB,aAAQ,GAAW,EAAE,CAAC;QACtB,iBAAY,GAAW,EAAE,CAAC;QAC1B,eAAU,GAAW,EAAE,CAAC;QACxB,iBAAY,GAAW,EAAE,CAAC;QAC1B,kBAAa,GAAW,EAAE,CAAC;QAC3B,oBAAe,GAAW,EAAE,CAAC;QAKhC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QAC/D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;QAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACjF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QAEvF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACzE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC7E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;KACtF;;;;;;IAGO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;;SAEzB,CAAA;KACJ;;;;;;IAEO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACJ;;;;;;AC1CD;;;;IAiBI,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QAd9C,uBAAkB,GAAG,IAAI,CAAC;;QAG3B,cAAS,GAAW,EAAE,CAAC;QACvB,gBAAW,GAAW,EAAE,CAAC;QACzB,aAAQ,GAAU,EAAE,CAAC;QACrB,iBAAY,GAAW,EAAE,CAAC;QAC1B,oBAAe,GAAW,EAAE,CAAC;QAE7B,aAAQ,GAAW,EAAE,CAAC;QACtB,iBAAY,GAAW,EAAE,CAAC;QAC1B,eAAU,GAAW,EAAE,CAAC;QACxB,kBAAa,GAAW,EAAE,CAAC;QAG9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;QAElE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;KACjE;;;;;;IAGO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;;SAEzB,CAAA;KACJ;;;;;;IAEO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACJ;;;;;;AC3CD;;;;IAkDQ,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;;QAhD9C,uBAAkB,GAAG,IAAI,CAAC;;QAG3B,cAAS,GAAW,EAAE,CAAC;QACvB,gBAAW,GAAW,EAAE,CAAC;QACzB,aAAQ,GAAU,EAAE,CAAC;QACrB,iBAAY,GAAW,EAAE,CAAC;QAC1B,oBAAe,GAAW,EAAE,CAAC;QAC7B,+BAA0B,GAAW,EAAE,CAAC;QAExC,cAAS,GAAU,EAAE,CAAC;QACtB,wBAAmB,GAAU,EAAE,CAAC;QAChC,0BAAqB,GAAU,EAAE,CAAC;QAClC,uBAAkB,GAAW,EAAE,CAAC;QAChC,sCAAiC,GAAW,EAAE,CAAC;QAC/C,qCAAgC,GAAU,EAAE,CAAC;;QAG7C,2BAAsB,GAAW,EAAE,CAAC;QACpC,2BAAsB,GAAW,EAAE,CAAC;QACpC,iCAA4B,GAAW,EAAE,CAAC;;QAG1C,0BAAqB,GAAW,EAAE,CAAC;QACnC,oBAAe,GAAW,EAAE,CAAC;QAC7B,qBAAgB,GAAW,EAAE,CAAC;QAC9B,0BAAqB,GAAW,EAAE,CAAC;QACnC,0BAAqB,GAAW,EAAE,CAAC;QAEnC,mBAAc,GAAW,EAAE,CAAC;QAC5B,mBAAc,GAAW,EAAE,CAAC;QAC5B,mBAAc,GAAW,EAAE,CAAC;QAC5B,mBAAc,GAAW,EAAE,CAAC;QAE5B,wBAAmB,GAAW,EAAE,CAAC;QACjC,wBAAmB,GAAW,EAAE,CAAC;QACjC,wBAAmB,GAAW,EAAE,CAAC;QACjC,wBAAmB,GAAW,EAAE,CAAC;QAEjC,qBAAgB,GAAW,EAAE,CAAC;QAC9B,qBAAgB,GAAW,EAAE,CAAC;QAC9B,qBAAgB,GAAW,EAAE,CAAC;QAE9B,yBAAoB,GAAW,EAAE,CAAC;QAClC,yBAAoB,GAAW,EAAE,CAAC;QAKrC,IAAI,CAAC,qBAAqB,EAAE,CAAC;;QAG7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;QAElE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,sBAAsB,CAAC,8BAA8B,CAAC,CAAC;QAE9F,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;QAC5E,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QAChF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;QAC1E,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,sBAAsB,CAAC,kCAAkC,CAAC,CAAC;;QAGzG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,CAAC;QACnF,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;QAClF,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,sBAAsB,CAAC,6BAA6B,CAAC,CAAC;;QAG/F,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QAEhF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;QACtE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,CAAC;QAClF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,CAAC;QAElF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QAClE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QACnE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QAEnE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;QAC7E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;QAC7E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;QAC7E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;QAE7E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;QACvE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;QACvE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;QAEvE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QAC/E,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QAE/E,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,sBAAsB,CAAC,mCAAmC,CAAC,CAAC;KAE5G;;;;;;IAGO,qBAAqB;QAEzB,IAAI,CAAC,kBAAkB,GAAG;;SAEzB,CAAA;KACJ;;;;;;IAEO,sBAAsB,CAAC,SAAiB;QAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC1F;CACR;;;;;;;;ICjHG,MAAO,GAAG;IACV,UAAW,GAAG;IACd,MAAO,GAAG;IACV,QAAS,IAAI;IACb,SAAU,GAAG;IACb,QAAS,QAAQ;;;;;;;;;ICLjB,IAAK,IAAI;IACT,IAAK,IAAI;IACT,IAAK,IAAI;IACT,IAAK,IAAI;IACT,QAAS,QAAQ;;;;;;;;;;;;;;;;;ACLrB;;;YAMC,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,UAAU;oBACV,QAAQ;oBACR,YAAY;iBACb;gBACD,YAAY,EAAE,EAEZ;gBACF,OAAO,EAAE,EACR;aACF;;;;;;;ACdD;;;;IAWI,YAAY,UAAsB;QAH1B,UAAK,GAAW,CAAC,CAAC,CAAC;QAIvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;;;;;IAED,OAAO,CAAC,KAAa;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;IAED,UAAU;QACN,OAAO,qBAAqB,CAAC;KAChC;;;;IAED,WAAW;QACP,OAAO,4CAA4C,CAAC;KACvD;;;;IAED,UAAU;QACN,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;;YAE3B,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QACjD,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;;YAE7C,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,+BAA+B,CAAC;QAChF,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QAE7C,IAAG,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,EAAE;YACjD,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI;;;;YAAC,IAAI;gBAC/D,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC;gBACzD,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE9E,OAAO,IAAI,CAAC;aACf,EAAC,CAAC,CAAC;SACP;aACI;YACD,EAAE,CAAC,KAAK,CAAC,CAAC;YACV,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;SAClC;KACJ;CAEJ;;;;;;AC1CD;;;;;IAQI,IAAI,QAAQ,CAAC,EAAS;QAClB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;;;;IAED,IAAI,QAAQ,CAAC,IAAqB;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KACjC;;;;;IAED,IAAI,QAAQ,CAAC,IAAyB;QAClC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;KACrC;;;;;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;;;;;;IAOD,iBAAe;;;;;IAEf,UAAU;QACN,OAAO,wBAAwB,CAAC;KACnC;;;;IAED,WAAW;;QAEP,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACzB,OAAO,gDAAgD,CAAC;SACzD;aACI,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC9B,OAAO,gDAAgD,CAAC;SACzD;aACI;;YAEH,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAC7C,OAAO,EAAE,CAAC;SACX;KACJ;;;;IAGD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC9C;CAuBJ;;;;;;ACpFD;;;;IAgBI,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;IAED,IAAW,UAAU,CAAC,KAAY;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;;;;;IAED,IAAI,QAAQ,CAAC,EAAS;QAClB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;;;;IAED,IAAI,QAAQ,CAAC,IAAqB;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KACjC;;;;;IAED,IAAI,QAAQ,CAAC,IAAyB;QAClC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;KACrC;;;;IAGD,YAAY,UAAqB;QAC7B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;;;;IAED,UAAU;QACN,OAAO,4BAA4B,CAAC;KACvC;;;;IAED,WAAW;;QAEP,OAAO,mDAAmD,CAAC;KAC9D;;;;IAGD,UAAU;QAEN,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;;YAClC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QAEjD,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,UAAU,CAAC,CAAC;;YACpD,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,0BAA0B,CAAC;QAEpF,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,iBAAiB,CAAC,CAAC;QACtE,IAAG,UAAU,IAAI,SAAS,IAAI,iBAAiB,IAAI,SAAS,EAAE;YAC1D,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI;;;;YAAC,IAAI;gBACxE,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;aACxD,EAAC,CAAC,IAAI;;;;YAAC,IAAI;;oBACJ,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;;oBACnB,UAAU,GAAG,IAAI,CAAC,MAAM;;;;gBAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,IAAI,EAAC;;oBACjD,WAAW,GAAG,IAAI,CAAC,MAAM;;;;gBAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,IAAI,EAAC;gBACtD,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;gBACtD,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,UAAU,CAAC,CAAC;gBAC7D,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,WAAW,CAAC,CAAC;;oBAE3D,GAAG,GAAG,EAAE;gBACZ,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACrB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;gBAE/C,OAAO,GAAG,CAAC;aACd,EAAC,CAAC,IAAI;;;;YAAC,IAAI;;oBACJ,IAAI,GAAG,IAAI;;oBACX,kBAAkB,GACtB;oBACI,UAAU,EAAE,MAAM;oBAClB,UAAU,EAAE,OAAO;oBACnB,QAAQ,EAAC,EAAE;iBACd;;oBAEG,kBAAkB,GACtB;oBACI,UAAU,EAAE,MAAM;oBAClB,UAAU,EAAE,OAAO;oBACnB,QAAQ,EAAC,EAAE;iBACd;gBAED,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;oBAEpC,oBAAoB,GAAG,EAAE;gBAE7B,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAC9C,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAE9C,OAAO,CAAC,KAAK,CAAC,2CAA2C,EAAE,oBAAoB,CAAC,CAAC;gBACjF,OAAO,oBAAoB,CAAC;aAC/B,EAAC,CAAC,IAAI;;;;YAAC,IAAI;;oBACJ,IAAI,GAAG,IAAI;gBACf,OAAO,CAAC,KAAK,CAAC,iDAAiD,EAAE,IAAI,CAAC,CAAC;gBACvE,OAAO,CAAC,KAAK,CAAC,iDAAiD,EAAE,IAAI,CAAC,CAAC;;oBACnE,wBAAwB,GAC5B;oBACI,gBAAgB,EAAE,YAAY;oBAC9B,QAAQ,EAAC,EAAE;iBACd;gBAED,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE9C,OAAO,CAAC,KAAK,CAAC,gDAAgD,EAAE,wBAAwB,CAAC,CAAC;gBAC1F,OAAO,wBAAwB,CAAC;aACnC,EAAC,CAAC,CAAC;SACP;aACI;YACD,OAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAClD;;KAGJ;CAiIJ;;;;;;AC9PD;;;;IAsDI,YAAY,UAAqB;QA5CzB,cAAS,GAAW,CAAC,CAAC;QAEtB,sBAAiB,GAAqB,gBAAgB,CAAC,MAAM,CAAC;QAC9D,0BAAqB,GAAyB,oBAAoB,CAAC,GAAG,CAAC;QACvE,gBAAW,GAAW,CAAC,CAAC;QAyC5B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;;;;;;IAvCD,IAAW,UAAU,CAAC,KAAY;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;;;;IAED,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;;IAGD,IAAW,cAAc,CAAC,EAAS;QAC/B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;;;IAED,IAAW,cAAc;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;;IAGD,IAAW,cAAc,CAAC,IAAqB;QAC3C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KACjC;;;;IAED,IAAW,cAAc;QACrB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KACjC;;;;;;IAID,IAAW,cAAc,CAAC,IAAyB;QAC/C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;KACrC;;;;IAED,IAAW,cAAc;QACrB,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACrC;;;;IAOD,UAAU;QACN,OAAO,iBAAiB,CAAC;KAC5B;;;;IAED,WAAW;QACP,OAAO,wCAAwC,CAAC;KACnD;;;;IAGD,UAAU;QAEN,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAwCpC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QACjD,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,UAAU,CAAC,CAAC;;YAEtD,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,+BAA+B,CAAC;QACxF,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,gBAAgB,CAAC,CAAC;QAEtE,IAAG,gBAAgB,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,EAAE;YACzD,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI;;;;YAAC,IAAI;gBACvE,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,IAAI,CAAC,CAAC;gBACvD,OAAO,IAAI,CAAC;aACf,EAAC,CAAC,IAAI;;;;YAAC,IAAI;;oBACJ,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;;oBACnB,UAAU,GAAG,IAAI,CAAC,MAAM;;;;gBAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,IAAI,EAAC;;oBACjD,WAAW,GAAG,IAAI,CAAC,MAAM;;;;gBAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,IAAI,EAAC;gBACtD,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;gBACxD,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,UAAU,CAAC,CAAC;gBAC/D,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,WAAW,CAAC,CAAC;;oBAE7D,GAAG,GAAG,EAAE;gBACZ,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACrB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC;gBAEjD,OAAO,GAAG,CAAC;aACd,EAAC,CAAC,IAAI;;;;YAAC,IAAI;;oBAEJ,IAAI,GAAG,IAAI;;oBAEX,YAAY,GAChB;oBACI,UAAU,EAAE,MAAM;oBAClB,gBAAgB,EAAE,IAAI;oBACtB,UAAU,EAAC,EAAC,MAAM,EAAC,EAAE,EAAC;iBACzB;;oBAEG,YAAY,GAChB;oBACI,UAAU,EAAE,MAAM;oBAClB,gBAAgB,EAAE,IAAI;oBACtB,UAAU,EAAC,EAAC,MAAM,EAAC,EAAE,EAAC;iBACzB;gBAED,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3C,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;oBAEvC,cAAc,GAAG,EAAE;gBAEvB,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAClC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAElC,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,cAAc,CAAC,CAAC;gBACvE,OAAO,cAAc,CAAC;aAEzB,EAAC,CAAC,IAAI;;;;YAAC,IAAI;;oBACJ,IAAI,GAAG,IAAI;gBACf,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,IAAI,CAAC,CAAC;gBACnE,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,IAAI,CAAC,CAAC;;oBAC/D,kBAAkB,GACtB;oBACI,gBAAgB,EAAE,YAAY;oBAC9B,UAAU,EAAC,EAAE;iBAChB;gBAED,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE1C,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,kBAAkB,CAAC,CAAC;gBACnF,OAAO,kBAAkB,CAAC;aAC7B,EAAC,CAAC,CAAC;SACP;aACI;YACD,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;KACJ;CA8HJ;;;;;;ACpTD;;;;IAgBI,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;IAED,IAAW,UAAU,CAAC,KAAY;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;;;;;IAED,IAAI,QAAQ,CAAC,EAAS;QAClB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;;;;IAED,IAAI,QAAQ,CAAC,IAAqB;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KACjC;;;;;IAED,IAAI,QAAQ,CAAC,IAAyB;QAClC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;KACrC;;;;IAGD,YAAY,UAAqB;QAC7B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;;;;IAED,UAAU;QACN,OAAO,gCAAgC,CAAC;KAC3C;;;;IAED,WAAW;;QAEP,OAAO,uDAAuD,CAAC;KAClE;;;;IAGD,UAAU;QAEN,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;;YACrC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QACjD,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,UAAU,CAAC,CAAC;;YAEvD,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,qCAAqC,CAAC;QACjG,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,mBAAmB,CAAC,CAAC;QAG7E,IAAG,UAAU,IAAI,SAAS,IAAI,mBAAmB,IAAI,SAAS,EAAE;YAC5D,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI;;;;YAAE,IAAI;gBAC3E,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;aAC3D,EAAC,CAAC,CAAC;SACP;aACI;YACD,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;;KAIJ;CAiIJ;;;;;;ACjMD;;;;;IAQI,IAAI,QAAQ,CAAC,EAAS;QAClB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;;;;IAED,IAAI,QAAQ,CAAC,IAAqB;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KACjC;;;;;IAED,IAAI,QAAQ,CAAC,IAAyB;QAClC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;KACrC;;;;;IAED,WAAW,CAAC,IAAY;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;;;;;;IAQD,iBAAe;;;;;IAEf,UAAU;QACN,OAAO,qBAAqB,CAAC;KAChC;;;;IAED,WAAW;;QAEP,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACzB,OAAO,6CAA6C,CAAC;SACtD;aACI,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC9B,OAAO,6CAA6C,CAAC;SACtD;aACI;;YAEH,OAAO,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;YAC5C,OAAO,EAAE,CAAC;SACX;KACJ;;;;IAGD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC9C;CAuBJ;;;;;;ACrFD;;;;IASI,YAAY,UAAsB;QAH1B,UAAK,GAAW,CAAC,CAAC,CAAC;QAIvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;;;;;IAED,OAAO,CAAC,KAAa;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;IAED,UAAU;QACN,OAAO,uBAAuB,CAAC;KAClC;;;;IAED,WAAW;QACP,OAAO,8CAA8C,CAAC;KACzD;;;;IAED,UAAU;QACN,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;;YAE3B,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QACjD,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;;YAE7C,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,kCAAkC,CAAC;QACnF,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QAE7C,IAAG,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,EAAE;YACjD,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI;;;;YAAC,IAAI;gBAC/D,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,IAAI,CAAC,CAAC;gBAC3D,OAAO,CAAC,KAAK,CAAC,0CAA0C,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChF,OAAO,IAAI,CAAC;aACf,EAAC,CAAC,CAAC;SACP;aACI;YACD,EAAE,CAAC,KAAK,CAAC,CAAC;YACV,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;SAClC;KACJ;CAEJ;;;;;;AC/CD;;;;IAWI,YAAY,UAAsB;QAH1B,UAAK,GAAW,CAAC,CAAC,CAAC;QAIvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;;;;;IAED,OAAO,CAAC,KAAa;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;IAED,UAAU;QACN,OAAO,qBAAqB,CAAC;KAChC;;;;IAED,WAAW;QACP,OAAO,4CAA4C,CAAC;KACvD;;;;IAED,UAAU;QACN,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;;YAE3B,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QACjD,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;;YAE7C,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,gCAAgC,CAAC;QACjF,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QAE7C,IAAG,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,EAAE;YACjD,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI;;;;YAAC,IAAI;gBAC/D,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC;gBACzD,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9E,OAAO,IAAI,CAAC;aACf,EAAC,CAAC,CAAC;SACP;aACI;YACD,EAAE,CAAC,KAAK,CAAC,CAAC;YACV,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;SAClC;KACJ;CAGJ;;;;;;AC1CD;;;;;IAOI,IAAI,QAAQ,CAAC,EAAS;QAClB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;;;;IAED,IAAI,QAAQ,CAAC,IAAqB;QAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KACjC;;;;;IAED,IAAI,QAAQ,CAAC,IAAyB;QAClC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;KACrC;;;;;;IAQD,iBAAe;;;;;IAEf,UAAU;QACN,OAAO,wBAAwB,CAAC;KACnC;;;;IAED,WAAW;;QAEP,OAAO,wCAAwC,CAAC;KACnD;;;;IAGD,UAAU;QACN,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC9C;CAuBJ;;;;;;ACtED;;;;IAWI,YAAY,UAAsB;QAH1B,UAAK,GAAW,CAAC,CAAC,CAAC;QAIvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;;;;;IAED,OAAO,CAAC,KAAa;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;;;;IAED,UAAU;QACN,OAAO,sBAAsB,CAAC;KACjC;;;;IAED,WAAW;QACP,OAAO,6CAA6C,CAAC;KACxD;;;;IAED,UAAU;QACN,OAAO,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;;YAE9C,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;QACjD,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;;YAE7C,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,yBAAyB,CAAC;QAC1E,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QAE7C,IAAG,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,EAAE;YACjD,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI;;;;YAAC,IAAI;gBAC/D,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC;gBAC1D,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,OAAO,IAAI,CAAC;aACf,EAAC,CAAC,CAAC;SACP;aACI;YACD,EAAE,CAAC,KAAK,CAAC,CAAC;YACV,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;SAClC;KACJ;CAEJ;;;;;;;;;;ICvCC,YAAY,UAAsB;QAN1B,aAAQ,GAAW,EAAE,CAAC;QACtB,UAAK,GAAW,CAAC,CAAC,CAAC;QACnB,iBAAY,GAAG,CAAC,CAAC;QAKvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KAC/B;;;;;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;;;;;IACD,OAAO,CAAC,GAAW;QACjB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;KAClB;;;;;IACD,WAAW,CAAC,GAAU;QACpB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;KACzB;;;;IACD,UAAU;QACR,OAAO,UAAU,CAAC;KACnB;;;;IAED,WAAW;QACT,OAAO,gCAAgC,CAAC;KACzC;;;;IAED,UAAU;QAER,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtE,IAAI,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE;YAC3D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;;gBACxC,YAAY,GAAG,CAAC,KAAK,EAAC,MAAM,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,CAAC;YAC1D,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG;;;;YAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,IAAI;;;YAAC;;oBAC/E,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,SAAS,EAAE;gBACnD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,OAAO,CAAC,CAAC;gBAC/B,OAAO,OAAO,CAAC;aAChB,EAAC,CAAC,CAAC;SACP;aAAM;YACH,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;SACpB;KACF;;;;;;IAEa,SAAS,CAAC,QAAQ;;YAC9B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;;gBAC7B,UAAU,GAAG,CAAC;;gBACd,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,4BAA4B,CAAC;YACrF,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;YACnD,gBAAgB,CAAC,cAAc,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAChF,gBAAgB,CAAC,cAAc,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9E,gBAAgB,CAAC,cAAc,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;gBAC1E,WAAW,GAAG,IAAI;;gBAClB,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE;YACvE,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;YAC5C,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvD,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,IAAI,CAAC,QAAQ,IAAI,UAAU,EAAE;oBAC7B,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC;oBAC9B,gBAAgB,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;iBACrE;qBAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,UAAU,EAAE;oBACpC,UAAU,GAAG,WAAW,CAAC,QAAQ,CAAC;oBAClC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;iBACzE;gBACD,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,gBAAgB,CAAC,CAAC;gBAC9D,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;aAC5C;SACF;KAAA;CACF;;;;;;;;;;;;;;;;;;;"}
