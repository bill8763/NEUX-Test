{"version":3,"file":"allianzSND-progress.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@allianzSND/progress/lib/service/model/ProgressYearConfig.ts","ng://@allianzSND/progress/lib/service/model/ConfigurationObj.ts","ng://@allianzSND/progress/lib/service/model/ProgressObj.ts","ng://@allianzSND/progress/lib/service/model/PersonalObj.ts","ng://@allianzSND/progress/lib/service/model/TeamObj.ts","ng://@allianzSND/progress/lib/service/model/ProgressYearObj.ts","ng://@allianzSND/progress/lib/service/model/Enum/PersonalDataTimeBase.ts","ng://@allianzSND/progress/lib/service/model/Enum/PersonalDataType.ts","ng://@allianzSND/progress/lib/service/model/ProgessPersonalData.ts","ng://@allianzSND/progress/lib/service/model/Enum/ProgressDataTeamValueType.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamData.ts","ng://@allianzSND/progress/lib/service/model/ProgressDirectIndirectData.ts","ng://@allianzSND/progress/lib/service/model/Enum/DirectUnitType.ts","ng://@allianzSND/progress/lib/service/model/Enum/Tag.ts","ng://@allianzSND/progress/lib/service/progress-service.service.ts","ng://@allianzSND/progress/lib/service/model/ProgressActualValue.ts","ng://@allianzSND/progress/lib/service/model/PersonalData.ts","ng://@allianzSND/progress/lib/service/model/PersonalDataState.ts","ng://@allianzSND/progress/lib/service/model/Enum/ProgressBarControlModeType.ts","ng://@allianzSND/progress/lib/service/model/ProgressBarControlData.ts","ng://@allianzSND/progress/lib/service/model/ProgressDirectData.ts","ng://@allianzSND/progress/lib/service/model/ProgressIndirectData.ts","ng://@allianzSND/progress/lib/service/model/TeamDataState.ts","ng://@allianzSND/progress/lib/service/model/ProgressListContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressActivityListContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressMonthlyContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamDirectContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamIndirectContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressTeamMainContentClass.ts","ng://@allianzSND/progress/lib/service/model/ProgressHeadContentClass.ts","ng://@allianzSND/progress/lib/service/model/InfoContentClass.ts","ng://@allianzSND/progress/lib/service/model/Enum/ActivitiesType.ts","ng://@allianzSND/progress/lib/service/model/Enum/ActualValueDataType.ts","ng://@allianzSND/progress/lib/service/model/Enum/PerformanceType.ts","ng://@allianzSND/progress/lib/service/model/Enum/Quarters.ts","ng://@allianzSND/progress/lib/progress.module.ts","ng://@allianzSND/progress/lib/api/GetPersonalProgressAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressActualValueAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressDataActualValueAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressDataAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressDataGoalSettingPlanAPI.ts","ng://@allianzSND/progress/lib/api/GetProgressGoalPlanAPI.ts","ng://@allianzSND/progress/lib/api/GetTeamProgressDetailAPI.ts","ng://@allianzSND/progress/lib/api/GetTeamProgressMainAPI.ts","ng://@allianzSND/progress/lib/api/PersonalProgressAPI.ts","ng://@allianzSND/progress/lib/api/GetYearConfigurationAPI.ts","ng://@allianzSND/progress/lib/api/AddPointAPI.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressYearConfig')\nexport class ProgressYearConfig {\n\n    @Required\n    public DataYear: number = 0;\n\n    @Required\n    public IsCurrent: boolean = true;\n\n    @Required\n    public WorkingMonth: number = 0;\n\n    @Required\n    public QuarterStartMonth: number = 0;\n\n    @Required\n    public QuarterEndMonth: number = 0;\n\n    @Required\n    public FindConvertPointBase: number = 0;\n\n    @Required\n    public ScheduleConvertPointBase: number = 0;\n\n    @Required\n    public MeetConvertPointBase: number = 0;\n\n    @Required\n    public SubmitConvertPointBase: number = 0;\n\n    @Required\n    public InforceConvertPointBase: number = 0;\n\n    @Required\n    public ProgressBarControlMode: string = \"TWMode\";\n\n    @Required\n    public ProgressDayPointsLimit: number = 20;\n\n    @Required\n    public MonthQuantityOfYear: number = 12;\n\n    @Required\n    public PerformanceSettlementMonth: number = 0;\n\n}","import { ProgressYearConfig } from \"./ProgressYearConfig\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ConfigurationObj')\nexport class ConfigurationObj {\n\n    @Required\n    public lastUpdateTime: string = \"\";\n\n    @Required\n    public Configurations: Array<ProgressYearConfig> = new Array<ProgressYearConfig>();\n}","import { ProgressYearObj } from \"./ProgressYearObj\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressObj')\nexport class ProgressObj {\n\n    @Required\n    public lastUpdateTime: string = \"\";\n\n    @Required\n    public Progress: Array<ProgressYearObj> = new Array<ProgressYearObj>();\n}\n","import { ProgressPersonalData } from \"./ProgessPersonalData\";\n\nexport class PersonalObj {\n    public Values: Array<ProgressPersonalData> = new Array<ProgressPersonalData>();\n} ","import { ProgressTeamData } from \"./ProgressTeamData\";\nimport { ProgressDirectIndirectData } from \"./ProgressDirectIndirectData\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('TeamObj')\nexport class TeamObj {\n\n    @Required\n    public Values: Array<ProgressTeamData> = new Array<ProgressTeamData>();\n    //public Direct: Array<ProgressDirectData> = new Array<ProgressDirectData>();\n    //public Indirect: Array<ProgressIndirectData> = new Array<ProgressIndirectData>();\n\n    @Required\n    public DirectUnit: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n\n    @Required\n    public InDirectUnit: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n}","import { PersonalObj } from \"./PersonalObj\";\nimport { TeamObj } from \"./TeamObj\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressYearObj')\nexport class ProgressYearObj {\n\n    @Required\n    public DataYear: number = 0;\n\n    @Required\n    public YesterdayPoint: number = 0;\n\n    @Required\n    public Personal: PersonalObj = new PersonalObj();\n\n    @Required\n    public Team: TeamObj = new TeamObj();\n}","export enum PersonalDataTimeBase {\n    Day = \"Day\",\n    Week = \"Week\",\n    Month = \"Month\",\n    Quarter = \"Quarter\",\n    Year = \"Year\",\n    Unknow = \"Unknow\"\n}","export enum PersonalDataType {\n    Actual = \"Actual\",\n    Goal = \"Goal\",\n    Unknow = \"Unknow\",\n}","import { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { PersonalDataType } from \"./Enum/PersonalDataType\";\n\nexport class ProgressPersonalData {\n    public DataType: PersonalDataType = PersonalDataType.Unknow;\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n    public Find: number = 0;\n    public Schedule: number = 0;\n    public Meet: number = 0;\n    public Submit: number = 0;\n    public Inforce: number = 0;\n    public FYFC: number = 0;\n\n    public FindConvertPointBase: number = 0;\n    public ScheduleConvertPointBase: number = 0;\n    public MeetConvertPointBase: number = 0;\n    public SubmitConvertPointBase: number = 0;\n    public InforceConvertPointBase: number = 0;\n}","export enum ProgressDataTeamValueType {\n    FYFC = \"FYFC\",\n    ANP = \"ANP\",\n    Manpower = \"Manpower\",\n    Recruitment = \"Recruitment\",\n    Unknow = \"unKnow\"\n}","import { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressTeamData')\nexport class ProgressTeamData {\n\n    @Required\n    public DataType: ProgressDataTeamValueType = ProgressDataTeamValueType.Unknow;\n\n    @Required\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n\n    @Required\n    public Goal: number = 0;\n\n    @Required\n    public Forecast: number = 0;\n\n    @Required\n    public Actual: number = 0;\n\n    @Required\n    public Shortfall: number = 0;\n}","import { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { ActivitiesType } from \"./Enum/ActivitiesType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressDirectIndirectData')\nexport class ProgressDirectIndirectData {\n\n    @Required\n    public AgentID: string = \"\";\n\n    @Required\n    public AgentName: string = \"\";\n\n    @Required\n    public TeamName: string = \"\";\n\n    @Required\n    public JobGrade: string = \"\";\n\n    @Required\n    public Drilldown: boolean = false;\n\n    @Required\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n\n    @Required\n    public DataType: ProgressDataTeamValueType = ProgressDataTeamValueType.Unknow;\n\n    @Required\n    public AppUseMode: string = \"\";\n    //public Activities: ActivitiesType = ActivitiesType.Unknow;\n\n    @Required\n    public Activities: string = \"\";\n\n    @Required\n    public Goal: number = 0;\n\n    @Required\n    public Forecast: number = 0;\n\n    @Required\n    public Actual: number = 0;\n\n    @Required\n    public Shortfall: number = 0;\n}","export enum DirectUnitType {\n    DirectUnit = \"Direct\",\n    IndirectUnit = \"Indirect\",\n    Unknow = \"Unknow\"\n}","export enum Tag {\n    PersonalTag = 0,\n    TeamTag = 1,\n    UnknowTag = 2,\n}","import { Injectable, ErrorHandler } from '@angular/core';\nimport { APIDispatch, APIFactory, getProgressAPI, APPError, getYearConfigAPI, DeviceService, NotificationObject, NotificationMgr, Valid } from '@allianzSND/core';\nimport { Observable, from, of, Subject, BehaviorSubject } from 'rxjs';\n\nimport { ProgressYearConfig } from './model/ProgressYearConfig';\nimport { GetYearConfigurationAPI, GetTeamProgressDetailAPI, GetPersonalProgressAPI, GetTeamProgressMainAPI } from '../api';\n\nimport { ConfigurationObj } from './model/ConfigurationObj';\nimport { ProgressObj } from './model/ProgressObj';\nimport { ProgressYearObj } from './model/ProgressYearObj';\nimport { PersonalObj } from './model/PersonalObj';\nimport { TeamObj } from './model/TeamObj';\nimport { ProgressPersonalData } from './model/ProgessPersonalData';\nimport { ProgressTeamData } from './model/ProgressTeamData';\nimport { ProgressDirectIndirectData } from './model/ProgressDirectIndirectData';\nimport { DirectUnitType } from './model/Enum/DirectUnitType';\nimport { Tag } from './model/Enum/Tag';\nimport { NotificationUtils } from '@allianzSND/notification';\nimport { NumberUtils, GetOtherParameterAPI } from '@allianzSND/core';\nimport { ROLE } from '@allianzSND/goal';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProgressService {\n\n  private _drillDownAgentIdObjList: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n  private _drillDowmAgentIdSubject: Subject<ProgressDirectIndirectData> = new BehaviorSubject(this.lastAgentIdObj);\n\n\n  get AgentIdObjListLength() {\n    return this._drillDownAgentIdObjList.length;\n  }\n\n  get lastAgentIdObj() {\n    return (this._drillDownAgentIdObjList.length > 0) ? this._drillDownAgentIdObjList[this.AgentIdObjListLength - 1] : null;\n  }\n\n\n  //dashboard to progress page\n  private _currentTag: Tag = Tag.UnknowTag;\n\n  public GetCurrentNavigationTag() {\n    return this._currentTag;\n  }\n\n  public SetCurrentNavigationTag(tag: Tag) {\n    this._currentTag = tag;\n  }\n\n  constructor(\n    private dispatch: APIDispatch,\n    private APIFactory: APIFactory,\n    private deviceService: DeviceService,\n    private notificationMgr: NotificationMgr,\n    private notficationUtils: NotificationUtils,\n    private errorHandler: ErrorHandler) { }\n\n\n  //#region agent function\n\n  public InitDrillDownAgentIdObj() {\n    this._drillDownAgentIdObjList = new Array<ProgressDirectIndirectData>();\n    //this._drillDowmAgentIdSubject = new BehaviorSubject(this.lastAgentIdObj);\n  }\n\n  public AddDrillDownAgentIdObj(agentIdObj: ProgressDirectIndirectData) {\n    this._drillDownAgentIdObjList.push(agentIdObj);\n    this._drillDowmAgentIdSubject.next(this.lastAgentIdObj);\n  }\n\n  @Valid('ProgressDirectIndirectData')\n  public GetDrillDwonAgentIdObj(): Observable<ProgressDirectIndirectData> {\n    return this._drillDowmAgentIdSubject.asObservable();\n  }\n\n  public PopDrillDownAgentIdObj() {\n    this._drillDownAgentIdObjList.pop();\n    this._drillDowmAgentIdSubject.next(this.lastAgentIdObj);\n  }\n\n  @Valid('ProgressDirectIndirectData')\n  public GetDrillDownAgentIdObjRouterNameObj(): Observable<Array<ProgressDirectIndirectData>> {\n    let maxLength = this.AgentIdObjListLength;\n\n    if (maxLength >= 2) {\n      let arr: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n      let data1 = this._drillDownAgentIdObjList[maxLength - 2];\n      let data2 = this._drillDownAgentIdObjList[maxLength - 1];\n      arr.push(data1);\n      arr.push(data2);\n      return of(arr);\n    }\n    else {\n      let arr: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n      let data1 = this._drillDownAgentIdObjList[maxLength - 1];\n      arr.push(data1);\n      return of(arr);\n    }\n  }\n\n  //#endregion agent function\n\n  //#region Role\n\n  private _currentRole:ROLE;\n  private _currentRoleSubject:Subject<ROLE> = new BehaviorSubject(this._currentRole);\n\n  public SetCurrentRole(val:ROLE) {\n    this._currentRole = val;\n    this._currentRoleSubject.next(this._currentRole);\n  }\n\n  public GetCurrentRole():Observable<ROLE> {\n    return this._currentRoleSubject.asObservable();\n  }\n\n  public GetIsTeam():boolean {\n    let r = this._currentRole;\n    switch(r) {\n      case ROLE.AGENT: \n        return false;\n      case ROLE.AGENTLEADER:\n      case ROLE.ZONEHEAD:\n      case ROLE.CAO:\n        return true;\n    }\n  }\n\n  public GetIsAgent():boolean {\n    return (this._currentRole == ROLE.AGENT) ? true : false;\n  }\n\n  public GetIsSupervisor():boolean {\n    return (this._currentRole == ROLE.CAO) ? true : false;\n  }\n\n  public GetIsManaget():boolean {\n    return (this._currentRole == ROLE.ZONEHEAD) ? true : false;\n  }\n\n  public GetIsAgentLeader():boolean {\n    return (this._currentRole == ROLE.AGENTLEADER) ? true : false;\n  }\n\n  public GetIsShowSwitchTab():boolean {\n    return (this._currentRole == ROLE.AGENTLEADER) ? true : false; \n  }\n\n  public GetIsShowTeamTab(): boolean {\n    return (this._currentRole == ROLE.AGENT) ? false : true;\n  }\n\n  //#endregion\n\n\n  //#region progress main function\n\n  //get progress data by restful return yaml\n  public GetProgressDataByRestful(agentID: string): Observable<any> {\n\n    try {\n      let getProgressAPI: getProgressAPI = <getProgressAPI>this.APIFactory.getAPI(\"getProgress\");\n      getProgressAPI.setAgentID(agentID);\n      return from(this.dispatch.dispatch(getProgressAPI).toPromise());\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00209', 'get Progress Data By Restful fail!' + error.message));\n      console.debug(\"getProgressDataByRestful agent id: \", agentID);\n    }\n\n    return of(null);\n  }\n\n  //get progress data by SQLite return yaml\n  @Valid('ProgressObj')\n  public GetProgressDataBySQLite(years: Array<number>): Observable<ProgressObj> {\n\n    try {\n      //put it together to yaml\n      let getPersonalProgressAPI: GetPersonalProgressAPI = <GetPersonalProgressAPI>this.APIFactory.getAPI('getPersonalProgress');\n      let getTeamProgressDetailAPI: GetTeamProgressDetailAPI = <GetTeamProgressDetailAPI>this.APIFactory.getAPI('getTeamProgressDetail');\n      let getTeamProgressMainAPI: GetTeamProgressMainAPI = <GetTeamProgressMainAPI>this.APIFactory.getAPI('getTeamProgressMain');\n      let getOtherParameterAPI: GetOtherParameterAPI = <GetOtherParameterAPI>this.APIFactory.getAPI('getOtherParameter');\n\n      return from(\n        Promise.all(\n          [getPersonalProgressAPI, getTeamProgressDetailAPI, getTeamProgressMainAPI, getOtherParameterAPI]\n            .map(api => this.dispatch.dispatch(api).toPromise())\n        ).then(([ProgressPersonalRawData, ProgressTeamDetailRawData, ProgressTeamMainRawData, OtherParameterRawData]) => {\n          console.debug(\"getProgressDataBySQLite ProgressPersonalRawData: \", ProgressPersonalRawData);//o\n          console.debug(\"getProgressDataBySQLite ProgressTeamDetailRawData: \", ProgressTeamDetailRawData);\n          console.debug(\"getProgressDataBySQLite ProgressTeamMainRawData:\", ProgressTeamMainRawData);\n          console.debug(\"getProgressDataBySQLite OtherParameterRawData:\", OtherParameterRawData);\n\n          //new way\n          let progressObjBOSS: ProgressObj = new ProgressObj();\n          let progressYearObjList: Array<ProgressYearObj> = new Array<ProgressYearObj>();\n          let personalObjList: Array<PersonalObj> = new Array<PersonalObj>();\n          let teamObjList: Array<TeamObj> = new Array<TeamObj>();\n\n          let progressPersonalDataList: Array<Array<ProgressPersonalData>> = new Array<Array<ProgressPersonalData>>();\n          let progressTeamMainDataList: Array<Array<ProgressTeamData>> = new Array<Array<ProgressTeamData>>();\n          let progressTeamDirectDataList: Array<Array<ProgressDirectIndirectData>> = new Array<Array<ProgressDirectIndirectData>>();\n          let progressTeamIndirectDataList: Array<Array<ProgressDirectIndirectData>> = new Array<Array<ProgressDirectIndirectData>>();\n\n          let yesterdayPointsList: Array<number>;\n\n          //get yesterdayPoint     \n          yesterdayPointsList = this._GetYesterdayPoints(years, OtherParameterRawData);\n          console.debug(\"getProgressDataBySQLite yesterdayPointsList: \", yesterdayPointsList);\n\n          // get personal data\n          progressPersonalDataList = this._GetProgressPersonalData(years, ProgressPersonalRawData);\n          console.debug(\"getProgressDataBySQLite progressPersonalDataList: \", progressPersonalDataList);\n\n          for (let i = 0; i < years.length; i++) {\n            let obj: PersonalObj = new PersonalObj();\n            obj.Values = progressPersonalDataList[i];\n            personalObjList.push(obj);\n          }\n\n          //get team main data\n          progressTeamMainDataList = this._GetProgressTeamMainData(years, ProgressTeamMainRawData);\n          console.debug(\"getProgressDataBySQLite progressTeamMainDataList: \", progressTeamMainDataList);\n\n          //direct indirect\n          progressTeamDirectDataList = this._GetProgressTeamDirectIndirectData(years, ProgressTeamDetailRawData, DirectUnitType.DirectUnit);\n          progressTeamIndirectDataList = this._GetProgressTeamDirectIndirectData(years, ProgressTeamDetailRawData, DirectUnitType.IndirectUnit);\n\n          console.debug(\"getProgressDataBySQLite progressTeamDirectDataList: \", progressTeamDirectDataList);\n          console.debug(\"getProgressDataBySQLite progressTeamIndirectDataList: \", progressTeamIndirectDataList);\n\n          //get team data\n          for (let i = 0; i < years.length; i++) {\n            let obj: TeamObj = new TeamObj();\n            obj.Values = (progressTeamMainDataList[i]) ? progressTeamMainDataList[i] : null;\n            obj.DirectUnit = (progressTeamDirectDataList[i]) ? progressTeamDirectDataList[i] : null;\n            obj.InDirectUnit = (progressTeamIndirectDataList[i]) ? progressTeamIndirectDataList[i] : null;\n\n            teamObjList.push(obj);\n          }\n\n\n          //get progress Year data\n          for (let i = 0; i < years.length; i++) {\n            let obj: ProgressYearObj = new ProgressYearObj();\n            obj.DataYear = years[i];\n            obj.YesterdayPoint = yesterdayPointsList[i];\n            obj.Personal = personalObjList[i];\n            obj.Team = teamObjList[i];\n            progressYearObjList.push(obj);\n          }\n\n\n          //get progressBOSS obj      \n          for (let i = 0; i < years.length; i++) {\n            progressObjBOSS.Progress[i] = progressYearObjList[i];\n          };\n\n\n          console.debug(\"getProgressDataBySQLite personalObjList: \", personalObjList);\n          console.debug(\"getProgressDataBySQLite teamObjList: \", teamObjList);\n          console.debug(\"getProgressDataBySQLite progressYearObjList: \", progressYearObjList);\n          console.debug(\"getProgressDataBySQLite progressObjBOSS: \", progressObjBOSS);\n\n          return progressObjBOSS;\n        })\n      );\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00210', 'get Progress Data By SQLite fail!' + error.message));\n      console.debug(\"OMG! getProgressDataBySQLite fail: \");\n    }\n\n    return of(null);\n  }\n\n  //#endregion progress main function\n\n  //#region private function\n\n  private _GetYesterdayPoints(years: Array<number>, otherParameterRawData: any): Array<number> {\n    let ansArr: Array<number> = new Array<number>();\n\n    console.debug(\"_GetYesterdayPoints years: \", years);\n    console.debug(\"_GetYesterdayPoints otherParameterRawData: \", otherParameterRawData);\n\n    try {\n      for (let i = 0; i < years.length; i++) {\n        let yesterdayPoint = otherParameterRawData[\"Body\"].filter(x => x.MappingID == \"YesterdayPoint\"\n          && x.DataYear == years[i]);//0\n\n        console.debug(\"_GetYesterdayPoints yesterdayPoint: \", yesterdayPoint);\n        console.debug(\"_GetYesterdayPoints yesterdayPoint[0]: \", yesterdayPoint[0]);\n        console.debug(\"_GetYesterdayPoints yesterdayPoint[0]set: \", yesterdayPoint[0].SetValue);\n        ansArr.push(yesterdayPoint[0].SetValue);\n      }\n      return ansArr;\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00211', 'get yesterday points fail!' + error.message));\n    }\n    return null;\n  }\n\n\n  private _GetProgressTeamDirectIndirectData(years: Array<number>, progressTeamDetailRawData: any, unitType: DirectUnitType): Array<Array<ProgressDirectIndirectData>> {\n\n    let ansArr: Array<Array<ProgressDirectIndirectData>> = new Array<Array<ProgressDirectIndirectData>>();\n\n    console.debug(\"_getProgressTeamDirectIndirectData years: \", years);\n    console.debug(\"_getProgressTeamDirectIndirectData progressTeamDetailRawData: \", progressTeamDetailRawData);\n\n    try {\n      if (progressTeamDetailRawData) {\n        let bodyData = progressTeamDetailRawData[\"Body\"];\n\n        let rawDataByYearArr: Array<any> = new Array<any>();\n\n        for (let i = 0; i < years.length; i++) {\n          let yearData = bodyData.filter(x => x.DataYear == years[i] && x.DirectUnitType == unitType);\n          if (yearData)\n            rawDataByYearArr.push(yearData);\n        }\n\n        console.debug(\"_getProgressTeamDirectIndirectData rawDataByYearArr: \", rawDataByYearArr);\n\n        for (let i = 0; i < rawDataByYearArr.length; i++) {\n          let arr: Array<ProgressDirectIndirectData> = new Array<ProgressDirectIndirectData>();\n          for (let j = 0; j < rawDataByYearArr[i].length; j++) {\n\n            let tmp = rawDataByYearArr[i][j];\n\n            let data: ProgressDirectIndirectData = new ProgressDirectIndirectData();\n            data.AgentID = tmp.AgentID;\n            data.AgentName = tmp.AgentName;\n            data.TeamName = tmp.TeamName;\n            data.JobGrade = tmp.JobGrade;\n            data.DataType = tmp.DataType;\n            data.TimeBase = tmp.TimeBase;\n            data.AppUseMode = tmp.AppUseMode;\n            data.Activities = tmp.Activities;\n            data.Drilldown = tmp.Drilldown == \"Y\";//true\n            data.Actual = tmp.Actual;\n            data.Goal = tmp.Goal;\n            data.Forecast = tmp.Forecast;\n            data.Shortfall = tmp.Shortfall;\n            arr.push(data);\n          }\n          ansArr.push(arr);\n        }\n        return ansArr;\n      }\n      else { throw \"data null\"; }\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00212', 'get Progress Team Direct Indirect Data fail!' + error.message));\n    }\n    return null;\n  }\n\n  private _GetProgressTeamMainData(years: Array<number>, progressTeamMainRawData: any): Array<Array<ProgressTeamData>> {\n    let ansArr: Array<Array<ProgressTeamData>> = new Array<Array<ProgressTeamData>>();\n\n    console.debug(\"_getProgressTeamMainData years: \", years);\n    console.debug(\"_getProgressTeamMainData progressTeamMainRawData: \", progressTeamMainRawData);\n\n    try {\n      if (progressTeamMainRawData) {\n        let bodyData = progressTeamMainRawData[\"Body\"];\n        let rawDataByYearArr: Array<any> = new Array<any>();\n\n        for (let i = 0; i < years.length; i++) {\n          let yearData = bodyData.filter(x => x.DataYear == years[i]);\n          if (yearData)\n            rawDataByYearArr.push(yearData);\n        }\n\n        console.debug(\"_getProgressTeamMainData rawDataByYearArr: \", rawDataByYearArr);\n\n        for (let i = 0; i < rawDataByYearArr.length; i++) {\n          let arr: Array<ProgressTeamData> = new Array<ProgressTeamData>();\n          for (let j = 0; j < rawDataByYearArr[i].length; j++) {\n\n            let tmp = rawDataByYearArr[i][j];\n\n            let data: ProgressTeamData = new ProgressTeamData();\n            data.DataType = tmp.DataType;\n            data.TimeBase = tmp.TimeBase;\n            data.Goal = tmp.Goal;\n            data.Forecast = tmp.Forecast;\n            data.Actual = tmp.Actual;\n            data.Shortfall = tmp.Shortfall;\n            arr.push(data);\n          }\n          ansArr.push(arr);\n        }\n        return ansArr;\n      }\n      else { throw \"data null\"; }\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00213', 'Get Progress Team Main Data fail!' + error.message));\n    }\n\n    return null;\n  }\n\n  private _GetProgressPersonalData(years: Array<number>, progressPersonalRawData: any): Array<Array<ProgressPersonalData>> {\n    let ansArr: Array<Array<ProgressPersonalData>> = new Array<Array<ProgressPersonalData>>();\n\n    console.debug(\"_getProgressPersonalData years: \", years);\n    console.debug(\"_getProgressPersonalData progressPersonalRawData: \", progressPersonalRawData);\n\n    try {\n      if (progressPersonalRawData) {\n\n        let bodyData = progressPersonalRawData[\"Body\"];\n        let rawDataByYearArr: Array<any> = new Array<any>();\n\n        for (let i = 0; i < years.length; i++) {\n          let yearData = bodyData.filter(x => x.DataYear == years[i]);\n          if (yearData)\n            rawDataByYearArr.push(yearData);\n        }\n\n        console.debug(\"_getProgressPersonalData rawDataByYearArr: \", rawDataByYearArr);\n\n        for (let i = 0; i < rawDataByYearArr.length; i++) {\n          let arr: Array<ProgressPersonalData> = new Array<ProgressPersonalData>();\n          for (let j = 0; j < rawDataByYearArr[i].length; j++) {\n\n            let tmp = rawDataByYearArr[i][j];\n            let data: ProgressPersonalData = new ProgressPersonalData();\n            data.DataType = tmp.DataType;\n            data.TimeBase = tmp.TimeBase;\n            data.Find = tmp.Find;\n            data.Schedule = tmp.Schedule;\n            data.Meet = tmp.Meet;\n            data.Submit = tmp.Submit;\n            data.Inforce = tmp.Inforce;\n            data.FYFC = tmp.FYFC;\n            arr.push(data);\n          }\n          ansArr.push(arr);\n        }\n        return ansArr;\n      }\n      else { throw \"data null\"; }\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00214', 'Get Progress Personal Data fail!' + error.message));\n    }\n    return null;\n  }\n\n  //#endregion private function\n\n  //#region year config function\n\n  //get year config \n  @Valid('ConfigurationObj')\n  public GetYearConfigDataBySQLite(): Observable<ConfigurationObj> {\n    try {\n      let getYearConfigurationAPI: GetYearConfigurationAPI = <GetYearConfigurationAPI>this.APIFactory.getAPI('getYearConfiguration');\n      return from(this.dispatch.dispatch(getYearConfigurationAPI).toPromise().then(resp => {\n\n        console.debug(\"getYearConfig resp: \", resp);\n\n        // convert to yaml\n        let dataBady = resp[\"Body\"];\n        console.debug(\"getYearConfig dataBady: \", dataBady);\n\n        let configObj: ConfigurationObj = new ConfigurationObj();\n        let arr: Array<ProgressYearConfig> = new Array<ProgressYearConfig>();\n\n        for (let i = 0; i < dataBady.length; i++) {\n          let data: ProgressYearConfig = new ProgressYearConfig();\n          let dataConfig = dataBady[i];\n\n          data.DataYear = dataConfig.DataYear;\n          data.IsCurrent = dataConfig.IsCurrent === \"Y\";\n          data.WorkingMonth = dataConfig.WorkingMonth;\n          data.QuarterStartMonth = dataConfig.QuarterStartMonth;\n          data.QuarterEndMonth = dataConfig.QuarterEndMonth;\n          data.ProgressDayPointsLimit = dataConfig.ProgressDayPointsLimit;\n          data.ProgressBarControlMode = dataConfig.ProgressBarControlMode;\n          data.MonthQuantityOfYear = dataConfig.MonthQuantityOfYear;\n\n          data.FindConvertPointBase = dataConfig.FindConvertPointBase;\n          data.ScheduleConvertPointBase = dataConfig.ScheduleConvertPointBase;\n          data.MeetConvertPointBase = dataConfig.MeetConvertPointBase;\n          data.SubmitConvertPointBase = dataConfig.SubmitConvertPointBase;\n          data.InforceConvertPointBase = dataConfig.InforceConvertPointBase;\n\n          data.PerformanceSettlementMonth = dataConfig.PerformanceSettlementMonth;\n\n          arr.push(data);\n        }\n\n        configObj.Configurations = arr;\n\n\n        console.debug(\"configObj: \", configObj);\n        console.debug(\"configObj: \", JSON.stringify(configObj));\n        console.debug(\"got SQlite year config resp: \", resp);\n        console.debug(\"got SQlite year config resp json: \", JSON.stringify(resp));\n\n        return configObj;\n      }));\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00215', 'OMG! get Year Config SQLite fail!' + error.message));\n    }\n\n    return of(null);\n  }\n\n\n  public GetYearConfigDataByRestful(agentID: string): Observable<any> {\n    try {\n      let yearConfigAPI: getYearConfigAPI = <getYearConfigAPI>this.APIFactory.getAPI('getYearConfig');\n      yearConfigAPI.setAgentID(agentID);\n      return from(this.dispatch.dispatch(yearConfigAPI).toPromise());\n    }\n    catch (error) {\n      this.errorHandler.handleError(new APPError('F00209', 'get Progress Data By Restful fail!' + error.message));\n      console.debug(\"getProgressDataByRestful agent id: \", agentID);\n    }\n    return of(null);\n  }\n\n\n  // public GetYearConfigDataByRestful(agentID: string): Observable<any> {\n  //   try {\n  //     let yearConfigAPI: getYearConfigAPI = <getYearConfigAPI>this.APIFactory.getAPI('getYearConfig');\n  //     yearConfigAPI.setAgentID(agentID);\n  //     return from(this.dispatch.dispatch(yearConfigAPI).toPromise());\n  //   }\n  //   catch (error) {\n  //     this.errorHandler.handleError(new APPError('F00209', 'get Progress Data By Restful fail!' + error.message));\n  //     console.debug(\"getProgressDataByRestful agent id: \", agentID);\n  //   }\n  //   return of(null);\n  // }\n\n  //#endregion year config function\n\n  //#region funtion calculate\n\n  public ShowDesh(num: number, sign:string = \"--\"): string {\n    if(!NumberUtils.isNumber(num)) {\n      return sign;\n    }\n    return (num <= -1) ? sign : num.toString();\n  }\n\n  public GetPoints(num: number, muti: number): string {\n    let ans = (num * muti);\n    return (ans <= -1) ? \"--\" : ans.toString();\n  }\n\n\n  //if timebase == day ==> ProgressPersonalData.find one day \n  //if timebase == week ==> ProgressPersonalData.find week(week sum)that meanin if web weeksum have 3 day data\n  public GetTotalPoints(data: ProgressPersonalData): number {\n\n    //check data == -1?\n    let checkData: ProgressPersonalData = new ProgressPersonalData();\n    checkData.Find = (data.Find == -1) ? 0 : data.Find;\n    checkData.Schedule = (data.Schedule == -1) ? 0 : data.Schedule;\n    checkData.Meet = (data.Meet == -1) ? 0 : data.Meet;\n    checkData.Submit = (data.Submit == -1) ? 0 : data.Submit;\n    checkData.Inforce = (data.Inforce == -1) ? 0 : data.Inforce;\n\n    let sum = (checkData.Find * data.FindConvertPointBase) +\n      (checkData.Schedule * data.ScheduleConvertPointBase) +\n      (checkData.Meet * data.MeetConvertPointBase) +\n      (checkData.Submit * data.SubmitConvertPointBase) +\n      (checkData.Inforce * data.InforceConvertPointBase);\n\n    return sum;\n  }\n\n\n  public GetPercentageCircleValue(data: ProgressPersonalData, limit: number, isWeek: boolean): string {\n\n    console.debug(\"_getPercentageCircleValue: \", data);\n\n    //check data == -1?\n    let checkData: ProgressPersonalData = new ProgressPersonalData();\n    checkData.DataType = data.DataType;\n    checkData.TimeBase = data.TimeBase;\n    checkData.Find = (data.Find == -1) ? 0 : data.Find;\n    checkData.Schedule = (data.Schedule == -1) ? 0 : data.Schedule;\n    checkData.Meet = (data.Meet == -1) ? 0 : data.Meet;\n    checkData.Submit = (data.Submit == -1) ? 0 : data.Submit;\n    checkData.Inforce = (data.Inforce == -1) ? 0 : data.Inforce;\n\n    let sum = (checkData.Find * data.FindConvertPointBase) +\n      (checkData.Schedule * data.ScheduleConvertPointBase) +\n      (checkData.Meet * data.MeetConvertPointBase) +\n      (checkData.Submit * data.SubmitConvertPointBase) +\n      (checkData.Inforce * data.InforceConvertPointBase);\n\n    let max = (isWeek == true) ? limit * 7 : limit;\n    let ans = (sum / max);\n\n    console.debug(\"_getPercentageCircleValue ans max sum: \", ans, max, sum);\n\n    if (ans == 0 || !NumberUtils.isNumber(ans)) return \"0\";\n    return (ans >= 1) ? \"1\" : ans.toFixed(2);\n  }\n\n  public GetPercentage(numerator: number, denominator: number): number {\n\n    if(numerator <= 0 || denominator <= 0) return 0;\n\n    let ans = Math.round((numerator / denominator) * 100);\n    return (ans) ? ans : 0;\n  }\n\n  public GetPercentageLength(numerator: number, denominator: number, maxLength: number, maxBase: number): number {\n\n    if(numerator <= 0 || denominator <= 0) return 0;\n\n    let ans = Math.round((numerator / denominator) * 100) / maxBase;\n\n    return (ans >= maxLength) ? maxLength : ans ;\n  }\n\n  //#endregion\n\n}\n","import { PerformanceType } from \"./Enum/PerformanceType\";\nimport { ActualValueDataType } from \"./Enum/ActualValueDataType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressActualValue')\nexport class ProgressActualValue {\n\n    @Required\n    private _clientID: string;\n\n    @Required\n    private _dataYear: number;\n\n    @Required\n    private _performanceType: PerformanceType;\n\n    @Required\n    private _dataType: ActualValueDataType;\n\n    @Required\n    private _month: number;\n\n    @Required\n    private _value: number;\n\n    constructor(id:string, year:number, performanceType: PerformanceType, dataType: ActualValueDataType, month: number, value: number) {\n        this._clientID = id;\n        this._dataYear = year;\n        this._performanceType = performanceType;\n        this._dataType = dataType;\n        this._month = month;\n        this._value = value;\n    }\n\n    //client id\n    get ClientID() {\n        return this._clientID;\n    }\n\n    set ClientID(value:string) {\n        this._clientID = value;\n    }\n\n    //data year\n    get DataYear() {\n        return this._dataYear;\n    }\n\n    set DataYear(value:number) {\n        this._dataYear = value;\n    }\n\n    //performance type\n    get PerformanceType() {\n        return this._performanceType;\n    }\n\n    set PerformanceType(value:PerformanceType) {\n        this._performanceType = value;\n    }\n\n    //data type\n    get DataType() {\n        return this._dataType;\n    }\n\n    set DataType(value:ActualValueDataType) {\n        this._dataType = value;\n    }\n\n    //month\n    get Month() {\n        return this._month;\n    }\n\n    set Month(value:number) {\n        this._month = value;\n    }\n\n    //value\n    get Value() {\n        return this._value;\n    }\n\n    set Value(value:number) {\n        this._value = value;\n    }\n\n}\n\n\n","import { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { PersonalDataType } from \"./Enum/PersonalDataType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('PersonalData')\nexport class PersonalData {\n\n    @Required\n    private _dataYear: number;\n\n    @Required\n    private _timeBase: PersonalDataTimeBase;\n\n    @Required\n    private _dataType: PersonalDataType;\n\n    @Required\n    private _find: number;\n\n    @Required\n    private _schedule: number;\n\n    @Required\n    private _meet: number;\n\n    @Required\n    private _submit: number;\n\n    @Required\n    private _inforce: number;\n\n    constructor(dataYear:number, \n                timeBase:PersonalDataTimeBase, \n                dataType:PersonalDataType, \n                find:number, \n                schedule: number, \n                meet: number, \n                submit: number, \n                inforce: number)\n                {\n                    this._dataYear = dataYear;\n                    this._timeBase = timeBase;\n                    this._dataType = dataType;\n                    this._find = find;\n                    this._schedule = schedule;\n                    this._meet = meet;\n                    this._submit = submit;\n                    this._inforce = inforce;\n                }\n    \n    //#region Getter setter\n    //year\n    get DataYear() {\n        return this._dataYear;\n    }\n\n    set DataTear(year: number) {\n        this._dataYear =  year;\n    }\n\n    // time base\n    get TimeBase() {\n        return this._timeBase;\n    }\n\n    set TimeBase(time: PersonalDataTimeBase) {\n        this._timeBase = time;\n    }\n\n    //type\n    get DataType() {\n        return this._dataType;\n    }\n\n    set DataTypet(type: PersonalDataType) {\n        this._dataType = type;\n    }\n\n    //find\n    get Find() {\n        return this._find;\n    }\n\n    set Find(num: number) {\n        this._find = num;\n    }\n\n    //schedule\n    get Schedule() {\n        return this._schedule;\n    }\n\n    set Schedule(num: number) {\n        this._schedule = num;\n    }\n\n    //meet\n    get Meet() {\n        return this._meet;\n    }\n\n    set Meet(num: number) {\n        this._meet = num;\n    }\n\n    //submit\n    get Submit() {\n        return this._submit;\n    }\n\n    set Submit(num: number) {\n        this._submit = num ;\n    }\n\n    //inforce\n    get Inforce() {\n        return this._inforce;\n    }\n    \n    set Inforce(num: number) {\n        this._inforce = num;\n    }\n\n    //#endregion\n\n\n    getTotalCount() : number {\n       let sum =  this.Find + this.Schedule + this.Meet + this.Submit + this.Inforce;\n       return sum;\n    }\n\n    getTotalPoints() : number {\n        let sum = this.getFindPoints() + this.getSchedulePoints() + this.getMeetPoints() + this.getSubmitPoints() + this.getInforcePoints();\n        return sum;\n    }\n\n    getDifferentPercentage(numerator: number, denominator: number) : number {\n        return Math.round((numerator / denominator) * 100 );\n    }\n\n\n    /*\n    // 1 1 2 10 2   f /s /m /su /i\n    getFindPoints(dot:number) : number {\n        return this.Find * dot ;\n    }\n\n    getSchedulePoints(dot:number) : number {\n        return this.Schedule  * dot;\n    }\n\n    getMeetPoints(dot:number) : number {\n        return this.Meet * dot;\n    }\n\n    getSubmitPoints(dot:number) : number {\n        return this.Submit * dot;\n    }\n\n    getInforcePoints(dot:number) : number {\n        return this.Inforce  * dot;\n    }\n\n    /*\n    getDifferentPercentage(numerator: number, denominator: number, fixedNum: number) : string {\n        return ( ( numerator / denominator ) * 100 ).toFixed(fixedNum);\n    }\n    */\n\n    \n\n    getFindPoints() : number {\n        return this.Find * 1 ;\n    }\n\n    getSchedulePoints() : number {\n        return this.Schedule  * 1;\n    }\n\n    getMeetPoints() : number {\n        return this.Meet * 2;\n    }\n\n    getSubmitPoints() : number {\n        return this.Submit * 10;\n    }\n\n    getInforcePoints() : number {\n        return this.Inforce  * 2;\n    }\n    \n}\n\n\n\n\n","import { PersonalDataType } from \"./Enum/PersonalDataType\";\nimport { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('PersonalDataState')\nexport class PersonalDataState {  \n\n    @Required\n    private _dataYear: number;\n\n    @Required\n    private _timeBase: PersonalDataTimeBase;\n\n    @Required\n    private _dataType: PersonalDataType;\n\n    constructor(){\n        this._dataYear = -1;\n        this._timeBase = PersonalDataTimeBase.Unknow;\n        this._dataType = PersonalDataType.Unknow;\n    }\n\n    get DataYear() {\n        return this._dataYear;\n    }\n\n    set DataYear(year: number) {\n        this._dataYear =  year;\n    }\n\n    // time base\n    get TimeBase() {\n        return this._timeBase;\n    }\n\n    set TimeBase(time: PersonalDataTimeBase) {\n        this._timeBase = time;\n    }\n\n    //type\n    get DataType() {\n        return this._dataType;\n    }\n\n    set DataType(type: PersonalDataType) {\n        this._dataType = type;\n    }\n}","export enum ProgressBarControlModeType {\n    TWMode = \"TWMode\",\n    Unknow = \"Unknow\"\n}","import { ProgressBarControlModeType } from \"./Enum/ProgressBarControlModeType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressBarControlData')\nexport class ProgressBarControlData {\n\n    @Required\n    private _barLengthMaxValue: number = 1.5;\n\n    public get barLengthMaxValue() {\n        return this._barLengthMaxValue;\n    }\n\n    public set barLengthMaxValue(value: number) {\n        this._barLengthMaxValue = value;\n    }\n\n    public GetConfigMin(type: ProgressBarControlModeType): number {\n        switch (type) {\n            case ProgressBarControlModeType.TWMode:\n                return 70;\n            case ProgressBarControlModeType.Unknow:\n                return 0; \n            default:\n                return 0;\n        }\n    }\n\n    public GetConfigMax(type: ProgressBarControlModeType): number {\n        switch (type) {\n            case ProgressBarControlModeType.TWMode:\n                return 100;\n            case ProgressBarControlModeType.Unknow:\n                return 0;\n            default:\n                return 0;\n        }\n    }\n\n}","import { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { ActivitiesType } from \"./Enum/ActivitiesType\";\nimport { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\n\nexport class ProgressDirectData {\n    public AgentID: string = \"\";\n    public AgentName: string = \"\";\n    public JobGrade: string = \"\";\n    public Drilldown: boolean = false;\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n    public DataType: ProgressDataTeamValueType = ProgressDataTeamValueType.Unknow;\n    //public Activities: ActivitiesType = ActivitiesType.Unknow;\n    public Activities: string = \"\";\n    public Goal: number = 0;\n    public Forecast: number = 0;\n    public Actual: number = 0;\n    public Shortfall: number = 0;\n}\n\n","import { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { ActivitiesType } from \"./Enum/ActivitiesType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('ProgressIndirectData')\nexport class ProgressIndirectData {\n\n    @Required\n    public AgentID: string = \"\";\n        \n    @Required\n    public AgentName: string = \"\";\n        \n    @Required\n    public JobGrade: string = \"\";\n        \n    @Required\n    public Drilldown: boolean = false;\n        \n    @Required\n    public TimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Unknow;\n\n    @Required    \n    public DataType: ProgressDataTeamValueType = ProgressDataTeamValueType.Unknow;\n    //public Activities: ActivitiesType = ActivitiesType.Unknow;\n        \n    @Required \n    public Activities: string = \"\";\n        \n    @Required \n    public Goal: number = 0;\n        \n    @Required \n    public Forecast: number = 0;\n        \n    @Required \n    public Actual: number = 0;\n        \n    @Required \n    public Shortfall: number = 0; \n}","import { PersonalDataTimeBase } from \"./Enum/PersonalDataTimeBase\";\nimport { ProgressDataTeamValueType } from \"./Enum/ProgressDataTeamValueType\";\nimport { Bean, Required } from \"@allianzSND/core\";\n\n@Bean('TeamDataState')\nexport class TeamDataState {  \n\n    @Required\n    private _dataYear: number;\n\n    @Required\n    private _timeBase: PersonalDataTimeBase;\n\n    @Required\n    private _teamValueType: ProgressDataTeamValueType;\n\n    constructor() {\n        this._dataYear = -1;\n        this._timeBase = PersonalDataTimeBase.Unknow;\n        this._teamValueType = ProgressDataTeamValueType.FYFC;\n    }\n\n    get DataYear() {\n        return this._dataYear;\n    }\n\n    set DataYear(year: number) {\n        this._dataYear =  year;\n    }\n\n    // time base\n    get TimeBase() {\n        return this._timeBase;\n    }\n\n    set TimeBase(time: PersonalDataTimeBase) {\n        this._timeBase = time;\n    }\n\n    //team value type\n    get TeamValueType() {\n        return this._teamValueType;\n    }\n\n    set TeamValueType(type:ProgressDataTeamValueType) {\n        this._teamValueType = type;\n    }\n\n}","import { TranslateService} from '@allianzSND/core';\n\nexport class ProgressListContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    // week day\n    public WeekText: string = \"\";\n    public TodayText: string = \"\";\n\n    //Find Schedule Meet Submit Inforce\n    public FindNameText: string = \"\";\n    public FindContentText: string = \"\";\n    public FindUnitText: string = \"\";\n\n    public ScheduleNameText: string = \"\";\n    public ScheduleContentText: string = \"\";\n    public ScheduleUnitText: string = \"\";\n\n    public MeetNameText: string = \"\";\n    public MeetContentText: string = \"\";\n    public MeetUnitText: string = \"\";\n\n    public SubmitNameText: string = \"\";\n    public SubmitContentText: string = \"\";\n    public SubmitUnitText: string = \"\";\n\n    public InforceNameText: string = \"\";\n    public InforceContentText: string = \"\";\n    public InforceUnitText: string = \"\";\n\n    public AlmostMadeItMsg: string = \"\";\n    public CongratulationsMsg: string = \"\";\n    public WellDoneMsg: string = \"\";\n    public GreatJobMsg: string = \"\";\n\n    //units\n    public PointsText: string = \"\";\n\n\n    constructor(private translateService: TranslateService) {\n       \n        this._setTranslateVariable();\n        this.WeekText = this._translateWithVariable('Week');\n        this.TodayText = this._translateWithVariable('Today');\n\n        this.FindNameText = this._translateWithVariable('Find');\n        this.FindContentText = this._translateWithVariable('Find_Subtitle');\n        this.FindUnitText = this._translateWithVariable('People');\n        \n        this.ScheduleNameText = this._translateWithVariable('Schedule');\n        this.ScheduleContentText = this._translateWithVariable('Schedule_Subtitle');\n        this.ScheduleUnitText = this._translateWithVariable('Times');\n\n        this.MeetNameText = this._translateWithVariable('Meet');\n        this.MeetContentText = this._translateWithVariable('Meet_Subtitle');\n        this.MeetUnitText = this._translateWithVariable('Times');\n\n        this.SubmitNameText = this._translateWithVariable('Submit');\n        this.SubmitContentText = this._translateWithVariable('Submit_Subtitle');\n        this.SubmitUnitText = this._translateWithVariable('Times');\n\n        this.InforceNameText = this._translateWithVariable('Inforce');\n        this.InforceContentText = this._translateWithVariable('Inforce_Subtitle');\n        this.InforceUnitText = this._translateWithVariable('Times');\n\n        this.PointsText = this._translateWithVariable('Points');\n\n        this.CongratulationsMsg = this._translateWithVariable('Progress_Congratulations_Message');\n        this.AlmostMadeItMsg = this._translateWithVariable('Progress_Almost_Made_It_Message');\n        this.WellDoneMsg = this._translateWithVariable('Progress_Well_Done_Message');\n        this.GreatJobMsg = this._translateWithVariable('Progress_Great_Job_Message');\n    }\n\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            \"gratsPoints\": 20,\n            \"wellDownPoints\": 10\n\n        }\n    }\n\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\nexport class ProgressContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    //personal team\n    public PersonalText: string = \"\";\n    public TeamText: string = \"\";\n    public MonthText: string = \"\";\n    public QuarterText: string = \"\";\n    public YearText:string = \"\";\n    \n    public BackToProgressBtnText: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n        this.PersonalText = this._translateWithVariable('Personal');\n        this.TeamText = this._translateWithVariable('Team');\n        this.MonthText = this._translateWithVariable('Month');\n        this.QuarterText = this._translateWithVariable('Quarter');\n        this.YearText = this._translateWithVariable('Year');\n\n        this.BackToProgressBtnText = this._translateWithVariable('Back_To_Progress');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressActivityListContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    public ActivitiesText: string = \"\";\n    public AchieveText: string = \"\";\n\n    public FindText: string = \"\";\n    public FindContentText: string = \"\";\n\n    public ScheduleText: string = \"\";\n    public ScheduleContentText: string = \"\";\n\n    public MeetPresentText: string = \"\";\n    public MeetPresentContentText: string = \"\";\n\n    public SubmitText: string = \"\";\n    public SubmitContentText: string = \"\";\n\n    public InforceText: string = \"\";\n    public InforceContentText: string = \"\";\n    \n    public ActualGoalText: string = \"\";\n    public ActualPlanText: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.ActivitiesText = this._translateWithVariable('Activities');\n        this.AchieveText = this._translateWithVariable('Achieve');\n\n        this.ActualGoalText = this._translateWithVariable('Actual_Goal');\n        this.ActualPlanText = this._translateWithVariable('Actual_Plan');\n\n        this.FindText = this._translateWithVariable('Find');\n        this.FindContentText = this._translateWithVariable('Find_Subtitle');\n        \n        this.ScheduleText = this._translateWithVariable('Schedule');\n        this.ScheduleContentText = this._translateWithVariable('Schedule_Subtitle');\n\n        this.MeetPresentText = this._translateWithVariable('Meet_Present');\n        this.MeetPresentContentText = this._translateWithVariable('Meet_Subtitle');\n\n        this.SubmitText = this._translateWithVariable('Submit');\n        this.SubmitContentText = this._translateWithVariable('Submit_Subtitle');\n\n        this.InforceText = this._translateWithVariable('Inforce');\n        this.InforceContentText = this._translateWithVariable('Inforce_Subtitle');\n\n    }\n\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressMonthlyContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    public MonthlyPlanFYFCTitleText: string = \"\";\n    public MonthText: string = \"\";\n    public PlanText: string = \"\";\n    public ActualText: string = \"\";\n\n    public TotalForecastTitle: string = \"\";\n    public TotalYTDActualTitle: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.MonthlyPlanFYFCTitleText = this._translateWithVariable('Monthly_Plan_FYFC_Title');\n        this.MonthText = this._translateWithVariable('Month');\n        this.ActualText = this._translateWithVariable('Actual');\n        this.PlanText = this._translateWithVariable('Plan');\n        this.TotalForecastTitle = this._translateWithVariable('Total_Forecast');\n        this.TotalYTDActualTitle = this._translateWithVariable('Total_YTD_Actual');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressTeamContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    public MonthText: string = \"\";\n    public QuarterText: string = \"\";\n    public YearText: string = \"\";\n    public ManpowerText: string = \"\";\n    public RecruitmentText: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n        this.MonthText = this._translateWithVariable('Month');\n        this.QuarterText = this._translateWithVariable('Quarter');\n        this.YearText = this._translateWithVariable('Year');\n        this.ManpowerText = this._translateWithVariable('Manpower');\n        this.RecruitmentText = this._translateWithVariable('Recruitment');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressTeamDirectContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n\n    public DirectUnitTitle: string = \"\";\n    public ActivitiesText: string = \"\";\n    public GoalText: string = \"\";\n    public ForecastText: string = \"\";\n    public ActualText: string = \"\";\n    public ShortfallText: string = \"\";\n\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.DirectUnitTitle = this._translateWithVariable('Direct_Unit_Title');\n        this.ActivitiesText = this._translateWithVariable('Activities');\n        this.ActualText = this._translateWithVariable('Actual');\n        this.ForecastText = this._translateWithVariable('Forecast');\n        this.GoalText = this._translateWithVariable('Goal');\n        this.ShortfallText = this._translateWithVariable('Shortfall');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressTeamIndirectContentClass {\n    \n    //save and set translate variables\n    private _translateVariable = null;\n\n    public IndirectUnitTitle: string = \"\";\n    public GoalText: string = \"\";\n    public ForecastText: string = \"\";\n    public ActualText: string = \"\";\n    public ShortfallText: string = \"\";\n\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.IndirectUnitTitle = this._translateWithVariable('Indirect_Unit_Title');\n        this.GoalText = this._translateWithVariable('Goal');\n        this.ForecastText = this._translateWithVariable('Forecast');\n        this.ActualText = this._translateWithVariable('Actual');\n        this.ShortfallText = this._translateWithVariable('Shortfall');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService, Language } from '@allianzSND/core';\n\nexport class ProgressTeamMainContentClass {\n\n    //save and set translate variables\n    private _translateVariable = null;\n    private _language: Language = new Language();\n\n    public AgencyTitle:string = \"\";\n    public AllZoneTitle:string = \"\";\n    public GoalText: string = \"\";\n    public ForecastText: string = \"\";\n    public ActualText: string = \"\";\n    public ManpowerText: string = \"\";\n    public ShortfallText: string = \"\";\n    public RecruitmentText: string = \"\";\n\n\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n\n        this.AgencyTitle = this._translateWithVariable('Agency_Title');\n        this.AllZoneTitle = this._translateWithVariable('All_Zone_Title');\n        this.ManpowerText = this._translateWithVariable(this._language.progressManpower);\n        this.RecruitmentText = this._translateWithVariable(this._language.progressRecruitment);\n\n        this.GoalText = this._translateWithVariable(this._language.progressGoal);\n        this.ActualText = this._translateWithVariable(this._language.progressActual);\n        this.ForecastText = this._translateWithVariable(this._language.progressForecast);\n        this.ShortfallText = this._translateWithVariable(this._language.progressShortfall);\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\n\nexport class ProgressHeadContentClass {\n    \n    //save and set translate variables\n    private _translateVariable = null;\n\n    //personal team\n    public MonthText: string = \"\";\n    public QuarterText: string = \"\";\n    public YearText:string = \"\";\n    public ManpowerText: string = \"\";\n    public RecruitmentText: string = \"\";\n\n    public GoalText: string = \"\";\n    public ForecastText: string = \"\";\n    public ActualText: string = \"\";\n    public ShortfallText: string = \"\";\n\n    constructor(private translateService: TranslateService) {\n        this._setTranslateVariable();\n        this.MonthText = this._translateWithVariable('Month');\n        this.QuarterText = this._translateWithVariable('Quarter');\n        this.YearText = this._translateWithVariable('Year');\n        this.ManpowerText = this._translateWithVariable('Manpower');\n        this.RecruitmentText = this._translateWithVariable('Recruitment');\n\n        this.GoalText = this._translateWithVariable('Goal');\n        this.ForecastText = this._translateWithVariable('Forecast');\n        this.ActualText = this._translateWithVariable('Actual');\n        this.ShortfallText = this._translateWithVariable('Shortfall');\n    }\n\n    //set translate variables\n    private _setTranslateVariable() {\n\n        this._translateVariable = {\n            // \"gratsPoints\": 20,\n        }\n    }\n\n    private _translateWithVariable(mappingID: string) {\n        return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n    }\n}","import { TranslateService } from '@allianzSND/core';\nexport class InfoContentClass {\n        //save and set translate variables\n        private _translateVariable = null;\n\n        //progress head table info\n        public MonthText: string = \"\";\n        public QuarterText: string = \"\";\n        public YearText:string = \"\";\n        public ForecastText: string = \"\";\n        public RecruitmentText: string = \"\";\n        public InformationDescriptionText: string = \"\";\n\n        public InfoTitle:string = \"\";\n        public InfoMonthDetailText:string = \"\";\n        public InfoQuarterDetailText:string = \"\";\n        public InfoYearDetailText: string = \"\";\n        public InfoForecastRecruitmentDetailText: string = \"\";\n        public InfoAllAmountCountsByMillionText:string = \"\";\n\n        //progress-personal-progressbar-list info\n        public InfoHowToReadThisTitle: string = \"\";\n        public InfoConversionRateText: string = \"\";\n        public InfoConversionRateDetailText: string = \"\";\n\n        //progress-team-direct-unit info\n        public InfoActivityLabelText: string = \"\";\n        public InfoRedMeanText: string = \"\";\n        public InfoGreyMeanText: string = \"\";\n        public InfoIfAnActivity1Text: string = \"\";\n        public InfoIfAnActivity2Text: string = \"\";\n\n        public InfoToFindText: string = \"\";\n        public InfoTryTo1Text: string = \"\";\n        public InfoTryTo2Text: string = \"\";\n        public InfoTryTo3Text: string = \"\";\n\n        public InfoMoreActive1Text: string = \"\";\n        public InfoMoreActive2Text: string = \"\";\n        public InfoMoreActive3Text: string = \"\";\n        public InfoMoreActive4Text: string = \"\";\n\n        public InfoTryHard1Text: string = \"\";\n        public InfoTryHard2Text: string = \"\";\n        public InfoTryHard3Text: string = \"\";\n\n        public InfoHighQuality1Text: string = \"\";\n        public InfoHighQuality2Text: string = \"\";\n\n        \n    \n        constructor(private translateService: TranslateService) {\n            this._setTranslateVariable();\n            \n            //progress head table info\n            this.MonthText = this._translateWithVariable('Month');\n            this.QuarterText = this._translateWithVariable('Quarter');\n            this.YearText = this._translateWithVariable('Year');\n            this.ForecastText = this._translateWithVariable('Forecast');\n            this.RecruitmentText = this._translateWithVariable('Recruitment');\n\n            this.InformationDescriptionText = this._translateWithVariable('Info_Information_Description');\n\n            this.InfoTitle = this._translateWithVariable('Info_Title');\n            this.InfoMonthDetailText = this._translateWithVariable('Info_Month_Detail');\n            this.InfoQuarterDetailText = this._translateWithVariable('Info_Quarter_Detail');\n            this.InfoYearDetailText = this._translateWithVariable('Info_Year_Detail');\n            this.InfoForecastRecruitmentDetailText = this._translateWithVariable('Info_Forecast_Recruitment_Detail');\n\n            //progress-personal-progressbar-list info\n            this.InfoHowToReadThisTitle = this._translateWithVariable('Info_How_To_Read_This');\n            this.InfoConversionRateText = this._translateWithVariable('Info_Conversion_Rate');\n            this.InfoConversionRateDetailText = this._translateWithVariable('Info_Conversion_Rate_Detail');\n\n            //progress-team-direct-unit\n            this.InfoActivityLabelText = this._translateWithVariable('Info_Activity_Label');\n\n            this.InfoRedMeanText = this._translateWithVariable('Info_Red_Mean');\n            this.InfoGreyMeanText = this._translateWithVariable('Info_Grey_Mean');\n            this.InfoIfAnActivity1Text = this._translateWithVariable('Info_If_An_Activity_1');\n            this.InfoIfAnActivity2Text = this._translateWithVariable('Info_If_An_Activity_2');\n    \n            this.InfoToFindText = this._translateWithVariable('Info_To_Find');\n            this.InfoTryTo1Text = this._translateWithVariable('Info_Try_To_1');\n            this.InfoTryTo2Text = this._translateWithVariable('Info_Try_To_2');\n            this.InfoTryTo3Text = this._translateWithVariable('Info_Try_To_3');\n    \n            this.InfoMoreActive1Text = this._translateWithVariable('Info_More_Active_1');\n            this.InfoMoreActive2Text = this._translateWithVariable('Info_More_Active_2');\n            this.InfoMoreActive3Text = this._translateWithVariable('Info_More_Active_3');\n            this.InfoMoreActive4Text = this._translateWithVariable('Info_More_Active_4');\n    \n            this.InfoTryHard1Text = this._translateWithVariable('Info_Try_Hard_1');\n            this.InfoTryHard2Text = this._translateWithVariable('Info_Try_Hard_2');\n            this.InfoTryHard3Text = this._translateWithVariable('Info_Try_Hard_3');\n    \n            this.InfoHighQuality1Text = this._translateWithVariable('Info_High_Quality_1');\n            this.InfoHighQuality2Text = this._translateWithVariable('Info_High_Quality_2');\n\n            this.InfoAllAmountCountsByMillionText = this._translateWithVariable(\"Info_All_Amount_Counts_By_Million\");\n\n        }\n    \n        //set translate variables\n        private _setTranslateVariable() {\n    \n            this._translateVariable = {\n                // \"gratsPoints\": 20,\n            }\n        }\n    \n        private _translateWithVariable(mappingID: string) {\n            return this.translateService.translateWithVariable(mappingID, this._translateVariable);\n        }\n}","export enum ActivitiesType {\n    Find = \"F\",\n    Schedule = \"S\",\n    Meet = \"M\",\n    Submit = \"Su\",\n    Inforce = \"I\",\n    Unknow = \"Unknow\"\n}","export enum ActualValueDataType {\n    FYFC = \"FYFC\",\n    ANP = \"ANP\"\n}","export enum PerformanceType {\n    Personal = \"P\",\n    Team = \"T\",\n    unknow = \"U\"\n}","export enum Quarters{  \n    Q1 = \"Q1\",\n    Q2 = \"Q2\",\n    Q3 = \"Q3\",\n    Q4 = \"Q4\",\n    Unknow = \"unknow\"\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { CoreModule } from '@allianzSND/core';\nimport { UIModule } from '@allianzSND/ui';\n@NgModule({\n  imports: [\n    CoreModule,\n    UIModule,\n    CommonModule\n  ],\n  declarations: [\n\n   ],\n  exports: [\n  ]\n})\nexport class ProgressModule { }\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from, of} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\nimport { ISearchTableByField } from \"@allianzSND/core\";\n\nexport class GetPersonalProgressAPI implements IAPI, IMockAPI, ISQLiteAPI, ISearchTableByField {\n\n    private _year: number = -1;\n\n    private _daoFactory: DaoFactory;\n    constructor(daoFactory: DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    SetYear(value: number): void {\n        this._year = value;\n    }\n\n    getAPIName(): string {\n        return 'getPersonalProgress';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getPersonalProgressMock.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.debug(\"SQLite Start \");\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite defaultDao: \", defaultDao);\n\n        let tableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Personal_Progress\");\n        console.debug(\"SQLite tableObj: \", tableObj);\n\n        if(defaultDao != undefined && tableObj != undefined) {\n            return from(defaultDao.queryByTable(tableObj).toPromise().then(resp => {\n                console.debug(\"SQLite getPersonalProgress resp: \", resp);\n                console.debug(\"SQLite getPersonalProgress json resp: \", JSON.stringify(resp));\n                \n                return resp;\n            }));\n        }\n        else {\n            of(false);\n            console.debug(\"SQLite failed\");\n        }\n    }\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressActualValueAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n    private _dataYear: number;\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    setDataYear(year: number) {\n      this._dataYear = year;\n    } \n    /*\n    constructor(DaoFactory) {\n        this._daoFactory = DaoFactory;\n    }\n    */\n\n    constructor(){};\n\n    getAPIName(): string {\n        return 'getProgressActualValue';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        if(this._dataYear == 2019) {\n          return './assets/mock/getProgressActualValue_2019.json';\n        }\n        else if(this._dataYear == 2020) {\n          return './assets/mock/getProgressActualValue_2020.json';\n        }\n        else {\n          //todo throw error\n          console.warn('dataYear not match mock path');\n          return '';\n        }\n    }\n\n\n    executeSQL(): Observable<any> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressDataActualValueAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n    private _searchYear: number;\n\n    public get SearchYear() {\n        return this._searchYear;\n    }\n\n    public set SearchYear(value:number) {\n        this._searchYear = value;\n    }\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    \n    constructor(daoFactory:DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    getAPIName(): string {\n        return 'getProgressDataActualValue';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        return './assets/mock/getProgressDataActualValueMock.json';\n    }\n\n\n    executeSQL(): Observable<any> {\n\n        console.debug(\"SQLite actual start \");\n        let defaultDao = this._daoFactory.getDefaultDao();\n\n        console.debug(\"SQLite actual defaultDao: \", defaultDao);\n        let progressActualObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Actual_Value\");\n\n        console.debug(\"SQLite actual progressActualObj: \", progressActualObj);\n        if(defaultDao != undefined && progressActualObj != undefined) {\n            return from(defaultDao.queryByTable(progressActualObj).toPromise().then(resp => {\n                console.debug(\"SQLite actual data api resp: \", resp);\n            }).then(resp => {\n                let data = resp[\"Body\"];\n                let filterData = data.filter(x => x.DataYear == 2019);\n                let filterData2 = data.filter(x => x.DataYear == 2020);\n                console.debug(\"SQLite actual test date body: \", data);\n                console.debug(\"SQLite actual test filterData: \", filterData);\n                console.debug(\"SQLite actual test filterData2: \", filterData2);\n\n                let arr = [];\n                arr.push(filterData);\n                arr.push(filterData2);\n                console.debug(\"SQLite actual test arr: \", arr);\n\n                return arr;\n            }).then(resp => {\n                let data = resp;\n                let progressActualObj1 = \n                {\n                    \"DataYear\": \"2019\",\n                    \"TimeBase\": \"Month\",\n                    \"Values\":[],\n                };\n\n                let progressActualObj2 = \n                {\n                    \"DataYear\": \"2020\",\n                    \"TimeBase\": \"Month\",\n                    \"Values\":[]\n                };\n                \n                progressActualObj1.Values.push(data[0]);\n                progressActualObj2.Values.push(data[1]);\n\n                let progressActualObjArr = [];\n                \n                progressActualObjArr.push(progressActualObj1);\n                progressActualObjArr.push(progressActualObj2);\n\n                console.debug(\"SQLite actual test progressActualObj123: \", progressActualObjArr);\n                return progressActualObjArr;\n            }).then(resp => {\n                let data = resp;\n                console.debug(\"SQLite actual test resp progressActualObj123 : \", resp);\n                console.debug(\"SQLite actual test data progressActualObj123 : \", data);\n                let defaultProgressActualObj = \n                {\n                    \"lastUpdateTime\": \"2019-06-19\",\n                    \"Actual\":[],\n                };\n\n                defaultProgressActualObj.Actual.push(data[0]);\n                defaultProgressActualObj.Actual.push(data[1]);\n\n                console.debug(\"SQLite actual test defaultProgressActualObj : \", defaultProgressActualObj);\n                return defaultProgressActualObj;\n            }));\n        }\n        else {\n            console.debug(\"SQLite actual data fail......\");\n        }\n\n        //throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let defaultObj = {\n            \"ClientID\": \"\",\n            \"LastName\": \"\",\n            \"FirstName\": \"\",\n            \"Occupation\": \"\",\n            \"Company\": \"\",\n            \"BirthdayYear\": \"\",\n            \"BirthdayMonth\": \"\",\n            \"BirthdayDate\": \"\",\n            \"Birthday\": null,\n            \"AgeRange\": null,\n            \"Gender\": null,\n            \"Income\": null,\n            \"Source\": null,\n            \"Marriage\": null,\n            \"Children\": null,\n            \"Familiarity\": null,\n            \"RecentStatus\": \"\",\n            \"MANPA\": \"\",\n            \"ContactFrequancy\": \"\",\n            \"Possibility\": \"\",\n            \"IsFollow\": \"N\",\n            \"DataSource\": \"APP\",\n            \"tel\": [],\n            \"email\": [],\n            \"address\": []\n        }\n        if (!this._id || (this._id.length == 0)) {\n            //Add\n            let resp = new SQLiteResponse({\n                \"isSuccess\": true\n            }, [defaultObj]);\n            return of(resp);\n        }\n        else {\n            let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n            let defaultDao = this.daoFactory.getDefaultDao();\n            if (customerObj != undefined && defaultDao != undefined) {\n                let dao = new ClientCustomDao(defaultDao);\n                customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n                return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                }).then(({ customer, clientID }) => {\n                    let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                    if (customerEmailObj) {\n                        customerEmailObj = (<SQLiteTable>customerEmailObj);\n                        customerEmailObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['email'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n\n                }).then(({ customer, clientID }) => {\n                    let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                    if (customerAddrObj) {\n                        customerAddrObj = (<SQLiteTable>customerAddrObj);\n                        customerAddrObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['address'] = telList;\n                            return customer;\n                        });\n                    }\n                    else\n                        return customer;\n                }).then(customer => {\n                    //change birthDay to Date Object\n                    customer['Body'][0]['Birthday'] = new Date(customer['Body'][0]['BirthdayYear'], parseInt(customer['Body'][0]['BirthdayMonth']) - 1, customer['Body'][0]['BirthdayDate']);\n                    return customer;\n                }))\n            }\n            else {\n                return of(false);\n            }\n        }\n    }\n    */\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n\n\n\n\n\n\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressDataAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number = 0;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType = PersonalDataType.Actual;\n    private _personalDataTimeBase: PersonalDataTimeBase = PersonalDataTimeBase.Day;\n    private _searchYear: number = 0;\n\n    //condition year\n    public set SearchYear(value:number) {\n        this._searchYear = value;\n    }\n\n    public get SearchYear() {\n        return this._searchYear;\n    }\n\n    //condition client id\n    public set SearchClientId(id:number) {\n        this._clientID = id;\n    }\n\n    public get SearchCLientId() {\n        return this._clientID;\n    }\n\n    //condition data type\n    public set SearchDataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    public get SearchDataType() {\n        return this._personalDataType;\n    }\n\n\n    //condition time base\n    public set SearchTimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    public get SearchTimeBase() {\n        return this._personalDataTimeBase;\n    }\n\n    \n    constructor(daoFactory:DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    getAPIName(): string {\n        return 'getProgressData';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getProgressDataMock.json';\n    }\n\n\n    executeSQL(): Observable<any> {\n\n        console.debug(\"SQLite progress start \");\n\n        /*\n        let defaultProgressObj = \n        {\n            \"lastUpdateTime\": \"\",\n            \"Progress\":[],\n        };\n        */\n\n        /*\n        // Progress [progressObj, progressObj] *2\n        let progressObj:\n        {\n            \"DataYear\": \"\",\n            \"YesterdayPoint\": \"\",\n            \"Values\":[]\n        };\n        */\n\n\n        /*\n        // progressObj.Value[] * n\n        let progresValueObj =\n        {\n            \"DataType\":\"\",\n            \"TimeBase\": \"\",\n            \"FYFC\": 0,\n            \"Find\": 0,\n            \"Schedule\": 0,\n            \"Meet\": 0,\n            \"Submit\": 0,\n            \"Inforce\": 0\n        };\n        */\n\n\n        // test class to obj type\n\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite progress defaultDao: \", defaultDao);\n\n        let progressTableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Personal_Progress\"); \n        console.debug(\"SQLite progress progressTableObj: \", progressTableObj);\n\n        if(progressTableObj != undefined && defaultDao != undefined) {\n            return from(defaultDao.queryByTable(progressTableObj).toPromise().then(resp => {\n                console.debug(\"SQLite progress data api resp: \", resp);\n                return resp;\n            }).then(resp => {\n                let data = resp[\"Body\"];\n                let filterData = data.filter(x => x.DataYear == 2019);\n                let filterData2 = data.filter(x => x.DataYear == 2020);\n                console.debug(\"SQLite progress test date body: \", data);\n                console.debug(\"SQLite progress test filterData: \", filterData);\n                console.debug(\"SQLite progress test filterData2: \", filterData2);\n\n                let arr = [];\n                arr.push(filterData);\n                arr.push(filterData2);\n                console.debug(\"SQLite progress test arr: \", arr);\n\n                return arr;\n            }).then(resp => {\n\n                let data = resp;\n\n                let progressObj1 = \n                {\n                    \"DataYear\": \"2019\",\n                    \"YesterdayPoint\": \"20\",\n                    \"Personal\":{Values:[]},\n                };\n\n                let progressObj2 = \n                {\n                    \"DataYear\": \"2020\",\n                    \"YesterdayPoint\": \"20\",\n                    \"Personal\":{Values:[]},\n                };\n                \n                progressObj1.Personal.Values.push(data[0]);\n                progressObj2.Personal.Values.push(data[1]);\n\n                let progressObjArr = [];\n                \n                progressObjArr.push(progressObj1);\n                progressObjArr.push(progressObj2);\n\n                console.debug(\"SQLite progress test progressObj123: \", progressObjArr);\n                return progressObjArr;\n\n            }).then(resp => {\n                let data = resp;\n                console.debug(\"SQLite progress test resp progressObj123 : \", resp);\n                console.debug(\"SQLite progress test data progressObj123 : \", data);\n                let defaultProgressObj = \n                {\n                    \"lastUpdateTime\": \"2019-06-19\",\n                    \"Progress\":[],\n                };\n\n                defaultProgressObj.Progress.push(data[0]);\n                defaultProgressObj.Progress.push(data[1]);\n\n                console.debug(\"SQLite progress test defaultProgressObj123 : \", defaultProgressObj);\n                return defaultProgressObj;\n            }));\n        }\n        else {\n            console.debug(\"SQLite progress fail.....\");\n        }\n    }\n    \n                    /*\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                    */\n\n\n\n\n\n\n\n\n\n    /*\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let defaultObj = {\n            \"ClientID\": \"\",\n            \"LastName\": \"\",\n            \"FirstName\": \"\",\n            \"Occupation\": \"\",\n            \"Company\": \"\",\n            \"BirthdayYear\": \"\",\n            \"BirthdayMonth\": \"\",\n            \"BirthdayDate\": \"\",\n            \"Birthday\": null,\n            \"AgeRange\": null,\n            \"Gender\": null,\n            \"Income\": null,\n            \"Source\": null,\n            \"Marriage\": null,\n            \"Children\": null,\n            \"Familiarity\": null,\n            \"RecentStatus\": \"\",\n            \"MANPA\": \"\",\n            \"ContactFrequancy\": \"\",\n            \"Possibility\": \"\",\n            \"IsFollow\": \"N\",\n            \"DataSource\": \"APP\",\n            \"tel\": [],\n            \"email\": [],\n            \"address\": []\n        }\n        if (!this._id || (this._id.length == 0)) {\n            //Add\n            let resp = new SQLiteResponse({\n                \"isSuccess\": true\n            }, [defaultObj]);\n            return of(resp);\n        }\n        else {\n            let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n            let defaultDao = this.daoFactory.getDefaultDao();\n            if (customerObj != undefined && defaultDao != undefined) {\n                let dao = new ClientCustomDao(defaultDao);\n                customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n                return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                }).then(({ customer, clientID }) => {\n                    let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                    if (customerEmailObj) {\n                        customerEmailObj = (<SQLiteTable>customerEmailObj);\n                        customerEmailObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['email'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n\n                }).then(({ customer, clientID }) => {\n                    let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                    if (customerAddrObj) {\n                        customerAddrObj = (<SQLiteTable>customerAddrObj);\n                        customerAddrObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['address'] = telList;\n                            return customer;\n                        });\n                    }\n                    else\n                        return customer;\n                }).then(customer => {\n                    //change birthDay to Date Object\n                    customer['Body'][0]['Birthday'] = new Date(customer['Body'][0]['BirthdayYear'], parseInt(customer['Body'][0]['BirthdayMonth']) - 1, customer['Body'][0]['BirthdayDate']);\n                    return customer;\n                }))\n            }\n            else {\n                return of(false);\n            }\n        }\n    }\n    */\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressDataGoalSettingPlanAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n    private _searchYear: number;\n\n    public get SearchYear() {\n        return this._searchYear;\n    }\n\n    public set SearchYear(value:number) {\n        this._searchYear = value;\n    }\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    \n    constructor(daoFactory:DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    getAPIName(): string {\n        return 'getProgressDataGoalSettingPlan';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        return './assets/mock/getProgressDataGoalSettingPlanMock.json';\n    }\n\n\n    executeSQL(): Observable<any> {\n\n        console.debug(\"SQLite goal plan start \");\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite goal plan defaultDao: \", defaultDao);\n\n        let progressGoalPlanObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Goal_Setting_Plan_Value\");\n        console.debug(\"SQLite goal plan progressGoalPlanObj: \", progressGoalPlanObj);\n\n\n        if(defaultDao != undefined && progressGoalPlanObj != undefined) {\n            return from(defaultDao.queryByTable(progressGoalPlanObj).toPromise().then( resp => {\n                console.debug(\"SQLite goal plan data api resp: \", resp);\n            }));\n        }\n        else {\n            console.debug(\"SQLite goal plan fail... \");\n        }\n\n\n        //throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        console.log('customer Detail:execute SQL');\n        let defaultObj = {\n            \"ClientID\": \"\",\n            \"LastName\": \"\",\n            \"FirstName\": \"\",\n            \"Occupation\": \"\",\n            \"Company\": \"\",\n            \"BirthdayYear\": \"\",\n            \"BirthdayMonth\": \"\",\n            \"BirthdayDate\": \"\",\n            \"Birthday\": null,\n            \"AgeRange\": null,\n            \"Gender\": null,\n            \"Income\": null,\n            \"Source\": null,\n            \"Marriage\": null,\n            \"Children\": null,\n            \"Familiarity\": null,\n            \"RecentStatus\": \"\",\n            \"MANPA\": \"\",\n            \"ContactFrequancy\": \"\",\n            \"Possibility\": \"\",\n            \"IsFollow\": \"N\",\n            \"DataSource\": \"APP\",\n            \"tel\": [],\n            \"email\": [],\n            \"address\": []\n        }\n        if (!this._id || (this._id.length == 0)) {\n            //Add\n            let resp = new SQLiteResponse({\n                \"isSuccess\": true\n            }, [defaultObj]);\n            return of(resp);\n        }\n        else {\n            let customerObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_VW_Customer\");\n            let defaultDao = this.daoFactory.getDefaultDao();\n            if (customerObj != undefined && defaultDao != undefined) {\n                let dao = new ClientCustomDao(defaultDao);\n                customerObj.addRestriction(new EqualRestriction(\"ClientID\", [this._id]));\n                return from(dao.queryByTable(customerObj).toPromise().then(resp => {\n                    let customer = resp;\n                    let clientID = customer['Body'][0].ClientID;\n                    let customerTelObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Tel\");\n                    if (customerTelObj) {\n                        customerTelObj = (<SQLiteTable>customerTelObj);\n                        customerTelObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n                        return dao.queryByTable(customerTelObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['tel'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n                }).then(({ customer, clientID }) => {\n                    let customerEmailObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Email\");\n                    if (customerEmailObj) {\n                        customerEmailObj = (<SQLiteTable>customerEmailObj);\n                        customerEmailObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerEmailObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['email'] = telList;\n                            return { customer, clientID };\n                        });\n                    }\n                    else\n                        return { customer, clientID };\n\n                }).then(({ customer, clientID }) => {\n                    let customerAddrObj = this.daoFactory.getDefaultTable(\"TW_LH_SD_Customer_Address\");\n                    if (customerAddrObj) {\n                        customerAddrObj = (<SQLiteTable>customerAddrObj);\n                        customerAddrObj.addRestriction(new EqualRestriction('CustomerClientID', [clientID]));\n\n                        return dao.queryByTable(customerAddrObj).toPromise().then((resp) => {\n                            let telList = resp['Body'];\n                            customer['Body'][0]['address'] = telList;\n                            return customer;\n                        });\n                    }\n                    else\n                        return customer;\n                }).then(customer => {\n                    //change birthDay to Date Object\n                    customer['Body'][0]['Birthday'] = new Date(customer['Body'][0]['BirthdayYear'], parseInt(customer['Body'][0]['BirthdayMonth']) - 1, customer['Body'][0]['BirthdayDate']);\n                    return customer;\n                }))\n            }\n            else {\n                return of(false);\n            }\n        }\n    }\n    */\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n\n\n\n\n\n\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class GetProgressGoalPlanAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n    private _dataYear: number;\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    setDataYear(year: number) {\n      this._dataYear = year;\n    }\n\n    /*\n    constructor(DaoFactory) {\n        this._daoFactory = DaoFactory;\n    }\n    */\n\n    constructor(){};\n\n    getAPIName(): string {\n        return 'getProgressGoalPlan';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        if(this._dataYear == 2019) {\n          return './assets/mock/getProgressGoalPlan_2019.json';\n        }\n        else if(this._dataYear == 2020) {\n          return './assets/mock/getProgressGoalPlan_2020.json';\n        }\n        else {\n          //todo throw error\n          console.warn(\"datYear not match mock path\");\n          return '';\n        }\n    }\n\n\n    executeSQL(): Observable<any> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from, of} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport { ISearchTableByField } from \"@allianzSND/core\";\n\nexport class GetTeamProgressDetailAPI implements IAPI, IMockAPI, ISQLiteAPI, ISearchTableByField {\n\n    private _year: number = -1;\n\n    private _daoFactory: DaoFactory;\n    constructor(daoFactory: DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    SetYear(value: number): void {\n        this._year = value;\n    }\n\n    getAPIName(): string {\n        return 'getTeamProgressDetail';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getTeamProgressDetailMock.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.debug(\"SQLite Start \");\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite defaultDao: \", defaultDao);\n\n        let tableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Team_Progress_Detail\"); \n        console.debug(\"SQLite tableObj: \", tableObj);\n\n        if(defaultDao != undefined && tableObj != undefined) {\n            return from(defaultDao.queryByTable(tableObj).toPromise().then(resp => {\n                console.debug(\"SQLite getTeamProgressDetail resp: \", resp);\n                console.debug(\"SQLite getTeamProgressDetail json resp: \", JSON.stringify(resp));\n                return resp;\n            }));\n        }\n        else {\n            of(false);\n            console.debug(\"SQLite failed\");\n        }\n    }\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from, of} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\nimport { ISearchTableByField } from \"@allianzSND/core\";\n\nexport class GetTeamProgressMainAPI implements IAPI, IMockAPI, ISQLiteAPI, ISearchTableByField {\n\n    private _year: number = -1;\n\n    private _daoFactory: DaoFactory;\n    constructor(daoFactory: DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    SetYear(value: number): void {\n        this._year = value;\n    }\n\n    getAPIName(): string {\n        return 'getTeamProgressMain';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getTeamProgressMainMock.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.debug(\"SQLite Start \");\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite defaultDao: \", defaultDao);\n\n        let tableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Team_Progress_Main\"); \n        console.debug(\"SQLite tableObj: \", tableObj);\n\n        if(defaultDao != undefined && tableObj != undefined) {\n            return from(defaultDao.queryByTable(tableObj).toPromise().then(resp => {\n                console.debug(\"SQLite getTeamProgressMain resp: \", resp);\n                console.debug(\"SQLite getTeamProgressMain json resp: \", JSON.stringify(resp));\n                return resp;\n            }));\n        }\n        else {\n            of(false);\n            console.debug(\"SQLite failed\");\n        }\n    }\n\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nimport { PersonalDataType } from  '../service/model/Enum/PersonalDataType';\nimport { PersonalDataTimeBase } from  '../service/model/Enum/PersonalDataTimeBase';\n\nexport class PersonalProgressOldAPI implements IAPI, IMockAPI, ISQLiteAPI {\n\n    private _clientID: number;\n    private _daoFactory: DaoFactory;\n    private _personalDataType: PersonalDataType;\n    private _personalDataTimeBase: PersonalDataTimeBase;\n\n    set ClientId(id:number) {\n        this._clientID = id;\n    }\n\n    set DataType(type:PersonalDataType) {\n        this._personalDataType = type;\n    }\n\n    set TimeBase(time:PersonalDataTimeBase) {\n        this._personalDataTimeBase = time;\n    }\n\n    /*\n    constructor(DaoFactory) {\n        this._daoFactory = DaoFactory;\n    }\n    */\n\n    constructor(){};\n\n    getAPIName(): string {\n        return 'getPersonalProgressOld';\n    }\n\n    getMockPath(): string {\n        //alert(\"personal progress mock data\");\n        return './assets/mock/getPersonalProgress.json';\n    }\n\n\n    executeSQL(): Observable<any> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /*\n    executeSQL(): Observable<any> {\n        return Observable.create((observer) => {\n          let calendarObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n          let dao = this._daoFactory.getDefaultDao();\n          if (calendarObj != undefined && dao != undefined) {\n            \n            dao = new ClientCustomDao(dao);\n            calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n            dao.queryByTable(calendarObj).subscribe((resp) => {\n              observer.next(resp);\n              observer.complete();\n            });\n          } else {\n            observer.next(false);\n            observer.complete();\n          }\n        });\n      }\n      */\n\n}","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable, from, of} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\nimport { ISearchTableByField } from \"@allianzSND/core\";\n\nexport class GetYearConfigurationAPI implements IAPI, IMockAPI, ISQLiteAPI, ISearchTableByField {\n      \n    private _year: number = -1;\n\n    private _daoFactory: DaoFactory;\n    constructor(daoFactory: DaoFactory) {\n        this._daoFactory = daoFactory;\n    }\n\n    SetYear(value: number): void {\n        this._year = value;\n    }\n       \n    getAPIName(): string {\n        return 'getYearConfiguration';\n    }\n\n    getMockPath(): string {\n        return './assets/mock/getYearConfigurationMock.json';\n    }\n\n    executeSQL(): Observable<any> {\n        console.debug(\"SQLite Start year configuration \");\n\n        let defaultDao = this._daoFactory.getDefaultDao();\n        console.debug(\"SQLite defaultDao: \", defaultDao);\n\n        let tableObj = this._daoFactory.getDefaultTable(\"TW_LH_SD_VW_Year_Config\"); \n        console.debug(\"SQLite tableObj: \", tableObj);\n\n        if(defaultDao != undefined && tableObj != undefined) {\n            return from(defaultDao.queryByTable(tableObj).toPromise().then(resp => {\n                console.debug(\"SQLite getYearConfiguration resp: \", resp);\n                console.debug(\"SQLite getYearConfiguration json resp: \", JSON.stringify(resp));\n                return resp;\n            }));\n        }\n        else {\n            of(false);\n            console.debug(\"SQLite failed\");\n        }\n    }\n\n}","import { IAPI, StringUtils, EqualRestriction } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from \"@allianzSND/core\";\nimport { Observable, from, of } from \"rxjs\";\nimport { DaoFactory } from \"@allianzSND/core\";\n\nexport class AddPointAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _addType: string = \"\";\n  private _year: number = -1;\n  private _addPointNum = 1;\n  private dao;\n\n  private _daoFactory: DaoFactory;\n  constructor(daoFactory: DaoFactory) {\n    this._daoFactory = daoFactory;\n  }\n\n  SetAddType(value: string): void {\n    this._addType = value;\n  }\n  SetYear(val: number): void {\n    this._year = val;\n  }\n  SetPointNum(val:number): void{\n    this._addPointNum = val;\n  }\n  getAPIName(): string {\n    return \"addPoint\";\n  }\n\n  getMockPath(): string {\n    return \"./assets/mock/saveSuccess.json\";\n  }\n\n  executeSQL(): Observable<any> {\n\n    console.log(\"AddPointAPI add \" + this._addType + \" point\");\n    console.log(\"this._addType\", this._addType, \"this._year\", this._year);\n    \n    if (StringUtils.isNotEmpty(this._addType) && this._year != -1) {\n        this.dao = this._daoFactory.getDefaultDao();\n        let TimeBaselist = [\"Day\",\"Week\",\"Month\",\"Quarter\",\"Year\"];\n        return from(Promise.all(TimeBaselist.map(timeBase => this._addPoint(timeBase))).then(()=>{\n          let addResp = this.dao.runTransaction().toPromise();\n          console.log(\"addResp\",addResp);\n          return addResp;\n        }));\n    } else {\n        return of(false);\n    }\n  }\n\n  private async _addPoint(timeBase){\n    console.log(\"into _addPoint()\");\n    console.log(\"timeBase\",timeBase);\n    let currentNum = 0;\n    let PersonalPorgress = this._daoFactory.getDefaultTable(\"TW_LH_SD_Personal_Progress\");\n    console.log(\"SQLite tableObj: \", PersonalPorgress);\n    PersonalPorgress.addRestriction(new EqualRestriction(\"DataYear\", [this._year]));\n    PersonalPorgress.addRestriction(new EqualRestriction(\"TimeBase\", [timeBase]));\n    PersonalPorgress.addRestriction(new EqualRestriction(\"DataType\", [\"Actual\"]));\n    let progressObj = null;\n    let getResp = await this.dao.queryByTable(PersonalPorgress).toPromise();\n    console.log(\"AddPointAPI getResp\", getResp);\n    if (getResp.Header[\"status\"] && getResp.Body.length > 0) {\n      progressObj = getResp.Body[0];\n    if (this._addType == \"customer\") {\n        currentNum = progressObj.Find;\n        PersonalPorgress.setValue(\"Find\", currentNum + this._addPointNum);\n    } else if (this._addType == \"calendar\") {\n        currentNum = progressObj.Schedule;\n        PersonalPorgress.setValue(\"Schedule\", currentNum + this._addPointNum);\n    }\n    console.log(\"AddPointAPI PersonalPorgress\", PersonalPorgress);\n    this.dao.transactionUpdate(PersonalPorgress);\n    }\n  }\n}\n"],"names":["tslib_1.__decorate","Required","Bean","BehaviorSubject","of","ROLE","from","APPError","NumberUtils","Injectable","APIDispatch","APIFactory","DeviceService","NotificationMgr","NotificationUtils","ErrorHandler","Valid","Observable","Language","NgModule","CoreModule","UIModule","CommonModule","StringUtils","EqualRestriction"],"mappings":"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"}
