{"version":3,"file":"allianzSND-login.js.map","sources":["ng://@allianzSND/login/lib/model/Enum/Region.ts","ng://@allianzSND/login/lib/service/login.service.ts","ng://@allianzSND/login/lib/model/LoginForm.ts","ng://@allianzSND/login/lib/components/login/login.component.ts","ng://@allianzSND/login/lib/components/loading/loading.component.ts","ng://@allianzSND/login/lib/login.module.ts"],"sourcesContent":["export enum Region {\n    Taiwan = \"TW\",\n    Thailand = \"TH\",\n    Philippines = \"PH\",\n    Indonesia = \"ID\",\n    Malaysia = \"MY\",\n    Srilanka = \"LK\",\n    Unknow = \"unknow\"\n}","import { Injectable, ErrorHandler } from \"@angular/core\";\nimport { OfflineAuthAPI, APIFactory, APIDispatch, APPError, LoginResponse, LOGIN_TYPE, TimeoutService } from \"@allianzSND/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n\n    constructor(\n        private APIFactory: APIFactory,\n        private dispatcher: APIDispatch,\n        private timeoutService: TimeoutService,\n        private errorHandler: ErrorHandler\n    ) { }\n\n    public async getDeviceAccount(): Promise<string> {\n        let deviceAccount = null;\n        try {\n            let getDeviceAccountAPI = this.APIFactory.getAPI(\"getDeviceAccount\");\n            let resp = await this.dispatcher.dispatch(getDeviceAccountAPI).toPromise();\n            if (resp != null) {\n                if (resp.Header.status) {\n                    if (resp.Body.length > 0) {\n                        deviceAccount = JSON.parse(resp.Body[0].CategoryVal).account;\n                    }\n                    else {\n                        //never login before\n                        deviceAccount = null;\n                    }\n                    console.log('deviceAccount:', deviceAccount);\n                    return deviceAccount;\n                }\n                else {\n                    throw new Error(\"get device account sql error!\");\n                }\n            }\n            else {\n                throw new Error(\"getDeviceAccount API return null.\");\n            }\n\n        } catch (error) {\n            this.errorHandler.handleError(new APPError(\"F00700\", error.message));\n            return null;\n        }\n\n    }\n\n    public async saveDeviceAccount(account: string) {\n        try {\n            let BindingAccountAPI = this.APIFactory.getAPI(\"BindingAccount\");\n            BindingAccountAPI[\"account\"] = account;\n            let resp = await this.dispatcher.dispatch(BindingAccountAPI).toPromise();\n            console.log(\"BindingAccount resp:\", resp);\n            return resp;\n        } catch (error) {\n            this.errorHandler.handleError(new APPError(\"F00701\", error.message));\n            return null;\n        }\n    }\n\n    public async offlineLogin(token: string) {\n        let failCount = 0;\n        try {\n            let offlineAuthAPI = this.APIFactory.getAPI(\"offlineAuth\");\n            console.debug(\"offlineAuthAPI API: \", offlineAuthAPI);\n            if (offlineAuthAPI) {\n                console.debug(\"offlineAuthAPI token: \", token);\n                (<OfflineAuthAPI>offlineAuthAPI).token = token;\n\n                console.debug(\"offlineAuthAPI offlineAuthAPI: \", offlineAuthAPI);\n                let authResp = await this.dispatcher.dispatch(offlineAuthAPI).toPromise();\n                console.debug(\"offlineAuthAPI resp: \", authResp);\n\n                if (authResp.isSuccess) {\n                    console.debug(\"offline auth success\");\n                    this.timeoutService.init();\n                    return new LoginResponse({ isSuccess: true, type: LOGIN_TYPE.OFFLINE, errorMsg: '', token: authResp.token });\n                }\n                else {\n                    console.debug(\"offline auth fail\");\n                    failCount = authResp.failCount;\n                    throw new Error(authResp.message);\n                }\n            }\n            else {\n                throw new Error(\"get offline login auth api error.\");\n            }\n        } catch (error) {\n            this.errorHandler.handleError(new APPError(\"F00702\", error.message))\n            return new LoginResponse({ isSuccess: false, type: LOGIN_TYPE.OFFLINE, errorMsg: error.message, token: '', failCount: failCount })\n        }\n\n    }\n\n    public async saveToken(token, encrypted_string) {\n        try {\n            let saveTokenAPI = this.APIFactory.getAPI(\"saveLoginToken\");\n            saveTokenAPI[\"encryptedAuth\"] = encrypted_string;\n            saveTokenAPI[\"infoToken\"] = token;\n            if (saveTokenAPI) {\n                let resp = await this.dispatcher.dispatch(saveTokenAPI).toPromise();\n                console.log(\"save token api resp:\", resp);\n            }\n        } catch (error) {\n            this.errorHandler.handleError(new APPError(\"F00703\", error.message));\n        }\n    }\n}","export class LoginForm{\n    constructor(username: string = '', password: string = '') {\n        this.username = username;\n        this.password = password;\n    }\n\n    private _username: string;\n    public get username(): string {\n        return this._username;\n    }\n    public set username(value: string) {\n        this._username = value;\n    }\n    private _password;\n    public get password(): string {\n        return this._password;\n    }\n    public set password(value: string) {\n        this._password = value;\n    }\n}","import { Component, OnInit, Inject, Optional, ViewChild, ElementRef, HostListener } from '@angular/core';\nimport { DeviceService, LoginResponse, AfterLoginToken, AfterLogin, LOGIN_TYPE, TimeoutService, DefaultLoginMgr, ConfigToken, SQLCommand, DaoFactory, CustomRouterReuseStrategy, AppRouter, APPError, ValidationResult, DataSyncTask, NotificationType, NotificationMgr, TranslateService } from '@allianzSND/core';\nimport * as jssha from \"jssha\";\nimport { Language } from '@allianzSND/core';\nimport { Region } from '../../model/Enum/Region';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { LoginService } from '../../service/login.service';\nimport { LoginForm } from '../../model/LoginForm';\n\n@Component({\n  selector: 'snd-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n\n  public loginForm = new LoginForm();\n  public language: Language = new Language();\n  public version = '';\n  public isErrorStatusShow = false;\n  public validationResult: ValidationResult = new ValidationResult();\n\n  private deviceAccount: string = null;\n  private token: string = null;\n\n  private forgotPasswordRegion: string = \"\";\n  public windowWidth: number;\n  private bodyHeight: number;\n\n  private layoutLeftHeight: number;\n  private layoutRightHeight: number;\n  private notOverHeight: boolean;\n\n  private failMax: number;\n\n  constructor(\n    private loginMgr: DefaultLoginMgr,\n    private deviceService: DeviceService,\n    private daoFactory: DaoFactory,\n    private timeoutService: TimeoutService,\n    private router: AppRouter,\n    private loginService: LoginService,\n    private createDBTask: DataSyncTask,\n    private notificationMgr: NotificationMgr,\n    private translateService: TranslateService,\n    @Optional() private routeReuseStrategy: RouteReuseStrategy,\n    @Optional() @Inject(ConfigToken) private APP_CONFIG: any,\n    @Optional() @Inject(AfterLoginToken) private afterLogin: AfterLogin\n  ) {\n    this.version = this.APP_CONFIG.DEV_VERSION;\n    let env = this.APP_CONFIG.ENV;\n    this.failMax = this.APP_CONFIG[env].OFFLINE_LOGIN_MAX_TIMES;\n    this.loginMgr.getToken().subscribe((token) => {\n      this.token = token;\n    })\n  }\n\n  @ViewChild('layoutLeft') layoutLeft: ElementRef;\n  @ViewChild('layoutRight') layoutRight: ElementRef;\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n    this.timeoutService.clear();\n    this.getDeviceAccount();\n    if (this.loginMgr.checkLogin()) {\n      let loginResp: LoginResponse = new LoginResponse({\n        isSuccess: true,\n        type: this.deviceService.getNetworkState() ? LOGIN_TYPE.ONLINE : LOGIN_TYPE.OFFLINE,\n        errorMsg: '',\n        token: this.token\n      })\n      this._afterLogin(loginResp, null);\n    }\n\n    this.bodyHeight = document.body.clientHeight;\n  }\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowWidth = window.innerWidth;\n    this._mobileCalcRightHeight();\n  }\n  ngAfterViewInit() {\n    this._mobileCalcRightHeight();\n  }\n  private _mobileCalcRightHeight() {\n    this.layoutLeftHeight = this.layoutLeft.nativeElement.clientHeight;\n    this.layoutRightHeight = this.layoutRight.nativeElement.clientHeight;\n    this.notOverHeight = (this.layoutLeftHeight + this.layoutRightHeight + 15 - 43) < this.bodyHeight;\n    console.log(\"layoutLeftHeight\", this.layoutLeftHeight, \"layoutRightHeight\", this.layoutRightHeight, \"overHeight\", this.notOverHeight);\n    if (this.windowWidth < 1024 && this.notOverHeight) {\n      console.log(\"layoutLeftHeight\", this.layoutLeftHeight);\n      let layoutRightHeightCalc = this.bodyHeight - this.layoutLeftHeight + 20 - 43;\n      this.layoutRight.nativeElement.style.height = layoutRightHeightCalc + \"px\";\n    }\n\n  }\n\n\n  public ForgetPassword() {\n\n    this.forgotPasswordRegion = this.APP_CONFIG.ForgotPasswordRegion;\n    let region = this.convertToRegion(this.forgotPasswordRegion);\n\n    let webUrl = \"\";\n    switch (region) {\n      case Region.Taiwan: webUrl = \"https://first2.allianz.com.tw/eproagent/Forget.aspx\"; break;\n      case Region.Thailand: webUrl = \"https://www.google.com/\"; break;\n      case Region.Philippines: webUrl = \"https://www.google.com/\"; break;\n      case Region.Indonesia: webUrl = \"https://www.google.com/\"; break;\n      case Region.Malaysia: webUrl = \"https://www.google.com/\"; break;\n      case Region.Srilanka: webUrl = \"https://www.google.com/\"; break;\n      case Region.Unknow: webUrl = \"https://www.google.com/\"; break;\n    }\n\n    window.open(webUrl, '_system');\n  }\n\n  private convertToRegion(str: string): Region {\n    switch (str) {\n      case \"TW\": return Region.Taiwan;\n      case \"TH\": return Region.Thailand;\n      case \"PH\": return Region.Philippines;\n      case \"ID\": return Region.Indonesia;\n      case \"MY\": return Region.Malaysia;\n      case \"Lk\": return Region.Srilanka;\n    }\n  }\n\n\n  private async getDeviceAccount() {\n    this.deviceAccount = await this.loginService.getDeviceAccount();\n  }\n\n  private async saveDeviceAccount(account: string) {\n    await this.loginService.saveDeviceAccount(account);\n  }\n\n\n\n\n\n\n  public async login() {\n    //Reset error message\n    let isValid = this.validInfo();\n    //if input not valid\n    if (!isValid) return;\n\n    //end validation\n\n    let shaObj = new jssha(\"SHA-256\", \"TEXT\");\n    shaObj.update(`${this.loginForm.username}||${this.loginForm.password}`);\n    let encrypted_str = shaObj.getHash(\"HEX\");\n    console.log('network state:', this.deviceService.getNetworkState());\n    console.log(\"encrypted token:\", encrypted_str);\n    let loginResp: LoginResponse;\n    if (this.deviceService.getNetworkState()) {\n      // online login\n      loginResp = await this.onlineLogin(this.loginForm);\n    }\n    else {\n      //offline login\n      loginResp = await this.offlineLogin(encrypted_str);\n    }\n\n    if (this.afterLogin)\n      this.afterLogin.afterLogin(loginResp);\n\n    // after login action\n    if (loginResp.isSuccess) {\n      this._afterLogin(loginResp, encrypted_str);\n    }\n    else {\n      if(loginResp.failCount > 0) {\n        loginResp.errorMsg = this.translateService.translateWithVariable('Offline_Login_Locked', { failCount: loginResp.failCount, failMax: this.failMax });\n      }\n      this.validationResult.setErrorMap(\"login\", loginResp.errorMsg);\n    }\n\n  }\n\n  private async onlineLogin(loginForm: LoginForm) {\n    //online login\n    let loginResp: LoginResponse = await this.loginMgr.login(loginForm).toPromise();\n    return loginResp;\n  }\n\n  private async offlineLogin(token: string): Promise<LoginResponse> {\n    let resp: LoginResponse = await this.loginService.offlineLogin(token);\n    if (resp.isSuccess) {\n      this.loginMgr.updateToken(resp.token);\n    }\n    return resp;\n  }\n\n  private async _afterLogin(loginResp: LoginResponse, encrypted_string: string) {\n    this.timeoutService.init();\n\n    let accountHasChanged: boolean = this.deviceAccount !== this.loginForm.username;\n\n    //if first time , bind account\n    if (accountHasChanged) {\n      this.saveDeviceAccount(this.loginForm.username);\n      if (this.deviceAccount !== null)\n        await this.clearUserData();\n    }\n\n    if (encrypted_string)\n      this.loginService.saveToken(loginResp.token, encrypted_string);\n\n    //Clean the route cache\n    if (this.routeReuseStrategy[\"deleteRouteSnapshot\"]) {\n      (<CustomRouterReuseStrategy>this.routeReuseStrategy).deleteRouteSnapshot();\n    }\n    if (loginResp.type == LOGIN_TYPE.ONLINE)\n      this.router.navigate(\"Loading\");\n    else\n      this.router.navigate(\"GoalLanding\");\n  }\n\n  private validInfo(): boolean {\n    this.validationResult.clearErrorMap();\n    if (this.loginForm.username.length === 0) {\n      this.validationResult.setErrorMap(\"username\", \"Username_Required\");\n    }\n    if (this.loginForm.password.length === 0) {\n      this.validationResult.setErrorMap(\"password\", \"Password_Required\");\n    }\n    if (!/^[A-Za-z0-9]*$/.test(this.loginForm.username)) {\n      this.validationResult.setErrorMap(\"username\", \"value\");\n    }\n    if (!/^[A-Za-z0-9]*$/.test(this.loginForm.password)) {\n      this.validationResult.setErrorMap(\"password\", \"value\");\n    }\n\n    return this.validationResult.isTrue();\n  }\n\n  private async clearUserData() {\n    await this.daoFactory.clearDatabaseData(\"Main\");\n    let dao = this.daoFactory.getDefaultDao();\n    let commands = this.createDBTask.createMainTableCommand().map(x => new SQLCommand(x, []));\n    let resp = await dao.excuteSqlCommand(commands).toPromise();\n    console.log(\"clearUserData Main resp:\", resp);\n\n    // Clear Sync table and insert again.\n    dao = this.daoFactory.getDao(\"Profile\");\n    let syncTable = this.daoFactory.getTable(\"Profile\", \"TW_LH_SD_DataSync_Time\");\n    await dao.deleteByTable(syncTable).toPromise();\n    commands = this.createDBTask.createProfileTableCommand().map(x => new SQLCommand(x, []));\n    resp = await dao.excuteSqlCommand(commands).toPromise();\n    console.log(\"clearUserData Profile resp:\", resp);\n\n  }\n\n\n  // By PongPong\n  async clearDatabase() {\n\n    let db_config = this.APP_CONFIG[this.APP_CONFIG.ENV].DATABASE;\n    let db_names = Object.keys(db_config);\n    for (var name of db_names) {\n      console.log('db_names be delete:', name);\n      let dao = this.daoFactory.getDao(name);\n\n      let returnMap = await dao.getSchema().toPromise();\n      console.warn(\"returnMap: \", returnMap);\n\n      let SqlCommandArray = [];\n\n      returnMap.forEach(value => {\n        console.warn(\"value: \", value);\n        let command: string = value.tableName.includes('TW_LH_SD_VW_') ? 'DROP VIEW IF EXISTS ' : 'DROP TABLE IF EXISTS ';\n        SqlCommandArray.push(new SQLCommand(command + value.tableName, []));\n      });\n\n      console.log('SqlCommandArray: ', SqlCommandArray);\n      let resp = await dao.excuteSqlCommand(SqlCommandArray).toPromise();\n      console.log('excuteSqlCommand resp: ', resp);\n    }\n\n    this.deviceService.restartApp();\n  }\n\n  showAllPopup() {\n    let data = [{\n      type: NotificationType.GoalSettingNotStartFirst,\n      data: { year: 2019, notShow: false }\n    }, {\n      type: NotificationType.GoalSettingNotStart,\n      data: { year: 2019, notShow: false }\n    }, {\n      type: NotificationType.NeedGoalSetting,\n      data: { days: 10, year: 2019 }\n    }, {\n      type: NotificationType.GoalPromoSetting,\n      data: { days: 10, year: 2019, isPromo: true }\n    }, {\n      type: NotificationType.GoalAutoApprove,\n      data: null\n    }, {\n      type: NotificationType.GoalAutoApproveLeader,\n      data: { \"agentList\": [{ \"agentID\": \"AG21\", \"agentName\": \"HAHA\" }] }\n    }, {\n      type: NotificationType.ApproveGoalIsReject,\n      data: { year: 2019 }\n    }, {\n      type: NotificationType.ApproveGoalIsApprove,\n      data: null\n    }, {\n      type: NotificationType.PendingReview,\n      data: { \"year\": 2019, \"agentList\": [{ \"agentID\": \"AG21\", \"agentName\": \"HAHA\" }] }\n    }, {\n      type: NotificationType.SupervisorHaveChangeAgent,\n      data: null\n    }, {\n      type: NotificationType.SupervisorHaveChangeOld,\n      data: { \"agentList\": [{ \"agentID\": \"AG21\", \"agentName\": \"HAHA\" }] }\n    }, {\n      type: NotificationType.SupervisorHaveChangeNew,\n      data: { \"year\": 2019, \"agentList\": [{ \"agentID\": \"AG21\", \"agentName\": \"HAHA\" }] }\n    }, {\n      type: NotificationType.GoalAutoReject,\n      data: { year: 2019 }\n    }, {\n      type: NotificationType.GoalAutoRejectLeader,\n      data: { \"agentList\": [{ \"agentID\": \"AG21\", \"agentName\": \"HAHA\" }] }\n    }, {\n      type: NotificationType.ActivityArriveTenPoint,\n      data: null\n    }, {\n      type: NotificationType.ActivityArriveTwentyPoint,\n      data: null\n    }, {\n      type: NotificationType.ActivityLessThanTwentyPoint,\n      data: null\n    }, {\n      type: NotificationType.ReminderEvent,\n      data: { \"calendars\": [{ \"color\": { \"primary\": \"#23421\" }, \"title\": \"title\", \"location\": \"location\", \"start\": 1234523421231, \"end\": 1234523421231 }] }\n    }, {\n      type: NotificationType.DataPrivacyProtection,\n      data: null\n    }, {\n      type: NotificationType.Overtime,\n      data: { customers: [{ customerName: 'Test Customer' }] }\n    }, {\n      type: NotificationType.AutoDelete,\n      data: { customers: [{ customerName: 'Test Customer' }] }\n    }, {\n      type: NotificationType.Offline,\n      data: null\n    }, {\n      type: NotificationType.OnlineCheck,\n      data: null\n    }, {\n      type: NotificationType.NewVersion,\n      data: {\n        \"version\": \"1.0.3\",\n        \"updateType\": \"APP\",\n        \"appPath\": \"https://xxxx.xxxx.xxx/1.0/snd.apk\",\n        \"sqls\": []\n      }\n    }, {\n      type: NotificationType.Timeout,\n      data: null\n    }, {\n      type: NotificationType.DataCollection,\n      data: null\n    }, {\n      type: NotificationType.NewVersionLogin,\n      data: {\n        \"version\": \"1.0.3\",\n        \"updateType\": \"APP\",\n        \"appPath\": \"https://xxxx.xxxx.xxx/1.0/snd.apk\",\n        \"sqls\": []\n      }\n    }, {\n      type: NotificationType.ContactPermissionError,\n      data: null\n    }, {\n      type: NotificationType.ScreenShotAlert,\n      data: null\n    }, {\n      type: NotificationType.SubmitFail,\n      data: null\n    }, {\n      type: NotificationType.HTTPError,\n      data: {\n        code: 500,\n        message: `url:http://xxx.com\\ninternal error.`\n      }\n    }];\n    data.forEach((x) => {\n      this.notificationMgr.pushNotification(x.type, x.data);\n    })\n\n  }\n}\n","import { Component, OnInit, Optional, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Language, LoadingAppToken, LoadingApp, AppRouter, DefaultLoadingApp } from '@allianzSND/core';\nimport { fromEvent } from 'rxjs';\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent implements OnInit {\n\n  // progress bar \n  @Input() progressValue = 0.2;\n  @Output() onProgressFinish = new EventEmitter();\n  public language: Language = new Language();\n  private loadingAppHandler: LoadingApp;\n  constructor(\n    private router: AppRouter,\n    defaultLoadingAppHandler: DefaultLoadingApp,\n    @Optional() private _location: Location,\n    @Optional() @Inject(LoadingAppToken) loadingAppHandler: LoadingApp\n  ) {\n    this.loadingAppHandler = loadingAppHandler || defaultLoadingAppHandler;\n  }\n\n  progressFinish() {\n    console.log('in  loading finish percent:', this.progressValue);\n    if (this.progressValue >= 1)\n      this.onProgressFinish.emit();\n  }\n\n\n  // svg get url;\n  getUrl() {\n    if (this._location) {\n      let urlLink = this._location.path();\n      // console.log(urlLink.replace(/\\//,''));\n      return urlLink.replace(/\\//, '');\n    }\n    else\n      return '';\n  }\n\n  ngOnInit() {\n    fromEvent(document, 'offline').subscribe(() => {\n      if (this.loadingAppHandler && this.progressValue < 1) {\n        this.router.navigate(\"Login\");\n      }\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\nimport { LoadingComponent } from './components/loading/loading.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CoreModule } from '@allianzSND/core';\nimport { UIModule } from '@allianzSND/ui';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UIModule,\n    CoreModule,\n    FormsModule\n  ],\n  declarations: [LoginComponent, LoadingComponent],\n  exports:[LoginComponent, LoadingComponent]\n})\nexport class LoginModule { }\n"],"names":["APIFactory"],"mappings":"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"}
