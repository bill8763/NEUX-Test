{"version":3,"sources":["ng://@allianzSND/calendar/lib/service/calendar/model/CalendarEventColor.ts","ng://@allianzSND/calendar/lib/service/calendar/model/CalendarEventDetail.ts","ng://@allianzSND/calendar/lib/service/calendar/calendar-service.service.ts","ng://@allianzSND/calendar/lib/components/calendar/calendar.component.ts","node_modules/tslib/tslib.es6.js","ng://@allianzSND/calendar/lib/components/calendar-detail/calendar-detail.component.ts","ng://@allianzSND/calendar/lib/components/calendar-edit/calendar-edit.component.ts","ng://@allianzSND/calendar/lib/components/calendar-filter/calendar-filter.component.ts","ng://@allianzSND/calendar/lib/calendar.module.ts","ng://@allianzSND/calendar/lib/api/CalendarEventAddAPI.ts","ng://@allianzSND/calendar/lib/api/CalendarEventDeleteAPI.ts","ng://@allianzSND/calendar/lib/api/CalendarEventDetailAPI.ts","ng://@allianzSND/calendar/lib/api/CalendarEventListAPI.ts","ng://@allianzSND/calendar/lib/api/CalendarEventUpdateAPI.ts"],"names":["CalendarEventColor","primary","secondary","this","_primary","_secondary","prototype","setCalendarEventColor","Object","defineProperty","CalendarEventDetail","clientID","calendarID","title","location","calendarType","isAllDay","start","end","isAlert","alert1","alert2","alert3","remark","color","_clientID","_calendarID","_title","_location","_activity","_isAllDay","_start","Date","_end","_isAlert","_alert1","_alert2","_alert3","_remark","StringUtils","isEmpty","eventColor","JSON","parse","_color","backgroundColor","date","_displayActivity","displayActivity","_displayAlert1","displayAlert1","_displayAlert2","displayAlert2","CalendarService","dispatch","profileCodeService","APIFactory","getCalendarEventList","key","_this","console","debug","calendarEventListAPI","getAPI","startTime","endTime","Observable","create","observer","subscribe","data","returnList","calendarEventList","i","length","json","event_1","ClientID","CalendarID","Title","Location","CalendarType","IsAllDay","StartTime","EndTime","Remark","IsAlert","Alert1","Alert2","Alert3","getArgumentsByCode","push","sortCalendarEventList","next","complete","getCalendarEventDetail","calendarEventDetailAPI","detail","eventDetail","deleteCalendarEvent","calendarEventDeleteAPI","addCalendarEvent","event","adjustAlert","calendarEventAddAPI","setCalendarEvent","updateCalendarEvent","calendarEventUpdateAPI","isNotEmpty","allDay","day","temp","min","activity","calendarValidation","validationResult","ValidationResult","setErrorMap","differenceInMinutes","j","isSameDay","Injectable","args","providedIn","APIDispatch","ProfileCodeService","CalendarComponent","changeDetector","elementRef","settingService","translateService","calendarService","_parentHeight","parentHeightChange","EventEmitter","YEAR","MONTH","WEEK","DAY","viewTypeIndex","viewType","viewDate","weekStartsOn","calendarHeight","translateMap","Map","optionMap","storeStartDate","storeEndDate","calendarEventListAfterFilter","viewDateCalendarEventList","activityTypeList","alertTypeList","language","Language","currentFilterOptionList","isExpandFilter","isExpandDetail","isExpandEdit","isDelete","isSave","isSaveClick","isCalendarDelete","isLoading","dayTypesList","weekdaysList","monthsList","noSchedule","outsideSpace","top","left","paddindData","right","bottom","window","innerWidth","val","innerHeight","emit","titleBtnsBlock_ele","titleBtnsBlock","nativeElement","titleBtnsBlock_size","getBoundingClientRect","height","parseInt","getComputedStyle","marginBottom","markForCheck","onResize","windowWidth","target","ngOnInit","_this_1","getCodeArray","set","forEach","dayType","translate","weekday","month","defaultSettingVal","getSetting","SettingVal","calendarSetting_1","keys","codeItem","isCheck","code","getCode","undefined","setCurrentFilterOption","typeChange","loadCalendarData","ngAfterViewInit","switchPadViewMode","activeTabIndex","detectChanges","calcuContentHeight","getFullYear","getMonth","getYear","addMonths","addDays","getDay","getDate","scrollToCurrentTime","mobileBackViewType","clickToday","warn","loadViewDateCalendarEventList","onViewDateChange","viewDateChange","action","isSameMonth","isPad","ChangeAction","CLICK","refreshCalendarEventList","loadCalendarEventDetail","calendarEventDetail","convertCode2Text","onToggleDetailModal","queryDate","subMinutes","onClickDetail","eventItem","onClickDeleteCancel","onClickDeleteConfirm","status","onClickAppointmentSave","onSaveCalendarEvent","onToggleAppointmentModal","editEvent","addEvent","currentTime","getHours","getMinutes","addMinutes","addHours","onActivityTypeListChange","settingVal","filterOptionChange","settingValueChange","settingValue","settingObj","Setting","SettingID","SettingName","stringify","updateSetting","currentFilterOption","filter","x","indexOf","setTimeout","timeEventAll_ele","querySelectorAll","timeEventAll_ele_1","__values","o","m","Symbol","iterator","call","value","done","tslib_1.__values","timeEventAll_ele_1_1","timeEvent_ele","mobileDayHeader_ele","querySelector","allDayEvent_ele","allDayEvent_h","style","maxHeight","currentHour","log","scrollTop","Math","floor","year_ele","yearTag_ele","minHeight","marginTop","month_ele","onCloseInfo","onToggleFilterModal","onInfoTabClick","dom","nowShowBtn","messageContent","closeInfo","resetInfoPos","filterInfo","countPos","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","ElementRef","SettingService","TranslateService","Input","Output","ViewChild","HostListener","UiInformationBtnComponent","UiInformationContentComponent","CalendarDetailComponent","_calendarEventDetail","CalendarEditComponent","saveEvent","startDateChange","_viewDate","_isSaveClick","_optionMap","_translateMap","activityOptionList","alertOptionList","eventListBGColor","isInit","saveEventClick","get","SelectOption","displayText","startDate","endDate","getAlertOptions","showDate","toString","validationForm","isTrue","maxLength","field","isRequired","inputFiled","onValidationInput","selectField","onValidationSelect","onValidationTimeFormat","onValidationTime","scrollToError","deleteError","trim","timeField","combineTime","onTimeChange","changeDate","onStartDateChange","onStartTimeChange","setDate","onIsAllDayChange","onIsAlertChange","option","getArguments","errorBlock","document","body","getElementsByClassName","item","parentElement","scrollIntoView","behavior","block","onTitleChange","CalendarFilterComponent","activityTypeListChange","onActivityFilter","toActivityColor","CalendarModule","NgModule","declarations","imports","NxIconModule","NxButtonModule","NxFormfieldModule","NxDatefieldModule","NxNativeDateModule","UIModule","CoreModule","CommonModule","FormsModule","exports","CalendarEventAddAPI","DaoFactory","_DaoFactory","_calendarEvent","getAPIName","getMockPath","executeSQL","calendarObj","getDefaultTable","dao","getDefaultDao","ClientCustomDao","setValue","getTime","insertByTable","resp","CalendarEventDeleteAPI","addRestriction","EqualRestriction","deleteByTable","CalendarEventDetailAPI","queryByTable","CalendarEventListAPI","_startTime","_endTime","GreaterOrEqualRestriction","LessOrEqualRestriction","OrderByRestriction","column","order","CalendarEventUpdateAPI","updateByTable"],"mappings":"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","sourcesContent":["export class CalendarEventColor {\n  private _primary: string;\n  private _secondary: string;\n\n  constructor(primary: string, secondary: string) {\n    this._primary = primary;\n    this._secondary = secondary;\n  }\n\n  setCalendarEventColor(primary: string, secondary: string) {\n    this._primary = primary;\n    this._secondary = secondary;\n  }\n\n  set primary(primary) {\n    this._primary = primary;\n  }\n\n  set secondary(secondary) {\n    this._secondary = secondary;\n  }\n\n  get primary() {\n    return this._primary;\n  }\n\n  get secondary() {\n    return this._secondary;\n  }\n}\n","import {CalendarEventColor} from './CalendarEventColor';\nimport { StringUtils } from '@allianzSND/core';\n\nexport class CalendarEventDetail {\n  private _clientID: string;\n  private _calendarID: string;\n  private _title: string;\n  private _location: string;\n  private _activity :string;\n  private _isAllDay: boolean;\n  private _start: Date;\n  private _end: Date;\n  private _isAlert: boolean;\n  private _alert1: string;\n  private _alert2: string;\n  private _alert3: string;\n  private _remark: string;\n  private _color;\n  private _displayActivity: string;\n  private _displayAlert1: string;\n  private _displayAlert2: string;\n\n  constructor(clientID: string,calendarID: string, title: string, location: string, calendarType: string,isAllDay: string, start: Date, end: Date, isAlert: string, alert1: string, alert2: string, alert3: string, remark: string, color: string) {\n    this._clientID = clientID;\n    this._calendarID = calendarID;\n    this._title = title;\n    this._location = location;\n    this._activity = calendarType;\n    this._isAllDay = (isAllDay == 'Y');\n    this._start = new Date(start);\n    this._end = new Date(end);\n    this._isAlert = (isAlert == 'Y');\n    this._alert1 = alert1;\n    this._alert2 = alert2;\n    this._alert3 = alert3;\n    this._remark = remark;\n\n\n    if(StringUtils.isEmpty(this._activity)) this._activity = null;\n    if(StringUtils.isEmpty(this._title)) this._title = '';\n    if(StringUtils.isEmpty(this._location)) this._location = '';\n    if(StringUtils.isEmpty(this._alert1)) this._alert1 = '';\n    if(StringUtils.isEmpty(this._alert2)) this._alert2 = null;\n    if(StringUtils.isEmpty(this._alert3)) this._alert3 = '';\n    if(StringUtils.isEmpty(this._remark)) this._remark = '';\n\n    let eventColor = JSON.parse(color);\n    if(eventColor != null)\n      this._color = new CalendarEventColor(eventColor.color, eventColor.backgroundColor);\n  }\n\n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  set calendarID(calendarID: string) {\n    this._calendarID = calendarID\n  }\n\n  set title(title: string) {\n    this._title = title;\n  }\n\n  set location(location: string) {\n    this._location = location;\n  }\n\n  set activity(calendarType: string) {\n    this._activity = calendarType;\n  }\n\n  set allDay(isAllDay : boolean) {\n    this._isAllDay = isAllDay;\n  }\n\n  set start(date: Date) {\n    this._start = date;\n  }\n\n  set end(date: Date) {\n    this._end = date;\n  }\n\n  set isAlert(isAlert: boolean) {\n    this._isAlert = isAlert;\n  }\n\n  set alert1(alert1: string) {\n    this._alert1 = alert1;\n  }\n\n  set alert2(alert2: string) {\n    this._alert2 = alert2;\n  }\n\n  set alert3(alert3: string) {\n    this._alert3 = alert3;\n  }\n\n  set remark(remark: string) {\n    this._remark =  remark;\n  }\n\n  set color(color: string) {\n    let eventColor = JSON.parse(color);\n    if(eventColor != null)\n      this._color = new CalendarEventColor(eventColor.color, eventColor.backgroundColor);\n  }\n\n  set displayActivity(displayActivity : string) {\n    this._displayActivity = displayActivity;\n  }\n\n  set displayAlert1(displayAlert1 : string) {\n    this._displayAlert1 = displayAlert1;\n  }\n\n  set displayAlert2(displayAlert2 : string) {\n    this._displayAlert2 = displayAlert2;\n  }\n\n  get clientID() {\n    return this._clientID;\n  }\n\n  get calendarID() {\n    return this._calendarID;\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  get location() {\n    return this._location;\n  }\n\n  get activity() {\n    return this._activity;\n  }\n\n  get allDay() {\n    return this._isAllDay;\n  }\n\n  get start() {\n    return this._start;\n  }\n\n  get end() {\n    return this._end;\n  }\n\n  get isAlert() {\n    return this._isAlert;\n  }\n\n  get alert1() {\n    return this._alert1;\n  }\n\n  get alert2() {\n    return this._alert2;\n  }\n\n  get alert3() {\n    return this._alert3;\n  }\n\n  get remark() {\n    return this._remark;\n  }\n\n  get color() {\n    return this._color;\n  }\n\n  get displayActivity() {\n    return this._displayActivity;\n  }\n\n  get displayAlert1() {\n    return this._displayAlert1;\n  }\n\n  get displayAlert2() {\n    return this._displayAlert2;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { APIDispatch } from '@allianzSND/core';\nimport { APIFactory } from '@allianzSND/core';\nimport { CalendarEventListAPI } from '../../api/CalendarEventListAPI';\nimport { Observable } from 'rxjs';\nimport {CalendarEventDetail} from './model/CalendarEventDetail';\nimport {CalendarEventDetailAPI} from '../../api/CalendarEventDetailAPI';\nimport {CalendarEventDeleteAPI} from '../../api/CalendarEventDeleteAPI';\nimport {CalendarEventAddAPI} from '../../api/CalendarEventAddAPI';\nimport {CalendarEventUpdateAPI} from '../../api/CalendarEventUpdateAPI';\nimport {ProfileCodeService} from '@allianzSND/core';\nimport {ValidationResult} from '@allianzSND/core';\nimport {differenceInMinutes, isSameDay} from 'date-fns';\nimport { StringUtils } from '@allianzSND/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n  constructor(private dispatch: APIDispatch,\n              private profileCodeService: ProfileCodeService,\n              private APIFactory: APIFactory) {\n    //register api\n  }\n\n  getCalendarEventList(start: Date, end: Date, key:string): Observable<Array<CalendarEventDetail>> {\n\n    console.debug('calendar-service-getCalendarEventList',start,end,key);\n\n    let calendarEventListAPI: CalendarEventListAPI = <CalendarEventListAPI>this.APIFactory.getAPI('getCalendarEventList');\n    calendarEventListAPI.startTime = start;\n    calendarEventListAPI.endTime = end;\n\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventListAPI).subscribe((data) => {\n        console.debug('calendar-service-getCAlendarEventList response',data);\n\n        let returnList: Array<CalendarEventDetail> = [];\n        let calendarEventList = data['Body'];\n        if(calendarEventList) {\n          for (let i = 0; i < calendarEventList.length; i++) {\n            let json = calendarEventList[i];\n            let event = new CalendarEventDetail(json.ClientID,\n              json.CalendarID,\n              json.Title,\n              json.Location,\n              json.CalendarType,\n              json.IsAllDay,\n              new Date(json.StartTime),\n              new Date(json.EndTime),\n              json.Remark,\n              json.IsAlert,\n              json.Alert1,\n              json.Alert2,\n              json.Alert3,\n              this.profileCodeService.getArgumentsByCode('Calendar_Type',json.CalendarType));\n            returnList.push(event);\n          }\n          returnList = this.sortCalendarEventList(returnList);\n          observer.next(returnList);\n          observer.complete();\n        } else {\n          observer.next([]);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  getCalendarEventDetail(clientID: string): Observable<CalendarEventDetail> {\n    let calendarEventDetailAPI: CalendarEventDetailAPI = <CalendarEventDetailAPI>this.APIFactory.getAPI('getCalendarEventDetail');\n    calendarEventDetailAPI.ClientID = clientID;\n    return Observable.create((observer)=>{\n      this.dispatch.dispatch(calendarEventDetailAPI).subscribe((data) => {\n        let detail;\n        let eventDetail  = data['Body'];\n        eventDetail = eventDetail[0];\n        detail = new CalendarEventDetail(eventDetail.ClientID,eventDetail.CalendarID,eventDetail.Title,eventDetail.Location,eventDetail.CalendarType,eventDetail.IsAllDay,new Date(eventDetail.StartTime),new Date(eventDetail.EndTime),eventDetail.IsAlert,eventDetail.Alert1, eventDetail.Alert2, eventDetail.Alert3,eventDetail.Remark,this.profileCodeService.getArgumentsByCode('Calendar_Type',eventDetail.CalendarType));\n        observer.next(detail);\n        observer.complete();\n      });\n    });\n  }\n\n  deleteCalendarEvent(clientID: string): Observable<any>  {\n    let calendarEventDeleteAPI:  CalendarEventDeleteAPI = <CalendarEventDeleteAPI>this.APIFactory.getAPI('deleteCalendarEvent');\n    calendarEventDeleteAPI.clientID = clientID;\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventDeleteAPI).subscribe((data) => {\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n  }\n\n  addCalendarEvent(event: CalendarEventDetail): Observable<any>  {\n    event = this.adjustAlert(event);\n    let calendarEventAddAPI:  CalendarEventAddAPI = <CalendarEventAddAPI>this.APIFactory.getAPI('addCalendarEvent');\n    calendarEventAddAPI.setCalendarEvent(event);\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventAddAPI).subscribe((data) => {\n        observer.next(data['Header']);\n        observer.complete();\n      });\n    });\n  }\n\n  updateCalendarEvent(clientID: string,event: CalendarEventDetail): Observable<any>  {\n    event = this.adjustAlert(event);\n    let calendarEventUpdateAPI:  CalendarEventUpdateAPI = <CalendarEventUpdateAPI>this.APIFactory.getAPI('updateCalendarEvent');\n    calendarEventUpdateAPI.ClientID = clientID;\n    calendarEventUpdateAPI.setCalendarEvent(event);\n    return Observable.create((observer) => {\n      this.dispatch.dispatch(calendarEventUpdateAPI).subscribe((data) => {\n        observer.next(data['Header']);\n        observer.complete();\n      })\n    })\n  }\n\n  adjustAlert(event: CalendarEventDetail): CalendarEventDetail {\n\n    if(event.alert1 == 'Default') event.alert1 = '';\n    if(event.alert2 == 'Default') event.alert2 = '';\n\n    //when alert1 & alert2 have data and not empty\n    if(event.isAlert && StringUtils.isNotEmpty(event.alert1) && StringUtils.isNotEmpty(event.alert2)) {\n      if(event.allDay) { // sort alert if allDay\n        if(JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert1)).day > JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert2)).day) {\n          let temp = event.alert1 ;\n          event.alert1 = event.alert2;\n          event.alert2 = temp;\n        }\n      } else { // sort if not allDay\n        if(JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert1)).min > JSON.parse(this.profileCodeService.getArgumentsByCode('Calendar_RemindTime',event.alert2)).min) {\n          let temp = event.alert1 ;\n          event.alert1 = event.alert2;\n          event.alert2 = temp;\n        }\n      }\n    }\n    else if(!event.isAlert) {\n      event.alert1 = '';\n      event.alert2 = '';\n      event.alert3 = '';\n    }\n    event.color = this.profileCodeService.getArgumentsByCode('Calendar_Type',event.activity); // get activity color\n    return event;\n  }\n\n  calendarValidation(data): ValidationResult {\n    let validationResult = new ValidationResult();\n    if (data.title == '')\n      validationResult.setErrorMap('title', 'required');\n    if (data.title.length > 60) //title length\n      validationResult.setErrorMap('title', 'maxLength');\n    if (data.location == '')\n      validationResult.setErrorMap('location', 'required');\n    if (data.location.length > 100) //title length\n      validationResult.setErrorMap('location', 'maxLength');\n    if (data.activity == 'Default' || data.activity == '') // activity validate\n      validationResult.setErrorMap('activity', 'required');\n    if (data.isAlert == true && (data.alert1 == 'Default') && (data.alert2 == 'Default'))\n      validationResult.setErrorMap('alert1', 'required');\n    if (data.isAlert == true && (data.alert1 == data.alert2) && data.alert1 != 'Default')\n      validationResult.setErrorMap('alert2', 'sameAlert');\n    if (differenceInMinutes(data.end,data.start) < 15 && differenceInMinutes(data.end,data.start) >= 0 && data.allDay != true) {\n      validationResult.setErrorMap('time', 'minTime');\n    } else if(differenceInMinutes(data.end,data.start) < 0) {\n      validationResult.setErrorMap('time', 'errorTime');\n    }\n    if (data.remark.length > 500)\n      validationResult.setErrorMap('remark', 'maxLength');\n    return validationResult;\n  }\n\n  sortCalendarEventList(calendarEventList: Array<CalendarEventDetail>): Array<CalendarEventDetail> {\n    for (let i = 0; i < calendarEventList.length - 1; i++) {\n      for (let j = i + 1; j < calendarEventList.length; j++) {\n        if(calendarEventList[j].allDay && !calendarEventList[i].allDay) {\n          let temp = calendarEventList[i];\n          calendarEventList[i] = calendarEventList[j];\n          calendarEventList[j] = temp;\n        }\n      }\n    }\n    for (let i = 0; i < calendarEventList.length - 1; i++) {\n      for (let j = i + 1; j < calendarEventList.length; j++) {\n        if(calendarEventList[j].allDay == calendarEventList[i].allDay) {\n          if(calendarEventList[i].allDay) {\n            if(calendarEventList[j].start < calendarEventList[i].start) {\n              let temp = calendarEventList[i];\n              calendarEventList[i] = calendarEventList[j];\n              calendarEventList[j] = temp;\n            } else if(isSameDay(calendarEventList[j].start, calendarEventList[i].start)) {\n              if (calendarEventList[j].end > calendarEventList[i].end){\n                let temp = calendarEventList[i];\n                calendarEventList[i] = calendarEventList[j];\n                calendarEventList[j] = temp;\n              }\n            }\n          } else {\n            if(calendarEventList[j].start < calendarEventList[i].start) {\n              let temp = calendarEventList[i];\n              calendarEventList[i] = calendarEventList[j];\n              calendarEventList[j] = temp;\n            }\n          }\n        }\n      }\n    }\n    return calendarEventList\n  }\n}\n","import { Component, OnInit, HostListener, ElementRef, ChangeDetectorRef, EventEmitter, Output, Input, ViewChild, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\nimport { CalendarService } from '../../service/calendar/calendar-service.service';\nimport { CalendarEventDetail } from '../../service/calendar/model/CalendarEventDetail';\nimport {\n  addDays,\n  addHours,\n  addMinutes,\n  addMonths,\n  getDate,\n  getDay,\n  getHours,\n  getMinutes,\n  getMonth,\n  getYear,\n  isSameMonth,\n  subMinutes\n} from 'date-fns';\nimport { ProfileCodeService } from '@allianzSND/core';\nimport { ProfileCode } from '@allianzSND/core';\nimport { SettingService } from '@allianzSND/core';\nimport { Setting } from '@allianzSND/core';\nimport { UiInformationBtnComponent } from '@allianzSND/ui';\nimport { StringUtils } from '@allianzSND/core';\nimport { ViewDateChange } from '@allianzSND/core';\nimport { ChangeAction } from '@allianzSND/core';\nimport { UiInformationContentComponent } from '@allianzSND/ui';\nimport {Language} from '@allianzSND/core';\nimport {TranslateService} from '@allianzSND/core';\n\n@Component({\n  selector: 'snd-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss']\n  , changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class CalendarComponent implements OnInit, AfterViewInit {\n\n  //two-way binding\n  private _parentHeight: number = 0;\n  @Input()\n  get parentHeight() {\n    return this._parentHeight;\n  }\n  set parentHeight(val) {\n    this._parentHeight = val;\n\n    if (this._parentHeight == 0) {\n      this._parentHeight = window.innerHeight;\n    }\n\n    this.parentHeightChange.emit(this._parentHeight);\n\n    var _this = this;\n    let titleBtnsBlock_ele = _this.titleBtnsBlock.nativeElement;\n    let titleBtnsBlock_size = titleBtnsBlock_ele.getBoundingClientRect();\n    _this.calendarHeight = _this._parentHeight\n      - titleBtnsBlock_size.height\n      - parseInt(window.getComputedStyle(titleBtnsBlock_ele).marginBottom);\n    this.changeDetector.markForCheck();\n\n    // console.warn('parentHeight', this._parentHeight);\n    // console.warn('titleBtnsBlock_ele', titleBtnsBlock_size.height, parseInt(window.getComputedStyle(titleBtnsBlock_ele).marginBottom));\n    // console.warn('calendarHeight', _this.calendarHeight);\n  } // end set parentHeight\n  @Output() parentHeightChange = new EventEmitter();\n\n  @ViewChild('titleBtnsBlock') titleBtnsBlock: ElementRef;\n\n  private YEAR: string = 'year';\n  private MONTH: string = 'month';\n  private WEEK: string = 'week';\n  private DAY: string = 'day';\n\n  //calendar-ui config setting\n  public viewTypeIndex: number = 2; // 'month'\n  public viewType: string = this.MONTH; //\n  public viewDate = new Date(); //current date\n  public weekStartsOn: number = 1; // Monday\n\n  //count content height\n  private calendarHeight: number = 0;\n\n  //click calendar id\n  public clientID: string = '';\n\n  public translateMap : Map<string,string> = new Map<string, string>();\n  public optionMap: Map<string,Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  private storeStartDate: Date = new Date();\n  private storeEndDate: Date = new Date();\n\n  public calendarEventList: Array<CalendarEventDetail> = []; // eventList\n  public calendarEventListAfterFilter: Array<CalendarEventDetail> = []; // filterå¾ event\n  public viewDateCalendarEventList: Array<CalendarEventDetail> = [];\n  public calendarEventDetail: CalendarEventDetail;\n\n  // private calendarEventMap = new CalendarEventMap();\n\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public alertTypeList: Array<ProfileCode> = [];\n  public language : Language = new Language();\n  private currentFilterOptionList: Array<string> = [];\n\n  // popup\n  public isExpandFilter: boolean = false;\n  public isExpandDetail: boolean = false;\n  public isExpandEdit: boolean = false;\n  public isDelete: boolean = false;\n  public isSave: boolean = false;\n  public isSaveClick: boolean = false;\n  public isCalendarDelete: boolean = false;\n  public isLoading: boolean = false;\n\n  // translate\n  private dayTypesList: Array<string> = ['Cross_Day','All_Day'];\n  private weekdaysList: Array<string> = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  private monthsList: Array<string> = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  private noSchedule: string = 'No_Schedule';\n\n\n  // info config\n  //é¿åç¶å±¤å¶ä» position relative å¼é¿ info\n  public outsideSpace = {\n    top: 0,\n    left: 0\n  };\n  //info content å·¦å³æå°padding\n  public paddindData = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: window.innerWidth > 1023 ? 170 : 10\n  };\n\n\n  //check is pad or mobile\n  public windowWidth: number;\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowWidth = event.target.innerWidth;\n    this.changeDetector.markForCheck();\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef, private elementRef: ElementRef, private settingService: SettingService,private translateService : TranslateService,private calendarService: CalendarService,private profileCodeService: ProfileCodeService) { }\n\n  ngOnInit() {\n    //init calendar type\n    this.activityTypeList = this.profileCodeService.getCodeArray('Calendar_Type');\n    this.alertTypeList = this.profileCodeService.getCodeArray('Calendar_RemindTime');\n    this.optionMap.set('Calendar_Type', this.activityTypeList);\n    this.optionMap.set('Calendar_RemindTime', this.alertTypeList);\n    this.dayTypesList.forEach((dayType) => {\n      this.translateMap.set(dayType, this.translateService.translate(dayType))\n    });\n    this.weekdaysList.forEach((weekday) => {\n      this.translateMap.set(weekday, this.translateService.translate(weekday))\n    });\n    this.monthsList.forEach((month) => {\n      this.translateMap.set(month, this.translateService.translate(month))\n    });\n    this.translateMap.set(this.noSchedule, this.translateService.translate(this.noSchedule));\n\n    this.windowWidth = window.innerWidth;\n\n    //set component is detach\n    // this.changeDetector.detach();\n\n    //phone default view is day view\n    if (this.windowWidth < 1024) {\n      this.viewTypeIndex = 0;\n      this.changeDetector.markForCheck();\n    }\n\n    //load default filter setting\n    let defaultSettingVal = this.settingService.getSetting('CalendarFilterSetting').SettingVal;\n    if (StringUtils.isNotEmpty(defaultSettingVal)) {\n      let calendarSetting = JSON.parse(defaultSettingVal);\n\n      //default all checked\n      if (Object.keys(calendarSetting).length == 0) {\n        this.activityTypeList.forEach((codeItem) => {\n          codeItem.isCheck = true;\n        });\n      }\n      else {\n        this.activityTypeList.forEach((codeItem) => {\n          let code = codeItem.getCode();\n          let isCheck = calendarSetting[code] == undefined ? false : calendarSetting[code];\n          codeItem.isCheck = isCheck;\n        });\n      }\n\n    }\n\n    this.setCurrentFilterOption(undefined);\n\n    // this.changeDetector.detectChanges();\n    this.typeChange(this.viewTypeIndex);\n    this.loadCalendarData();\n  } // end ngOnInit\n\n  ngAfterViewInit() {\n    this.typeChange(this.viewTypeIndex);\n  }\n\n  switchPadViewMode(activeTabIndex) {\n    console.debug('switchPadViewMode');\n\n    if (activeTabIndex != this.viewTypeIndex) {\n      //count start & end\n      this.typeChange(activeTabIndex);\n\n      this.changeDetector.detectChanges();\n\n      //load data & refresh\n      this.loadCalendarData();\n    }\n\n  }\n\n  typeChange(activeTabIndex) {\n    console.debug('calendar-component-typeChange', activeTabIndex, this.viewType);\n\n    let start, end;\n    this.viewTypeIndex = activeTabIndex;\n\n    switch (activeTabIndex) {\n      case 3:\n        this.viewType = this.YEAR;\n        this.calcuContentHeight();\n        break;\n      case 2:\n        this.viewType = this.MONTH;\n        this.calcuContentHeight();\n        start = new Date(this.viewDate.getFullYear(), this.viewDate.getMonth(), 1, 0, 0, 0);\n        end = new Date(getYear(addMonths(this.viewDate, 1)), getMonth(addMonths(this.viewDate, 1)), 1, 0, 0, 0);\n        //count current time is have data\n\n        break;\n      case 1:\n        this.viewType = this.WEEK;\n        start = new Date(getYear(addDays(this.viewDate, (1 - getDay(this.viewDate)))), getMonth(addDays(this.viewDate, (1 - getDay(this.viewDate)))), getDate(addDays(this.viewDate, (1 - getDay(this.viewDate)))), 0, 0, 0);\n        end = new Date(getYear(addDays(this.viewDate, (7 - getDay(this.viewDate)))), getMonth(addDays(this.viewDate, (7 - getDay(this.viewDate)))), getDate(addDays(this.viewDate, (7 - getDay(this.viewDate)))), 0, 0, 0);\n        //count current time is have data\n        this.scrollToCurrentTime();\n\n        break;\n      case 0:\n        this.viewType = this.DAY;\n        start = new Date(getYear(this.viewDate),getMonth(this.viewDate) , getDate(this.viewDate), 0, 0, 0);\n        end = new Date(getYear(addDays(this.viewDate, 1)), getMonth(addDays(this.viewDate, 1)), getDate(addDays(this.viewDate, 1)), 0, 0, 0);\n        //count current time is have data\n        this.scrollToCurrentTime();\n        // console.warn('view type change: day');\n        break;\n    } // end switch\n\n    if (this.viewType != this.YEAR) {\n\n      if (StringUtils.isNotEmpty(start) && StringUtils.isNotEmpty(end)) {\n        this.storeStartDate = start;\n        this.storeEndDate = end;\n      }\n    }\n\n    console.debug('calendar-component-typeChange done');\n\n\n\n  } // end typeChange\n\n  //phone header change mode\n  mobileBackViewType() {\n    console.debug('mobileBackViewType', this.viewType);\n    switch (this.viewType) {\n      case this.MONTH:\n        this.typeChange(3); // back to year\n        break;\n      case this.WEEK:\n        this.typeChange(2); // back to month\n        break;\n      case this.DAY:\n        this.typeChange(2); // back to month\n        break;\n    } // end switch\n\n\n    //because change view type , so date range is change\n    this.loadCalendarData();\n\n  } // end mobileChangeViewType\n\n  clickToday() {\n    this.viewDate = new Date();\n    console.warn('clickToday', this.viewDate);\n\n    this.changeDetector.detectChanges();\n\n    //load data & refresh\n    this.loadCalendarData();\n    this.loadViewDateCalendarEventList();\n  }\n\n  //when calendar component any click change viewDate , will check pad/phone current viewType to change mode\n  onViewDateChange(viewDateChange: ViewDateChange) {\n    let val = new Date(viewDateChange.viewDate);\n    let action = viewDateChange.action;\n\n    console.debug('calendar-component update viewDate');\n    if(isSameMonth(this.viewDate, val) && this.isPad()) {\n      this.viewDate = val;\n    } else {\n      this.viewDate = val;\n      //if year change date , alwasy switch month\n      if (this.viewType == this.YEAR && action == ChangeAction.CLICK) {\n        this.typeChange(2);\n      }\n      else if (this.viewType == this.MONTH && !this.isPad() && action == ChangeAction.CLICK) {\n        //if device is phone , click day switch to week when view type is month\n        this.typeChange(0);\n      }\n      else {\n        //else calculate new start & end\n        this.typeChange(this.viewTypeIndex);\n      }\n\n      //load data & refresh\n      this.loadViewDateCalendarEventList();\n      this.loadCalendarData();\n    }\n  }\n\n  //fetch calendar between start & end range\n  loadCalendarData() {\n    console.debug('loadCalendar data');\n    if (this.viewType !== this.YEAR) { // year no need query data , only view\n\n      if(this.calendarEventListAfterFilter.length>20)\n        this.calendarEventListAfterFilter = [];\n\n      if (StringUtils.isNotEmpty(this.storeStartDate) && StringUtils.isNotEmpty(this.storeEndDate)) {\n\n        this.calendarService.getCalendarEventList(this.storeStartDate, this.storeEndDate, '').subscribe(data => {\n          this.calendarEventList = data;\n          this.refreshCalendarEventList();\n        });\n      }\n    }\n    console.debug('loadCalendar data done');\n  }\n\n  loadCalendarEventDetail(clientID: string) {\n    this.calendarService.getCalendarEventDetail(clientID).subscribe( data => {\n      console.warn('getCalendarEventDetail', data);\n      this.isLoading = false;\n      this.calendarEventDetail = data;\n      this.calendarEventDetail.displayActivity = this.profileCodeService.convertCode2Text('Calendar_Type',this.calendarEventDetail.activity);\n      this.calendarEventDetail.displayAlert1 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert1);\n      this.calendarEventDetail.displayAlert2 = this.profileCodeService.convertCode2Text('Calendar_RemindTime', this.calendarEventDetail.alert2);\n      this.onToggleDetailModal(true);\n    });\n  }\n\n  private loadViewDateCalendarEventList() {\n    let queryDate = new Date(getYear(this.viewDate),getMonth(this.viewDate),getDate(this.viewDate),0,0,0);\n    this.calendarService.getCalendarEventList(queryDate, subMinutes(addDays(this.viewDate,1),1), '').subscribe(data => {\n      console.warn('loadViewDateCalendarEventList', data);\n      this.viewDateCalendarEventList = data;\n    });\n  }\n\n  onClickDetail(eventItem) {\n    this.clientID = eventItem.clientID;\n    this.loadCalendarEventDetail(this.clientID);\n    this.loadViewDateCalendarEventList();\n\n    console.warn('clickDetail', this.clientID);\n  } // end clickDetail\n\n  onClickDeleteCancel() {\n  } // end clickDeleteCancel\n\n  onClickDeleteConfirm() {\n    this.calendarService.deleteCalendarEvent(this.clientID).subscribe(data => {\n      if(data.status) {\n        this.isDelete = data.status;\n      }\n    });\n    this.loadCalendarData();\n    if (this.isExpandDetail) { // close pop up\n      this.onToggleDetailModal(false);\n    }\n  } // end clickDeleteConfirm\n\n  onClickAppointmentSave() {\n    this.isSaveClick = true;\n  }\n\n  onSaveCalendarEvent(calendarEventDetail: CalendarEventDetail) {\n    console.warn('saveCalendarEvent');\n    if(calendarEventDetail) {\n      if(StringUtils.isNotEmpty(this.clientID)) {\n        console.warn('updateCalendarEvent', calendarEventDetail);\n        this.calendarService.updateCalendarEvent(calendarEventDetail.clientID, calendarEventDetail).subscribe(data => {\n          if(data.status) {\n            this.calendarEventDetail = calendarEventDetail;\n            this.loadCalendarEventDetail(this.clientID);\n            this.isLoading = true;\n            this.onToggleAppointmentModal(false);\n            this.loadCalendarData();\n            this.loadViewDateCalendarEventList();\n          }\n        });\n      } else {\n        this.calendarService.addCalendarEvent(calendarEventDetail).subscribe(data => {\n          if(data.status) {\n            this.isSave = true;\n            console.warn('addCalendarEvent');\n            calendarEventDetail.clientID = data.clientID;\n            this.calendarEventDetail = calendarEventDetail;\n            this.onToggleAppointmentModal(false);\n            this.loadCalendarData();\n          }\n        });\n      }\n    }\n    this.isSaveClick = false;\n  }\n\n  private isPad() {\n    return this.windowWidth >= 1024;\n  }\n\n  editEvent() {\n    this.onToggleAppointmentModal(true);\n  }\n\n  addEvent() {\n    this.clientID = '';\n    let currentTime; // adjust time to next interval\n    currentTime = new Date(getYear(this.viewDate),getMonth(this.viewDate),getDate(this.viewDate),getHours(new Date()),getMinutes(new Date()));\n    currentTime = addMinutes(currentTime, (5 - getMinutes(currentTime) % 5));  // adjust minutes to next 5 minutes\n    currentTime = addHours(currentTime, 1);\n    this.calendarEventDetail =  new CalendarEventDetail('','','','',null,'N',currentTime,addHours(currentTime,1),'Y','8','','','',null);\n    this.loadViewDateCalendarEventList();\n    this.onToggleAppointmentModal(true);\n  }\n\n  // block which control filter\n\n  onActivityTypeListChange(alertTypeList: Array<ProfileCode>) {\n    this.alertTypeList = alertTypeList;\n    this.currentFilterOptionList = [];\n    let settingVal = {};\n    this.activityTypeList.forEach((codeItem) => {\n      console.debug('activityType codeItem', codeItem);\n      if (settingVal != undefined) settingVal[codeItem.getCode()] = codeItem.isCheck;\n\n      if (codeItem.isCheck) {\n        this.currentFilterOptionList.push(codeItem.getCode());\n      }\n    });\n\n    this.filterOptionChange(this.currentFilterOptionList);\n    this.settingValueChange(settingVal);\n  }\n\n  settingValueChange(settingValue) {\n    //update filter setting\n    let settingObj = new Setting(this.settingService.getSetting('CalendarFilterSetting').SettingID, this.settingService.getSetting('CalendarFilterSetting').SettingName, JSON.stringify(settingValue));\n    this.settingService.updateSetting(settingObj).subscribe(data => {\n      console.debug('calendar.component-update setting', data);\n    });\n  }\n\n  filterOptionChange(currentFilterOption: Array<string>) {\n    console.warn('currentFilterOption', currentFilterOption);\n    this.currentFilterOptionList = currentFilterOption;\n    this.refreshCalendarEventList();\n  }\n\n  private setCurrentFilterOption(settingVal) {\n    this.currentFilterOptionList = [];\n\n    //find checked filter\n    this.activityTypeList.forEach((codeItem) => {\n      console.debug('activityType codeItem', codeItem);\n      if (settingVal != undefined) settingVal[codeItem.getCode()] = codeItem.isCheck;\n\n      if (codeItem.isCheck) {\n        this.currentFilterOptionList.push(codeItem.getCode());\n      }\n    });\n  }\n\n  private refreshCalendarEventList() {\n\n    this.calendarEventListAfterFilter = [];\n\n    //filter event calendar type\n    console.debug('start refreshCalendarEventList', this.calendarEventList.length);\n    this.calendarEventListAfterFilter = this.calendarEventList.filter(x => this.currentFilterOptionList.indexOf(x.activity) > -1);\n\n    console.debug('start refreshCalendarEventList done', this.calendarEventListAfterFilter.length);\n    // this.changeDetector.detectChanges();\n\n    //count height\n    if (this.viewType == this.DAY || this.viewType == this.WEEK) {\n      this.scrollToCurrentTime();\n    }\n  }\n\n  // end block\n\n  scrollToCurrentTime() {\n    let _this = this;\n    setTimeout(() => {\n      let timeEventAll_ele = _this.elementRef.nativeElement.querySelectorAll('div.cal-time-events');\n      // console.warn('_this.timeEventAll_ele', timeEventAll_ele.length, timeEventAll_ele);\n\n      for (let timeEvent_ele of timeEventAll_ele) {\n        let mobileDayHeader_ele = _this.elementRef.nativeElement.querySelector('div.cal-day-headers');\n        let allDayEvent_ele = _this.elementRef.nativeElement.querySelector('div.cal-all-day-events');\n        let allDayEvent_h = (allDayEvent_ele != null\n          ? allDayEvent_ele.getBoundingClientRect().height\n          : 0);\n\n        // console.warn('mobileDayHeader_ele', mobileDayHeader_ele);\n        if (mobileDayHeader_ele != null) {\n\n          // console.warn('if _this.calendarHeight', timeEvent_ele, _this.calendarHeight);\n          // console.warn('if mobileDayHeader_ele', mobileDayHeader_ele);\n\n          timeEvent_ele.style.maxHeight = (_this.calendarHeight\n            - mobileDayHeader_ele.getBoundingClientRect().height\n            - allDayEvent_h\n            - parseInt(window.getComputedStyle(mobileDayHeader_ele).marginBottom)) + 'px';\n\n          // scroll to time\n          let currentHour = getHours(new Date());\n          console.log('current Hour:', getHours(new Date()));\n          if (currentHour > 3)\n            timeEvent_ele.scrollTop = Math.floor((currentHour - 3) / 2) * 80\n              + (Math.floor((currentHour - 3) / 2)\n                + (currentHour - 3) % 2) * 82;\n        }\n      } // end for: timeEventAll_ele\n      this.changeDetector.markForCheck();\n    }, 200); // ææExpressionChangedAfterItHasBeenCheckedError å setTimeOut è§£\n  } // end scrollToCurrentTime\n\n  calcuContentHeight() {\n\n    console.debug('calcuContentHeight');\n\n    let _this = this;\n    setTimeout(() => {\n      console.warn('calcuContentHeight', this.calendarHeight);\n      // calculate year view height\n      let year_ele = _this.elementRef.nativeElement.querySelector('.ui-calendar-year');\n      let yearTag_ele = _this.elementRef.nativeElement.querySelector('app-ui-calendar-year');\n\n      if (year_ele != null && yearTag_ele != null) {\n\n        if (_this.windowWidth > 1023) {\n          yearTag_ele.style.minHeight = (_this.calendarHeight\n            - parseInt(window.getComputedStyle(year_ele).marginTop)) + 'px';\n          yearTag_ele.style.height = (_this.calendarHeight\n            - parseInt(window.getComputedStyle(year_ele).marginTop)) + 'px';\n        } else {\n          year_ele.style.height = (_this.calendarHeight\n            - parseInt(window.getComputedStyle(year_ele).marginTop)) + 'px';\n        }\n      }\n\n      // calculate month view height\n      let month_ele = _this.elementRef.nativeElement.querySelector('.cal-month-view');\n\n      if (month_ele != null && _this.windowWidth > 1023) {\n\n        month_ele.style.maxHeight = _this.calendarHeight + 'px';\n        month_ele.style.minHeight = _this.calendarHeight + 'px';\n      }\n      if(month_ele.style.maxHeight == '0px') {\n        console.warn('Here');\n        month_ele.style.maxHeight = 100 - 3 + 'vh';\n        month_ele.style.minHeight = 100 - 3 + 'vh';\n      }\n      this.changeDetector.markForCheck();\n\n    }, 100); // ææExpressionChangedAfterItHasBeenCheckedError å setTimeOut è§£\n  } // end calcuContentHeight\n\n\n  // function which control popup\n\n  onToggleAppointmentModal(val) {\n    setTimeout(() => {\n      this.isExpandEdit = val;\n      if (this.isExpandFilter) { this.onCloseInfo(); }\n      this.changeDetector.markForCheck();\n    }, 0); // ææExpressionChangedAfterItHasBeenCheckedError å setTimeOut è§£\n\n\n  } // end toggleAppointmentModal\n\n  onToggleDetailModal(val) {\n    this.isExpandDetail = val;\n    if (this.isExpandFilter) { this.onCloseInfo(); }\n  }\n  onToggleFilterModal(val) {\n    if (!this.isExpandFilter) {\n      this.onCloseInfo();\n    }\n  }\n\n  // end block\n\n  // è¨­ info position\n  @ViewChild(UiInformationBtnComponent) nowShowBtn: UiInformationBtnComponent;\n  @ViewChild(UiInformationContentComponent) infoContent: UiInformationContentComponent;\n  @ViewChild('filterInfo') filterInfo: UiInformationContentComponent;\n  onInfoTabClick(dom) {\n    console.warn('infoTabClick');\n    console.warn('nowShowBtn', this.nowShowBtn);\n\n    if (this.nowShowBtn !== undefined) {\n      // console.log('nowShowBtn click', this.nowShowBtn.btnContent.nativeElement);\n\n      if (dom !== undefined) {\n        console.warn('messageContent', dom.messageContent, this.nowShowBtn.messageContent);\n        if (dom.messageContent !== this.nowShowBtn.messageContent) {\n          // this.closeInfo();\n          this.nowShowBtn.closeInfo();\n          this.nowShowBtn = dom;\n        }\n        else {\n          this.resetInfoPos();\n        }\n      } // end if: dom !== undefined\n    } else {\n      this.nowShowBtn = dom;\n    }\n\n    // console.warn('messageContent filter', this.nowShowBtn.messageContent === this.filterInfo, this.filterInfo);\n    if (this.nowShowBtn.messageContent === this.filterInfo) {\n      this.isExpandFilter = true;\n    }\n  } // end infoTabClick\n  resetInfoPos() {\n    // this.isExpandFilter = true;\n    if (this.nowShowBtn !== undefined) {\n      this.nowShowBtn.countPos();\n    }\n  } // end resetInfoPos\n  onCloseInfo() {\n    this.isExpandFilter = false;\n    if (this.nowShowBtn !== undefined) {\n      this.nowShowBtn.closeInfo();\n      // this.nowShowBtn = undefined;\n\n      // console.warn('closeInfo', this.nowShowBtn, this.nowShowBtn.btnContent.nativeElement);\n    }\n  } // end closeInfo\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CalendarEventDetail} from '../../service/calendar/model/CalendarEventDetail';\nimport {isSameDay} from 'date-fns';\nimport {Language} from '@allianzSND/core';\nimport {StringUtils} from '@allianzSND/core';\n\n@Component({\n  selector: 'snd-calendar-detail',\n  templateUrl: './calendar-detail.component.html',\n  styleUrls: ['./calendar-detail.component.scss']\n})\nexport class CalendarDetailComponent implements OnInit {\n  @Input()\n  get calendarEventDetail() {return this._calendarEventDetail}\n  set calendarEventDetail(calendarEventDetail) {\n    if(StringUtils.isNotEmpty(calendarEventDetail)) {\n      this._calendarEventDetail = calendarEventDetail;\n      this.isSameDay = isSameDay(this._calendarEventDetail.end, this._calendarEventDetail.start);\n    }\n  }\n\n  public language : Language = new Language();\n  public _calendarEventDetail: CalendarEventDetail; //Detail\n  public isSameDay: boolean = true;\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import {Component, Input, OnInit, HostListener, Output, EventEmitter, ElementRef, ChangeDetectorRef} from '@angular/core';\nimport {SelectOption} from '@allianzSND/ui';\nimport {CalendarEventDetail} from '../../service/calendar/model/CalendarEventDetail';\nimport {\n  addDays,\n  addHours,\n  addMinutes,\n  differenceInCalendarDays,\n  differenceInMinutes,\n  getDate,\n  getHours,\n  getMinutes,\n  getMonth,\n  getYear, isSameDay, setDate, subMinutes\n} from 'date-fns';\nimport {ProfileCode} from '@allianzSND/core';\nimport {ValidationResult} from '@allianzSND/core';\nimport {StringUtils} from '@allianzSND/core';\nimport {Language} from '@allianzSND/core';\n\n\n@Component({\n  selector: 'snd-calendar-edit',\n  templateUrl: './calendar-edit.component.html',\n  styleUrls: ['./calendar-edit.component.scss']\n})\nexport class CalendarEditComponent implements OnInit {\n  @Input()\n  get isSaveClick() {return this._isSaveClick;}\n  set isSaveClick(isSaveClick : boolean) {\n    this._isSaveClick = isSaveClick;\n    if(this._isSaveClick == true) {\n      this.saveEventClick();\n    }\n  }\n\n  @Input()\n  get calendarEventDetail() {return this._calendarEventDetail}\n  set calendarEventDetail(calendarEventDetail: CalendarEventDetail) {\n    if(calendarEventDetail) {\n      this._calendarEventDetail = calendarEventDetail;\n      console.warn(\"this.calendarEventDetail\", this._calendarEventDetail);\n      this.editEvent();\n    }\n  }\n\n  @Input()\n  get optionMap() {return this._optionMap}\n  set optionMap(optionMap : Map<string, Array<ProfileCode>>) {\n    this._optionMap = optionMap;\n    this.activityOptionList = [];\n    for(let i = 0 ;i < this._optionMap.get('Calendar_Type').length; i++) {\n      this.activityOptionList.push(new SelectOption(this._optionMap.get('Calendar_Type')[i].getCode(),this._optionMap.get('Calendar_Type')[i].displayText));\n    }\n  }\n\n  @Input()\n  get translateMap() {return this._translateMap}\n  set translateMap(translateMap: Map<string,string>) {\n    this._translateMap = translateMap;\n  }\n\n\n  @Input()\n  get viewDate() {return this._viewDate}\n  set viewDate(viewDate: Date) {\n    console.warn('viewDateChange');\n    this._viewDate = viewDate;\n  }\n\n  @Input()\n  get todayCalendarEvent() {return this.calendarEventList}\n  set todayCalendarEvent(calendarEventList: Array<CalendarEventDetail>) {\n    this.calendarEventList = calendarEventList;\n  }\n\n  @Output() saveEvent = new EventEmitter();\n  @Output() startDateChange = new EventEmitter();\n\n  private _viewDate: Date = new Date();\n  private _isSaveClick: boolean = false;\n  private _optionMap : Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public showDate: string;\n  public language : Language = new Language();\n  public _translateMap : Map<string,string> = new Map<string, string>();\n\n\n  public _calendarEventDetail: CalendarEventDetail; //Detail\n  public windowWidth: number;\n  public calendarEventList: Array<CalendarEventDetail> = [];\n  public activityOptionList: Array<SelectOption> = [];\n  public alertOptionList: Array<SelectOption> = [];\n  public startDate: Date;\n  public startTime: Date;\n  public endDate: Date;\n  public endTime: Date;\n  public validationResult:  ValidationResult = new ValidationResult();\n  public eventListBGColor = '#f9f9f9';\n  private isInit: boolean = true;\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit() {\n    this.windowWidth = window.innerWidth;\n  }\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.windowWidth = event.target.innerWidth;\n    // wle.warn('Width: ', this.windowWidth);\n  }\n\n  editEvent() {\n    this.isInit = true;\n    if(StringUtils.isEmpty(this._calendarEventDetail.alert1)) { // modify alert1 if null\n      this._calendarEventDetail.alert1 = '';\n    }\n    if(StringUtils.isEmpty(this._calendarEventDetail.alert2)) { // modify alert2 if null\n      this._calendarEventDetail.alert2 = '';\n    }\n    this.startDate = this._calendarEventDetail.start;\n    this.startTime = this._calendarEventDetail.start;\n    this.endDate = this._calendarEventDetail.end;\n    this.endTime = this._calendarEventDetail.end;\n    this.getAlertOptions(); // change alertOption\n\n    this.showDate = (getMonth(this._viewDate)+1).toString()+'/'+getDate(this._viewDate).toString()+'/'+getYear(this._viewDate).toString();\n  }\n\n  saveEventClick() {\n    console.warn('saveEvent');\n    this.validationForm();\n    if(this.validationResult.isTrue()) {\n      this.saveEvent.emit(this._calendarEventDetail);\n    } else {\n      this.saveEvent.emit(null);\n      // this.completeSave.emit(false);\n    }\n  }\n\n  validationForm() { // check form before submit\n    let inputList = [{'maxLength':60,'field': 'title','isRequired': true},\n                      {'maxLength':100,'field': 'location','isRequired': false},\n                      {'maxLength':500,'field': 'remark', 'isRequired': false}];\n    let selectList = ['activity', 'alert1', 'alert2'];\n    inputList.forEach((inputFiled) => {\n      this.onValidationInput(inputFiled.maxLength,inputFiled.field,inputFiled.isRequired);\n    });\n    selectList.forEach((selectField) => {\n      this.onValidationSelect(selectField)\n    });\n    this.onValidationTimeFormat();\n    this.onValidationTime();\n    if (this.validationResult != null) {\n      setTimeout(() => {\n        this.scrollToError();\n      }, 200);\n    }\n  }\n\n  onValidationInput(maxLength: number, field: string, isRequired: boolean = false) { // check input filed when typing\n    this.validationResult.deleteError(field);\n    console.debug('isRequired',isRequired,'length',this._calendarEventDetail[field].length,'val','['+this._calendarEventDetail[field]+']');\n    if(isRequired) {\n      if(this._calendarEventDetail[field] != undefined && StringUtils.isEmpty(StringUtils.trim(this._calendarEventDetail[field])))\n        this.validationResult.setErrorMap(field, 'required');\n    }\n    if(StringUtils.isNotEmpty(this._calendarEventDetail[field])) {\n      if(this._calendarEventDetail[field].length > maxLength && maxLength != 0)\n        this.validationResult.setErrorMap(field,'maxLength');\n    }\n  }\n\n  onValidationSelect(field: string) { // check select filed after selected\n    this.validationResult.deleteError(field);\n    console.warn('field',field);\n    if(field == 'activity') {\n      if(this._calendarEventDetail.activity == null || this._calendarEventDetail.activity == '')\n        this.validationResult.setErrorMap(field, 'required');\n    }\n    if(field == 'alert1' || field == 'alert2') {\n      this.validationResult.deleteError('alert1');\n      this.validationResult.deleteError('alert2');\n      if(this._calendarEventDetail.isAlert && this._calendarEventDetail.alert1 == '' && this._calendarEventDetail.alert2 == '') // if didn't select any alert\n        this.validationResult.setErrorMap('alert1', 'required');\n      if(this._calendarEventDetail.isAlert && (this._calendarEventDetail.alert1 == this._calendarEventDetail.alert2) && this._calendarEventDetail.alert1 != '') // if select same alert\n        this.validationResult.setErrorMap('alert2', 'sameAlert');\n    }\n  }\n\n  onValidationTimeFormat() {\n    let timeList = ['startDate', 'startTime', 'endDate', 'endTime', 'time'];\n    timeList.forEach( (timeField) => {\n      this.validationResult.deleteError(timeField); //clear timeError\n      if(timeField != 'time' && this[timeField] === null) {\n        this.validationResult.setErrorMap(timeField, 'formatError'); // check formatError\n      }\n    });\n  }\n\n  onValidationTime() { // validation Date or Time\n    // let isError: boolean = false;\n    let timeList = ['startDate', 'startTime', 'endDate', 'endTime'];\n    timeList.forEach( (timeField) => {\n      this.validationResult.deleteError(timeField);\n        // if(this.validationResult.isError(timeField))\n          // isError = true;\n    });\n    // if(!isError) {\n      this.combineTime();\n      if (differenceInMinutes(this._calendarEventDetail.end,this._calendarEventDetail.start) < 15 && differenceInMinutes(this._calendarEventDetail.end,this._calendarEventDetail.start) >= 0 && this._calendarEventDetail.allDay != true) {\n        this.validationResult.setErrorMap('time', 'minTime');\n      } else if(differenceInMinutes(this._calendarEventDetail.end,this._calendarEventDetail.start) < 0) {\n        this.validationResult.setErrorMap('time', 'errorTime');\n      }\n    // }\n  }\n\n  combineTime() {\n    if (this._calendarEventDetail.allDay == true) {\n      this._calendarEventDetail.start = new Date(getYear(this.startDate),getMonth(this.startDate), getDate(this.startDate), 0, 0);\n      this._calendarEventDetail.end = new Date(getYear(this.endDate), getMonth(this.endDate), getDate(this.endDate), 0, 0);\n    } else {\n      this._calendarEventDetail.start = new Date(getYear(this.startDate),getMonth(this.startDate), getDate(this.startDate), getHours(this.startTime), getMinutes(this.startTime));\n      this._calendarEventDetail.end = new Date(getYear(this.endDate), getMonth(this.endDate), getDate(this.endDate), getHours(this.endTime), getMinutes(this.endTime));\n    }\n  }\n\n  onTimeChange(changeDate,field: string) {\n    //convert to date param\n    if(field == 'startDate') this.startDate = changeDate;\n    else if(field == 'startTime') this.startTime = changeDate;\n    else if(field == 'endDate') this.endDate = changeDate;\n    else if(field == 'endTime') this.endTime = changeDate;\n\n    this.onValidationTimeFormat();\n    if(!this.isInit) { // to avoid change startDate in the first Time\n      if (field == 'startDate') {\n        this.onStartDateChange()\n      } else if (field == 'startTime') {\n        this.onStartTimeChange();\n      }\n    }\n    this.onValidationTime();\n    this.isInit = false;\n\n  }\n\n  onStartDateChange() {\n    this.startTime = setDate(this.startTime, getDate(this.startDate));\n    this.endDate = addHours(this.startDate, 1);\n    this.endTime = addHours(this.startTime, 1);\n    this.startDateChange.emit(this.startDate);\n  }\n\n  onStartTimeChange() {\n    this.endDate = addHours(this.startTime, 1);\n    this.endTime = addHours(this.startTime, 1);\n  }\n\n  onIsAllDayChange() {\n    this.onIsAlertChange();\n    if(!this._calendarEventDetail.allDay) {\n      let currentTime = new Date();\n      currentTime = addMinutes(currentTime, (5 - getMinutes(currentTime) % 5));\n      currentTime = addHours(currentTime, 1);\n      // this._calendarEventDetail.start = new Date(getYear(this.startTime), getMonth(this.startTime), getDate(this.startTime),getHours(currentTime), getMinutes(currentTime));\n      this.startDate = currentTime;\n      this.startTime = currentTime;\n      // this.endDate = addHours(this.startTime, 1);\n      // this.endTime = addHours(this.startTime, 1);\n    }\n  }\n\n  onIsAlertChange() {\n    this.getAlertOptions(); //reset optionList\n    if(this._calendarEventDetail.isAlert == true && this._calendarEventDetail.allDay == true) { // reset Default selection\n      this._calendarEventDetail.alert1 = '2';\n      this._calendarEventDetail.alert2 = '';\n    } else if (this._calendarEventDetail.isAlert == true && this._calendarEventDetail.allDay == false) {\n      this._calendarEventDetail.alert1 = '8';\n      this._calendarEventDetail.alert2 = '';\n    }\n  }\n\n  getAlertOptions() {\n    this.alertOptionList = [];\n\n    if(this._optionMap.get('Calendar_RemindTime')) {\n      this._optionMap.get('Calendar_RemindTime').forEach((option) => {\n        if(this._calendarEventDetail.allDay == JSON.parse(option.getArguments()).isAllDay) {\n          this.alertOptionList.push(new SelectOption(option.getCode(),option.displayText));\n        }\n      });\n    }\n  }\n\n  scrollToError() {\n    let errorBlock = document.body.getElementsByClassName('error-msg');\n    if(errorBlock.item(0)) {\n      errorBlock.item(0).parentElement.parentElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n  }\n\n  onTitleChange(val){\n    this._calendarEventDetail.title = val;\n    this.onValidationInput(60,'title',true);\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ProfileCode} from '@allianzSND/core';\n\n@Component({\n  selector: 'snd-calendar-filter',\n  templateUrl: './calendar-filter.component.html',\n  styleUrls: ['./calendar-filter.component.scss']\n})\nexport class CalendarFilterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  private _optionMap : Map<string, Array<ProfileCode>> = new Map<string, Array<ProfileCode>>();\n  public activityTypeList: Array<ProfileCode> = []; // DBä¸­ææactivityType\n  public currentFilterOptionList: Array<string> = [];\n\n  @Input()\n  get optionMap() {return this._optionMap}\n  set optionMap(optionMap : Map<string, Array<ProfileCode>>) {\n    this._optionMap = optionMap;\n    this.activityTypeList = this._optionMap.get('Calendar_Type');\n    this.activityTypeList.forEach((codeItem) => {\n      if (codeItem.isCheck) {\n        this.currentFilterOptionList.push(codeItem.getCode());\n      }\n    });\n  }\n\n  @Output() activityTypeListChange = new EventEmitter();\n\n  onActivityFilter() {\n    this.activityTypeListChange.emit(this.activityTypeList);\n  } // filter event\n\n  toActivityColor(item: ProfileCode) {\n    return JSON.parse(item.getArguments()).color;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { UIModule } from '@allianzSND/ui';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@allianzSND/core';\nimport { FormsModule } from '@angular/forms';\nimport { NxButtonModule } from '@allianz/ngx-ndbx';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { CalendarEditComponent } from './components/calendar-edit/calendar-edit.component';\nimport {CalendarDetailComponent} from './components/calendar-detail/calendar-detail.component';\nimport {CalendarFilterComponent} from  './components/calendar-filter/calendar-filter.component';\nimport {CalendarComponent} from './components/calendar/calendar.component';\nimport { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';\nimport { NxDatefieldModule, NxNativeDateModule } from '@allianz/ngx-ndbx/datefield';\n\n@NgModule({\n  declarations: [CalendarComponent, CalendarEditComponent, CalendarDetailComponent, CalendarFilterComponent],\n  imports: [\n    NxIconModule,\n    NxButtonModule,\n    NxFormfieldModule,\n    NxDatefieldModule,\n    NxNativeDateModule,\n    UIModule,\n    CoreModule,\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    CalendarEditComponent,CalendarComponent, CalendarDetailComponent\n  ]\n})\nexport class CalendarModule { }\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {Observable} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {CalendarEventDetail} from '../service/calendar/model/CalendarEventDetail';\n\nexport class CalendarEventAddAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _calendarEvent:  CalendarEventDetail;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  setCalendarEvent(value: CalendarEventDetail) {\n    this._calendarEvent = value;\n  }\n\n  getAPIName() : string {\n    return 'addCalendarEvent';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/addCalendarEvent.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        calendarObj.setValue('Title', this._calendarEvent.title);\n        calendarObj.setValue('Location', this._calendarEvent.location);\n        calendarObj.setValue('CalendarType', this._calendarEvent.activity);\n        if(this._calendarEvent.allDay == true) {\n          calendarObj.setValue('IsAllDay', 'Y');\n        } else {\n          calendarObj.setValue('IsAllDay', 'N');\n        }\n        calendarObj.setValue('StartTime', this._calendarEvent.start.getTime());\n        calendarObj.setValue('EndTime', this._calendarEvent.end.getTime());\n        if(this._calendarEvent.isAlert == true) {\n          calendarObj.setValue('IsAlert', 'Y');\n        } else {\n          calendarObj.setValue('IsAlert', 'N');\n        }\n        calendarObj.setValue('Alert1', this._calendarEvent.alert1);\n        calendarObj.setValue('Alert2', this._calendarEvent.alert2);\n        calendarObj.setValue('Alert3', null);\n        calendarObj.setValue('Remark', this._calendarEvent.remark);\n        dao.insertByTable(calendarObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nexport class CalendarEventDeleteAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  set clientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName() : string {\n    return 'deleteCalendarEvent';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/deleteCalendarEvent.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n        dao.deleteByTable(calendarObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\n\nexport class CalendarEventDetailAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  set ClientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  getAPIName() : string {\n    return 'getCalendarEventDetail';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/getCalendarEventDetail.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n        dao.queryByTable(calendarObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport { ISQLiteAPI } from '@allianzSND/core';\nimport { Observable } from 'rxjs';\nimport { DaoFactory } from '@allianzSND/core';\nimport { ClientCustomDao } from '@allianzSND/core';\nimport { GreaterOrEqualRestriction } from '@allianzSND/core';\nimport { LessOrEqualRestriction } from '@allianzSND/core';\nimport { OrderByRestriction } from \"@allianzSND/core\";\n\nexport class CalendarEventListAPI implements IAPI, IMockAPI, ISQLiteAPI {\n  private _startTime: Date;\n  private _endTime: Date;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n  set startTime(startTime: Date) {\n    this._startTime = startTime;\n  }\n\n  set endTime(endTime: Date) {\n    this._endTime = endTime;\n  }\n\n  getAPIName(): string {\n    return 'getCalendarEventList';\n  }\n\n  getMockPath(): string {\n    return './assets/mock/getCalendarEventList.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n\n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new GreaterOrEqualRestriction('EndTime', [this._startTime.getTime()]));\n        calendarObj.addRestriction(new LessOrEqualRestriction('StartTime', [this._endTime.getTime()]));\n        calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' }]));\n        // calendarObj.addRestriction(new OrderByRestriction([{ column: 'StartTime', order: 'ASC' },{ column: 'EndTime', order: 'DESC' }]));\n        dao.queryByTable(calendarObj).subscribe((resp) => {\n          console.log(resp);\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n","import { IAPI } from \"@allianzSND/core\";\nimport { IMockAPI } from \"@allianzSND/core\";\nimport {ISQLiteAPI} from '@allianzSND/core';\nimport {Observable} from 'rxjs';\nimport {DaoFactory} from '@allianzSND/core';\nimport {ClientCustomDao} from '@allianzSND/core';\nimport {EqualRestriction} from '@allianzSND/core';\nimport {CalendarEventDetail} from '../service/calendar/model/CalendarEventDetail';\n\nexport class CalendarEventUpdateAPI implements IAPI , IMockAPI, ISQLiteAPI {\n  private _clientID: string;\n  private _calendarEvent: CalendarEventDetail;\n  private _DaoFactory: DaoFactory;\n  constructor(DaoFactory) {\n    this._DaoFactory = DaoFactory;\n  }\n\n\n\n  set ClientID(clientID: string) {\n    this._clientID = clientID;\n  }\n\n  setCalendarEvent(value: CalendarEventDetail) {\n    this._calendarEvent = value;\n  }\n\n  getAPIName() : string {\n    return 'updateCalendarEvent';\n  }\n\n  getMockPath() : string {\n    return './assets/mock/updateCalendarEvent.json';\n  }\n\n  executeSQL(): Observable<any> {\n    return Observable.create((observer) => {\n      let calendarObj = this._DaoFactory.getDefaultTable(\"TW_LH_SD_Calendar\");\n      let dao = this._DaoFactory.getDefaultDao();\n      if (calendarObj != undefined && dao != undefined) {\n        \n        dao = new ClientCustomDao(dao);\n        calendarObj.addRestriction(new EqualRestriction('ClientID',[this._clientID]));\n        calendarObj.setValue('CalendarID', this._calendarEvent.calendarID);\n        calendarObj.setValue('Title', this._calendarEvent.title);\n        calendarObj.setValue('Location', this._calendarEvent.location);\n        calendarObj.setValue('CalendarType', this._calendarEvent.activity);\n        if(this._calendarEvent.allDay == true) {\n          calendarObj.setValue('IsAllDay', 'Y');\n        } else {\n          calendarObj.setValue('IsAllDay', 'N');\n        }\n        calendarObj.setValue('StartTime', this._calendarEvent.start.getTime());\n        calendarObj.setValue('EndTime', this._calendarEvent.end.getTime());\n        if(this._calendarEvent.isAlert == true) {\n          calendarObj.setValue('IsAlert', 'Y');\n        } else {\n          calendarObj.setValue('IsAlert', 'N');\n        }\n        calendarObj.setValue('Alert1', this._calendarEvent.alert1);\n        calendarObj.setValue('Alert2', this._calendarEvent.alert2);\n        calendarObj.setValue('Alert3', this._calendarEvent.alert3);\n        calendarObj.setValue('Remark', this._calendarEvent.remark);\n        dao.updateByTable(calendarObj).subscribe((resp) => {\n          observer.next(resp);\n          observer.complete();\n        });\n      } else {\n        observer.next(false);\n        observer.complete();\n      }\n    });\n  }\n}\n"]}