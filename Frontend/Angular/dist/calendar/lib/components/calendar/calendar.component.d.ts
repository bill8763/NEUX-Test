import { OnInit, ElementRef, ChangeDetectorRef, EventEmitter, AfterViewInit } from '@angular/core';
import { CalendarService } from '../../service/calendar/calendar-service.service';
import { CalendarEventDetail } from '../../service/calendar/model/CalendarEventDetail';
import { ProfileCodeService } from '@allianzSND/core';
import { ProfileCode } from '@allianzSND/core';
import { SettingService } from '@allianzSND/core';
import { UiInformationBtnComponent } from '@allianzSND/ui';
import { ViewDateChange } from '@allianzSND/core';
import { UiInformationContentComponent } from '@allianzSND/ui';
import { Language } from '@allianzSND/core';
import { TranslateService } from '@allianzSND/core';
export declare class CalendarComponent implements OnInit, AfterViewInit {
    private changeDetector;
    private elementRef;
    private settingService;
    private translateService;
    private calendarService;
    private profileCodeService;
    private _parentHeight;
    parentHeight: number;
    parentHeightChange: EventEmitter<{}>;
    titleBtnsBlock: ElementRef;
    private YEAR;
    private MONTH;
    private WEEK;
    private DAY;
    viewTypeIndex: number;
    viewType: string;
    viewDate: Date;
    weekStartsOn: number;
    private calendarHeight;
    clientID: string;
    translateMap: Map<string, string>;
    optionMap: Map<string, Array<ProfileCode>>;
    private storeStartDate;
    private storeEndDate;
    calendarEventList: Array<CalendarEventDetail>;
    calendarEventListAfterFilter: Array<CalendarEventDetail>;
    viewDateCalendarEventList: Array<CalendarEventDetail>;
    calendarEventDetail: CalendarEventDetail;
    activityTypeList: Array<ProfileCode>;
    alertTypeList: Array<ProfileCode>;
    language: Language;
    private currentFilterOptionList;
    isExpandFilter: boolean;
    isExpandDetail: boolean;
    isExpandEdit: boolean;
    isDelete: boolean;
    isSave: boolean;
    isSaveClick: boolean;
    isCalendarDelete: boolean;
    isLoading: boolean;
    private dayTypesList;
    private weekdaysList;
    private monthsList;
    private noSchedule;
    outsideSpace: {
        top: number;
        left: number;
    };
    paddindData: {
        top: number;
        right: number;
        bottom: number;
        left: number;
    };
    windowWidth: number;
    onResize(event: any): void;
    constructor(changeDetector: ChangeDetectorRef, elementRef: ElementRef, settingService: SettingService, translateService: TranslateService, calendarService: CalendarService, profileCodeService: ProfileCodeService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    switchPadViewMode(activeTabIndex: any): void;
    typeChange(activeTabIndex: any): void;
    mobileBackViewType(): void;
    clickToday(): void;
    onViewDateChange(viewDateChange: ViewDateChange): void;
    loadCalendarData(): void;
    loadCalendarEventDetail(clientID: string): void;
    private loadViewDateCalendarEventList;
    onClickDetail(eventItem: any): void;
    onClickDeleteCancel(): void;
    onClickDeleteConfirm(): void;
    onClickAppointmentSave(): void;
    onSaveCalendarEvent(calendarEventDetail: CalendarEventDetail): void;
    private isPad;
    editEvent(): void;
    addEvent(): void;
    onActivityTypeListChange(alertTypeList: Array<ProfileCode>): void;
    settingValueChange(settingValue: any): void;
    filterOptionChange(currentFilterOption: Array<string>): void;
    private setCurrentFilterOption;
    private refreshCalendarEventList;
    scrollToCurrentTime(): void;
    calcuContentHeight(): void;
    onToggleAppointmentModal(val: any): void;
    onToggleDetailModal(val: any): void;
    onToggleFilterModal(val: any): void;
    nowShowBtn: UiInformationBtnComponent;
    infoContent: UiInformationContentComponent;
    filterInfo: UiInformationContentComponent;
    onInfoTabClick(dom: any): void;
    resetInfoPos(): void;
    onCloseInfo(): void;
}
